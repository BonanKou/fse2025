api,language,knowledge_type,post_id,post,contain_knowledge
MessageDigest,Java,functionality,74682875,"<p>If you're going to use the simplest JMS pattern then you can use 1 connection, 1 session, and 2 consumers.</p>
<p>However, if you're going to use JMS's <a href=""https://docs.oracle.com/javaee/7/api/javax/jms/MessageListener.html"" rel=""nofollow noreferrer""><code>MessageListener</code></a> and you want the best performance you'll want to use 1 connection, 2 sessions, 1 consumer on each session, and 1 <code>MessageListener</code> on each consumer. This is because JMS sessions are not thread-safe and each <code>MessageListener</code> will be invoked asynchronously so if you want the listeners to be able to receive messages concurrently you'll want a session for each.</p>
",0
MessageDigest,Java,functionality,75890236,"<p>First of all - MessageId is array of 24 bytes. And that is your error. You are trying to push String in byte array - [B. Once you fix this error, you will still not be able to successfully set MessageId. As MQ will completely ignore any value set by message producer, and it will always override your MessageId with arbitary value.</p>
<p>Blame JMS API. It is little bit idiotic and it doesn't make distiction between end user interface and messaging driver programmer interface. There is more than one setter on javax.jms.Message which is not inteded to be used by everday Joe.</p>
<p>So what can you do about it? For start you can use different field: Message Type and CorrelationID headers are inteded to be used by end users. CorrelationID shares the same byte[24] design, and it is functionally identical to MessageID. Usually, CorrelationID is shared between couple different messages which are &quot;correleated&quot;, thus the name. You can also add arbitary header to message.</p>
<p>But if you really really need to know MessageID of sent message - because of audit, correlation or something else - you can first send message, and the read MessageID field back. It will contain generated value.</p>
",0
MessageDigest,Java,functionality,74448585,"<p>If <code>message1</code> and <code>message2</code> are sent in that order from the same thread, or from the same actor and they are sent to the same actor (and that actor is using a mailbox that does not reorder messages: the default mailbox does not, but one can implement mailboxes which reorder messages, e.g. in order to implement prioritization), <code>message2</code> will not be received by the target actor before <code>message1</code>.</p>
<p>Thus any of the of these four is possible:</p>
<ul>
<li><code>message1</code> is received and then <code>message2</code></li>
<li><code>message1</code> is received, but <code>message2</code> is never received</li>
<li><code>message1</code> is never received, but <code>message2</code> is</li>
<li>neither <code>message1</code> nor <code>message2</code> is ever received</li>
</ul>
<p>Note that there is no guarantee that two message sends to different actors will be received in any particular order.  There is also no guarantee regarding the ordering of message sends from two different actors (or if outside of any actor (e.g. in a <code>Future</code> callback or the main method), a different thread)).</p>
",0
MessageDigest,Java,functionality,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,functionality,75892592,"<p>How does Log4j 2.x interpret the <code>(String, Object...)</code> parameters of a logging call is determined by the <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/MessageFactory.html"" rel=""nofollow noreferrer""><code>MessageFactory</code></a> used by your logger.</p>
<p>When you create a logger you can pass a <code>MessageFactory</code> as second parameter to the <code>LogManager#getLogger</code> call (e.g. <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/LogManager.html#getLogger-java.lang.Class-org.apache.logging.log4j.message.MessageFactory-"" rel=""nofollow noreferrer""><code>LogManager#getLogger(Class&lt;?&gt;, MessageFactory)</code></a>.</p>
<p>In order to format your messages with a <code>MessageSource</code> you need to create:</p>
<ul>
<li><p>a new type of <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/Message.html"" rel=""nofollow noreferrer""><code>Message</code></a>:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessage implements Message {

    private final MessageSource source;
    private final String code;
    private final Object[] args;
    private final Throwable throwable;

    public MessageSourceMessage(MessageSource source, String code, Object[] args) {
        this.source = source;
        this.code = code;
        final int argCount = args.length;
        if (args[argCount - 1] instanceof Throwable) {
            this.args = Arrays.copyOf(args, argCount - 1);
            this.throwable = args[argCount - 1];
        } else {
            this.args = args;
            this.throwable = null;
        }
    }

    @Override
    public String getFormattedMessage() {
        return source.getMessage(code, args, Locale.getDefault());
    }

    @Override
    public String getFormat() {
        return code;
    }

    @Override
    public Object[] getParameters() {
        return args;
    }

    @Override
    public Throwable getThrowable() {
        return throwable;
    }
}
</code></pre>
</li>
<li><p>and a matching message factory:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessageFactory extends AbstractMessageFactory {

    private final MessageSource source;

    public MessageSourceMessageFactory(MessageSource source) {
        this.source = source;
    }

    @Override
    public Message newMessage(CharSequence message) {
        return new MessageSourceMessage(source, message.toString(), null);
    }

    @Override
    public Message newMessage(String message) {
        return new MessageSourceMessage(source, message, null);
    }

    @Override
    public Message newMessage(String message, Object... params) {
        return new MessageSourceMessage(source, message, params);
    }
}
</code></pre>
</li>
<li><p>then you can use the message factory to instantiate your loggers:</p>
<pre class=""lang-java prettyprint-override""><code>Logger logger = LogManager.getLogger(Example.class,
                                     new MessageSourceMessageFactory(source));
</code></pre>
</li>
</ul>
<p>There are some disadvantages of the example above:</p>
<ul>
<li><p><s>since &quot;code&quot; gives you no information about the number of parameters, if &quot;code&quot; resolves to &quot;Hello {0} and {1}&quot;, a call like</s></p>
<pre class=""lang-java prettyprint-override""><code>logger.info(&quot;code&quot;, param0, param1, throwable);
</code></pre>
<p><s>will just discard the <code>throwable</code> parameter instead of using it as the throwable of the message. You might consider encoding the number of parameters in your code, so that <code>MessageSourceMessage</code> can use the first additional parameter as throwable.</s></p>
</li>
<li><p>this messagefactory produces temporary objects. You might consider implementing <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/ReusableMessage.html"" rel=""nofollow noreferrer""><code>ReusableMessage</code></a>, so that most of the time the same instance of message is used.</p>
</li>
</ul>
<p><strong>Edit:</strong> since it is not recommended to add <code>Throwable#toString()</code> to the log message, I changed the example, so that if the last parameter is an instance of <code>Throwable</code>, it is interpreted as the throwable attached to the message.</p>
",0
MessageDigest,Java,functionality,77634018,"<p>If your design depends on what the observers need to know about the message, you should use the pulling style. Because there is always a possibility to change the contract of messages for the sake of observers. In other words, your message contract depends on the observers because they consume the message. In this way, changing observers' (consumers') requirements results in changing the message contract which is not a good coupling. The consumer's side is more likely to be changed. Because there are likely to be new consumers and existing consumers probably will change over time.</p>
<p>Observer design pattern should be used when the message contract depends on the Subject. In this notion, the subject dictates what the message contract structure is. For example, it's a good fit to use it with events. Events indicate that something happened. They don't care who uses this data, they are just broadcasting the event data.</p>
",0
MessageDigest,Java,functionality,77063957,"<p>The fundamental semantics of a JMS queue is first-in-first-out (i.e. FIFO). In other words, the broker must dispatch messages to consumers in the order in which they were added to the queue. However, there are two basic ways to get around this.</p>
<ol>
<li>Message Priority</li>
<li>Message Selector</li>
</ol>
<p>A JMS message can have a <strong>priority</strong> from 0 to 9. The priority is set by the producer who sent the message. Messages with a higher priority may be dispatched by the broker to consumers before messages with a lower priority.</p>
<p>A JMS consumer can specify a message <strong>selector</strong>. Only messages that match the selector will be dispatched to the consumer. These messages will be dispatched in FIFO order relative to each other, but they may jump ahead of other messages that would otherwise be dispatched before them. Selectors only work on the headers or properties of the message so the consumer must know something about the message(s) it wants to consume.</p>
<p>For example, if a producer sends 100 messages and each message has a property <code>myProperty</code> whose value is 1 to 100 in order and the consumer wants to consume the <em>last</em> message on the queue then it would use the selector <code>myProperty = 100</code>.</p>
<p>Selector syntax is based on a subset of the SQL92 conditional expression syntax. You can find more information about selectors and how they work in the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/message"" rel=""nofollow noreferrer"">API docs</a>.</p>
",0
MessageDigest,Java,functionality,72343971,"<p>inside your <code>replyContainer</code> I couldn't see your <code>messageConverter</code> bean. In default it uses java objects to send and receive messages without converting them into human readable json.</p>
<pre class=""lang-java prettyprint-override""><code>@Bean
 public SimpleRabbitListenerContainerFactory customListenerContainerFactory(ConnectionFactory connectionFactory,
                                                                               MessageConverter jsonMessageConverter) {
   SimpleRabbitListenerContainerFactory factory = new SimpleRabbitListenerContainerFactory();
   factory.setConnectionFactory(connectionFactory);
   factory.setMessageConverter(jsonMessageConverter);
   return factory;
}
</code></pre>
<p>for your consumer;</p>
<pre class=""lang-java prettyprint-override""><code>@RabbitListener(queues = RabbitConstants.YOUR_QUEUE_NAME, containerFactory = &quot;customListenerContainerFactory&quot;)
public void onMessage(@Valid YourEvent YourEvent){
 //your code
}
</code></pre>
",0
MessageDigest,Java,functionality,73373395,"<p>There are many ways to do it. I will suggest you to implement a <code>producer/consumer</code> pattern between <em>M1</em> and <em>M2</em> with a messaging tool such as <code>Active MQ</code>, <code>Rabbit MQ</code> or <code>Kafka</code>.</p>
<ol>
<li><em>M1</em> produce a message to a queue <em>Q1</em></li>
<li><em>M2</em> process the message from <em>Q1</em></li>
<li><em>M2</em> returns a response to <em>Q2</em></li>
<li><em>M1</em> consume the message from <em>Q2</em></li>
</ol>
<p>Take a look <a href=""https://www.theserverside.com/answer/Synchronous-vs-asynchronous-microservices-communication-patterns"" rel=""nofollow noreferrer"">here</a>.</p>
",0
MessageDigest,Java,functionality,74888463,"<p>The feedback scoring form is inside an iframe. So, after landing on that page and closing the cookies banner and clicking the feedback button you need to switch into that iframe. There you can select the feedback score, send the feedback and close the dialog as shown in the code below. Finally you need to switch to the default content.<br />
The following code works</p>
<pre class=""lang-java prettyprint-override""><code>driver.get(&quot;https://store.liverpoolfc.com/&quot;);
WebdriverUtils.clickVisible(driver,By.id(&quot;onetrust-accept-btn-handler&quot;));
WebdriverUtils.clickVisible(driver,By.id(&quot;nebula_div_btn&quot;));
driver.switchTo().frame(driver.findElement(By.cssSelector(&quot;iframe[id*='kampyleForm']&quot;)));
WebdriverUtils.clickVisible(driver,By.xpath(&quot;//label[contains(@class,'rating-label')][contains(.,'6')]&quot;));
WebdriverUtils.clickVisible(driver,By.cssSelector(&quot;.panel-footer-web .submit-btn&quot;));
WebdriverUtils.clickVisible(driver,By.cssSelector(&quot;button[aria-label='Close Survey']&quot;));
driver.switchTo().defaultContent();
</code></pre>
<p>The method I used here <code>clickVisible</code> is implemented as following:</p>
<pre class=""lang-java prettyprint-override""><code>public static boolean clickVisible(WebDriver driver, By locator, int timeout) {
    try {
        Wait&lt;WebDriver&gt; wait = new WebDriverWait(driver, timeout);
        wait.until(ExpectedConditions.visibilityOfElementLocated(locator)).click();
        return true;
    } catch (Exception e) {
        ConsoleLogger.error(&quot;Failed to click on element&quot; + e.getMessage());
        return false;
    }
}
</code></pre>
<pre class=""lang-java prettyprint-override""><code>public static boolean clickVisible(WebDriver driver, By locator) {
    return clickVisible(driver, locator, 30);
}
</code></pre>
",0
MessageDigest,Java,concept,74682875,"<p>If you're going to use the simplest JMS pattern then you can use 1 connection, 1 session, and 2 consumers.</p>
<p>However, if you're going to use JMS's <a href=""https://docs.oracle.com/javaee/7/api/javax/jms/MessageListener.html"" rel=""nofollow noreferrer""><code>MessageListener</code></a> and you want the best performance you'll want to use 1 connection, 2 sessions, 1 consumer on each session, and 1 <code>MessageListener</code> on each consumer. This is because JMS sessions are not thread-safe and each <code>MessageListener</code> will be invoked asynchronously so if you want the listeners to be able to receive messages concurrently you'll want a session for each.</p>
",0
MessageDigest,Java,concept,75890236,"<p>First of all - MessageId is array of 24 bytes. And that is your error. You are trying to push String in byte array - [B. Once you fix this error, you will still not be able to successfully set MessageId. As MQ will completely ignore any value set by message producer, and it will always override your MessageId with arbitary value.</p>
<p>Blame JMS API. It is little bit idiotic and it doesn't make distiction between end user interface and messaging driver programmer interface. There is more than one setter on javax.jms.Message which is not inteded to be used by everday Joe.</p>
<p>So what can you do about it? For start you can use different field: Message Type and CorrelationID headers are inteded to be used by end users. CorrelationID shares the same byte[24] design, and it is functionally identical to MessageID. Usually, CorrelationID is shared between couple different messages which are &quot;correleated&quot;, thus the name. You can also add arbitary header to message.</p>
<p>But if you really really need to know MessageID of sent message - because of audit, correlation or something else - you can first send message, and the read MessageID field back. It will contain generated value.</p>
",0
MessageDigest,Java,concept,74448585,"<p>If <code>message1</code> and <code>message2</code> are sent in that order from the same thread, or from the same actor and they are sent to the same actor (and that actor is using a mailbox that does not reorder messages: the default mailbox does not, but one can implement mailboxes which reorder messages, e.g. in order to implement prioritization), <code>message2</code> will not be received by the target actor before <code>message1</code>.</p>
<p>Thus any of the of these four is possible:</p>
<ul>
<li><code>message1</code> is received and then <code>message2</code></li>
<li><code>message1</code> is received, but <code>message2</code> is never received</li>
<li><code>message1</code> is never received, but <code>message2</code> is</li>
<li>neither <code>message1</code> nor <code>message2</code> is ever received</li>
</ul>
<p>Note that there is no guarantee that two message sends to different actors will be received in any particular order.  There is also no guarantee regarding the ordering of message sends from two different actors (or if outside of any actor (e.g. in a <code>Future</code> callback or the main method), a different thread)).</p>
",0
MessageDigest,Java,concept,77634018,"<p>If your design depends on what the observers need to know about the message, you should use the pulling style. Because there is always a possibility to change the contract of messages for the sake of observers. In other words, your message contract depends on the observers because they consume the message. In this way, changing observers' (consumers') requirements results in changing the message contract which is not a good coupling. The consumer's side is more likely to be changed. Because there are likely to be new consumers and existing consumers probably will change over time.</p>
<p>Observer design pattern should be used when the message contract depends on the Subject. In this notion, the subject dictates what the message contract structure is. For example, it's a good fit to use it with events. Events indicate that something happened. They don't care who uses this data, they are just broadcasting the event data.</p>
",0
MessageDigest,Java,concept,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,concept,77063957,"<p>The fundamental semantics of a JMS queue is first-in-first-out (i.e. FIFO). In other words, the broker must dispatch messages to consumers in the order in which they were added to the queue. However, there are two basic ways to get around this.</p>
<ol>
<li>Message Priority</li>
<li>Message Selector</li>
</ol>
<p>A JMS message can have a <strong>priority</strong> from 0 to 9. The priority is set by the producer who sent the message. Messages with a higher priority may be dispatched by the broker to consumers before messages with a lower priority.</p>
<p>A JMS consumer can specify a message <strong>selector</strong>. Only messages that match the selector will be dispatched to the consumer. These messages will be dispatched in FIFO order relative to each other, but they may jump ahead of other messages that would otherwise be dispatched before them. Selectors only work on the headers or properties of the message so the consumer must know something about the message(s) it wants to consume.</p>
<p>For example, if a producer sends 100 messages and each message has a property <code>myProperty</code> whose value is 1 to 100 in order and the consumer wants to consume the <em>last</em> message on the queue then it would use the selector <code>myProperty = 100</code>.</p>
<p>Selector syntax is based on a subset of the SQL92 conditional expression syntax. You can find more information about selectors and how they work in the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/message"" rel=""nofollow noreferrer"">API docs</a>.</p>
",0
MessageDigest,Java,concept,75892592,"<p>How does Log4j 2.x interpret the <code>(String, Object...)</code> parameters of a logging call is determined by the <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/MessageFactory.html"" rel=""nofollow noreferrer""><code>MessageFactory</code></a> used by your logger.</p>
<p>When you create a logger you can pass a <code>MessageFactory</code> as second parameter to the <code>LogManager#getLogger</code> call (e.g. <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/LogManager.html#getLogger-java.lang.Class-org.apache.logging.log4j.message.MessageFactory-"" rel=""nofollow noreferrer""><code>LogManager#getLogger(Class&lt;?&gt;, MessageFactory)</code></a>.</p>
<p>In order to format your messages with a <code>MessageSource</code> you need to create:</p>
<ul>
<li><p>a new type of <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/Message.html"" rel=""nofollow noreferrer""><code>Message</code></a>:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessage implements Message {

    private final MessageSource source;
    private final String code;
    private final Object[] args;
    private final Throwable throwable;

    public MessageSourceMessage(MessageSource source, String code, Object[] args) {
        this.source = source;
        this.code = code;
        final int argCount = args.length;
        if (args[argCount - 1] instanceof Throwable) {
            this.args = Arrays.copyOf(args, argCount - 1);
            this.throwable = args[argCount - 1];
        } else {
            this.args = args;
            this.throwable = null;
        }
    }

    @Override
    public String getFormattedMessage() {
        return source.getMessage(code, args, Locale.getDefault());
    }

    @Override
    public String getFormat() {
        return code;
    }

    @Override
    public Object[] getParameters() {
        return args;
    }

    @Override
    public Throwable getThrowable() {
        return throwable;
    }
}
</code></pre>
</li>
<li><p>and a matching message factory:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessageFactory extends AbstractMessageFactory {

    private final MessageSource source;

    public MessageSourceMessageFactory(MessageSource source) {
        this.source = source;
    }

    @Override
    public Message newMessage(CharSequence message) {
        return new MessageSourceMessage(source, message.toString(), null);
    }

    @Override
    public Message newMessage(String message) {
        return new MessageSourceMessage(source, message, null);
    }

    @Override
    public Message newMessage(String message, Object... params) {
        return new MessageSourceMessage(source, message, params);
    }
}
</code></pre>
</li>
<li><p>then you can use the message factory to instantiate your loggers:</p>
<pre class=""lang-java prettyprint-override""><code>Logger logger = LogManager.getLogger(Example.class,
                                     new MessageSourceMessageFactory(source));
</code></pre>
</li>
</ul>
<p>There are some disadvantages of the example above:</p>
<ul>
<li><p><s>since &quot;code&quot; gives you no information about the number of parameters, if &quot;code&quot; resolves to &quot;Hello {0} and {1}&quot;, a call like</s></p>
<pre class=""lang-java prettyprint-override""><code>logger.info(&quot;code&quot;, param0, param1, throwable);
</code></pre>
<p><s>will just discard the <code>throwable</code> parameter instead of using it as the throwable of the message. You might consider encoding the number of parameters in your code, so that <code>MessageSourceMessage</code> can use the first additional parameter as throwable.</s></p>
</li>
<li><p>this messagefactory produces temporary objects. You might consider implementing <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/ReusableMessage.html"" rel=""nofollow noreferrer""><code>ReusableMessage</code></a>, so that most of the time the same instance of message is used.</p>
</li>
</ul>
<p><strong>Edit:</strong> since it is not recommended to add <code>Throwable#toString()</code> to the log message, I changed the example, so that if the last parameter is an instance of <code>Throwable</code>, it is interpreted as the throwable attached to the message.</p>
",0
MessageDigest,Java,concept,72343971,"<p>inside your <code>replyContainer</code> I couldn't see your <code>messageConverter</code> bean. In default it uses java objects to send and receive messages without converting them into human readable json.</p>
<pre class=""lang-java prettyprint-override""><code>@Bean
 public SimpleRabbitListenerContainerFactory customListenerContainerFactory(ConnectionFactory connectionFactory,
                                                                               MessageConverter jsonMessageConverter) {
   SimpleRabbitListenerContainerFactory factory = new SimpleRabbitListenerContainerFactory();
   factory.setConnectionFactory(connectionFactory);
   factory.setMessageConverter(jsonMessageConverter);
   return factory;
}
</code></pre>
<p>for your consumer;</p>
<pre class=""lang-java prettyprint-override""><code>@RabbitListener(queues = RabbitConstants.YOUR_QUEUE_NAME, containerFactory = &quot;customListenerContainerFactory&quot;)
public void onMessage(@Valid YourEvent YourEvent){
 //your code
}
</code></pre>
",0
MessageDigest,Java,concept,73373395,"<p>There are many ways to do it. I will suggest you to implement a <code>producer/consumer</code> pattern between <em>M1</em> and <em>M2</em> with a messaging tool such as <code>Active MQ</code>, <code>Rabbit MQ</code> or <code>Kafka</code>.</p>
<ol>
<li><em>M1</em> produce a message to a queue <em>Q1</em></li>
<li><em>M2</em> process the message from <em>Q1</em></li>
<li><em>M2</em> returns a response to <em>Q2</em></li>
<li><em>M1</em> consume the message from <em>Q2</em></li>
</ol>
<p>Take a look <a href=""https://www.theserverside.com/answer/Synchronous-vs-asynchronous-microservices-communication-patterns"" rel=""nofollow noreferrer"">here</a>.</p>
",0
MessageDigest,Java,concept,77615429,"<p>The best way to do this is to use a messaging system. Create a singleton class like</p>
<pre><code>public class RedisMessenger {
  private Queue&lt;Message&gt; messages;
  public long queueMessage(Message m); //return a response ticket number
  public void registerListener(RedisResponseListener l, RedisMessageType t);
}
</code></pre>
<p>Then use a thread to send queries and notify appropriate listeners.</p>
<p>You can use the RedisMessageType parameter to allow listening for response for specific messages (via message ticket number) or by message categories.</p>
",0
MessageDigest,Java,performance,74682875,"<p>If you're going to use the simplest JMS pattern then you can use 1 connection, 1 session, and 2 consumers.</p>
<p>However, if you're going to use JMS's <a href=""https://docs.oracle.com/javaee/7/api/javax/jms/MessageListener.html"" rel=""nofollow noreferrer""><code>MessageListener</code></a> and you want the best performance you'll want to use 1 connection, 2 sessions, 1 consumer on each session, and 1 <code>MessageListener</code> on each consumer. This is because JMS sessions are not thread-safe and each <code>MessageListener</code> will be invoked asynchronously so if you want the listeners to be able to receive messages concurrently you'll want a session for each.</p>
",0
MessageDigest,Java,performance,75890236,"<p>First of all - MessageId is array of 24 bytes. And that is your error. You are trying to push String in byte array - [B. Once you fix this error, you will still not be able to successfully set MessageId. As MQ will completely ignore any value set by message producer, and it will always override your MessageId with arbitary value.</p>
<p>Blame JMS API. It is little bit idiotic and it doesn't make distiction between end user interface and messaging driver programmer interface. There is more than one setter on javax.jms.Message which is not inteded to be used by everday Joe.</p>
<p>So what can you do about it? For start you can use different field: Message Type and CorrelationID headers are inteded to be used by end users. CorrelationID shares the same byte[24] design, and it is functionally identical to MessageID. Usually, CorrelationID is shared between couple different messages which are &quot;correleated&quot;, thus the name. You can also add arbitary header to message.</p>
<p>But if you really really need to know MessageID of sent message - because of audit, correlation or something else - you can first send message, and the read MessageID field back. It will contain generated value.</p>
",0
MessageDigest,Java,performance,74448585,"<p>If <code>message1</code> and <code>message2</code> are sent in that order from the same thread, or from the same actor and they are sent to the same actor (and that actor is using a mailbox that does not reorder messages: the default mailbox does not, but one can implement mailboxes which reorder messages, e.g. in order to implement prioritization), <code>message2</code> will not be received by the target actor before <code>message1</code>.</p>
<p>Thus any of the of these four is possible:</p>
<ul>
<li><code>message1</code> is received and then <code>message2</code></li>
<li><code>message1</code> is received, but <code>message2</code> is never received</li>
<li><code>message1</code> is never received, but <code>message2</code> is</li>
<li>neither <code>message1</code> nor <code>message2</code> is ever received</li>
</ul>
<p>Note that there is no guarantee that two message sends to different actors will be received in any particular order.  There is also no guarantee regarding the ordering of message sends from two different actors (or if outside of any actor (e.g. in a <code>Future</code> callback or the main method), a different thread)).</p>
",0
MessageDigest,Java,performance,77634018,"<p>If your design depends on what the observers need to know about the message, you should use the pulling style. Because there is always a possibility to change the contract of messages for the sake of observers. In other words, your message contract depends on the observers because they consume the message. In this way, changing observers' (consumers') requirements results in changing the message contract which is not a good coupling. The consumer's side is more likely to be changed. Because there are likely to be new consumers and existing consumers probably will change over time.</p>
<p>Observer design pattern should be used when the message contract depends on the Subject. In this notion, the subject dictates what the message contract structure is. For example, it's a good fit to use it with events. Events indicate that something happened. They don't care who uses this data, they are just broadcasting the event data.</p>
",0
MessageDigest,Java,performance,77063957,"<p>The fundamental semantics of a JMS queue is first-in-first-out (i.e. FIFO). In other words, the broker must dispatch messages to consumers in the order in which they were added to the queue. However, there are two basic ways to get around this.</p>
<ol>
<li>Message Priority</li>
<li>Message Selector</li>
</ol>
<p>A JMS message can have a <strong>priority</strong> from 0 to 9. The priority is set by the producer who sent the message. Messages with a higher priority may be dispatched by the broker to consumers before messages with a lower priority.</p>
<p>A JMS consumer can specify a message <strong>selector</strong>. Only messages that match the selector will be dispatched to the consumer. These messages will be dispatched in FIFO order relative to each other, but they may jump ahead of other messages that would otherwise be dispatched before them. Selectors only work on the headers or properties of the message so the consumer must know something about the message(s) it wants to consume.</p>
<p>For example, if a producer sends 100 messages and each message has a property <code>myProperty</code> whose value is 1 to 100 in order and the consumer wants to consume the <em>last</em> message on the queue then it would use the selector <code>myProperty = 100</code>.</p>
<p>Selector syntax is based on a subset of the SQL92 conditional expression syntax. You can find more information about selectors and how they work in the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/message"" rel=""nofollow noreferrer"">API docs</a>.</p>
",0
MessageDigest,Java,performance,75892592,"<p>How does Log4j 2.x interpret the <code>(String, Object...)</code> parameters of a logging call is determined by the <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/MessageFactory.html"" rel=""nofollow noreferrer""><code>MessageFactory</code></a> used by your logger.</p>
<p>When you create a logger you can pass a <code>MessageFactory</code> as second parameter to the <code>LogManager#getLogger</code> call (e.g. <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/LogManager.html#getLogger-java.lang.Class-org.apache.logging.log4j.message.MessageFactory-"" rel=""nofollow noreferrer""><code>LogManager#getLogger(Class&lt;?&gt;, MessageFactory)</code></a>.</p>
<p>In order to format your messages with a <code>MessageSource</code> you need to create:</p>
<ul>
<li><p>a new type of <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/Message.html"" rel=""nofollow noreferrer""><code>Message</code></a>:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessage implements Message {

    private final MessageSource source;
    private final String code;
    private final Object[] args;
    private final Throwable throwable;

    public MessageSourceMessage(MessageSource source, String code, Object[] args) {
        this.source = source;
        this.code = code;
        final int argCount = args.length;
        if (args[argCount - 1] instanceof Throwable) {
            this.args = Arrays.copyOf(args, argCount - 1);
            this.throwable = args[argCount - 1];
        } else {
            this.args = args;
            this.throwable = null;
        }
    }

    @Override
    public String getFormattedMessage() {
        return source.getMessage(code, args, Locale.getDefault());
    }

    @Override
    public String getFormat() {
        return code;
    }

    @Override
    public Object[] getParameters() {
        return args;
    }

    @Override
    public Throwable getThrowable() {
        return throwable;
    }
}
</code></pre>
</li>
<li><p>and a matching message factory:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessageFactory extends AbstractMessageFactory {

    private final MessageSource source;

    public MessageSourceMessageFactory(MessageSource source) {
        this.source = source;
    }

    @Override
    public Message newMessage(CharSequence message) {
        return new MessageSourceMessage(source, message.toString(), null);
    }

    @Override
    public Message newMessage(String message) {
        return new MessageSourceMessage(source, message, null);
    }

    @Override
    public Message newMessage(String message, Object... params) {
        return new MessageSourceMessage(source, message, params);
    }
}
</code></pre>
</li>
<li><p>then you can use the message factory to instantiate your loggers:</p>
<pre class=""lang-java prettyprint-override""><code>Logger logger = LogManager.getLogger(Example.class,
                                     new MessageSourceMessageFactory(source));
</code></pre>
</li>
</ul>
<p>There are some disadvantages of the example above:</p>
<ul>
<li><p><s>since &quot;code&quot; gives you no information about the number of parameters, if &quot;code&quot; resolves to &quot;Hello {0} and {1}&quot;, a call like</s></p>
<pre class=""lang-java prettyprint-override""><code>logger.info(&quot;code&quot;, param0, param1, throwable);
</code></pre>
<p><s>will just discard the <code>throwable</code> parameter instead of using it as the throwable of the message. You might consider encoding the number of parameters in your code, so that <code>MessageSourceMessage</code> can use the first additional parameter as throwable.</s></p>
</li>
<li><p>this messagefactory produces temporary objects. You might consider implementing <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/ReusableMessage.html"" rel=""nofollow noreferrer""><code>ReusableMessage</code></a>, so that most of the time the same instance of message is used.</p>
</li>
</ul>
<p><strong>Edit:</strong> since it is not recommended to add <code>Throwable#toString()</code> to the log message, I changed the example, so that if the last parameter is an instance of <code>Throwable</code>, it is interpreted as the throwable attached to the message.</p>
",0
MessageDigest,Java,performance,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,performance,73373395,"<p>There are many ways to do it. I will suggest you to implement a <code>producer/consumer</code> pattern between <em>M1</em> and <em>M2</em> with a messaging tool such as <code>Active MQ</code>, <code>Rabbit MQ</code> or <code>Kafka</code>.</p>
<ol>
<li><em>M1</em> produce a message to a queue <em>Q1</em></li>
<li><em>M2</em> process the message from <em>Q1</em></li>
<li><em>M2</em> returns a response to <em>Q2</em></li>
<li><em>M1</em> consume the message from <em>Q2</em></li>
</ol>
<p>Take a look <a href=""https://www.theserverside.com/answer/Synchronous-vs-asynchronous-microservices-communication-patterns"" rel=""nofollow noreferrer"">here</a>.</p>
",0
MessageDigest,Java,performance,74404798,"<p>You're almost there. <code>sha256.digest(array)</code> <strong>itself</strong> returns the result, your next digest call wouldn't work anymore. The API of MessageDigest is: Send as many bytes as you want in chunks via the <code>update</code> method, and then do a final call with a <code>digest</code> method. Purely as a convenience, <code>digest(byteArr)</code> is identical to <code>update(byteArr); digest();</code>.</p>
<p>So, replace your last 2 lines with just <code>System.out.println(Arrays.toString(sha256.digest(array));</code>.</p>
<p>A few more notes:</p>
<ul>
<li>This code eats a ton of memory if the file is large, and there is absolutely no need for it; you can just repeatedly read a smallish byte array, send it to the <code>MessageDigest</code> object via an <code>update</code> method. Imagine this file is 4GB large; such a setup can easily do it in a tiny memory footprint, whereas your code would require 4GB worth of memory.</li>
<li>A hash's size is what it is, you can't &quot;resize&quot; it, that doesn't make sense. Because bytes are annoying to show, various solutions exist. There is no one unified standard. Whatever tool gives you the supposed hash will have picked a way to turn a bunch of bytes (the hash) into string form. The common candidates are hex-nibbles, which looks like a sequence of symbols where each symbol is 0-9 or A-F, and all the letters are either all uppercased, or all lowercased. Or, base64, which is a mix of letters and digits.</li>
</ul>
<p>To turn a byte array to hex-nibble form in java, <a href=""https://www.baeldung.com/java-byte-arrays-hex-strings"" rel=""nofollow noreferrer"">follow this guide</a>. To turn a byte array into base64, it's simply <code>Base64.getEncoder().encodeToString(byteArr)</code>.</p>
",1
MessageDigest,Java,performance,72343971,"<p>inside your <code>replyContainer</code> I couldn't see your <code>messageConverter</code> bean. In default it uses java objects to send and receive messages without converting them into human readable json.</p>
<pre class=""lang-java prettyprint-override""><code>@Bean
 public SimpleRabbitListenerContainerFactory customListenerContainerFactory(ConnectionFactory connectionFactory,
                                                                               MessageConverter jsonMessageConverter) {
   SimpleRabbitListenerContainerFactory factory = new SimpleRabbitListenerContainerFactory();
   factory.setConnectionFactory(connectionFactory);
   factory.setMessageConverter(jsonMessageConverter);
   return factory;
}
</code></pre>
<p>for your consumer;</p>
<pre class=""lang-java prettyprint-override""><code>@RabbitListener(queues = RabbitConstants.YOUR_QUEUE_NAME, containerFactory = &quot;customListenerContainerFactory&quot;)
public void onMessage(@Valid YourEvent YourEvent){
 //your code
}
</code></pre>
",0
MessageDigest,Java,directive,74448585,"<p>If <code>message1</code> and <code>message2</code> are sent in that order from the same thread, or from the same actor and they are sent to the same actor (and that actor is using a mailbox that does not reorder messages: the default mailbox does not, but one can implement mailboxes which reorder messages, e.g. in order to implement prioritization), <code>message2</code> will not be received by the target actor before <code>message1</code>.</p>
<p>Thus any of the of these four is possible:</p>
<ul>
<li><code>message1</code> is received and then <code>message2</code></li>
<li><code>message1</code> is received, but <code>message2</code> is never received</li>
<li><code>message1</code> is never received, but <code>message2</code> is</li>
<li>neither <code>message1</code> nor <code>message2</code> is ever received</li>
</ul>
<p>Note that there is no guarantee that two message sends to different actors will be received in any particular order.  There is also no guarantee regarding the ordering of message sends from two different actors (or if outside of any actor (e.g. in a <code>Future</code> callback or the main method), a different thread)).</p>
",0
MessageDigest,Java,directive,75890236,"<p>First of all - MessageId is array of 24 bytes. And that is your error. You are trying to push String in byte array - [B. Once you fix this error, you will still not be able to successfully set MessageId. As MQ will completely ignore any value set by message producer, and it will always override your MessageId with arbitary value.</p>
<p>Blame JMS API. It is little bit idiotic and it doesn't make distiction between end user interface and messaging driver programmer interface. There is more than one setter on javax.jms.Message which is not inteded to be used by everday Joe.</p>
<p>So what can you do about it? For start you can use different field: Message Type and CorrelationID headers are inteded to be used by end users. CorrelationID shares the same byte[24] design, and it is functionally identical to MessageID. Usually, CorrelationID is shared between couple different messages which are &quot;correleated&quot;, thus the name. You can also add arbitary header to message.</p>
<p>But if you really really need to know MessageID of sent message - because of audit, correlation or something else - you can first send message, and the read MessageID field back. It will contain generated value.</p>
",0
MessageDigest,Java,directive,74682875,"<p>If you're going to use the simplest JMS pattern then you can use 1 connection, 1 session, and 2 consumers.</p>
<p>However, if you're going to use JMS's <a href=""https://docs.oracle.com/javaee/7/api/javax/jms/MessageListener.html"" rel=""nofollow noreferrer""><code>MessageListener</code></a> and you want the best performance you'll want to use 1 connection, 2 sessions, 1 consumer on each session, and 1 <code>MessageListener</code> on each consumer. This is because JMS sessions are not thread-safe and each <code>MessageListener</code> will be invoked asynchronously so if you want the listeners to be able to receive messages concurrently you'll want a session for each.</p>
",0
MessageDigest,Java,directive,77634018,"<p>If your design depends on what the observers need to know about the message, you should use the pulling style. Because there is always a possibility to change the contract of messages for the sake of observers. In other words, your message contract depends on the observers because they consume the message. In this way, changing observers' (consumers') requirements results in changing the message contract which is not a good coupling. The consumer's side is more likely to be changed. Because there are likely to be new consumers and existing consumers probably will change over time.</p>
<p>Observer design pattern should be used when the message contract depends on the Subject. In this notion, the subject dictates what the message contract structure is. For example, it's a good fit to use it with events. Events indicate that something happened. They don't care who uses this data, they are just broadcasting the event data.</p>
",0
MessageDigest,Java,directive,75892592,"<p>How does Log4j 2.x interpret the <code>(String, Object...)</code> parameters of a logging call is determined by the <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/MessageFactory.html"" rel=""nofollow noreferrer""><code>MessageFactory</code></a> used by your logger.</p>
<p>When you create a logger you can pass a <code>MessageFactory</code> as second parameter to the <code>LogManager#getLogger</code> call (e.g. <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/LogManager.html#getLogger-java.lang.Class-org.apache.logging.log4j.message.MessageFactory-"" rel=""nofollow noreferrer""><code>LogManager#getLogger(Class&lt;?&gt;, MessageFactory)</code></a>.</p>
<p>In order to format your messages with a <code>MessageSource</code> you need to create:</p>
<ul>
<li><p>a new type of <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/Message.html"" rel=""nofollow noreferrer""><code>Message</code></a>:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessage implements Message {

    private final MessageSource source;
    private final String code;
    private final Object[] args;
    private final Throwable throwable;

    public MessageSourceMessage(MessageSource source, String code, Object[] args) {
        this.source = source;
        this.code = code;
        final int argCount = args.length;
        if (args[argCount - 1] instanceof Throwable) {
            this.args = Arrays.copyOf(args, argCount - 1);
            this.throwable = args[argCount - 1];
        } else {
            this.args = args;
            this.throwable = null;
        }
    }

    @Override
    public String getFormattedMessage() {
        return source.getMessage(code, args, Locale.getDefault());
    }

    @Override
    public String getFormat() {
        return code;
    }

    @Override
    public Object[] getParameters() {
        return args;
    }

    @Override
    public Throwable getThrowable() {
        return throwable;
    }
}
</code></pre>
</li>
<li><p>and a matching message factory:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessageFactory extends AbstractMessageFactory {

    private final MessageSource source;

    public MessageSourceMessageFactory(MessageSource source) {
        this.source = source;
    }

    @Override
    public Message newMessage(CharSequence message) {
        return new MessageSourceMessage(source, message.toString(), null);
    }

    @Override
    public Message newMessage(String message) {
        return new MessageSourceMessage(source, message, null);
    }

    @Override
    public Message newMessage(String message, Object... params) {
        return new MessageSourceMessage(source, message, params);
    }
}
</code></pre>
</li>
<li><p>then you can use the message factory to instantiate your loggers:</p>
<pre class=""lang-java prettyprint-override""><code>Logger logger = LogManager.getLogger(Example.class,
                                     new MessageSourceMessageFactory(source));
</code></pre>
</li>
</ul>
<p>There are some disadvantages of the example above:</p>
<ul>
<li><p><s>since &quot;code&quot; gives you no information about the number of parameters, if &quot;code&quot; resolves to &quot;Hello {0} and {1}&quot;, a call like</s></p>
<pre class=""lang-java prettyprint-override""><code>logger.info(&quot;code&quot;, param0, param1, throwable);
</code></pre>
<p><s>will just discard the <code>throwable</code> parameter instead of using it as the throwable of the message. You might consider encoding the number of parameters in your code, so that <code>MessageSourceMessage</code> can use the first additional parameter as throwable.</s></p>
</li>
<li><p>this messagefactory produces temporary objects. You might consider implementing <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/ReusableMessage.html"" rel=""nofollow noreferrer""><code>ReusableMessage</code></a>, so that most of the time the same instance of message is used.</p>
</li>
</ul>
<p><strong>Edit:</strong> since it is not recommended to add <code>Throwable#toString()</code> to the log message, I changed the example, so that if the last parameter is an instance of <code>Throwable</code>, it is interpreted as the throwable attached to the message.</p>
",0
MessageDigest,Java,directive,77063957,"<p>The fundamental semantics of a JMS queue is first-in-first-out (i.e. FIFO). In other words, the broker must dispatch messages to consumers in the order in which they were added to the queue. However, there are two basic ways to get around this.</p>
<ol>
<li>Message Priority</li>
<li>Message Selector</li>
</ol>
<p>A JMS message can have a <strong>priority</strong> from 0 to 9. The priority is set by the producer who sent the message. Messages with a higher priority may be dispatched by the broker to consumers before messages with a lower priority.</p>
<p>A JMS consumer can specify a message <strong>selector</strong>. Only messages that match the selector will be dispatched to the consumer. These messages will be dispatched in FIFO order relative to each other, but they may jump ahead of other messages that would otherwise be dispatched before them. Selectors only work on the headers or properties of the message so the consumer must know something about the message(s) it wants to consume.</p>
<p>For example, if a producer sends 100 messages and each message has a property <code>myProperty</code> whose value is 1 to 100 in order and the consumer wants to consume the <em>last</em> message on the queue then it would use the selector <code>myProperty = 100</code>.</p>
<p>Selector syntax is based on a subset of the SQL92 conditional expression syntax. You can find more information about selectors and how they work in the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/message"" rel=""nofollow noreferrer"">API docs</a>.</p>
",0
MessageDigest,Java,directive,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,directive,75756064,"<p>You need to filter if you are waiting for player confirmation. You can do it in lot of way, but I suggest you to create a list, and put all players that need to confirm. For example:</p>
<pre class=""lang-java prettyprint-override""><code>public static List&lt;Player&gt; waitingConfirmations = new ArrayList&lt;&gt;(); // create the list

public static void jlvlup(Player player,int currentLevel) {
    if(currentLevel == 1) {
         player.sendMessage(ChatColor.DARK_RED + &quot;Do you confirm upgrade spawner to Level 2 for 5000000$ ? (Y/N) Write to chat.&quot;);
         player.closeInventory(); 
         waitingConfirmations.add(player); // here add to list
    }
}
</code></pre>
<p>Then, for the chat, do:</p>
<pre class=""lang-java prettyprint-override""><code>if(message.equalsIgnoreCase(&quot;Y&quot;) &amp;&amp; waitingConfirmations.contains(player)) { // check if in list
    // here pass to level 2
}
</code></pre>
<p>Note: <code>message</code> is the chat message. I didn't wrote full method as you didn't give it</p>
",0
MessageDigest,Java,directive,73373395,"<p>There are many ways to do it. I will suggest you to implement a <code>producer/consumer</code> pattern between <em>M1</em> and <em>M2</em> with a messaging tool such as <code>Active MQ</code>, <code>Rabbit MQ</code> or <code>Kafka</code>.</p>
<ol>
<li><em>M1</em> produce a message to a queue <em>Q1</em></li>
<li><em>M2</em> process the message from <em>Q1</em></li>
<li><em>M2</em> returns a response to <em>Q2</em></li>
<li><em>M1</em> consume the message from <em>Q2</em></li>
</ol>
<p>Take a look <a href=""https://www.theserverside.com/answer/Synchronous-vs-asynchronous-microservices-communication-patterns"" rel=""nofollow noreferrer"">here</a>.</p>
",0
MessageDigest,Java,directive,73318897,"<p>According to <a href=""https://github.com/networknt/json-schema-validator/blob/master/doc/cust-msg.md"" rel=""nofollow noreferrer"">documentation</a> you can provide the custom message in the json schema itself but not in the way you did.</p>
<p>For example if you have JSON schema like this ( with default message) :</p>
<pre><code>{
  &quot;type&quot;: &quot;object&quot;,
  &quot;properties&quot;: {
    &quot;firstName&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;description&quot;: &quot;The person's first name.&quot;
    },
    &quot;foo&quot;: {
      &quot;type&quot;: &quot;array&quot;,
      &quot;maxItems&quot;: 3
    }
  }
}
</code></pre>
<p>You can customize the error messagge by changing above JSON schema as follows:</p>
<pre><code>{
  &quot;type&quot;: &quot;object&quot;,
  &quot;properties&quot;: {
    &quot;firstName&quot;: {
      &quot;type&quot;: &quot;string&quot;,
      &quot;description&quot;: &quot;The person's first name.&quot;
    },
    &quot;foo&quot;: {
      &quot;type&quot;: &quot;array&quot;,
      &quot;maxItems&quot;: 3
    }
  },
  &quot;message&quot;: {
    &quot;maxItems&quot; : &quot;MaxItem must be 3 only&quot;,
    &quot;type&quot; : &quot;Invalid type&quot;
  }
}
</code></pre>
<p>In the message field users can declare their custom message. The key should be the validation type, and the value should be the custom message.</p>
<pre><code>&quot;message&quot;: {
    [validationType] : [customMessage]
  }
</code></pre>
<p>Also, we can make format the dynamic message with properties returned from <a href=""https://github.com/networknt/json-schema-validator/blob/master/src/main/java/com/networknt/schema/ValidationMessage.java"" rel=""nofollow noreferrer"">ValidationMessage.java</a>class such as arguments, path e.t.c.</p>
<p>Take a look at the <a href=""https://github.com/networknt/json-schema-validator/pull/438"" rel=""nofollow noreferrer"">PR</a></p>
<p>With this setup, this line of code:</p>
<pre><code> for (ValidationMessage error : errors) {
        System.out.println(error.getMessage());
    }
</code></pre>
<p>Should print your customized error message.</p>
",0
MessageDigest,Java,pattern,74682875,"<p>If you're going to use the simplest JMS pattern then you can use 1 connection, 1 session, and 2 consumers.</p>
<p>However, if you're going to use JMS's <a href=""https://docs.oracle.com/javaee/7/api/javax/jms/MessageListener.html"" rel=""nofollow noreferrer""><code>MessageListener</code></a> and you want the best performance you'll want to use 1 connection, 2 sessions, 1 consumer on each session, and 1 <code>MessageListener</code> on each consumer. This is because JMS sessions are not thread-safe and each <code>MessageListener</code> will be invoked asynchronously so if you want the listeners to be able to receive messages concurrently you'll want a session for each.</p>
",0
MessageDigest,Java,pattern,75890236,"<p>First of all - MessageId is array of 24 bytes. And that is your error. You are trying to push String in byte array - [B. Once you fix this error, you will still not be able to successfully set MessageId. As MQ will completely ignore any value set by message producer, and it will always override your MessageId with arbitary value.</p>
<p>Blame JMS API. It is little bit idiotic and it doesn't make distiction between end user interface and messaging driver programmer interface. There is more than one setter on javax.jms.Message which is not inteded to be used by everday Joe.</p>
<p>So what can you do about it? For start you can use different field: Message Type and CorrelationID headers are inteded to be used by end users. CorrelationID shares the same byte[24] design, and it is functionally identical to MessageID. Usually, CorrelationID is shared between couple different messages which are &quot;correleated&quot;, thus the name. You can also add arbitary header to message.</p>
<p>But if you really really need to know MessageID of sent message - because of audit, correlation or something else - you can first send message, and the read MessageID field back. It will contain generated value.</p>
",0
MessageDigest,Java,pattern,74448585,"<p>If <code>message1</code> and <code>message2</code> are sent in that order from the same thread, or from the same actor and they are sent to the same actor (and that actor is using a mailbox that does not reorder messages: the default mailbox does not, but one can implement mailboxes which reorder messages, e.g. in order to implement prioritization), <code>message2</code> will not be received by the target actor before <code>message1</code>.</p>
<p>Thus any of the of these four is possible:</p>
<ul>
<li><code>message1</code> is received and then <code>message2</code></li>
<li><code>message1</code> is received, but <code>message2</code> is never received</li>
<li><code>message1</code> is never received, but <code>message2</code> is</li>
<li>neither <code>message1</code> nor <code>message2</code> is ever received</li>
</ul>
<p>Note that there is no guarantee that two message sends to different actors will be received in any particular order.  There is also no guarantee regarding the ordering of message sends from two different actors (or if outside of any actor (e.g. in a <code>Future</code> callback or the main method), a different thread)).</p>
",0
MessageDigest,Java,pattern,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,pattern,75892592,"<p>How does Log4j 2.x interpret the <code>(String, Object...)</code> parameters of a logging call is determined by the <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/MessageFactory.html"" rel=""nofollow noreferrer""><code>MessageFactory</code></a> used by your logger.</p>
<p>When you create a logger you can pass a <code>MessageFactory</code> as second parameter to the <code>LogManager#getLogger</code> call (e.g. <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/LogManager.html#getLogger-java.lang.Class-org.apache.logging.log4j.message.MessageFactory-"" rel=""nofollow noreferrer""><code>LogManager#getLogger(Class&lt;?&gt;, MessageFactory)</code></a>.</p>
<p>In order to format your messages with a <code>MessageSource</code> you need to create:</p>
<ul>
<li><p>a new type of <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/Message.html"" rel=""nofollow noreferrer""><code>Message</code></a>:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessage implements Message {

    private final MessageSource source;
    private final String code;
    private final Object[] args;
    private final Throwable throwable;

    public MessageSourceMessage(MessageSource source, String code, Object[] args) {
        this.source = source;
        this.code = code;
        final int argCount = args.length;
        if (args[argCount - 1] instanceof Throwable) {
            this.args = Arrays.copyOf(args, argCount - 1);
            this.throwable = args[argCount - 1];
        } else {
            this.args = args;
            this.throwable = null;
        }
    }

    @Override
    public String getFormattedMessage() {
        return source.getMessage(code, args, Locale.getDefault());
    }

    @Override
    public String getFormat() {
        return code;
    }

    @Override
    public Object[] getParameters() {
        return args;
    }

    @Override
    public Throwable getThrowable() {
        return throwable;
    }
}
</code></pre>
</li>
<li><p>and a matching message factory:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessageFactory extends AbstractMessageFactory {

    private final MessageSource source;

    public MessageSourceMessageFactory(MessageSource source) {
        this.source = source;
    }

    @Override
    public Message newMessage(CharSequence message) {
        return new MessageSourceMessage(source, message.toString(), null);
    }

    @Override
    public Message newMessage(String message) {
        return new MessageSourceMessage(source, message, null);
    }

    @Override
    public Message newMessage(String message, Object... params) {
        return new MessageSourceMessage(source, message, params);
    }
}
</code></pre>
</li>
<li><p>then you can use the message factory to instantiate your loggers:</p>
<pre class=""lang-java prettyprint-override""><code>Logger logger = LogManager.getLogger(Example.class,
                                     new MessageSourceMessageFactory(source));
</code></pre>
</li>
</ul>
<p>There are some disadvantages of the example above:</p>
<ul>
<li><p><s>since &quot;code&quot; gives you no information about the number of parameters, if &quot;code&quot; resolves to &quot;Hello {0} and {1}&quot;, a call like</s></p>
<pre class=""lang-java prettyprint-override""><code>logger.info(&quot;code&quot;, param0, param1, throwable);
</code></pre>
<p><s>will just discard the <code>throwable</code> parameter instead of using it as the throwable of the message. You might consider encoding the number of parameters in your code, so that <code>MessageSourceMessage</code> can use the first additional parameter as throwable.</s></p>
</li>
<li><p>this messagefactory produces temporary objects. You might consider implementing <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/ReusableMessage.html"" rel=""nofollow noreferrer""><code>ReusableMessage</code></a>, so that most of the time the same instance of message is used.</p>
</li>
</ul>
<p><strong>Edit:</strong> since it is not recommended to add <code>Throwable#toString()</code> to the log message, I changed the example, so that if the last parameter is an instance of <code>Throwable</code>, it is interpreted as the throwable attached to the message.</p>
",0
MessageDigest,Java,pattern,77634018,"<p>If your design depends on what the observers need to know about the message, you should use the pulling style. Because there is always a possibility to change the contract of messages for the sake of observers. In other words, your message contract depends on the observers because they consume the message. In this way, changing observers' (consumers') requirements results in changing the message contract which is not a good coupling. The consumer's side is more likely to be changed. Because there are likely to be new consumers and existing consumers probably will change over time.</p>
<p>Observer design pattern should be used when the message contract depends on the Subject. In this notion, the subject dictates what the message contract structure is. For example, it's a good fit to use it with events. Events indicate that something happened. They don't care who uses this data, they are just broadcasting the event data.</p>
",0
MessageDigest,Java,pattern,77063957,"<p>The fundamental semantics of a JMS queue is first-in-first-out (i.e. FIFO). In other words, the broker must dispatch messages to consumers in the order in which they were added to the queue. However, there are two basic ways to get around this.</p>
<ol>
<li>Message Priority</li>
<li>Message Selector</li>
</ol>
<p>A JMS message can have a <strong>priority</strong> from 0 to 9. The priority is set by the producer who sent the message. Messages with a higher priority may be dispatched by the broker to consumers before messages with a lower priority.</p>
<p>A JMS consumer can specify a message <strong>selector</strong>. Only messages that match the selector will be dispatched to the consumer. These messages will be dispatched in FIFO order relative to each other, but they may jump ahead of other messages that would otherwise be dispatched before them. Selectors only work on the headers or properties of the message so the consumer must know something about the message(s) it wants to consume.</p>
<p>For example, if a producer sends 100 messages and each message has a property <code>myProperty</code> whose value is 1 to 100 in order and the consumer wants to consume the <em>last</em> message on the queue then it would use the selector <code>myProperty = 100</code>.</p>
<p>Selector syntax is based on a subset of the SQL92 conditional expression syntax. You can find more information about selectors and how they work in the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/message"" rel=""nofollow noreferrer"">API docs</a>.</p>
",0
MessageDigest,Java,pattern,73373395,"<p>There are many ways to do it. I will suggest you to implement a <code>producer/consumer</code> pattern between <em>M1</em> and <em>M2</em> with a messaging tool such as <code>Active MQ</code>, <code>Rabbit MQ</code> or <code>Kafka</code>.</p>
<ol>
<li><em>M1</em> produce a message to a queue <em>Q1</em></li>
<li><em>M2</em> process the message from <em>Q1</em></li>
<li><em>M2</em> returns a response to <em>Q2</em></li>
<li><em>M1</em> consume the message from <em>Q2</em></li>
</ol>
<p>Take a look <a href=""https://www.theserverside.com/answer/Synchronous-vs-asynchronous-microservices-communication-patterns"" rel=""nofollow noreferrer"">here</a>.</p>
",0
MessageDigest,Java,pattern,72343971,"<p>inside your <code>replyContainer</code> I couldn't see your <code>messageConverter</code> bean. In default it uses java objects to send and receive messages without converting them into human readable json.</p>
<pre class=""lang-java prettyprint-override""><code>@Bean
 public SimpleRabbitListenerContainerFactory customListenerContainerFactory(ConnectionFactory connectionFactory,
                                                                               MessageConverter jsonMessageConverter) {
   SimpleRabbitListenerContainerFactory factory = new SimpleRabbitListenerContainerFactory();
   factory.setConnectionFactory(connectionFactory);
   factory.setMessageConverter(jsonMessageConverter);
   return factory;
}
</code></pre>
<p>for your consumer;</p>
<pre class=""lang-java prettyprint-override""><code>@RabbitListener(queues = RabbitConstants.YOUR_QUEUE_NAME, containerFactory = &quot;customListenerContainerFactory&quot;)
public void onMessage(@Valid YourEvent YourEvent){
 //your code
}
</code></pre>
",0
MessageDigest,Java,pattern,74921159,"<p>I solve it by adding this statement on <code>messageKafkaListenerContainerFactory</code>:</p>
<pre><code>factory.setMessageConverter(new StringJsonMessageConverter());
</code></pre>
<p>And change <code>@Payload Message message</code>  to <code>@Payload String  message</code>.</p>
",0
MessageDigest,Java,environment,74682875,"<p>If you're going to use the simplest JMS pattern then you can use 1 connection, 1 session, and 2 consumers.</p>
<p>However, if you're going to use JMS's <a href=""https://docs.oracle.com/javaee/7/api/javax/jms/MessageListener.html"" rel=""nofollow noreferrer""><code>MessageListener</code></a> and you want the best performance you'll want to use 1 connection, 2 sessions, 1 consumer on each session, and 1 <code>MessageListener</code> on each consumer. This is because JMS sessions are not thread-safe and each <code>MessageListener</code> will be invoked asynchronously so if you want the listeners to be able to receive messages concurrently you'll want a session for each.</p>
",0
MessageDigest,Java,environment,74448585,"<p>If <code>message1</code> and <code>message2</code> are sent in that order from the same thread, or from the same actor and they are sent to the same actor (and that actor is using a mailbox that does not reorder messages: the default mailbox does not, but one can implement mailboxes which reorder messages, e.g. in order to implement prioritization), <code>message2</code> will not be received by the target actor before <code>message1</code>.</p>
<p>Thus any of the of these four is possible:</p>
<ul>
<li><code>message1</code> is received and then <code>message2</code></li>
<li><code>message1</code> is received, but <code>message2</code> is never received</li>
<li><code>message1</code> is never received, but <code>message2</code> is</li>
<li>neither <code>message1</code> nor <code>message2</code> is ever received</li>
</ul>
<p>Note that there is no guarantee that two message sends to different actors will be received in any particular order.  There is also no guarantee regarding the ordering of message sends from two different actors (or if outside of any actor (e.g. in a <code>Future</code> callback or the main method), a different thread)).</p>
",0
MessageDigest,Java,environment,75890236,"<p>First of all - MessageId is array of 24 bytes. And that is your error. You are trying to push String in byte array - [B. Once you fix this error, you will still not be able to successfully set MessageId. As MQ will completely ignore any value set by message producer, and it will always override your MessageId with arbitary value.</p>
<p>Blame JMS API. It is little bit idiotic and it doesn't make distiction between end user interface and messaging driver programmer interface. There is more than one setter on javax.jms.Message which is not inteded to be used by everday Joe.</p>
<p>So what can you do about it? For start you can use different field: Message Type and CorrelationID headers are inteded to be used by end users. CorrelationID shares the same byte[24] design, and it is functionally identical to MessageID. Usually, CorrelationID is shared between couple different messages which are &quot;correleated&quot;, thus the name. You can also add arbitary header to message.</p>
<p>But if you really really need to know MessageID of sent message - because of audit, correlation or something else - you can first send message, and the read MessageID field back. It will contain generated value.</p>
",0
MessageDigest,Java,environment,75892592,"<p>How does Log4j 2.x interpret the <code>(String, Object...)</code> parameters of a logging call is determined by the <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/MessageFactory.html"" rel=""nofollow noreferrer""><code>MessageFactory</code></a> used by your logger.</p>
<p>When you create a logger you can pass a <code>MessageFactory</code> as second parameter to the <code>LogManager#getLogger</code> call (e.g. <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/LogManager.html#getLogger-java.lang.Class-org.apache.logging.log4j.message.MessageFactory-"" rel=""nofollow noreferrer""><code>LogManager#getLogger(Class&lt;?&gt;, MessageFactory)</code></a>.</p>
<p>In order to format your messages with a <code>MessageSource</code> you need to create:</p>
<ul>
<li><p>a new type of <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/Message.html"" rel=""nofollow noreferrer""><code>Message</code></a>:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessage implements Message {

    private final MessageSource source;
    private final String code;
    private final Object[] args;
    private final Throwable throwable;

    public MessageSourceMessage(MessageSource source, String code, Object[] args) {
        this.source = source;
        this.code = code;
        final int argCount = args.length;
        if (args[argCount - 1] instanceof Throwable) {
            this.args = Arrays.copyOf(args, argCount - 1);
            this.throwable = args[argCount - 1];
        } else {
            this.args = args;
            this.throwable = null;
        }
    }

    @Override
    public String getFormattedMessage() {
        return source.getMessage(code, args, Locale.getDefault());
    }

    @Override
    public String getFormat() {
        return code;
    }

    @Override
    public Object[] getParameters() {
        return args;
    }

    @Override
    public Throwable getThrowable() {
        return throwable;
    }
}
</code></pre>
</li>
<li><p>and a matching message factory:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessageFactory extends AbstractMessageFactory {

    private final MessageSource source;

    public MessageSourceMessageFactory(MessageSource source) {
        this.source = source;
    }

    @Override
    public Message newMessage(CharSequence message) {
        return new MessageSourceMessage(source, message.toString(), null);
    }

    @Override
    public Message newMessage(String message) {
        return new MessageSourceMessage(source, message, null);
    }

    @Override
    public Message newMessage(String message, Object... params) {
        return new MessageSourceMessage(source, message, params);
    }
}
</code></pre>
</li>
<li><p>then you can use the message factory to instantiate your loggers:</p>
<pre class=""lang-java prettyprint-override""><code>Logger logger = LogManager.getLogger(Example.class,
                                     new MessageSourceMessageFactory(source));
</code></pre>
</li>
</ul>
<p>There are some disadvantages of the example above:</p>
<ul>
<li><p><s>since &quot;code&quot; gives you no information about the number of parameters, if &quot;code&quot; resolves to &quot;Hello {0} and {1}&quot;, a call like</s></p>
<pre class=""lang-java prettyprint-override""><code>logger.info(&quot;code&quot;, param0, param1, throwable);
</code></pre>
<p><s>will just discard the <code>throwable</code> parameter instead of using it as the throwable of the message. You might consider encoding the number of parameters in your code, so that <code>MessageSourceMessage</code> can use the first additional parameter as throwable.</s></p>
</li>
<li><p>this messagefactory produces temporary objects. You might consider implementing <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/ReusableMessage.html"" rel=""nofollow noreferrer""><code>ReusableMessage</code></a>, so that most of the time the same instance of message is used.</p>
</li>
</ul>
<p><strong>Edit:</strong> since it is not recommended to add <code>Throwable#toString()</code> to the log message, I changed the example, so that if the last parameter is an instance of <code>Throwable</code>, it is interpreted as the throwable attached to the message.</p>
",0
MessageDigest,Java,environment,77634018,"<p>If your design depends on what the observers need to know about the message, you should use the pulling style. Because there is always a possibility to change the contract of messages for the sake of observers. In other words, your message contract depends on the observers because they consume the message. In this way, changing observers' (consumers') requirements results in changing the message contract which is not a good coupling. The consumer's side is more likely to be changed. Because there are likely to be new consumers and existing consumers probably will change over time.</p>
<p>Observer design pattern should be used when the message contract depends on the Subject. In this notion, the subject dictates what the message contract structure is. For example, it's a good fit to use it with events. Events indicate that something happened. They don't care who uses this data, they are just broadcasting the event data.</p>
",0
MessageDigest,Java,environment,77063957,"<p>The fundamental semantics of a JMS queue is first-in-first-out (i.e. FIFO). In other words, the broker must dispatch messages to consumers in the order in which they were added to the queue. However, there are two basic ways to get around this.</p>
<ol>
<li>Message Priority</li>
<li>Message Selector</li>
</ol>
<p>A JMS message can have a <strong>priority</strong> from 0 to 9. The priority is set by the producer who sent the message. Messages with a higher priority may be dispatched by the broker to consumers before messages with a lower priority.</p>
<p>A JMS consumer can specify a message <strong>selector</strong>. Only messages that match the selector will be dispatched to the consumer. These messages will be dispatched in FIFO order relative to each other, but they may jump ahead of other messages that would otherwise be dispatched before them. Selectors only work on the headers or properties of the message so the consumer must know something about the message(s) it wants to consume.</p>
<p>For example, if a producer sends 100 messages and each message has a property <code>myProperty</code> whose value is 1 to 100 in order and the consumer wants to consume the <em>last</em> message on the queue then it would use the selector <code>myProperty = 100</code>.</p>
<p>Selector syntax is based on a subset of the SQL92 conditional expression syntax. You can find more information about selectors and how they work in the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/message"" rel=""nofollow noreferrer"">API docs</a>.</p>
",0
MessageDigest,Java,environment,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,environment,72343971,"<p>inside your <code>replyContainer</code> I couldn't see your <code>messageConverter</code> bean. In default it uses java objects to send and receive messages without converting them into human readable json.</p>
<pre class=""lang-java prettyprint-override""><code>@Bean
 public SimpleRabbitListenerContainerFactory customListenerContainerFactory(ConnectionFactory connectionFactory,
                                                                               MessageConverter jsonMessageConverter) {
   SimpleRabbitListenerContainerFactory factory = new SimpleRabbitListenerContainerFactory();
   factory.setConnectionFactory(connectionFactory);
   factory.setMessageConverter(jsonMessageConverter);
   return factory;
}
</code></pre>
<p>for your consumer;</p>
<pre class=""lang-java prettyprint-override""><code>@RabbitListener(queues = RabbitConstants.YOUR_QUEUE_NAME, containerFactory = &quot;customListenerContainerFactory&quot;)
public void onMessage(@Valid YourEvent YourEvent){
 //your code
}
</code></pre>
",0
MessageDigest,Java,environment,73373395,"<p>There are many ways to do it. I will suggest you to implement a <code>producer/consumer</code> pattern between <em>M1</em> and <em>M2</em> with a messaging tool such as <code>Active MQ</code>, <code>Rabbit MQ</code> or <code>Kafka</code>.</p>
<ol>
<li><em>M1</em> produce a message to a queue <em>Q1</em></li>
<li><em>M2</em> process the message from <em>Q1</em></li>
<li><em>M2</em> returns a response to <em>Q2</em></li>
<li><em>M1</em> consume the message from <em>Q2</em></li>
</ol>
<p>Take a look <a href=""https://www.theserverside.com/answer/Synchronous-vs-asynchronous-microservices-communication-patterns"" rel=""nofollow noreferrer"">here</a>.</p>
",0
MessageDigest,Java,environment,74864311,"<p>you can use the MessageDigest from Java Security API</p>
<pre><code>import java.security.MessageDigest
import java.security.cert.X509Certificate

fun decodeSHA256Fingerprint(cert: X509Certificate): String {
    val sha256 = MessageDigest.getInstance(&quot;SHA-256&quot;)
    val fingerprint = sha256.digest(cert.encoded)
    return fingerprint.joinToString(separator = &quot;&quot;) { String.format(&quot;%02x&quot;, it) }
}
</code></pre>
",1
MessageDigest,Java,alternative,75890236,"<p>First of all - MessageId is array of 24 bytes. And that is your error. You are trying to push String in byte array - [B. Once you fix this error, you will still not be able to successfully set MessageId. As MQ will completely ignore any value set by message producer, and it will always override your MessageId with arbitary value.</p>
<p>Blame JMS API. It is little bit idiotic and it doesn't make distiction between end user interface and messaging driver programmer interface. There is more than one setter on javax.jms.Message which is not inteded to be used by everday Joe.</p>
<p>So what can you do about it? For start you can use different field: Message Type and CorrelationID headers are inteded to be used by end users. CorrelationID shares the same byte[24] design, and it is functionally identical to MessageID. Usually, CorrelationID is shared between couple different messages which are &quot;correleated&quot;, thus the name. You can also add arbitary header to message.</p>
<p>But if you really really need to know MessageID of sent message - because of audit, correlation or something else - you can first send message, and the read MessageID field back. It will contain generated value.</p>
",0
MessageDigest,Java,alternative,74448585,"<p>If <code>message1</code> and <code>message2</code> are sent in that order from the same thread, or from the same actor and they are sent to the same actor (and that actor is using a mailbox that does not reorder messages: the default mailbox does not, but one can implement mailboxes which reorder messages, e.g. in order to implement prioritization), <code>message2</code> will not be received by the target actor before <code>message1</code>.</p>
<p>Thus any of the of these four is possible:</p>
<ul>
<li><code>message1</code> is received and then <code>message2</code></li>
<li><code>message1</code> is received, but <code>message2</code> is never received</li>
<li><code>message1</code> is never received, but <code>message2</code> is</li>
<li>neither <code>message1</code> nor <code>message2</code> is ever received</li>
</ul>
<p>Note that there is no guarantee that two message sends to different actors will be received in any particular order.  There is also no guarantee regarding the ordering of message sends from two different actors (or if outside of any actor (e.g. in a <code>Future</code> callback or the main method), a different thread)).</p>
",0
MessageDigest,Java,alternative,74682875,"<p>If you're going to use the simplest JMS pattern then you can use 1 connection, 1 session, and 2 consumers.</p>
<p>However, if you're going to use JMS's <a href=""https://docs.oracle.com/javaee/7/api/javax/jms/MessageListener.html"" rel=""nofollow noreferrer""><code>MessageListener</code></a> and you want the best performance you'll want to use 1 connection, 2 sessions, 1 consumer on each session, and 1 <code>MessageListener</code> on each consumer. This is because JMS sessions are not thread-safe and each <code>MessageListener</code> will be invoked asynchronously so if you want the listeners to be able to receive messages concurrently you'll want a session for each.</p>
",0
MessageDigest,Java,alternative,77063957,"<p>The fundamental semantics of a JMS queue is first-in-first-out (i.e. FIFO). In other words, the broker must dispatch messages to consumers in the order in which they were added to the queue. However, there are two basic ways to get around this.</p>
<ol>
<li>Message Priority</li>
<li>Message Selector</li>
</ol>
<p>A JMS message can have a <strong>priority</strong> from 0 to 9. The priority is set by the producer who sent the message. Messages with a higher priority may be dispatched by the broker to consumers before messages with a lower priority.</p>
<p>A JMS consumer can specify a message <strong>selector</strong>. Only messages that match the selector will be dispatched to the consumer. These messages will be dispatched in FIFO order relative to each other, but they may jump ahead of other messages that would otherwise be dispatched before them. Selectors only work on the headers or properties of the message so the consumer must know something about the message(s) it wants to consume.</p>
<p>For example, if a producer sends 100 messages and each message has a property <code>myProperty</code> whose value is 1 to 100 in order and the consumer wants to consume the <em>last</em> message on the queue then it would use the selector <code>myProperty = 100</code>.</p>
<p>Selector syntax is based on a subset of the SQL92 conditional expression syntax. You can find more information about selectors and how they work in the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/message"" rel=""nofollow noreferrer"">API docs</a>.</p>
",0
MessageDigest,Java,alternative,77634018,"<p>If your design depends on what the observers need to know about the message, you should use the pulling style. Because there is always a possibility to change the contract of messages for the sake of observers. In other words, your message contract depends on the observers because they consume the message. In this way, changing observers' (consumers') requirements results in changing the message contract which is not a good coupling. The consumer's side is more likely to be changed. Because there are likely to be new consumers and existing consumers probably will change over time.</p>
<p>Observer design pattern should be used when the message contract depends on the Subject. In this notion, the subject dictates what the message contract structure is. For example, it's a good fit to use it with events. Events indicate that something happened. They don't care who uses this data, they are just broadcasting the event data.</p>
",0
MessageDigest,Java,alternative,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,alternative,73373395,"<p>There are many ways to do it. I will suggest you to implement a <code>producer/consumer</code> pattern between <em>M1</em> and <em>M2</em> with a messaging tool such as <code>Active MQ</code>, <code>Rabbit MQ</code> or <code>Kafka</code>.</p>
<ol>
<li><em>M1</em> produce a message to a queue <em>Q1</em></li>
<li><em>M2</em> process the message from <em>Q1</em></li>
<li><em>M2</em> returns a response to <em>Q2</em></li>
<li><em>M1</em> consume the message from <em>Q2</em></li>
</ol>
<p>Take a look <a href=""https://www.theserverside.com/answer/Synchronous-vs-asynchronous-microservices-communication-patterns"" rel=""nofollow noreferrer"">here</a>.</p>
",0
MessageDigest,Java,alternative,75892592,"<p>How does Log4j 2.x interpret the <code>(String, Object...)</code> parameters of a logging call is determined by the <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/MessageFactory.html"" rel=""nofollow noreferrer""><code>MessageFactory</code></a> used by your logger.</p>
<p>When you create a logger you can pass a <code>MessageFactory</code> as second parameter to the <code>LogManager#getLogger</code> call (e.g. <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/LogManager.html#getLogger-java.lang.Class-org.apache.logging.log4j.message.MessageFactory-"" rel=""nofollow noreferrer""><code>LogManager#getLogger(Class&lt;?&gt;, MessageFactory)</code></a>.</p>
<p>In order to format your messages with a <code>MessageSource</code> you need to create:</p>
<ul>
<li><p>a new type of <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/Message.html"" rel=""nofollow noreferrer""><code>Message</code></a>:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessage implements Message {

    private final MessageSource source;
    private final String code;
    private final Object[] args;
    private final Throwable throwable;

    public MessageSourceMessage(MessageSource source, String code, Object[] args) {
        this.source = source;
        this.code = code;
        final int argCount = args.length;
        if (args[argCount - 1] instanceof Throwable) {
            this.args = Arrays.copyOf(args, argCount - 1);
            this.throwable = args[argCount - 1];
        } else {
            this.args = args;
            this.throwable = null;
        }
    }

    @Override
    public String getFormattedMessage() {
        return source.getMessage(code, args, Locale.getDefault());
    }

    @Override
    public String getFormat() {
        return code;
    }

    @Override
    public Object[] getParameters() {
        return args;
    }

    @Override
    public Throwable getThrowable() {
        return throwable;
    }
}
</code></pre>
</li>
<li><p>and a matching message factory:</p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSourceMessageFactory extends AbstractMessageFactory {

    private final MessageSource source;

    public MessageSourceMessageFactory(MessageSource source) {
        this.source = source;
    }

    @Override
    public Message newMessage(CharSequence message) {
        return new MessageSourceMessage(source, message.toString(), null);
    }

    @Override
    public Message newMessage(String message) {
        return new MessageSourceMessage(source, message, null);
    }

    @Override
    public Message newMessage(String message, Object... params) {
        return new MessageSourceMessage(source, message, params);
    }
}
</code></pre>
</li>
<li><p>then you can use the message factory to instantiate your loggers:</p>
<pre class=""lang-java prettyprint-override""><code>Logger logger = LogManager.getLogger(Example.class,
                                     new MessageSourceMessageFactory(source));
</code></pre>
</li>
</ul>
<p>There are some disadvantages of the example above:</p>
<ul>
<li><p><s>since &quot;code&quot; gives you no information about the number of parameters, if &quot;code&quot; resolves to &quot;Hello {0} and {1}&quot;, a call like</s></p>
<pre class=""lang-java prettyprint-override""><code>logger.info(&quot;code&quot;, param0, param1, throwable);
</code></pre>
<p><s>will just discard the <code>throwable</code> parameter instead of using it as the throwable of the message. You might consider encoding the number of parameters in your code, so that <code>MessageSourceMessage</code> can use the first additional parameter as throwable.</s></p>
</li>
<li><p>this messagefactory produces temporary objects. You might consider implementing <a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/message/ReusableMessage.html"" rel=""nofollow noreferrer""><code>ReusableMessage</code></a>, so that most of the time the same instance of message is used.</p>
</li>
</ul>
<p><strong>Edit:</strong> since it is not recommended to add <code>Throwable#toString()</code> to the log message, I changed the example, so that if the last parameter is an instance of <code>Throwable</code>, it is interpreted as the throwable attached to the message.</p>
",0
MessageDigest,Java,alternative,72343971,"<p>inside your <code>replyContainer</code> I couldn't see your <code>messageConverter</code> bean. In default it uses java objects to send and receive messages without converting them into human readable json.</p>
<pre class=""lang-java prettyprint-override""><code>@Bean
 public SimpleRabbitListenerContainerFactory customListenerContainerFactory(ConnectionFactory connectionFactory,
                                                                               MessageConverter jsonMessageConverter) {
   SimpleRabbitListenerContainerFactory factory = new SimpleRabbitListenerContainerFactory();
   factory.setConnectionFactory(connectionFactory);
   factory.setMessageConverter(jsonMessageConverter);
   return factory;
}
</code></pre>
<p>for your consumer;</p>
<pre class=""lang-java prettyprint-override""><code>@RabbitListener(queues = RabbitConstants.YOUR_QUEUE_NAME, containerFactory = &quot;customListenerContainerFactory&quot;)
public void onMessage(@Valid YourEvent YourEvent){
 //your code
}
</code></pre>
",0
MessageDigest,Java,alternative,75756064,"<p>You need to filter if you are waiting for player confirmation. You can do it in lot of way, but I suggest you to create a list, and put all players that need to confirm. For example:</p>
<pre class=""lang-java prettyprint-override""><code>public static List&lt;Player&gt; waitingConfirmations = new ArrayList&lt;&gt;(); // create the list

public static void jlvlup(Player player,int currentLevel) {
    if(currentLevel == 1) {
         player.sendMessage(ChatColor.DARK_RED + &quot;Do you confirm upgrade spawner to Level 2 for 5000000$ ? (Y/N) Write to chat.&quot;);
         player.closeInventory(); 
         waitingConfirmations.add(player); // here add to list
    }
}
</code></pre>
<p>Then, for the chat, do:</p>
<pre class=""lang-java prettyprint-override""><code>if(message.equalsIgnoreCase(&quot;Y&quot;) &amp;&amp; waitingConfirmations.contains(player)) { // check if in list
    // here pass to level 2
}
</code></pre>
<p>Note: <code>message</code> is the chat message. I didn't wrote full method as you didn't give it</p>
",0
Manifest,Android,functionality,66625969,"<p>The information from your manifest file is baked into the Android app at compile/build time. That means that by the time the code of your Android app runs, the manifest file no longer is available.</p>
<p>If you want to create different variants of your manifest file, you'll have to do that from outside the Android app, before building the various apps.</p>
<p>Also see the Android documentation on:</p>
<ul>
<li><a href=""https://developer.android.com/studio/build/manifest-build-variables"" rel=""nofollow noreferrer"">Inject build variables into the manifest</a></li>
<li><a href=""https://developer.android.com/studio/build/build-variants"" rel=""nofollow noreferrer"">Configure build variants</a></li>
</ul>
",1
Manifest,Android,functionality,63672831,"<p>it's look like you haven't add your application package in android manifest.</p>
<pre><code>&lt;manifest package=&quot;com.unity3d.player&quot; ... &gt;
    &lt;application ... &gt;
        &lt;activity android:name=&quot;.UnityPlayerActivity&quot; ... &gt;
            ...
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
<p>the application package is required for Android to identify your application. please read more in the android documentation here: <a href=""https://developer.android.com/guide/topics/manifest/manifest-intro"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/manifest/manifest-intro</a></p>
",1
Manifest,Android,functionality,67838891,"<p>If you are running on Android 10 (API 29) add the following line in the manifest:</p>
<pre><code>android:requestLegacyExternalStorage=&quot;true&quot;
</code></pre>
",1
Manifest,Android,functionality,70684447,"<p>If you are using on Android 11 (Api level 30), you must have to include <code>&lt;queries&gt;</code> in your Manifest.xml file inside <code>&lt;manifest&gt;</code> tag.</p>
<pre><code>&lt;manifest ....&gt;
    &lt;queries&gt;
         &lt;package android:name=&quot;com.google.android.youtube&quot; /&gt;
    &lt;queries&gt;
    ....
    ....
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,functionality,67661911,"<p>Add this code in your Android Manifest xml</p>
<pre><code>    &lt;supports-screens
        android:anyDensity=&quot;true&quot;
        android:largeScreens=&quot;true&quot;
        android:normalScreens=&quot;true&quot;
        android:resizeable=&quot;true&quot;
        android:smallScreens=&quot;true&quot;
        android:xlargeScreens=&quot;true&quot; /&gt;
</code></pre>
",1
Manifest,Android,functionality,62668758,"<p>This may be because you have  set the hardware acceleration to false on the manifest(application level) or on the activity level ,if this is the case then add this piece of code to your manifest's application tag</p>
<p><code>&lt;application android:hardwareAccelerated=&quot;true&quot; ...&gt;</code></p>
<p>or in your activity level (in the manifest)</p>
<pre><code>&lt;application android:hardwareAccelerated=&quot;true&quot;&gt;
&lt;activity ... /&gt;
&lt;activity android:hardwareAccelerated=&quot;false&quot; /&gt;
</code></pre>

<p>have a look at the full documentation <a href=""https://developer.android.com/guide/topics/graphics/hardware-accel"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>manifest.xml</p>
</blockquote>
<pre><code>    &lt;application
        android:name=&quot;.application&quot;
        android:allowBackup=&quot;true&quot;
        android:icon=&quot;@mipmap/ic_launcher&quot;
        android:label=&quot;@string/app_name&quot;
        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
        android:supportsRtl=&quot;true&quot;
        android:hardwareAccelerated=&quot;true&quot;
        android:theme=&quot;@style/AppTheme&quot;&gt;

        &lt;activity android:name=&quot;.activity.RegisterActivity&quot; /&gt;

        &lt;activity
            android:name=&quot;.activity.SplashActivity&quot;
            android:theme=&quot;@style/Splash&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,functionality,65567161,"<p>Your problem is that the class is not included in the manifest file.</p>
<p>If you look, you'll notice that following code is in your manifest:</p>
<pre><code>&lt;activity android:name=&quot;.MainActivity&quot;&gt;
       &lt;intent-filter&gt;
            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
        &lt;/intent-filter&gt;
&lt;/activity&gt;
</code></pre>
<p>You will have to do pretty much the same for your showdata.java class.</p>
<p>Solution. Add this to your Android Manifest file:</p>
<pre><code>&lt;activity android:name=&quot;.showdata&quot;/&gt;
</code></pre>
",1
Manifest,Android,functionality,70535875,"<p>Make sure that duplication tag in Manifest file and also check the correct integration of file provider.check this link</p>
<p><a href=""https://developer.android.com/studio/build/manage-manifests"" rel=""nofollow noreferrer"">https://developer.android.com/studio/build/manage-manifests</a></p>
",0
Manifest,Android,functionality,72075607,"<p>Specificy a <code>name</code> attribute on the <code>Application</code> tag of your Android manifest file:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;application
     // Declare a name tag here:
         android:name=&quot;&quot;
         android:icon=&quot;@drawable/ic_launcher&quot;
         android:label=&quot;@string/app_name&quot;
         android:theme=&quot;@style/AppTheme&quot; &gt;

         &lt;activity
              android:name=&quot;.MainActivity&quot;
              android:label=&quot;@string/title_activity_main&quot; &gt;
         &lt;/activity&gt;
&lt;/application&gt;
</code></pre>
",1
Manifest,Android,functionality,75874121,"<p>There should be another <code>Manifest</code> class automatically generated by Android Studio for your project.</p>
<p>So in order to use original Android <code>Manifest</code> class, append <code>android.</code>:</p>
<pre><code>android.Manifest.permission.WRITE_EXTERNAL_STORAGE
android.Manifest.permission.READ_EXTERNAL_STORAGE
</code></pre>
",1
Manifest,Android,concept,66625969,"<p>The information from your manifest file is baked into the Android app at compile/build time. That means that by the time the code of your Android app runs, the manifest file no longer is available.</p>
<p>If you want to create different variants of your manifest file, you'll have to do that from outside the Android app, before building the various apps.</p>
<p>Also see the Android documentation on:</p>
<ul>
<li><a href=""https://developer.android.com/studio/build/manifest-build-variables"" rel=""nofollow noreferrer"">Inject build variables into the manifest</a></li>
<li><a href=""https://developer.android.com/studio/build/build-variants"" rel=""nofollow noreferrer"">Configure build variants</a></li>
</ul>
",1
Manifest,Android,concept,70684447,"<p>If you are using on Android 11 (Api level 30), you must have to include <code>&lt;queries&gt;</code> in your Manifest.xml file inside <code>&lt;manifest&gt;</code> tag.</p>
<pre><code>&lt;manifest ....&gt;
    &lt;queries&gt;
         &lt;package android:name=&quot;com.google.android.youtube&quot; /&gt;
    &lt;queries&gt;
    ....
    ....
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,concept,63672831,"<p>it's look like you haven't add your application package in android manifest.</p>
<pre><code>&lt;manifest package=&quot;com.unity3d.player&quot; ... &gt;
    &lt;application ... &gt;
        &lt;activity android:name=&quot;.UnityPlayerActivity&quot; ... &gt;
            ...
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
<p>the application package is required for Android to identify your application. please read more in the android documentation here: <a href=""https://developer.android.com/guide/topics/manifest/manifest-intro"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/manifest/manifest-intro</a></p>
",1
Manifest,Android,concept,67661911,"<p>Add this code in your Android Manifest xml</p>
<pre><code>    &lt;supports-screens
        android:anyDensity=&quot;true&quot;
        android:largeScreens=&quot;true&quot;
        android:normalScreens=&quot;true&quot;
        android:resizeable=&quot;true&quot;
        android:smallScreens=&quot;true&quot;
        android:xlargeScreens=&quot;true&quot; /&gt;
</code></pre>
",1
Manifest,Android,concept,67838891,"<p>If you are running on Android 10 (API 29) add the following line in the manifest:</p>
<pre><code>android:requestLegacyExternalStorage=&quot;true&quot;
</code></pre>
",1
Manifest,Android,concept,72075607,"<p>Specificy a <code>name</code> attribute on the <code>Application</code> tag of your Android manifest file:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;application
     // Declare a name tag here:
         android:name=&quot;&quot;
         android:icon=&quot;@drawable/ic_launcher&quot;
         android:label=&quot;@string/app_name&quot;
         android:theme=&quot;@style/AppTheme&quot; &gt;

         &lt;activity
              android:name=&quot;.MainActivity&quot;
              android:label=&quot;@string/title_activity_main&quot; &gt;
         &lt;/activity&gt;
&lt;/application&gt;
</code></pre>
",1
Manifest,Android,concept,75874121,"<p>There should be another <code>Manifest</code> class automatically generated by Android Studio for your project.</p>
<p>So in order to use original Android <code>Manifest</code> class, append <code>android.</code>:</p>
<pre><code>android.Manifest.permission.WRITE_EXTERNAL_STORAGE
android.Manifest.permission.READ_EXTERNAL_STORAGE
</code></pre>
",1
Manifest,Android,concept,62668758,"<p>This may be because you have  set the hardware acceleration to false on the manifest(application level) or on the activity level ,if this is the case then add this piece of code to your manifest's application tag</p>
<p><code>&lt;application android:hardwareAccelerated=&quot;true&quot; ...&gt;</code></p>
<p>or in your activity level (in the manifest)</p>
<pre><code>&lt;application android:hardwareAccelerated=&quot;true&quot;&gt;
&lt;activity ... /&gt;
&lt;activity android:hardwareAccelerated=&quot;false&quot; /&gt;
</code></pre>

<p>have a look at the full documentation <a href=""https://developer.android.com/guide/topics/graphics/hardware-accel"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>manifest.xml</p>
</blockquote>
<pre><code>    &lt;application
        android:name=&quot;.application&quot;
        android:allowBackup=&quot;true&quot;
        android:icon=&quot;@mipmap/ic_launcher&quot;
        android:label=&quot;@string/app_name&quot;
        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
        android:supportsRtl=&quot;true&quot;
        android:hardwareAccelerated=&quot;true&quot;
        android:theme=&quot;@style/AppTheme&quot;&gt;

        &lt;activity android:name=&quot;.activity.RegisterActivity&quot; /&gt;

        &lt;activity
            android:name=&quot;.activity.SplashActivity&quot;
            android:theme=&quot;@style/Splash&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,concept,62261868,"<p>According to <a href=""https://developer.android.com/training/articles/security-config#CleartextTrafficPermitted"" rel=""nofollow noreferrer"">Network Security Configuration</a></p>

<p>You should removed this line from the android manifest file which is already there</p>

<pre><code>android:networkSecurityConfig=""@xml/network_security_config"" 
</code></pre>

<p>and added this line</p>

<pre><code>android:usesCleartextTraffic=""true""
</code></pre>

<p>this in to application tag in manifest</p>

<pre><code>&lt;application
android:usesCleartextTraffic=""true""
android:allowBackup=""true""
android:icon=""@drawable/icons""
android:roundIcon=""@mipmap/ic_launcher_round""
android:theme=""@style/fullScreen""
android:label=""@string/app_name""
android:largeHeap=""true""
android:supportsRtl=""true""
&gt;
</code></pre>
",1
Manifest,Android,concept,70535875,"<p>Make sure that duplication tag in Manifest file and also check the correct integration of file provider.check this link</p>
<p><a href=""https://developer.android.com/studio/build/manage-manifests"" rel=""nofollow noreferrer"">https://developer.android.com/studio/build/manage-manifests</a></p>
",1
Manifest,Android,performance,66625969,"<p>The information from your manifest file is baked into the Android app at compile/build time. That means that by the time the code of your Android app runs, the manifest file no longer is available.</p>
<p>If you want to create different variants of your manifest file, you'll have to do that from outside the Android app, before building the various apps.</p>
<p>Also see the Android documentation on:</p>
<ul>
<li><a href=""https://developer.android.com/studio/build/manifest-build-variables"" rel=""nofollow noreferrer"">Inject build variables into the manifest</a></li>
<li><a href=""https://developer.android.com/studio/build/build-variants"" rel=""nofollow noreferrer"">Configure build variants</a></li>
</ul>
",0
Manifest,Android,performance,67838891,"<p>If you are running on Android 10 (API 29) add the following line in the manifest:</p>
<pre><code>android:requestLegacyExternalStorage=&quot;true&quot;
</code></pre>
",1
Manifest,Android,performance,62668758,"<p>This may be because you have  set the hardware acceleration to false on the manifest(application level) or on the activity level ,if this is the case then add this piece of code to your manifest's application tag</p>
<p><code>&lt;application android:hardwareAccelerated=&quot;true&quot; ...&gt;</code></p>
<p>or in your activity level (in the manifest)</p>
<pre><code>&lt;application android:hardwareAccelerated=&quot;true&quot;&gt;
&lt;activity ... /&gt;
&lt;activity android:hardwareAccelerated=&quot;false&quot; /&gt;
</code></pre>

<p>have a look at the full documentation <a href=""https://developer.android.com/guide/topics/graphics/hardware-accel"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>manifest.xml</p>
</blockquote>
<pre><code>    &lt;application
        android:name=&quot;.application&quot;
        android:allowBackup=&quot;true&quot;
        android:icon=&quot;@mipmap/ic_launcher&quot;
        android:label=&quot;@string/app_name&quot;
        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
        android:supportsRtl=&quot;true&quot;
        android:hardwareAccelerated=&quot;true&quot;
        android:theme=&quot;@style/AppTheme&quot;&gt;

        &lt;activity android:name=&quot;.activity.RegisterActivity&quot; /&gt;

        &lt;activity
            android:name=&quot;.activity.SplashActivity&quot;
            android:theme=&quot;@style/Splash&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,performance,65567161,"<p>Your problem is that the class is not included in the manifest file.</p>
<p>If you look, you'll notice that following code is in your manifest:</p>
<pre><code>&lt;activity android:name=&quot;.MainActivity&quot;&gt;
       &lt;intent-filter&gt;
            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
        &lt;/intent-filter&gt;
&lt;/activity&gt;
</code></pre>
<p>You will have to do pretty much the same for your showdata.java class.</p>
<p>Solution. Add this to your Android Manifest file:</p>
<pre><code>&lt;activity android:name=&quot;.showdata&quot;/&gt;
</code></pre>
",0
Manifest,Android,performance,63672831,"<p>it's look like you haven't add your application package in android manifest.</p>
<pre><code>&lt;manifest package=&quot;com.unity3d.player&quot; ... &gt;
    &lt;application ... &gt;
        &lt;activity android:name=&quot;.UnityPlayerActivity&quot; ... &gt;
            ...
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
<p>the application package is required for Android to identify your application. please read more in the android documentation here: <a href=""https://developer.android.com/guide/topics/manifest/manifest-intro"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/manifest/manifest-intro</a></p>
",0
Manifest,Android,performance,70684447,"<p>If you are using on Android 11 (Api level 30), you must have to include <code>&lt;queries&gt;</code> in your Manifest.xml file inside <code>&lt;manifest&gt;</code> tag.</p>
<pre><code>&lt;manifest ....&gt;
    &lt;queries&gt;
         &lt;package android:name=&quot;com.google.android.youtube&quot; /&gt;
    &lt;queries&gt;
    ....
    ....
&lt;/manifest&gt;
</code></pre>
",0
Manifest,Android,performance,67661911,"<p>Add this code in your Android Manifest xml</p>
<pre><code>    &lt;supports-screens
        android:anyDensity=&quot;true&quot;
        android:largeScreens=&quot;true&quot;
        android:normalScreens=&quot;true&quot;
        android:resizeable=&quot;true&quot;
        android:smallScreens=&quot;true&quot;
        android:xlargeScreens=&quot;true&quot; /&gt;
</code></pre>
",0
Manifest,Android,performance,68522944,"<p>did you read the <a href=""https://learn.microsoft.com/en-us/xamarin/essentials/phone-dialer?tabs=android"" rel=""noreferrer"">docs</a>?</p>
<blockquote>
<p>If your project's Target Android version is set to Android 11 (R API
30) you must update your Android Manifest with queries that are used
with the new package visibility requirements.</p>
<p>Open the AndroidManifest.xml file under the Properties folder and add
the following inside of the manifest node:</p>
</blockquote>
<pre><code>&lt;queries&gt;
  &lt;intent&gt;
    &lt;action android:name=&quot;android.intent.action.DIAL&quot; /&gt;
    &lt;data android:scheme=&quot;tel&quot;/&gt;
  &lt;/intent&gt;
&lt;/queries&gt;
</code></pre>
",1
Manifest,Android,performance,62261868,"<p>According to <a href=""https://developer.android.com/training/articles/security-config#CleartextTrafficPermitted"" rel=""nofollow noreferrer"">Network Security Configuration</a></p>

<p>You should removed this line from the android manifest file which is already there</p>

<pre><code>android:networkSecurityConfig=""@xml/network_security_config"" 
</code></pre>

<p>and added this line</p>

<pre><code>android:usesCleartextTraffic=""true""
</code></pre>

<p>this in to application tag in manifest</p>

<pre><code>&lt;application
android:usesCleartextTraffic=""true""
android:allowBackup=""true""
android:icon=""@drawable/icons""
android:roundIcon=""@mipmap/ic_launcher_round""
android:theme=""@style/fullScreen""
android:label=""@string/app_name""
android:largeHeap=""true""
android:supportsRtl=""true""
&gt;
</code></pre>
",0
Manifest,Android,performance,70535875,"<p>Make sure that duplication tag in Manifest file and also check the correct integration of file provider.check this link</p>
<p><a href=""https://developer.android.com/studio/build/manage-manifests"" rel=""nofollow noreferrer"">https://developer.android.com/studio/build/manage-manifests</a></p>
",0
Manifest,Android,directive,66625969,"<p>The information from your manifest file is baked into the Android app at compile/build time. That means that by the time the code of your Android app runs, the manifest file no longer is available.</p>
<p>If you want to create different variants of your manifest file, you'll have to do that from outside the Android app, before building the various apps.</p>
<p>Also see the Android documentation on:</p>
<ul>
<li><a href=""https://developer.android.com/studio/build/manifest-build-variables"" rel=""nofollow noreferrer"">Inject build variables into the manifest</a></li>
<li><a href=""https://developer.android.com/studio/build/build-variants"" rel=""nofollow noreferrer"">Configure build variants</a></li>
</ul>
",0
Manifest,Android,directive,63672831,"<p>it's look like you haven't add your application package in android manifest.</p>
<pre><code>&lt;manifest package=&quot;com.unity3d.player&quot; ... &gt;
    &lt;application ... &gt;
        &lt;activity android:name=&quot;.UnityPlayerActivity&quot; ... &gt;
            ...
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
<p>the application package is required for Android to identify your application. please read more in the android documentation here: <a href=""https://developer.android.com/guide/topics/manifest/manifest-intro"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/manifest/manifest-intro</a></p>
",1
Manifest,Android,directive,70684447,"<p>If you are using on Android 11 (Api level 30), you must have to include <code>&lt;queries&gt;</code> in your Manifest.xml file inside <code>&lt;manifest&gt;</code> tag.</p>
<pre><code>&lt;manifest ....&gt;
    &lt;queries&gt;
         &lt;package android:name=&quot;com.google.android.youtube&quot; /&gt;
    &lt;queries&gt;
    ....
    ....
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,directive,67838891,"<p>If you are running on Android 10 (API 29) add the following line in the manifest:</p>
<pre><code>android:requestLegacyExternalStorage=&quot;true&quot;
</code></pre>
",1
Manifest,Android,directive,62668758,"<p>This may be because you have  set the hardware acceleration to false on the manifest(application level) or on the activity level ,if this is the case then add this piece of code to your manifest's application tag</p>
<p><code>&lt;application android:hardwareAccelerated=&quot;true&quot; ...&gt;</code></p>
<p>or in your activity level (in the manifest)</p>
<pre><code>&lt;application android:hardwareAccelerated=&quot;true&quot;&gt;
&lt;activity ... /&gt;
&lt;activity android:hardwareAccelerated=&quot;false&quot; /&gt;
</code></pre>

<p>have a look at the full documentation <a href=""https://developer.android.com/guide/topics/graphics/hardware-accel"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>manifest.xml</p>
</blockquote>
<pre><code>    &lt;application
        android:name=&quot;.application&quot;
        android:allowBackup=&quot;true&quot;
        android:icon=&quot;@mipmap/ic_launcher&quot;
        android:label=&quot;@string/app_name&quot;
        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
        android:supportsRtl=&quot;true&quot;
        android:hardwareAccelerated=&quot;true&quot;
        android:theme=&quot;@style/AppTheme&quot;&gt;

        &lt;activity android:name=&quot;.activity.RegisterActivity&quot; /&gt;

        &lt;activity
            android:name=&quot;.activity.SplashActivity&quot;
            android:theme=&quot;@style/Splash&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,directive,72075607,"<p>Specificy a <code>name</code> attribute on the <code>Application</code> tag of your Android manifest file:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;application
     // Declare a name tag here:
         android:name=&quot;&quot;
         android:icon=&quot;@drawable/ic_launcher&quot;
         android:label=&quot;@string/app_name&quot;
         android:theme=&quot;@style/AppTheme&quot; &gt;

         &lt;activity
              android:name=&quot;.MainActivity&quot;
              android:label=&quot;@string/title_activity_main&quot; &gt;
         &lt;/activity&gt;
&lt;/application&gt;
</code></pre>
",1
Manifest,Android,directive,62261868,"<p>According to <a href=""https://developer.android.com/training/articles/security-config#CleartextTrafficPermitted"" rel=""nofollow noreferrer"">Network Security Configuration</a></p>

<p>You should removed this line from the android manifest file which is already there</p>

<pre><code>android:networkSecurityConfig=""@xml/network_security_config"" 
</code></pre>

<p>and added this line</p>

<pre><code>android:usesCleartextTraffic=""true""
</code></pre>

<p>this in to application tag in manifest</p>

<pre><code>&lt;application
android:usesCleartextTraffic=""true""
android:allowBackup=""true""
android:icon=""@drawable/icons""
android:roundIcon=""@mipmap/ic_launcher_round""
android:theme=""@style/fullScreen""
android:label=""@string/app_name""
android:largeHeap=""true""
android:supportsRtl=""true""
&gt;
</code></pre>
",1
Manifest,Android,directive,67661911,"<p>Add this code in your Android Manifest xml</p>
<pre><code>    &lt;supports-screens
        android:anyDensity=&quot;true&quot;
        android:largeScreens=&quot;true&quot;
        android:normalScreens=&quot;true&quot;
        android:resizeable=&quot;true&quot;
        android:smallScreens=&quot;true&quot;
        android:xlargeScreens=&quot;true&quot; /&gt;
</code></pre>
",1
Manifest,Android,directive,70535875,"<p>Make sure that duplication tag in Manifest file and also check the correct integration of file provider.check this link</p>
<p><a href=""https://developer.android.com/studio/build/manage-manifests"" rel=""nofollow noreferrer"">https://developer.android.com/studio/build/manage-manifests</a></p>
",0
Manifest,Android,directive,64629155,"<p>For android 10 and 11 add this line to your <code>&lt;application&gt;</code> element in the android manifest file.
hope it will work:</p>
<pre><code>&lt;application
android:requestLegacyExternalStorage=&quot;true&quot;
</code></pre>
",1
Manifest,Android,pattern,66625969,"<p>The information from your manifest file is baked into the Android app at compile/build time. That means that by the time the code of your Android app runs, the manifest file no longer is available.</p>
<p>If you want to create different variants of your manifest file, you'll have to do that from outside the Android app, before building the various apps.</p>
<p>Also see the Android documentation on:</p>
<ul>
<li><a href=""https://developer.android.com/studio/build/manifest-build-variables"" rel=""nofollow noreferrer"">Inject build variables into the manifest</a></li>
<li><a href=""https://developer.android.com/studio/build/build-variants"" rel=""nofollow noreferrer"">Configure build variants</a></li>
</ul>
",1
Manifest,Android,pattern,63672831,"<p>it's look like you haven't add your application package in android manifest.</p>
<pre><code>&lt;manifest package=&quot;com.unity3d.player&quot; ... &gt;
    &lt;application ... &gt;
        &lt;activity android:name=&quot;.UnityPlayerActivity&quot; ... &gt;
            ...
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
<p>the application package is required for Android to identify your application. please read more in the android documentation here: <a href=""https://developer.android.com/guide/topics/manifest/manifest-intro"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/manifest/manifest-intro</a></p>
",1
Manifest,Android,pattern,70684447,"<p>If you are using on Android 11 (Api level 30), you must have to include <code>&lt;queries&gt;</code> in your Manifest.xml file inside <code>&lt;manifest&gt;</code> tag.</p>
<pre><code>&lt;manifest ....&gt;
    &lt;queries&gt;
         &lt;package android:name=&quot;com.google.android.youtube&quot; /&gt;
    &lt;queries&gt;
    ....
    ....
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,pattern,67661911,"<p>Add this code in your Android Manifest xml</p>
<pre><code>    &lt;supports-screens
        android:anyDensity=&quot;true&quot;
        android:largeScreens=&quot;true&quot;
        android:normalScreens=&quot;true&quot;
        android:resizeable=&quot;true&quot;
        android:smallScreens=&quot;true&quot;
        android:xlargeScreens=&quot;true&quot; /&gt;
</code></pre>
",1
Manifest,Android,pattern,72075607,"<p>Specificy a <code>name</code> attribute on the <code>Application</code> tag of your Android manifest file:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;application
     // Declare a name tag here:
         android:name=&quot;&quot;
         android:icon=&quot;@drawable/ic_launcher&quot;
         android:label=&quot;@string/app_name&quot;
         android:theme=&quot;@style/AppTheme&quot; &gt;

         &lt;activity
              android:name=&quot;.MainActivity&quot;
              android:label=&quot;@string/title_activity_main&quot; &gt;
         &lt;/activity&gt;
&lt;/application&gt;
</code></pre>
",1
Manifest,Android,pattern,67838891,"<p>If you are running on Android 10 (API 29) add the following line in the manifest:</p>
<pre><code>android:requestLegacyExternalStorage=&quot;true&quot;
</code></pre>
",1
Manifest,Android,pattern,62668758,"<p>This may be because you have  set the hardware acceleration to false on the manifest(application level) or on the activity level ,if this is the case then add this piece of code to your manifest's application tag</p>
<p><code>&lt;application android:hardwareAccelerated=&quot;true&quot; ...&gt;</code></p>
<p>or in your activity level (in the manifest)</p>
<pre><code>&lt;application android:hardwareAccelerated=&quot;true&quot;&gt;
&lt;activity ... /&gt;
&lt;activity android:hardwareAccelerated=&quot;false&quot; /&gt;
</code></pre>

<p>have a look at the full documentation <a href=""https://developer.android.com/guide/topics/graphics/hardware-accel"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>manifest.xml</p>
</blockquote>
<pre><code>    &lt;application
        android:name=&quot;.application&quot;
        android:allowBackup=&quot;true&quot;
        android:icon=&quot;@mipmap/ic_launcher&quot;
        android:label=&quot;@string/app_name&quot;
        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
        android:supportsRtl=&quot;true&quot;
        android:hardwareAccelerated=&quot;true&quot;
        android:theme=&quot;@style/AppTheme&quot;&gt;

        &lt;activity android:name=&quot;.activity.RegisterActivity&quot; /&gt;

        &lt;activity
            android:name=&quot;.activity.SplashActivity&quot;
            android:theme=&quot;@style/Splash&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,pattern,71780816,"<p>Add the below code in the android manifest file's
application tag</p>
<pre><code>android:usesCleartextTraffic=&quot;true&quot;
</code></pre>
",1
Manifest,Android,pattern,62261868,"<p>According to <a href=""https://developer.android.com/training/articles/security-config#CleartextTrafficPermitted"" rel=""nofollow noreferrer"">Network Security Configuration</a></p>

<p>You should removed this line from the android manifest file which is already there</p>

<pre><code>android:networkSecurityConfig=""@xml/network_security_config"" 
</code></pre>

<p>and added this line</p>

<pre><code>android:usesCleartextTraffic=""true""
</code></pre>

<p>this in to application tag in manifest</p>

<pre><code>&lt;application
android:usesCleartextTraffic=""true""
android:allowBackup=""true""
android:icon=""@drawable/icons""
android:roundIcon=""@mipmap/ic_launcher_round""
android:theme=""@style/fullScreen""
android:label=""@string/app_name""
android:largeHeap=""true""
android:supportsRtl=""true""
&gt;
</code></pre>
",1
Manifest,Android,pattern,75874121,"<p>There should be another <code>Manifest</code> class automatically generated by Android Studio for your project.</p>
<p>So in order to use original Android <code>Manifest</code> class, append <code>android.</code>:</p>
<pre><code>android.Manifest.permission.WRITE_EXTERNAL_STORAGE
android.Manifest.permission.READ_EXTERNAL_STORAGE
</code></pre>
",1
Manifest,Android,environment,66625969,"<p>The information from your manifest file is baked into the Android app at compile/build time. That means that by the time the code of your Android app runs, the manifest file no longer is available.</p>
<p>If you want to create different variants of your manifest file, you'll have to do that from outside the Android app, before building the various apps.</p>
<p>Also see the Android documentation on:</p>
<ul>
<li><a href=""https://developer.android.com/studio/build/manifest-build-variables"" rel=""nofollow noreferrer"">Inject build variables into the manifest</a></li>
<li><a href=""https://developer.android.com/studio/build/build-variants"" rel=""nofollow noreferrer"">Configure build variants</a></li>
</ul>
",1
Manifest,Android,environment,63672831,"<p>it's look like you haven't add your application package in android manifest.</p>
<pre><code>&lt;manifest package=&quot;com.unity3d.player&quot; ... &gt;
    &lt;application ... &gt;
        &lt;activity android:name=&quot;.UnityPlayerActivity&quot; ... &gt;
            ...
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
<p>the application package is required for Android to identify your application. please read more in the android documentation here: <a href=""https://developer.android.com/guide/topics/manifest/manifest-intro"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/manifest/manifest-intro</a></p>
",1
Manifest,Android,environment,70684447,"<p>If you are using on Android 11 (Api level 30), you must have to include <code>&lt;queries&gt;</code> in your Manifest.xml file inside <code>&lt;manifest&gt;</code> tag.</p>
<pre><code>&lt;manifest ....&gt;
    &lt;queries&gt;
         &lt;package android:name=&quot;com.google.android.youtube&quot; /&gt;
    &lt;queries&gt;
    ....
    ....
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,environment,62668758,"<p>This may be because you have  set the hardware acceleration to false on the manifest(application level) or on the activity level ,if this is the case then add this piece of code to your manifest's application tag</p>
<p><code>&lt;application android:hardwareAccelerated=&quot;true&quot; ...&gt;</code></p>
<p>or in your activity level (in the manifest)</p>
<pre><code>&lt;application android:hardwareAccelerated=&quot;true&quot;&gt;
&lt;activity ... /&gt;
&lt;activity android:hardwareAccelerated=&quot;false&quot; /&gt;
</code></pre>

<p>have a look at the full documentation <a href=""https://developer.android.com/guide/topics/graphics/hardware-accel"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>manifest.xml</p>
</blockquote>
<pre><code>    &lt;application
        android:name=&quot;.application&quot;
        android:allowBackup=&quot;true&quot;
        android:icon=&quot;@mipmap/ic_launcher&quot;
        android:label=&quot;@string/app_name&quot;
        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
        android:supportsRtl=&quot;true&quot;
        android:hardwareAccelerated=&quot;true&quot;
        android:theme=&quot;@style/AppTheme&quot;&gt;

        &lt;activity android:name=&quot;.activity.RegisterActivity&quot; /&gt;

        &lt;activity
            android:name=&quot;.activity.SplashActivity&quot;
            android:theme=&quot;@style/Splash&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,environment,68522944,"<p>did you read the <a href=""https://learn.microsoft.com/en-us/xamarin/essentials/phone-dialer?tabs=android"" rel=""noreferrer"">docs</a>?</p>
<blockquote>
<p>If your project's Target Android version is set to Android 11 (R API
30) you must update your Android Manifest with queries that are used
with the new package visibility requirements.</p>
<p>Open the AndroidManifest.xml file under the Properties folder and add
the following inside of the manifest node:</p>
</blockquote>
<pre><code>&lt;queries&gt;
  &lt;intent&gt;
    &lt;action android:name=&quot;android.intent.action.DIAL&quot; /&gt;
    &lt;data android:scheme=&quot;tel&quot;/&gt;
  &lt;/intent&gt;
&lt;/queries&gt;
</code></pre>
",1
Manifest,Android,environment,67838891,"<p>If you are running on Android 10 (API 29) add the following line in the manifest:</p>
<pre><code>android:requestLegacyExternalStorage=&quot;true&quot;
</code></pre>
",1
Manifest,Android,environment,72075607,"<p>Specificy a <code>name</code> attribute on the <code>Application</code> tag of your Android manifest file:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;application
     // Declare a name tag here:
         android:name=&quot;&quot;
         android:icon=&quot;@drawable/ic_launcher&quot;
         android:label=&quot;@string/app_name&quot;
         android:theme=&quot;@style/AppTheme&quot; &gt;

         &lt;activity
              android:name=&quot;.MainActivity&quot;
              android:label=&quot;@string/title_activity_main&quot; &gt;
         &lt;/activity&gt;
&lt;/application&gt;
</code></pre>
",1
Manifest,Android,environment,67661911,"<p>Add this code in your Android Manifest xml</p>
<pre><code>    &lt;supports-screens
        android:anyDensity=&quot;true&quot;
        android:largeScreens=&quot;true&quot;
        android:normalScreens=&quot;true&quot;
        android:resizeable=&quot;true&quot;
        android:smallScreens=&quot;true&quot;
        android:xlargeScreens=&quot;true&quot; /&gt;
</code></pre>
",1
Manifest,Android,environment,70535875,"<p>Make sure that duplication tag in Manifest file and also check the correct integration of file provider.check this link</p>
<p><a href=""https://developer.android.com/studio/build/manage-manifests"" rel=""nofollow noreferrer"">https://developer.android.com/studio/build/manage-manifests</a></p>
",1
Manifest,Android,environment,71780816,"<p>Add the below code in the android manifest file's
application tag</p>
<pre><code>android:usesCleartextTraffic=&quot;true&quot;
</code></pre>
",1
Manifest,Android,alternative,66625969,"<p>The information from your manifest file is baked into the Android app at compile/build time. That means that by the time the code of your Android app runs, the manifest file no longer is available.</p>
<p>If you want to create different variants of your manifest file, you'll have to do that from outside the Android app, before building the various apps.</p>
<p>Also see the Android documentation on:</p>
<ul>
<li><a href=""https://developer.android.com/studio/build/manifest-build-variables"" rel=""nofollow noreferrer"">Inject build variables into the manifest</a></li>
<li><a href=""https://developer.android.com/studio/build/build-variants"" rel=""nofollow noreferrer"">Configure build variants</a></li>
</ul>
",1
Manifest,Android,alternative,63672831,"<p>it's look like you haven't add your application package in android manifest.</p>
<pre><code>&lt;manifest package=&quot;com.unity3d.player&quot; ... &gt;
    &lt;application ... &gt;
        &lt;activity android:name=&quot;.UnityPlayerActivity&quot; ... &gt;
            ...
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
<p>the application package is required for Android to identify your application. please read more in the android documentation here: <a href=""https://developer.android.com/guide/topics/manifest/manifest-intro"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/manifest/manifest-intro</a></p>
",0
Manifest,Android,alternative,70684447,"<p>If you are using on Android 11 (Api level 30), you must have to include <code>&lt;queries&gt;</code> in your Manifest.xml file inside <code>&lt;manifest&gt;</code> tag.</p>
<pre><code>&lt;manifest ....&gt;
    &lt;queries&gt;
         &lt;package android:name=&quot;com.google.android.youtube&quot; /&gt;
    &lt;queries&gt;
    ....
    ....
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,alternative,67838891,"<p>If you are running on Android 10 (API 29) add the following line in the manifest:</p>
<pre><code>android:requestLegacyExternalStorage=&quot;true&quot;
</code></pre>
",1
Manifest,Android,alternative,62668758,"<p>This may be because you have  set the hardware acceleration to false on the manifest(application level) or on the activity level ,if this is the case then add this piece of code to your manifest's application tag</p>
<p><code>&lt;application android:hardwareAccelerated=&quot;true&quot; ...&gt;</code></p>
<p>or in your activity level (in the manifest)</p>
<pre><code>&lt;application android:hardwareAccelerated=&quot;true&quot;&gt;
&lt;activity ... /&gt;
&lt;activity android:hardwareAccelerated=&quot;false&quot; /&gt;
</code></pre>

<p>have a look at the full documentation <a href=""https://developer.android.com/guide/topics/graphics/hardware-accel"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>manifest.xml</p>
</blockquote>
<pre><code>    &lt;application
        android:name=&quot;.application&quot;
        android:allowBackup=&quot;true&quot;
        android:icon=&quot;@mipmap/ic_launcher&quot;
        android:label=&quot;@string/app_name&quot;
        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
        android:supportsRtl=&quot;true&quot;
        android:hardwareAccelerated=&quot;true&quot;
        android:theme=&quot;@style/AppTheme&quot;&gt;

        &lt;activity android:name=&quot;.activity.RegisterActivity&quot; /&gt;

        &lt;activity
            android:name=&quot;.activity.SplashActivity&quot;
            android:theme=&quot;@style/Splash&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,alternative,62261868,"<p>According to <a href=""https://developer.android.com/training/articles/security-config#CleartextTrafficPermitted"" rel=""nofollow noreferrer"">Network Security Configuration</a></p>

<p>You should removed this line from the android manifest file which is already there</p>

<pre><code>android:networkSecurityConfig=""@xml/network_security_config"" 
</code></pre>

<p>and added this line</p>

<pre><code>android:usesCleartextTraffic=""true""
</code></pre>

<p>this in to application tag in manifest</p>

<pre><code>&lt;application
android:usesCleartextTraffic=""true""
android:allowBackup=""true""
android:icon=""@drawable/icons""
android:roundIcon=""@mipmap/ic_launcher_round""
android:theme=""@style/fullScreen""
android:label=""@string/app_name""
android:largeHeap=""true""
android:supportsRtl=""true""
&gt;
</code></pre>
",0
Manifest,Android,alternative,75874121,"<p>There should be another <code>Manifest</code> class automatically generated by Android Studio for your project.</p>
<p>So in order to use original Android <code>Manifest</code> class, append <code>android.</code>:</p>
<pre><code>android.Manifest.permission.WRITE_EXTERNAL_STORAGE
android.Manifest.permission.READ_EXTERNAL_STORAGE
</code></pre>
",1
Manifest,Android,alternative,67661911,"<p>Add this code in your Android Manifest xml</p>
<pre><code>    &lt;supports-screens
        android:anyDensity=&quot;true&quot;
        android:largeScreens=&quot;true&quot;
        android:normalScreens=&quot;true&quot;
        android:resizeable=&quot;true&quot;
        android:smallScreens=&quot;true&quot;
        android:xlargeScreens=&quot;true&quot; /&gt;
</code></pre>
",0
Manifest,Android,alternative,70535875,"<p>Make sure that duplication tag in Manifest file and also check the correct integration of file provider.check this link</p>
<p><a href=""https://developer.android.com/studio/build/manage-manifests"" rel=""nofollow noreferrer"">https://developer.android.com/studio/build/manage-manifests</a></p>
",0
Manifest,Android,alternative,72075607,"<p>Specificy a <code>name</code> attribute on the <code>Application</code> tag of your Android manifest file:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;application
     // Declare a name tag here:
         android:name=&quot;&quot;
         android:icon=&quot;@drawable/ic_launcher&quot;
         android:label=&quot;@string/app_name&quot;
         android:theme=&quot;@style/AppTheme&quot; &gt;

         &lt;activity
              android:name=&quot;.MainActivity&quot;
              android:label=&quot;@string/title_activity_main&quot; &gt;
         &lt;/activity&gt;
&lt;/application&gt;
</code></pre>
",0
UUID,Java,functionality,76109523,"<h1>UUID</h1>
<p>Personally I think that using <a href=""https://en.wikipedia.org/wiki/Universally_unique_identifier"" rel=""nofollow noreferrer""><em>universally unique identifier (UUID)</em></a> is a better solution.</p>
<p>They are exactly designed for your situation: Where you need to generate unique identifiers without depending on a central registration authority, and without coordinating between the parties generating them.</p>
<p>Here is a an article about UUID in Java :  <a href=""https://www.baeldung.com/java-uuid"" rel=""nofollow noreferrer"">https://www.baeldung.com/java-uuid</a></p>
",0
UUID,Java,functionality,74707142,"<p>From the comments, the problem is due to the fact that you're creating a new random <code>UUID</code> in your constructor:</p>
<pre><code>public User(String name) {

    this.name = name;
    this.id = UUID.randomUUID();
}
</code></pre>
<p>To fix the randomness of the identifier, I would suggest adding the <code>UUID</code> as part of the constructor:</p>
<pre><code>public User(UUID id, String name) {

    this.id = id;
    this.name = name;
}

</code></pre>
<p>This way, you can always control the value of the identifier used.</p>
<p>In the long run, depending on how you architect your application, that identifier could come from a Factory object or a database.</p>
",1
UUID,Java,functionality,72454693,"<p>You'll have to implement a custom ID generator and your entity will have an ID of String as it's no longer going to be a valid UUID.</p>
<p>Something like this will work</p>
<pre><code>@Id
@GenericGenerator(name = &quot;mygen&quot;, strategy = &quot;com.abc.generator.IdGenerator&quot;)
@GeneratedValue(generator = &quot;mygen&quot;)
private String id;
</code></pre>
<p>Your generator will look like this:</p>
<pre><code>package com.abc.generator;

import java.io.Serializable;
import java.util.UUID;
import org.hibernate.HibernateException;
import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.id.IdentifierGenerator;

public class IdGenerator implements IdentifierGenerator {

   @Override
   public Serializable generate(SharedSessionContractImplementor sharedSessionContractImplementor, Object o)
    throws HibernateException {
       return UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);
   }
}
</code></pre>
",1
UUID,Java,functionality,76896240,"<p>A good option is to use <code>UUID</code>s.They can be used to uniquely identify a resource. They are unique universally and use 128 bits to store the information.</p>
<p>They look something like:</p>
<pre><code>cc26d321-58fc-4cc1-978a-03f2bbdb2a55
</code></pre>
<p>Just add a column of type <code>UUID</code> in your document entity and use it as the unique identifier.</p>
<p>It will solve your problem as well because it will be difficult to guess the next uuid in comparison to the integer numbers.</p>
<p>Moreover, you might consider authenticating the request as well if you do not want unauthorised users to access the resources.</p>
<p>More details here: <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html</a></p>
",1
UUID,Java,functionality,72983306,"<p>In your database, create a table where each row represents one particular user. That table would have their permanently assigned UUID, along with name, email, etc.</p>
<p>Some databases such as Postgres and <a href=""https://en.wikipedia.org/wiki/H2_(DBMS)"" rel=""nofollow noreferrer"">H2</a> support UUID as a built-in data type. Some databases proved a feature, perhaps as a plug-in, to generate a UUID value. For example, the <a href=""https://www.postgresql.org/docs/current/uuid-ossp.html"" rel=""nofollow noreferrer""><em>uuid-ossp</em></a> plug-in for Postgres. If not, you can generate a UUID in Java.</p>
<p>When creating an account for a user, create a row in that table. When a user logs in, look up their credentials in this table, retrieving their previously assigned UUID.</p>
<p>During the execution of your app, keep that retrieved UUID in memory as a <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/UUID.html"" rel=""nofollow noreferrer""><code>java.util.UUID</code></a> object. In a web app built on Jakarta Servlet, a good place to keep their UUID would be as an attribute on the Session. See <a href=""https://jakarta.ee/specifications/servlet/5.0/jakarta-servlet-spec-5.0.html#binding-attributes-into-a-session"" rel=""nofollow noreferrer""><em>Binding Attributes into a Session</em></a> in the spec. See <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#setAttribute(java.lang.String,java.lang.Object)"" rel=""nofollow noreferrer""><code>HttpSession#setAttribute</code></a> and <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#getAttribute(java.lang.String)"" rel=""nofollow noreferrer""><code>getAttribute</code></a>.</p>
<p>When you write rows in other tables that belong to a particular user, include a column for their UUID. Include their UUID as a criteria in your queries.</p>
<p>You might want to look into <a href=""https://en.wikipedia.org/wiki/Multitenancy"" rel=""nofollow noreferrer"">multitenancy</a> as a topic.</p>
",1
UUID,Java,functionality,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",0
UUID,Java,functionality,77338052,"<p>Your extension is on the UUID instance, that's why it's not working when called as a static method (but, for example, <code>UUID.randomUUID().fromDatabase(...)</code> would work)</p>
<p>You would be able to do this if UUID class was written in Kotlin and had public companion object, so that your extension function would have been on <code>UUID.Companion</code>, but in this case it's impossible.</p>
",1
UUID,Java,functionality,77699058,"<p>The reason for the criticism is that usually the id is the primary key and it's a sequential number. Now, if you have, say, a user with an id of 1234, then a hacker will likely know that there must have been valid ids preceding your id, like 1233, 1232, etc. So, a malicious user might try to issue delete commands sequentially for those numbers and you rely on your extra layers of security in order to avoid actually executing those commands.</p>
<p>So, if you have <a href=""https://www.techtarget.com/searchapparchitecture/definition/UUID-Universal-Unique-Identifier"" rel=""nofollow noreferrer"">UUID</a>, randomly generated for all users and ensuring that it's unique, then a hacker would have no information what UUIDs are valid and which are not, so his efforts would mostly be in vain as the requests he would spend his resources upon would try to remove items that do not even exist. Your system could detect users/IP addresses, etc. that attempt to remove UUIDs that do not exist and block them.</p>
<p>Then your action can search for the entity by UUID, see <a href=""https://stackoverflow.com/questions/18350154/findbyuuid-using-spring-datas-jpa-repository"">FindByUUID() using Spring Data&#39;s JPA Repository</a></p>
<p>make further validations, as of whether the action is valid to be issued by the user with the UUID passed and if so, remove it.</p>
",1
UUID,Java,functionality,74570693,"<p>UUIDs are not generally reversible. There can be n number of strings that can generate a particular UUID.</p>
<p>What you want is some encryption/decryption mechanism. Let's say you use AES-256 symmetric encryption. You will just have to store a secret using which you can encrypt/decrypt the id. But in case the key gets compromised, you would be in a mess. If you change your key, all existing data will get corrupted. If you don't change, you have compromised all your data outside.</p>
<p>The first solution you mentioned here of having a database mapping between id &amp; UUID is not a dumb one. It is a good solution here.</p>
<p>All the things I mentioned above was considering that you want your ids to be internal &amp; hidden from outside. If it is not the case &amp; you are fine with exposing you ids outside, you can think of BASE-64 encoding your ids &amp; use them in third party API.</p>
",0
UUID,Java,functionality,76074746,"<p>Have you tried mapping your ID field in the relationship so that JPA will set it for you based on the reference value? This is referred to as a derived ID, and there are a number of ways to do it based on what you need in your entity:</p>
<pre><code>public class AdditionalInformation {

    @Id
    private UUID projectId;

    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(&quot;projectid&quot;)
    @MapsId
    private Project project;
    
    private String someData;


    //Getters and setters etc...
}
</code></pre>
<p>Or you can just mark the project as the ID:</p>
<pre><code>public class AdditionalInformation {

    @Id
    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(&quot;projectid&quot;)
    private Project project;
    
    private String someData;

    //Getters and setters etc...
}
</code></pre>
<p>In both cases, you would use the UUID projectId value as the AdditionalInformation primary key for find by key lookups.</p>
",1
UUID,Java,concept,76109523,"<h1>UUID</h1>
<p>Personally I think that using <a href=""https://en.wikipedia.org/wiki/Universally_unique_identifier"" rel=""nofollow noreferrer""><em>universally unique identifier (UUID)</em></a> is a better solution.</p>
<p>They are exactly designed for your situation: Where you need to generate unique identifiers without depending on a central registration authority, and without coordinating between the parties generating them.</p>
<p>Here is a an article about UUID in Java :  <a href=""https://www.baeldung.com/java-uuid"" rel=""nofollow noreferrer"">https://www.baeldung.com/java-uuid</a></p>
",0
UUID,Java,concept,74707142,"<p>From the comments, the problem is due to the fact that you're creating a new random <code>UUID</code> in your constructor:</p>
<pre><code>public User(String name) {

    this.name = name;
    this.id = UUID.randomUUID();
}
</code></pre>
<p>To fix the randomness of the identifier, I would suggest adding the <code>UUID</code> as part of the constructor:</p>
<pre><code>public User(UUID id, String name) {

    this.id = id;
    this.name = name;
}

</code></pre>
<p>This way, you can always control the value of the identifier used.</p>
<p>In the long run, depending on how you architect your application, that identifier could come from a Factory object or a database.</p>
",1
UUID,Java,concept,72454693,"<p>You'll have to implement a custom ID generator and your entity will have an ID of String as it's no longer going to be a valid UUID.</p>
<p>Something like this will work</p>
<pre><code>@Id
@GenericGenerator(name = &quot;mygen&quot;, strategy = &quot;com.abc.generator.IdGenerator&quot;)
@GeneratedValue(generator = &quot;mygen&quot;)
private String id;
</code></pre>
<p>Your generator will look like this:</p>
<pre><code>package com.abc.generator;

import java.io.Serializable;
import java.util.UUID;
import org.hibernate.HibernateException;
import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.id.IdentifierGenerator;

public class IdGenerator implements IdentifierGenerator {

   @Override
   public Serializable generate(SharedSessionContractImplementor sharedSessionContractImplementor, Object o)
    throws HibernateException {
       return UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);
   }
}
</code></pre>
",1
UUID,Java,concept,76896240,"<p>A good option is to use <code>UUID</code>s.They can be used to uniquely identify a resource. They are unique universally and use 128 bits to store the information.</p>
<p>They look something like:</p>
<pre><code>cc26d321-58fc-4cc1-978a-03f2bbdb2a55
</code></pre>
<p>Just add a column of type <code>UUID</code> in your document entity and use it as the unique identifier.</p>
<p>It will solve your problem as well because it will be difficult to guess the next uuid in comparison to the integer numbers.</p>
<p>Moreover, you might consider authenticating the request as well if you do not want unauthorised users to access the resources.</p>
<p>More details here: <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html</a></p>
",1
UUID,Java,concept,72983306,"<p>In your database, create a table where each row represents one particular user. That table would have their permanently assigned UUID, along with name, email, etc.</p>
<p>Some databases such as Postgres and <a href=""https://en.wikipedia.org/wiki/H2_(DBMS)"" rel=""nofollow noreferrer"">H2</a> support UUID as a built-in data type. Some databases proved a feature, perhaps as a plug-in, to generate a UUID value. For example, the <a href=""https://www.postgresql.org/docs/current/uuid-ossp.html"" rel=""nofollow noreferrer""><em>uuid-ossp</em></a> plug-in for Postgres. If not, you can generate a UUID in Java.</p>
<p>When creating an account for a user, create a row in that table. When a user logs in, look up their credentials in this table, retrieving their previously assigned UUID.</p>
<p>During the execution of your app, keep that retrieved UUID in memory as a <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/UUID.html"" rel=""nofollow noreferrer""><code>java.util.UUID</code></a> object. In a web app built on Jakarta Servlet, a good place to keep their UUID would be as an attribute on the Session. See <a href=""https://jakarta.ee/specifications/servlet/5.0/jakarta-servlet-spec-5.0.html#binding-attributes-into-a-session"" rel=""nofollow noreferrer""><em>Binding Attributes into a Session</em></a> in the spec. See <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#setAttribute(java.lang.String,java.lang.Object)"" rel=""nofollow noreferrer""><code>HttpSession#setAttribute</code></a> and <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#getAttribute(java.lang.String)"" rel=""nofollow noreferrer""><code>getAttribute</code></a>.</p>
<p>When you write rows in other tables that belong to a particular user, include a column for their UUID. Include their UUID as a criteria in your queries.</p>
<p>You might want to look into <a href=""https://en.wikipedia.org/wiki/Multitenancy"" rel=""nofollow noreferrer"">multitenancy</a> as a topic.</p>
",1
UUID,Java,concept,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",1
UUID,Java,concept,77338052,"<p>Your extension is on the UUID instance, that's why it's not working when called as a static method (but, for example, <code>UUID.randomUUID().fromDatabase(...)</code> would work)</p>
<p>You would be able to do this if UUID class was written in Kotlin and had public companion object, so that your extension function would have been on <code>UUID.Companion</code>, but in this case it's impossible.</p>
",1
UUID,Java,concept,77699058,"<p>The reason for the criticism is that usually the id is the primary key and it's a sequential number. Now, if you have, say, a user with an id of 1234, then a hacker will likely know that there must have been valid ids preceding your id, like 1233, 1232, etc. So, a malicious user might try to issue delete commands sequentially for those numbers and you rely on your extra layers of security in order to avoid actually executing those commands.</p>
<p>So, if you have <a href=""https://www.techtarget.com/searchapparchitecture/definition/UUID-Universal-Unique-Identifier"" rel=""nofollow noreferrer"">UUID</a>, randomly generated for all users and ensuring that it's unique, then a hacker would have no information what UUIDs are valid and which are not, so his efforts would mostly be in vain as the requests he would spend his resources upon would try to remove items that do not even exist. Your system could detect users/IP addresses, etc. that attempt to remove UUIDs that do not exist and block them.</p>
<p>Then your action can search for the entity by UUID, see <a href=""https://stackoverflow.com/questions/18350154/findbyuuid-using-spring-datas-jpa-repository"">FindByUUID() using Spring Data&#39;s JPA Repository</a></p>
<p>make further validations, as of whether the action is valid to be issued by the user with the UUID passed and if so, remove it.</p>
",1
UUID,Java,concept,74570693,"<p>UUIDs are not generally reversible. There can be n number of strings that can generate a particular UUID.</p>
<p>What you want is some encryption/decryption mechanism. Let's say you use AES-256 symmetric encryption. You will just have to store a secret using which you can encrypt/decrypt the id. But in case the key gets compromised, you would be in a mess. If you change your key, all existing data will get corrupted. If you don't change, you have compromised all your data outside.</p>
<p>The first solution you mentioned here of having a database mapping between id &amp; UUID is not a dumb one. It is a good solution here.</p>
<p>All the things I mentioned above was considering that you want your ids to be internal &amp; hidden from outside. If it is not the case &amp; you are fine with exposing you ids outside, you can think of BASE-64 encoding your ids &amp; use them in third party API.</p>
",0
UUID,Java,concept,76074746,"<p>Have you tried mapping your ID field in the relationship so that JPA will set it for you based on the reference value? This is referred to as a derived ID, and there are a number of ways to do it based on what you need in your entity:</p>
<pre><code>public class AdditionalInformation {

    @Id
    private UUID projectId;

    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(&quot;projectid&quot;)
    @MapsId
    private Project project;
    
    private String someData;


    //Getters and setters etc...
}
</code></pre>
<p>Or you can just mark the project as the ID:</p>
<pre><code>public class AdditionalInformation {

    @Id
    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(&quot;projectid&quot;)
    private Project project;
    
    private String someData;

    //Getters and setters etc...
}
</code></pre>
<p>In both cases, you would use the UUID projectId value as the AdditionalInformation primary key for find by key lookups.</p>
",1
UUID,Java,performance,76109523,"<h1>UUID</h1>
<p>Personally I think that using <a href=""https://en.wikipedia.org/wiki/Universally_unique_identifier"" rel=""nofollow noreferrer""><em>universally unique identifier (UUID)</em></a> is a better solution.</p>
<p>They are exactly designed for your situation: Where you need to generate unique identifiers without depending on a central registration authority, and without coordinating between the parties generating them.</p>
<p>Here is a an article about UUID in Java :  <a href=""https://www.baeldung.com/java-uuid"" rel=""nofollow noreferrer"">https://www.baeldung.com/java-uuid</a></p>
",0
UUID,Java,performance,74707142,"<p>From the comments, the problem is due to the fact that you're creating a new random <code>UUID</code> in your constructor:</p>
<pre><code>public User(String name) {

    this.name = name;
    this.id = UUID.randomUUID();
}
</code></pre>
<p>To fix the randomness of the identifier, I would suggest adding the <code>UUID</code> as part of the constructor:</p>
<pre><code>public User(UUID id, String name) {

    this.id = id;
    this.name = name;
}

</code></pre>
<p>This way, you can always control the value of the identifier used.</p>
<p>In the long run, depending on how you architect your application, that identifier could come from a Factory object or a database.</p>
",0
UUID,Java,performance,76896240,"<p>A good option is to use <code>UUID</code>s.They can be used to uniquely identify a resource. They are unique universally and use 128 bits to store the information.</p>
<p>They look something like:</p>
<pre><code>cc26d321-58fc-4cc1-978a-03f2bbdb2a55
</code></pre>
<p>Just add a column of type <code>UUID</code> in your document entity and use it as the unique identifier.</p>
<p>It will solve your problem as well because it will be difficult to guess the next uuid in comparison to the integer numbers.</p>
<p>Moreover, you might consider authenticating the request as well if you do not want unauthorised users to access the resources.</p>
<p>More details here: <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html</a></p>
",0
UUID,Java,performance,72454693,"<p>You'll have to implement a custom ID generator and your entity will have an ID of String as it's no longer going to be a valid UUID.</p>
<p>Something like this will work</p>
<pre><code>@Id
@GenericGenerator(name = &quot;mygen&quot;, strategy = &quot;com.abc.generator.IdGenerator&quot;)
@GeneratedValue(generator = &quot;mygen&quot;)
private String id;
</code></pre>
<p>Your generator will look like this:</p>
<pre><code>package com.abc.generator;

import java.io.Serializable;
import java.util.UUID;
import org.hibernate.HibernateException;
import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.id.IdentifierGenerator;

public class IdGenerator implements IdentifierGenerator {

   @Override
   public Serializable generate(SharedSessionContractImplementor sharedSessionContractImplementor, Object o)
    throws HibernateException {
       return UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);
   }
}
</code></pre>
",0
UUID,Java,performance,72983306,"<p>In your database, create a table where each row represents one particular user. That table would have their permanently assigned UUID, along with name, email, etc.</p>
<p>Some databases such as Postgres and <a href=""https://en.wikipedia.org/wiki/H2_(DBMS)"" rel=""nofollow noreferrer"">H2</a> support UUID as a built-in data type. Some databases proved a feature, perhaps as a plug-in, to generate a UUID value. For example, the <a href=""https://www.postgresql.org/docs/current/uuid-ossp.html"" rel=""nofollow noreferrer""><em>uuid-ossp</em></a> plug-in for Postgres. If not, you can generate a UUID in Java.</p>
<p>When creating an account for a user, create a row in that table. When a user logs in, look up their credentials in this table, retrieving their previously assigned UUID.</p>
<p>During the execution of your app, keep that retrieved UUID in memory as a <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/UUID.html"" rel=""nofollow noreferrer""><code>java.util.UUID</code></a> object. In a web app built on Jakarta Servlet, a good place to keep their UUID would be as an attribute on the Session. See <a href=""https://jakarta.ee/specifications/servlet/5.0/jakarta-servlet-spec-5.0.html#binding-attributes-into-a-session"" rel=""nofollow noreferrer""><em>Binding Attributes into a Session</em></a> in the spec. See <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#setAttribute(java.lang.String,java.lang.Object)"" rel=""nofollow noreferrer""><code>HttpSession#setAttribute</code></a> and <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#getAttribute(java.lang.String)"" rel=""nofollow noreferrer""><code>getAttribute</code></a>.</p>
<p>When you write rows in other tables that belong to a particular user, include a column for their UUID. Include their UUID as a criteria in your queries.</p>
<p>You might want to look into <a href=""https://en.wikipedia.org/wiki/Multitenancy"" rel=""nofollow noreferrer"">multitenancy</a> as a topic.</p>
",0
UUID,Java,performance,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",0
UUID,Java,performance,77338052,"<p>Your extension is on the UUID instance, that's why it's not working when called as a static method (but, for example, <code>UUID.randomUUID().fromDatabase(...)</code> would work)</p>
<p>You would be able to do this if UUID class was written in Kotlin and had public companion object, so that your extension function would have been on <code>UUID.Companion</code>, but in this case it's impossible.</p>
",0
UUID,Java,performance,77699058,"<p>The reason for the criticism is that usually the id is the primary key and it's a sequential number. Now, if you have, say, a user with an id of 1234, then a hacker will likely know that there must have been valid ids preceding your id, like 1233, 1232, etc. So, a malicious user might try to issue delete commands sequentially for those numbers and you rely on your extra layers of security in order to avoid actually executing those commands.</p>
<p>So, if you have <a href=""https://www.techtarget.com/searchapparchitecture/definition/UUID-Universal-Unique-Identifier"" rel=""nofollow noreferrer"">UUID</a>, randomly generated for all users and ensuring that it's unique, then a hacker would have no information what UUIDs are valid and which are not, so his efforts would mostly be in vain as the requests he would spend his resources upon would try to remove items that do not even exist. Your system could detect users/IP addresses, etc. that attempt to remove UUIDs that do not exist and block them.</p>
<p>Then your action can search for the entity by UUID, see <a href=""https://stackoverflow.com/questions/18350154/findbyuuid-using-spring-datas-jpa-repository"">FindByUUID() using Spring Data&#39;s JPA Repository</a></p>
<p>make further validations, as of whether the action is valid to be issued by the user with the UUID passed and if so, remove it.</p>
",0
UUID,Java,performance,74570693,"<p>UUIDs are not generally reversible. There can be n number of strings that can generate a particular UUID.</p>
<p>What you want is some encryption/decryption mechanism. Let's say you use AES-256 symmetric encryption. You will just have to store a secret using which you can encrypt/decrypt the id. But in case the key gets compromised, you would be in a mess. If you change your key, all existing data will get corrupted. If you don't change, you have compromised all your data outside.</p>
<p>The first solution you mentioned here of having a database mapping between id &amp; UUID is not a dumb one. It is a good solution here.</p>
<p>All the things I mentioned above was considering that you want your ids to be internal &amp; hidden from outside. If it is not the case &amp; you are fine with exposing you ids outside, you can think of BASE-64 encoding your ids &amp; use them in third party API.</p>
",0
UUID,Java,performance,74953033,"<p>It looks like there is no node for the UID or that node doesn't have a string property <code>userType</code>.</p>
<p>Your code should probably handle the absence of the node for the user with:</p>
<pre><code>public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
    if (!dataSnapshot.exists()) throw new IllegalStateException(&quot;User &quot;+uid+&quot; not found in database&quot;);
    ...
}
</code></pre>
<p>It could also be that the UID node exists, but doesn't have a <code>userType</code>. I recommend actually validating that a user node always has a <code>userType</code> in <a href=""https://firebase.google.com/docs/database/security/rules-conditions#validaterules"" rel=""nofollow noreferrer"">security rules to validate data</a>.</p>
",0
UUID,Java,directive,76109523,"<h1>UUID</h1>
<p>Personally I think that using <a href=""https://en.wikipedia.org/wiki/Universally_unique_identifier"" rel=""nofollow noreferrer""><em>universally unique identifier (UUID)</em></a> is a better solution.</p>
<p>They are exactly designed for your situation: Where you need to generate unique identifiers without depending on a central registration authority, and without coordinating between the parties generating them.</p>
<p>Here is a an article about UUID in Java :  <a href=""https://www.baeldung.com/java-uuid"" rel=""nofollow noreferrer"">https://www.baeldung.com/java-uuid</a></p>
",0
UUID,Java,directive,74707142,"<p>From the comments, the problem is due to the fact that you're creating a new random <code>UUID</code> in your constructor:</p>
<pre><code>public User(String name) {

    this.name = name;
    this.id = UUID.randomUUID();
}
</code></pre>
<p>To fix the randomness of the identifier, I would suggest adding the <code>UUID</code> as part of the constructor:</p>
<pre><code>public User(UUID id, String name) {

    this.id = id;
    this.name = name;
}

</code></pre>
<p>This way, you can always control the value of the identifier used.</p>
<p>In the long run, depending on how you architect your application, that identifier could come from a Factory object or a database.</p>
",1
UUID,Java,directive,76896240,"<p>A good option is to use <code>UUID</code>s.They can be used to uniquely identify a resource. They are unique universally and use 128 bits to store the information.</p>
<p>They look something like:</p>
<pre><code>cc26d321-58fc-4cc1-978a-03f2bbdb2a55
</code></pre>
<p>Just add a column of type <code>UUID</code> in your document entity and use it as the unique identifier.</p>
<p>It will solve your problem as well because it will be difficult to guess the next uuid in comparison to the integer numbers.</p>
<p>Moreover, you might consider authenticating the request as well if you do not want unauthorised users to access the resources.</p>
<p>More details here: <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html</a></p>
",1
UUID,Java,directive,72454693,"<p>You'll have to implement a custom ID generator and your entity will have an ID of String as it's no longer going to be a valid UUID.</p>
<p>Something like this will work</p>
<pre><code>@Id
@GenericGenerator(name = &quot;mygen&quot;, strategy = &quot;com.abc.generator.IdGenerator&quot;)
@GeneratedValue(generator = &quot;mygen&quot;)
private String id;
</code></pre>
<p>Your generator will look like this:</p>
<pre><code>package com.abc.generator;

import java.io.Serializable;
import java.util.UUID;
import org.hibernate.HibernateException;
import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.id.IdentifierGenerator;

public class IdGenerator implements IdentifierGenerator {

   @Override
   public Serializable generate(SharedSessionContractImplementor sharedSessionContractImplementor, Object o)
    throws HibernateException {
       return UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);
   }
}
</code></pre>
",1
UUID,Java,directive,72983306,"<p>In your database, create a table where each row represents one particular user. That table would have their permanently assigned UUID, along with name, email, etc.</p>
<p>Some databases such as Postgres and <a href=""https://en.wikipedia.org/wiki/H2_(DBMS)"" rel=""nofollow noreferrer"">H2</a> support UUID as a built-in data type. Some databases proved a feature, perhaps as a plug-in, to generate a UUID value. For example, the <a href=""https://www.postgresql.org/docs/current/uuid-ossp.html"" rel=""nofollow noreferrer""><em>uuid-ossp</em></a> plug-in for Postgres. If not, you can generate a UUID in Java.</p>
<p>When creating an account for a user, create a row in that table. When a user logs in, look up their credentials in this table, retrieving their previously assigned UUID.</p>
<p>During the execution of your app, keep that retrieved UUID in memory as a <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/UUID.html"" rel=""nofollow noreferrer""><code>java.util.UUID</code></a> object. In a web app built on Jakarta Servlet, a good place to keep their UUID would be as an attribute on the Session. See <a href=""https://jakarta.ee/specifications/servlet/5.0/jakarta-servlet-spec-5.0.html#binding-attributes-into-a-session"" rel=""nofollow noreferrer""><em>Binding Attributes into a Session</em></a> in the spec. See <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#setAttribute(java.lang.String,java.lang.Object)"" rel=""nofollow noreferrer""><code>HttpSession#setAttribute</code></a> and <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#getAttribute(java.lang.String)"" rel=""nofollow noreferrer""><code>getAttribute</code></a>.</p>
<p>When you write rows in other tables that belong to a particular user, include a column for their UUID. Include their UUID as a criteria in your queries.</p>
<p>You might want to look into <a href=""https://en.wikipedia.org/wiki/Multitenancy"" rel=""nofollow noreferrer"">multitenancy</a> as a topic.</p>
",1
UUID,Java,directive,77699058,"<p>The reason for the criticism is that usually the id is the primary key and it's a sequential number. Now, if you have, say, a user with an id of 1234, then a hacker will likely know that there must have been valid ids preceding your id, like 1233, 1232, etc. So, a malicious user might try to issue delete commands sequentially for those numbers and you rely on your extra layers of security in order to avoid actually executing those commands.</p>
<p>So, if you have <a href=""https://www.techtarget.com/searchapparchitecture/definition/UUID-Universal-Unique-Identifier"" rel=""nofollow noreferrer"">UUID</a>, randomly generated for all users and ensuring that it's unique, then a hacker would have no information what UUIDs are valid and which are not, so his efforts would mostly be in vain as the requests he would spend his resources upon would try to remove items that do not even exist. Your system could detect users/IP addresses, etc. that attempt to remove UUIDs that do not exist and block them.</p>
<p>Then your action can search for the entity by UUID, see <a href=""https://stackoverflow.com/questions/18350154/findbyuuid-using-spring-datas-jpa-repository"">FindByUUID() using Spring Data&#39;s JPA Repository</a></p>
<p>make further validations, as of whether the action is valid to be issued by the user with the UUID passed and if so, remove it.</p>
",0
UUID,Java,directive,74570693,"<p>UUIDs are not generally reversible. There can be n number of strings that can generate a particular UUID.</p>
<p>What you want is some encryption/decryption mechanism. Let's say you use AES-256 symmetric encryption. You will just have to store a secret using which you can encrypt/decrypt the id. But in case the key gets compromised, you would be in a mess. If you change your key, all existing data will get corrupted. If you don't change, you have compromised all your data outside.</p>
<p>The first solution you mentioned here of having a database mapping between id &amp; UUID is not a dumb one. It is a good solution here.</p>
<p>All the things I mentioned above was considering that you want your ids to be internal &amp; hidden from outside. If it is not the case &amp; you are fine with exposing you ids outside, you can think of BASE-64 encoding your ids &amp; use them in third party API.</p>
",0
UUID,Java,directive,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",0
UUID,Java,directive,77338052,"<p>Your extension is on the UUID instance, that's why it's not working when called as a static method (but, for example, <code>UUID.randomUUID().fromDatabase(...)</code> would work)</p>
<p>You would be able to do this if UUID class was written in Kotlin and had public companion object, so that your extension function would have been on <code>UUID.Companion</code>, but in this case it's impossible.</p>
",0
UUID,Java,directive,76074746,"<p>Have you tried mapping your ID field in the relationship so that JPA will set it for you based on the reference value? This is referred to as a derived ID, and there are a number of ways to do it based on what you need in your entity:</p>
<pre><code>public class AdditionalInformation {

    @Id
    private UUID projectId;

    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(&quot;projectid&quot;)
    @MapsId
    private Project project;
    
    private String someData;


    //Getters and setters etc...
}
</code></pre>
<p>Or you can just mark the project as the ID:</p>
<pre><code>public class AdditionalInformation {

    @Id
    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(&quot;projectid&quot;)
    private Project project;
    
    private String someData;

    //Getters and setters etc...
}
</code></pre>
<p>In both cases, you would use the UUID projectId value as the AdditionalInformation primary key for find by key lookups.</p>
",0
UUID,Java,pattern,76109523,"<h1>UUID</h1>
<p>Personally I think that using <a href=""https://en.wikipedia.org/wiki/Universally_unique_identifier"" rel=""nofollow noreferrer""><em>universally unique identifier (UUID)</em></a> is a better solution.</p>
<p>They are exactly designed for your situation: Where you need to generate unique identifiers without depending on a central registration authority, and without coordinating between the parties generating them.</p>
<p>Here is a an article about UUID in Java :  <a href=""https://www.baeldung.com/java-uuid"" rel=""nofollow noreferrer"">https://www.baeldung.com/java-uuid</a></p>
",0
UUID,Java,pattern,74707142,"<p>From the comments, the problem is due to the fact that you're creating a new random <code>UUID</code> in your constructor:</p>
<pre><code>public User(String name) {

    this.name = name;
    this.id = UUID.randomUUID();
}
</code></pre>
<p>To fix the randomness of the identifier, I would suggest adding the <code>UUID</code> as part of the constructor:</p>
<pre><code>public User(UUID id, String name) {

    this.id = id;
    this.name = name;
}

</code></pre>
<p>This way, you can always control the value of the identifier used.</p>
<p>In the long run, depending on how you architect your application, that identifier could come from a Factory object or a database.</p>
",1
UUID,Java,pattern,72454693,"<p>You'll have to implement a custom ID generator and your entity will have an ID of String as it's no longer going to be a valid UUID.</p>
<p>Something like this will work</p>
<pre><code>@Id
@GenericGenerator(name = &quot;mygen&quot;, strategy = &quot;com.abc.generator.IdGenerator&quot;)
@GeneratedValue(generator = &quot;mygen&quot;)
private String id;
</code></pre>
<p>Your generator will look like this:</p>
<pre><code>package com.abc.generator;

import java.io.Serializable;
import java.util.UUID;
import org.hibernate.HibernateException;
import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.id.IdentifierGenerator;

public class IdGenerator implements IdentifierGenerator {

   @Override
   public Serializable generate(SharedSessionContractImplementor sharedSessionContractImplementor, Object o)
    throws HibernateException {
       return UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);
   }
}
</code></pre>
",1
UUID,Java,pattern,76896240,"<p>A good option is to use <code>UUID</code>s.They can be used to uniquely identify a resource. They are unique universally and use 128 bits to store the information.</p>
<p>They look something like:</p>
<pre><code>cc26d321-58fc-4cc1-978a-03f2bbdb2a55
</code></pre>
<p>Just add a column of type <code>UUID</code> in your document entity and use it as the unique identifier.</p>
<p>It will solve your problem as well because it will be difficult to guess the next uuid in comparison to the integer numbers.</p>
<p>Moreover, you might consider authenticating the request as well if you do not want unauthorised users to access the resources.</p>
<p>More details here: <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html</a></p>
",1
UUID,Java,pattern,72983306,"<p>In your database, create a table where each row represents one particular user. That table would have their permanently assigned UUID, along with name, email, etc.</p>
<p>Some databases such as Postgres and <a href=""https://en.wikipedia.org/wiki/H2_(DBMS)"" rel=""nofollow noreferrer"">H2</a> support UUID as a built-in data type. Some databases proved a feature, perhaps as a plug-in, to generate a UUID value. For example, the <a href=""https://www.postgresql.org/docs/current/uuid-ossp.html"" rel=""nofollow noreferrer""><em>uuid-ossp</em></a> plug-in for Postgres. If not, you can generate a UUID in Java.</p>
<p>When creating an account for a user, create a row in that table. When a user logs in, look up their credentials in this table, retrieving their previously assigned UUID.</p>
<p>During the execution of your app, keep that retrieved UUID in memory as a <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/UUID.html"" rel=""nofollow noreferrer""><code>java.util.UUID</code></a> object. In a web app built on Jakarta Servlet, a good place to keep their UUID would be as an attribute on the Session. See <a href=""https://jakarta.ee/specifications/servlet/5.0/jakarta-servlet-spec-5.0.html#binding-attributes-into-a-session"" rel=""nofollow noreferrer""><em>Binding Attributes into a Session</em></a> in the spec. See <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#setAttribute(java.lang.String,java.lang.Object)"" rel=""nofollow noreferrer""><code>HttpSession#setAttribute</code></a> and <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#getAttribute(java.lang.String)"" rel=""nofollow noreferrer""><code>getAttribute</code></a>.</p>
<p>When you write rows in other tables that belong to a particular user, include a column for their UUID. Include their UUID as a criteria in your queries.</p>
<p>You might want to look into <a href=""https://en.wikipedia.org/wiki/Multitenancy"" rel=""nofollow noreferrer"">multitenancy</a> as a topic.</p>
",1
UUID,Java,pattern,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",1
UUID,Java,pattern,77338052,"<p>Your extension is on the UUID instance, that's why it's not working when called as a static method (but, for example, <code>UUID.randomUUID().fromDatabase(...)</code> would work)</p>
<p>You would be able to do this if UUID class was written in Kotlin and had public companion object, so that your extension function would have been on <code>UUID.Companion</code>, but in this case it's impossible.</p>
",1
UUID,Java,pattern,77699058,"<p>The reason for the criticism is that usually the id is the primary key and it's a sequential number. Now, if you have, say, a user with an id of 1234, then a hacker will likely know that there must have been valid ids preceding your id, like 1233, 1232, etc. So, a malicious user might try to issue delete commands sequentially for those numbers and you rely on your extra layers of security in order to avoid actually executing those commands.</p>
<p>So, if you have <a href=""https://www.techtarget.com/searchapparchitecture/definition/UUID-Universal-Unique-Identifier"" rel=""nofollow noreferrer"">UUID</a>, randomly generated for all users and ensuring that it's unique, then a hacker would have no information what UUIDs are valid and which are not, so his efforts would mostly be in vain as the requests he would spend his resources upon would try to remove items that do not even exist. Your system could detect users/IP addresses, etc. that attempt to remove UUIDs that do not exist and block them.</p>
<p>Then your action can search for the entity by UUID, see <a href=""https://stackoverflow.com/questions/18350154/findbyuuid-using-spring-datas-jpa-repository"">FindByUUID() using Spring Data&#39;s JPA Repository</a></p>
<p>make further validations, as of whether the action is valid to be issued by the user with the UUID passed and if so, remove it.</p>
",1
UUID,Java,pattern,74570693,"<p>UUIDs are not generally reversible. There can be n number of strings that can generate a particular UUID.</p>
<p>What you want is some encryption/decryption mechanism. Let's say you use AES-256 symmetric encryption. You will just have to store a secret using which you can encrypt/decrypt the id. But in case the key gets compromised, you would be in a mess. If you change your key, all existing data will get corrupted. If you don't change, you have compromised all your data outside.</p>
<p>The first solution you mentioned here of having a database mapping between id &amp; UUID is not a dumb one. It is a good solution here.</p>
<p>All the things I mentioned above was considering that you want your ids to be internal &amp; hidden from outside. If it is not the case &amp; you are fine with exposing you ids outside, you can think of BASE-64 encoding your ids &amp; use them in third party API.</p>
",0
UUID,Java,pattern,76074746,"<p>Have you tried mapping your ID field in the relationship so that JPA will set it for you based on the reference value? This is referred to as a derived ID, and there are a number of ways to do it based on what you need in your entity:</p>
<pre><code>public class AdditionalInformation {

    @Id
    private UUID projectId;

    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(&quot;projectid&quot;)
    @MapsId
    private Project project;
    
    private String someData;


    //Getters and setters etc...
}
</code></pre>
<p>Or you can just mark the project as the ID:</p>
<pre><code>public class AdditionalInformation {

    @Id
    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(&quot;projectid&quot;)
    private Project project;
    
    private String someData;

    //Getters and setters etc...
}
</code></pre>
<p>In both cases, you would use the UUID projectId value as the AdditionalInformation primary key for find by key lookups.</p>
",0
UUID,Java,environment,76109523,"<h1>UUID</h1>
<p>Personally I think that using <a href=""https://en.wikipedia.org/wiki/Universally_unique_identifier"" rel=""nofollow noreferrer""><em>universally unique identifier (UUID)</em></a> is a better solution.</p>
<p>They are exactly designed for your situation: Where you need to generate unique identifiers without depending on a central registration authority, and without coordinating between the parties generating them.</p>
<p>Here is a an article about UUID in Java :  <a href=""https://www.baeldung.com/java-uuid"" rel=""nofollow noreferrer"">https://www.baeldung.com/java-uuid</a></p>
",0
UUID,Java,environment,76896240,"<p>A good option is to use <code>UUID</code>s.They can be used to uniquely identify a resource. They are unique universally and use 128 bits to store the information.</p>
<p>They look something like:</p>
<pre><code>cc26d321-58fc-4cc1-978a-03f2bbdb2a55
</code></pre>
<p>Just add a column of type <code>UUID</code> in your document entity and use it as the unique identifier.</p>
<p>It will solve your problem as well because it will be difficult to guess the next uuid in comparison to the integer numbers.</p>
<p>Moreover, you might consider authenticating the request as well if you do not want unauthorised users to access the resources.</p>
<p>More details here: <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html</a></p>
",1
UUID,Java,environment,74707142,"<p>From the comments, the problem is due to the fact that you're creating a new random <code>UUID</code> in your constructor:</p>
<pre><code>public User(String name) {

    this.name = name;
    this.id = UUID.randomUUID();
}
</code></pre>
<p>To fix the randomness of the identifier, I would suggest adding the <code>UUID</code> as part of the constructor:</p>
<pre><code>public User(UUID id, String name) {

    this.id = id;
    this.name = name;
}

</code></pre>
<p>This way, you can always control the value of the identifier used.</p>
<p>In the long run, depending on how you architect your application, that identifier could come from a Factory object or a database.</p>
",1
UUID,Java,environment,72983306,"<p>In your database, create a table where each row represents one particular user. That table would have their permanently assigned UUID, along with name, email, etc.</p>
<p>Some databases such as Postgres and <a href=""https://en.wikipedia.org/wiki/H2_(DBMS)"" rel=""nofollow noreferrer"">H2</a> support UUID as a built-in data type. Some databases proved a feature, perhaps as a plug-in, to generate a UUID value. For example, the <a href=""https://www.postgresql.org/docs/current/uuid-ossp.html"" rel=""nofollow noreferrer""><em>uuid-ossp</em></a> plug-in for Postgres. If not, you can generate a UUID in Java.</p>
<p>When creating an account for a user, create a row in that table. When a user logs in, look up their credentials in this table, retrieving their previously assigned UUID.</p>
<p>During the execution of your app, keep that retrieved UUID in memory as a <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/UUID.html"" rel=""nofollow noreferrer""><code>java.util.UUID</code></a> object. In a web app built on Jakarta Servlet, a good place to keep their UUID would be as an attribute on the Session. See <a href=""https://jakarta.ee/specifications/servlet/5.0/jakarta-servlet-spec-5.0.html#binding-attributes-into-a-session"" rel=""nofollow noreferrer""><em>Binding Attributes into a Session</em></a> in the spec. See <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#setAttribute(java.lang.String,java.lang.Object)"" rel=""nofollow noreferrer""><code>HttpSession#setAttribute</code></a> and <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#getAttribute(java.lang.String)"" rel=""nofollow noreferrer""><code>getAttribute</code></a>.</p>
<p>When you write rows in other tables that belong to a particular user, include a column for their UUID. Include their UUID as a criteria in your queries.</p>
<p>You might want to look into <a href=""https://en.wikipedia.org/wiki/Multitenancy"" rel=""nofollow noreferrer"">multitenancy</a> as a topic.</p>
",1
UUID,Java,environment,72454693,"<p>You'll have to implement a custom ID generator and your entity will have an ID of String as it's no longer going to be a valid UUID.</p>
<p>Something like this will work</p>
<pre><code>@Id
@GenericGenerator(name = &quot;mygen&quot;, strategy = &quot;com.abc.generator.IdGenerator&quot;)
@GeneratedValue(generator = &quot;mygen&quot;)
private String id;
</code></pre>
<p>Your generator will look like this:</p>
<pre><code>package com.abc.generator;

import java.io.Serializable;
import java.util.UUID;
import org.hibernate.HibernateException;
import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.id.IdentifierGenerator;

public class IdGenerator implements IdentifierGenerator {

   @Override
   public Serializable generate(SharedSessionContractImplementor sharedSessionContractImplementor, Object o)
    throws HibernateException {
       return UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);
   }
}
</code></pre>
",1
UUID,Java,environment,77699058,"<p>The reason for the criticism is that usually the id is the primary key and it's a sequential number. Now, if you have, say, a user with an id of 1234, then a hacker will likely know that there must have been valid ids preceding your id, like 1233, 1232, etc. So, a malicious user might try to issue delete commands sequentially for those numbers and you rely on your extra layers of security in order to avoid actually executing those commands.</p>
<p>So, if you have <a href=""https://www.techtarget.com/searchapparchitecture/definition/UUID-Universal-Unique-Identifier"" rel=""nofollow noreferrer"">UUID</a>, randomly generated for all users and ensuring that it's unique, then a hacker would have no information what UUIDs are valid and which are not, so his efforts would mostly be in vain as the requests he would spend his resources upon would try to remove items that do not even exist. Your system could detect users/IP addresses, etc. that attempt to remove UUIDs that do not exist and block them.</p>
<p>Then your action can search for the entity by UUID, see <a href=""https://stackoverflow.com/questions/18350154/findbyuuid-using-spring-datas-jpa-repository"">FindByUUID() using Spring Data&#39;s JPA Repository</a></p>
<p>make further validations, as of whether the action is valid to be issued by the user with the UUID passed and if so, remove it.</p>
",1
UUID,Java,environment,77338052,"<p>Your extension is on the UUID instance, that's why it's not working when called as a static method (but, for example, <code>UUID.randomUUID().fromDatabase(...)</code> would work)</p>
<p>You would be able to do this if UUID class was written in Kotlin and had public companion object, so that your extension function would have been on <code>UUID.Companion</code>, but in this case it's impossible.</p>
",1
UUID,Java,environment,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",1
UUID,Java,environment,74570693,"<p>UUIDs are not generally reversible. There can be n number of strings that can generate a particular UUID.</p>
<p>What you want is some encryption/decryption mechanism. Let's say you use AES-256 symmetric encryption. You will just have to store a secret using which you can encrypt/decrypt the id. But in case the key gets compromised, you would be in a mess. If you change your key, all existing data will get corrupted. If you don't change, you have compromised all your data outside.</p>
<p>The first solution you mentioned here of having a database mapping between id &amp; UUID is not a dumb one. It is a good solution here.</p>
<p>All the things I mentioned above was considering that you want your ids to be internal &amp; hidden from outside. If it is not the case &amp; you are fine with exposing you ids outside, you can think of BASE-64 encoding your ids &amp; use them in third party API.</p>
",0
UUID,Java,environment,76074746,"<p>Have you tried mapping your ID field in the relationship so that JPA will set it for you based on the reference value? This is referred to as a derived ID, and there are a number of ways to do it based on what you need in your entity:</p>
<pre><code>public class AdditionalInformation {

    @Id
    private UUID projectId;

    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(&quot;projectid&quot;)
    @MapsId
    private Project project;
    
    private String someData;


    //Getters and setters etc...
}
</code></pre>
<p>Or you can just mark the project as the ID:</p>
<pre><code>public class AdditionalInformation {

    @Id
    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(&quot;projectid&quot;)
    private Project project;
    
    private String someData;

    //Getters and setters etc...
}
</code></pre>
<p>In both cases, you would use the UUID projectId value as the AdditionalInformation primary key for find by key lookups.</p>
",1
UUID,Java,alternative,76109523,"<h1>UUID</h1>
<p>Personally I think that using <a href=""https://en.wikipedia.org/wiki/Universally_unique_identifier"" rel=""nofollow noreferrer""><em>universally unique identifier (UUID)</em></a> is a better solution.</p>
<p>They are exactly designed for your situation: Where you need to generate unique identifiers without depending on a central registration authority, and without coordinating between the parties generating them.</p>
<p>Here is a an article about UUID in Java :  <a href=""https://www.baeldung.com/java-uuid"" rel=""nofollow noreferrer"">https://www.baeldung.com/java-uuid</a></p>
",0
UUID,Java,alternative,74707142,"<p>From the comments, the problem is due to the fact that you're creating a new random <code>UUID</code> in your constructor:</p>
<pre><code>public User(String name) {

    this.name = name;
    this.id = UUID.randomUUID();
}
</code></pre>
<p>To fix the randomness of the identifier, I would suggest adding the <code>UUID</code> as part of the constructor:</p>
<pre><code>public User(UUID id, String name) {

    this.id = id;
    this.name = name;
}

</code></pre>
<p>This way, you can always control the value of the identifier used.</p>
<p>In the long run, depending on how you architect your application, that identifier could come from a Factory object or a database.</p>
",1
UUID,Java,alternative,72454693,"<p>You'll have to implement a custom ID generator and your entity will have an ID of String as it's no longer going to be a valid UUID.</p>
<p>Something like this will work</p>
<pre><code>@Id
@GenericGenerator(name = &quot;mygen&quot;, strategy = &quot;com.abc.generator.IdGenerator&quot;)
@GeneratedValue(generator = &quot;mygen&quot;)
private String id;
</code></pre>
<p>Your generator will look like this:</p>
<pre><code>package com.abc.generator;

import java.io.Serializable;
import java.util.UUID;
import org.hibernate.HibernateException;
import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.id.IdentifierGenerator;

public class IdGenerator implements IdentifierGenerator {

   @Override
   public Serializable generate(SharedSessionContractImplementor sharedSessionContractImplementor, Object o)
    throws HibernateException {
       return UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);
   }
}
</code></pre>
",1
UUID,Java,alternative,76896240,"<p>A good option is to use <code>UUID</code>s.They can be used to uniquely identify a resource. They are unique universally and use 128 bits to store the information.</p>
<p>They look something like:</p>
<pre><code>cc26d321-58fc-4cc1-978a-03f2bbdb2a55
</code></pre>
<p>Just add a column of type <code>UUID</code> in your document entity and use it as the unique identifier.</p>
<p>It will solve your problem as well because it will be difficult to guess the next uuid in comparison to the integer numbers.</p>
<p>Moreover, you might consider authenticating the request as well if you do not want unauthorised users to access the resources.</p>
<p>More details here: <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html</a></p>
",0
UUID,Java,alternative,72983306,"<p>In your database, create a table where each row represents one particular user. That table would have their permanently assigned UUID, along with name, email, etc.</p>
<p>Some databases such as Postgres and <a href=""https://en.wikipedia.org/wiki/H2_(DBMS)"" rel=""nofollow noreferrer"">H2</a> support UUID as a built-in data type. Some databases proved a feature, perhaps as a plug-in, to generate a UUID value. For example, the <a href=""https://www.postgresql.org/docs/current/uuid-ossp.html"" rel=""nofollow noreferrer""><em>uuid-ossp</em></a> plug-in for Postgres. If not, you can generate a UUID in Java.</p>
<p>When creating an account for a user, create a row in that table. When a user logs in, look up their credentials in this table, retrieving their previously assigned UUID.</p>
<p>During the execution of your app, keep that retrieved UUID in memory as a <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/UUID.html"" rel=""nofollow noreferrer""><code>java.util.UUID</code></a> object. In a web app built on Jakarta Servlet, a good place to keep their UUID would be as an attribute on the Session. See <a href=""https://jakarta.ee/specifications/servlet/5.0/jakarta-servlet-spec-5.0.html#binding-attributes-into-a-session"" rel=""nofollow noreferrer""><em>Binding Attributes into a Session</em></a> in the spec. See <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#setAttribute(java.lang.String,java.lang.Object)"" rel=""nofollow noreferrer""><code>HttpSession#setAttribute</code></a> and <a href=""https://jakarta.ee/specifications/servlet/5.0/apidocs/jakarta/servlet/http/httpsession#getAttribute(java.lang.String)"" rel=""nofollow noreferrer""><code>getAttribute</code></a>.</p>
<p>When you write rows in other tables that belong to a particular user, include a column for their UUID. Include their UUID as a criteria in your queries.</p>
<p>You might want to look into <a href=""https://en.wikipedia.org/wiki/Multitenancy"" rel=""nofollow noreferrer"">multitenancy</a> as a topic.</p>
",0
UUID,Java,alternative,77338052,"<p>Your extension is on the UUID instance, that's why it's not working when called as a static method (but, for example, <code>UUID.randomUUID().fromDatabase(...)</code> would work)</p>
<p>You would be able to do this if UUID class was written in Kotlin and had public companion object, so that your extension function would have been on <code>UUID.Companion</code>, but in this case it's impossible.</p>
",1
UUID,Java,alternative,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",1
UUID,Java,alternative,77699058,"<p>The reason for the criticism is that usually the id is the primary key and it's a sequential number. Now, if you have, say, a user with an id of 1234, then a hacker will likely know that there must have been valid ids preceding your id, like 1233, 1232, etc. So, a malicious user might try to issue delete commands sequentially for those numbers and you rely on your extra layers of security in order to avoid actually executing those commands.</p>
<p>So, if you have <a href=""https://www.techtarget.com/searchapparchitecture/definition/UUID-Universal-Unique-Identifier"" rel=""nofollow noreferrer"">UUID</a>, randomly generated for all users and ensuring that it's unique, then a hacker would have no information what UUIDs are valid and which are not, so his efforts would mostly be in vain as the requests he would spend his resources upon would try to remove items that do not even exist. Your system could detect users/IP addresses, etc. that attempt to remove UUIDs that do not exist and block them.</p>
<p>Then your action can search for the entity by UUID, see <a href=""https://stackoverflow.com/questions/18350154/findbyuuid-using-spring-datas-jpa-repository"">FindByUUID() using Spring Data&#39;s JPA Repository</a></p>
<p>make further validations, as of whether the action is valid to be issued by the user with the UUID passed and if so, remove it.</p>
",1
UUID,Java,alternative,74570693,"<p>UUIDs are not generally reversible. There can be n number of strings that can generate a particular UUID.</p>
<p>What you want is some encryption/decryption mechanism. Let's say you use AES-256 symmetric encryption. You will just have to store a secret using which you can encrypt/decrypt the id. But in case the key gets compromised, you would be in a mess. If you change your key, all existing data will get corrupted. If you don't change, you have compromised all your data outside.</p>
<p>The first solution you mentioned here of having a database mapping between id &amp; UUID is not a dumb one. It is a good solution here.</p>
<p>All the things I mentioned above was considering that you want your ids to be internal &amp; hidden from outside. If it is not the case &amp; you are fine with exposing you ids outside, you can think of BASE-64 encoding your ids &amp; use them in third party API.</p>
",0
UUID,Java,alternative,77132434,"<p>I really suggest you to use <code> @UuidGenerator</code> instead of</p>
<pre><code>@GeneratedValue(strategy = GenerationType.AUTO, generator = &quot;UUID&quot;)
@GenericGenerator(name = &quot;UUID&quot;, type = org.hibernate.id.uuid.UuidGenerator.class)
</code></pre>
<p>Something like this:</p>
<pre><code>  @Id
  @UuidGenerator
  private UUID id; // or String
</code></pre>
<p>Because if you are going to check <code>java docs</code> of the annotation you will see that <code>@UuidGenerator</code> use
<code>@IdGeneratorType( org.hibernate.id.uuid.UuidGenerator.class )</code> that you need.</p>
<p>About the problem i really dont know where can be the problem but the solution that i suggest will help you to do this replacement also  when specifying <code>@UuidGenerator</code>, we can choose the concrete version of UUID to generate.</p>
<p>And also some motivation to use it is described into <a href=""https://docs.jboss.org/hibernate/orm/6.3/introduction/html_single/Hibernate_Introduction.html"" rel=""nofollow noreferrer"">8.5. User-defined generators</a></p>
<blockquote>
<p>These APIs are new in Hibernate 6, and supersede the classic IdentifierGenerator interface and @GenericGenerator annotation from older versions of Hibernate.</p>
<p>@UuidGenerator A more flexible generator for <a href=""https://www.ietf.org/rfc/rfc4122.txt"" rel=""nofollow noreferrer"">RFC 4122</a> UUIDs</p>
</blockquote>
",1
ActionBar,Android,functionality,65551504,"<p>This is related to our <strong>design</strong> , I think when <strong>design</strong> is sync with <code>Action bar</code> then it is <strong>better</strong> to use it but if we have flexible <strong>design</strong> we have to use custom <strong>Toolbar</strong>.</p>
<p>Some of <strong>benefits</strong> of an <code>Action bar</code> that cause <strong>developers</strong> select it at first :</p>
<p><strong>-Makes important actions accessible in a predictable way (such as Search).</strong></p>
<p><strong>-Supports consistent navigation and view switching within apps.(If you use navigation component is very simple to use Action bar)</strong></p>
<p><strong>-Reduces clutter by providing an action overflow for rarely used actions.</strong></p>
<p><strong>-Provides a dedicated space for giving your app an identity.</strong></p>
<p>And finaly Should you replace <code>ActionBar</code> with <code>ToolBar</code>? YES and NO. YES if you want the flexible header that comes with the <code>Toolbar</code>, NO if you don not need those flexible header. by flexibility, you can do things like <strong>adding</strong> background <strong>image</strong>, <strong>animations</strong>,...</p>
",1
ActionBar,Android,functionality,71819449,"<p>You had just created your <code>ActionMode.Callback</code> object, but you are not doing anything with it. You can create it outside of your <code>ClickListener</code> and just use the <code>Activity</code> method <code>startActionMode(ActionMode.Callback)</code> inside of you <code>ClickListener</code>.</p>
<p>Read the documentation for more information:
<a href=""https://developer.android.com/guide/topics/ui/menus.html#CAB"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/ui/menus.html#CAB</a></p>
",0
ActionBar,Android,functionality,65551446,"<p>As written in the google documentation <a href=""https://developer.android.com/training/appbar"" rel=""nofollow noreferrer"">https://developer.android.com/training/appbar</a></p>
<p>&quot;The app bar, also known as the action bar, is one of the most important design elements in your app's activities because it provides a visual structure and interactive elements that are familiar to users. [Pay attention to the point 'familiar to users'] Using the app bar makes your app consistent with other Android apps, allowing users to quickly understand how to operate your app and have a great experience. The key functions of the app bar are as follows:</p>
<ol>
<li>A dedicated space for giving your app an identity and indicating the user's location in the app.</li>
<li>Access to important actions in a predictable way, such as search.</li>
<li>Support for navigation and view switching (with tabs or drop-down lists).&quot;</li>
</ol>
<p>To your question.</p>
<p>Yes, it is a valid point that custom action bars provide very robust and diverse functionality, but the point here lies in UI/UX part of the software development.</p>
<p>As you saw in the documentation</p>
<ol>
<li>Familiarity to users</li>
<li>Consistency in design</li>
</ol>
<p>Users are not comfortable with design changes as in general, because</p>
<ol>
<li><p>Most of them do not even care about the design they just have to do what they have to do.</p>
</li>
<li><p>They have to again familiarize themselves to the new design so that they could remember it and navigate through the user interface faster.</p>
</li>
</ol>
<p>So keeping software development aside for a while it becomes a bit difficult for the end-user.</p>
<p>Also, It might be that the default UI elements work better with the operating system [Cache, CPU, etc. ]</p>
",1
ActionBar,Android,functionality,65796483,"<p>I think global actions can help solve your problem.
You can put them on the same level as the fragments in the navigation graph.
At least the navigation graph would be less cluttered</p>
<p><strong>Example:</strong></p>
<pre class=""lang-xml prettyprint-override""><code>&lt;navigation xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    
    &lt;fragment
        android:id=&quot;@+id/coolFragment&quot;
     ...
    /&gt;
     
    &lt;action
        android:id=&quot;@+id/coolFragmentAction&quot;
        app:destination=&quot;@id/coolFragment&quot; /&gt;
&lt;/navigation&gt;

</code></pre>
<p>You can read more about it here:
<a href=""https://developer.android.com/guide/navigation/navigation-global-action"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-global-action</a></p>
",0
ActionBar,Android,functionality,64153202,"<p>It is possible to get the launch intent of an action defined in the navigation graph.
To achieve it you need to:</p>
<ol>
<li>Get the navigation direction (NavDirections)</li>
<li>Get the action ID and use it to get the Action from the navigation controller</li>
<li>Get the destination ID from the Action</li>
<li>Find the node in the graph using the destination ID</li>
<li>Get the Intent from that ActivityNavigator.Destination node</li>
</ol>
<pre class=""lang-kotlin prettyprint-override""><code>val direction = MyGeneratedDirections.actionOpenMyDestination(myParam)
val destId = findNavController().currentDestination.getAction(direction.actionId).destinationId
val intent = (findNavController().graph.findNode(destId) as? ActivityNavigator.Destination)?.intent
</code></pre>
<p>See <a href=""https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()"" rel=""nofollow noreferrer"">https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()</a></p>
",0
ActionBar,Android,functionality,77464305,"<p><code>android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS</code> is equals to <code>android.settings.APPLICATION_DETAILS_SETTINGS</code> String. And package URL is just your application package (applicationId) with <code>package:</code> scheme: <code>package:com.example.application</code></p>
<ol>
<li><p>Create <code>activity</code> tag inside navigation graph with corresponding intent action and data.</p>
<pre><code>&lt;activity
    android:id=&quot;@+id/app_settings&quot;
    app:action=&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;
    app:data=&quot;package:com.example.application&quot;
/&gt;
</code></pre>
</li>
<li><p>Create <code>action</code> tag inside navigation graph with previously created activity</p>
<pre><code>&lt;action
    android:id=&quot;@+id/action_global_to_app_settings&quot;
    app:destination=&quot;@id/app_settings&quot;
/&gt;
</code></pre>
</li>
<li><p>Navigate to created action with Navigation Component</p>
<pre><code>navController.navigate(NavGraphDirections.actionGlobalToAppSettings())
</code></pre>
</li>
</ol>
",0
ActionBar,Android,functionality,64196683,"<p>I see that you're using multiple activities. I suggest you use the navigation components. What you are wanting to do becomes much easier. Check the docs: <a href=""https://developer.android.com/guide/navigation/navigation-ui"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-ui</a></p>
",0
ActionBar,Android,functionality,75936073,"<p>In code you have mentioned, you're trying to do two things at once that is setting <code>actionbar</code> title and <code>toolbar</code> title. That is why its not working.</p>
<p><strong>Solution:</strong></p>
<p>If you want to set <strong>title</strong> to your <strong>Actionbar</strong> this is how you can do it:</p>
<pre><code> ActionBar actionBar = getSupportActionBar();
 actionBar.setTitle(&quot;ACTIONBAR TITLE&quot;);
</code></pre>
<p>Now if you want to set <strong>title</strong> to <strong>Custom toolbar</strong> that you have created you can do it like this:</p>
<pre><code>Toolbar toolbar = findViewById(R.id.toolbar);
toolbar.setTitle(&quot;TOOLBAR TITLE&quot;);
</code></pre>
<p><strong>Remember:</strong></p>
<p><strong>ActionBar</strong> is the element present at the top of the activity screen. It is a salient feature of a mobile application that has a consistent presence over all its activities.</p>
<p><strong>Toolbar</strong> is a View included in a layout like any other View. As a regular View , the toolbar is easier to position, animate and control. Multiple distinct Toolbar elements can be defined within a single activity.</p>
<p>Let me know if it you any doubts. Happy Coding!!</p>
",1
ActionBar,Android,functionality,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,functionality,64041015,"<p>I have made a plugin to implement this.</p>
<p>Please check out: <a href=""https://pub.dev/packages/action_process_text"" rel=""nofollow noreferrer"">action_process_text Plugin</a> .</p>
<p>First, include it in your project.</p>
<pre class=""lang-yaml prettyprint-override""><code>dependencies:
  action_process_text: &lt;latest version&gt;
</code></pre>
<p>Run pub get and get packages.</p>
<p>Add this to <code>AndroidManifest.xml</code> in the <code>android\app\src\main\</code> folder.</p>
<pre class=""lang-xml prettyprint-override""><code> &lt;activity android:name=&quot;com.example.action_process_text.ActionProcessTextPlugin&quot;
            android:label=&quot;Action_Text&quot; android:theme=&quot;@style/LaunchTheme&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.PROCESS_TEXT&quot; /&gt;
                &lt;data android:mimeType=&quot;text/plain&quot;/&gt;
                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;
            &lt;/intent-filter&gt;
   &lt;/activity&gt;
</code></pre>
<p>Change the <code>android:label</code> from <code>Action_Text</code> to the action text that you want to display.</p>
<p>Then import the package to use it.</p>
<pre class=""lang-dart prettyprint-override""><code>import 'package:action_process_text/action_process_text.dart';
</code></pre>
<p>Now, use the constructor of the widget to initialize the action_process_text. <code>ActionProcessText.getInputText</code> is used to get the selected text from the android action.</p>
<p><strong>Example snippet:</strong></p>
<pre class=""lang-dart prettyprint-override""><code>class MainPage extends StatefulWidget {
  @override
  _MainPageState createState() =&gt; _MainPageState();
}

class _MainPageState extends State&lt;MainPage&gt; {
  _MainPageState() {
    initActionProcessText();
  }

  Future&lt;void&gt; initActionProcessText() async {
    inputText = await ActionProcessText.getInputText;
    setState(() {});
  }

  String inputText = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold();
  }
  }
</code></pre>
<p>And check out my article on this plugin at: <a href=""https://medium.com/@coder_with_a_bushido/adding-text-selection-action-in-android-for-flutter-apps-d107c5d4c5ae?source=friends_link&amp;sk=ed13c797f8343cedf188f87b5b1db286"" rel=""nofollow noreferrer"">Article on action_process_text</a> .</p>
<p>Please support this package by letting fellow flutter developers know about it and feel free to open issues/bugs and PRs on my github repo: <a href=""https://github.com/coder-with-a-bushido/ACTION_PROCESS_TEXT-Flutter"" rel=""nofollow noreferrer"">action_process_text Source</a> .</p>
",0
ActionBar,Android,concept,65551504,"<p>This is related to our <strong>design</strong> , I think when <strong>design</strong> is sync with <code>Action bar</code> then it is <strong>better</strong> to use it but if we have flexible <strong>design</strong> we have to use custom <strong>Toolbar</strong>.</p>
<p>Some of <strong>benefits</strong> of an <code>Action bar</code> that cause <strong>developers</strong> select it at first :</p>
<p><strong>-Makes important actions accessible in a predictable way (such as Search).</strong></p>
<p><strong>-Supports consistent navigation and view switching within apps.(If you use navigation component is very simple to use Action bar)</strong></p>
<p><strong>-Reduces clutter by providing an action overflow for rarely used actions.</strong></p>
<p><strong>-Provides a dedicated space for giving your app an identity.</strong></p>
<p>And finaly Should you replace <code>ActionBar</code> with <code>ToolBar</code>? YES and NO. YES if you want the flexible header that comes with the <code>Toolbar</code>, NO if you don not need those flexible header. by flexibility, you can do things like <strong>adding</strong> background <strong>image</strong>, <strong>animations</strong>,...</p>
",1
ActionBar,Android,concept,65551446,"<p>As written in the google documentation <a href=""https://developer.android.com/training/appbar"" rel=""nofollow noreferrer"">https://developer.android.com/training/appbar</a></p>
<p>&quot;The app bar, also known as the action bar, is one of the most important design elements in your app's activities because it provides a visual structure and interactive elements that are familiar to users. [Pay attention to the point 'familiar to users'] Using the app bar makes your app consistent with other Android apps, allowing users to quickly understand how to operate your app and have a great experience. The key functions of the app bar are as follows:</p>
<ol>
<li>A dedicated space for giving your app an identity and indicating the user's location in the app.</li>
<li>Access to important actions in a predictable way, such as search.</li>
<li>Support for navigation and view switching (with tabs or drop-down lists).&quot;</li>
</ol>
<p>To your question.</p>
<p>Yes, it is a valid point that custom action bars provide very robust and diverse functionality, but the point here lies in UI/UX part of the software development.</p>
<p>As you saw in the documentation</p>
<ol>
<li>Familiarity to users</li>
<li>Consistency in design</li>
</ol>
<p>Users are not comfortable with design changes as in general, because</p>
<ol>
<li><p>Most of them do not even care about the design they just have to do what they have to do.</p>
</li>
<li><p>They have to again familiarize themselves to the new design so that they could remember it and navigate through the user interface faster.</p>
</li>
</ol>
<p>So keeping software development aside for a while it becomes a bit difficult for the end-user.</p>
<p>Also, It might be that the default UI elements work better with the operating system [Cache, CPU, etc. ]</p>
",1
ActionBar,Android,concept,71819449,"<p>You had just created your <code>ActionMode.Callback</code> object, but you are not doing anything with it. You can create it outside of your <code>ClickListener</code> and just use the <code>Activity</code> method <code>startActionMode(ActionMode.Callback)</code> inside of you <code>ClickListener</code>.</p>
<p>Read the documentation for more information:
<a href=""https://developer.android.com/guide/topics/ui/menus.html#CAB"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/ui/menus.html#CAB</a></p>
",0
ActionBar,Android,concept,65796483,"<p>I think global actions can help solve your problem.
You can put them on the same level as the fragments in the navigation graph.
At least the navigation graph would be less cluttered</p>
<p><strong>Example:</strong></p>
<pre class=""lang-xml prettyprint-override""><code>&lt;navigation xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    
    &lt;fragment
        android:id=&quot;@+id/coolFragment&quot;
     ...
    /&gt;
     
    &lt;action
        android:id=&quot;@+id/coolFragmentAction&quot;
        app:destination=&quot;@id/coolFragment&quot; /&gt;
&lt;/navigation&gt;

</code></pre>
<p>You can read more about it here:
<a href=""https://developer.android.com/guide/navigation/navigation-global-action"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-global-action</a></p>
",0
ActionBar,Android,concept,64153202,"<p>It is possible to get the launch intent of an action defined in the navigation graph.
To achieve it you need to:</p>
<ol>
<li>Get the navigation direction (NavDirections)</li>
<li>Get the action ID and use it to get the Action from the navigation controller</li>
<li>Get the destination ID from the Action</li>
<li>Find the node in the graph using the destination ID</li>
<li>Get the Intent from that ActivityNavigator.Destination node</li>
</ol>
<pre class=""lang-kotlin prettyprint-override""><code>val direction = MyGeneratedDirections.actionOpenMyDestination(myParam)
val destId = findNavController().currentDestination.getAction(direction.actionId).destinationId
val intent = (findNavController().graph.findNode(destId) as? ActivityNavigator.Destination)?.intent
</code></pre>
<p>See <a href=""https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()"" rel=""nofollow noreferrer"">https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()</a></p>
",0
ActionBar,Android,concept,77464305,"<p><code>android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS</code> is equals to <code>android.settings.APPLICATION_DETAILS_SETTINGS</code> String. And package URL is just your application package (applicationId) with <code>package:</code> scheme: <code>package:com.example.application</code></p>
<ol>
<li><p>Create <code>activity</code> tag inside navigation graph with corresponding intent action and data.</p>
<pre><code>&lt;activity
    android:id=&quot;@+id/app_settings&quot;
    app:action=&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;
    app:data=&quot;package:com.example.application&quot;
/&gt;
</code></pre>
</li>
<li><p>Create <code>action</code> tag inside navigation graph with previously created activity</p>
<pre><code>&lt;action
    android:id=&quot;@+id/action_global_to_app_settings&quot;
    app:destination=&quot;@id/app_settings&quot;
/&gt;
</code></pre>
</li>
<li><p>Navigate to created action with Navigation Component</p>
<pre><code>navController.navigate(NavGraphDirections.actionGlobalToAppSettings())
</code></pre>
</li>
</ol>
",0
ActionBar,Android,concept,64196683,"<p>I see that you're using multiple activities. I suggest you use the navigation components. What you are wanting to do becomes much easier. Check the docs: <a href=""https://developer.android.com/guide/navigation/navigation-ui"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-ui</a></p>
",0
ActionBar,Android,concept,75936073,"<p>In code you have mentioned, you're trying to do two things at once that is setting <code>actionbar</code> title and <code>toolbar</code> title. That is why its not working.</p>
<p><strong>Solution:</strong></p>
<p>If you want to set <strong>title</strong> to your <strong>Actionbar</strong> this is how you can do it:</p>
<pre><code> ActionBar actionBar = getSupportActionBar();
 actionBar.setTitle(&quot;ACTIONBAR TITLE&quot;);
</code></pre>
<p>Now if you want to set <strong>title</strong> to <strong>Custom toolbar</strong> that you have created you can do it like this:</p>
<pre><code>Toolbar toolbar = findViewById(R.id.toolbar);
toolbar.setTitle(&quot;TOOLBAR TITLE&quot;);
</code></pre>
<p><strong>Remember:</strong></p>
<p><strong>ActionBar</strong> is the element present at the top of the activity screen. It is a salient feature of a mobile application that has a consistent presence over all its activities.</p>
<p><strong>Toolbar</strong> is a View included in a layout like any other View. As a regular View , the toolbar is easier to position, animate and control. Multiple distinct Toolbar elements can be defined within a single activity.</p>
<p>Let me know if it you any doubts. Happy Coding!!</p>
",1
ActionBar,Android,concept,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,concept,64041015,"<p>I have made a plugin to implement this.</p>
<p>Please check out: <a href=""https://pub.dev/packages/action_process_text"" rel=""nofollow noreferrer"">action_process_text Plugin</a> .</p>
<p>First, include it in your project.</p>
<pre class=""lang-yaml prettyprint-override""><code>dependencies:
  action_process_text: &lt;latest version&gt;
</code></pre>
<p>Run pub get and get packages.</p>
<p>Add this to <code>AndroidManifest.xml</code> in the <code>android\app\src\main\</code> folder.</p>
<pre class=""lang-xml prettyprint-override""><code> &lt;activity android:name=&quot;com.example.action_process_text.ActionProcessTextPlugin&quot;
            android:label=&quot;Action_Text&quot; android:theme=&quot;@style/LaunchTheme&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.PROCESS_TEXT&quot; /&gt;
                &lt;data android:mimeType=&quot;text/plain&quot;/&gt;
                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;
            &lt;/intent-filter&gt;
   &lt;/activity&gt;
</code></pre>
<p>Change the <code>android:label</code> from <code>Action_Text</code> to the action text that you want to display.</p>
<p>Then import the package to use it.</p>
<pre class=""lang-dart prettyprint-override""><code>import 'package:action_process_text/action_process_text.dart';
</code></pre>
<p>Now, use the constructor of the widget to initialize the action_process_text. <code>ActionProcessText.getInputText</code> is used to get the selected text from the android action.</p>
<p><strong>Example snippet:</strong></p>
<pre class=""lang-dart prettyprint-override""><code>class MainPage extends StatefulWidget {
  @override
  _MainPageState createState() =&gt; _MainPageState();
}

class _MainPageState extends State&lt;MainPage&gt; {
  _MainPageState() {
    initActionProcessText();
  }

  Future&lt;void&gt; initActionProcessText() async {
    inputText = await ActionProcessText.getInputText;
    setState(() {});
  }

  String inputText = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold();
  }
  }
</code></pre>
<p>And check out my article on this plugin at: <a href=""https://medium.com/@coder_with_a_bushido/adding-text-selection-action-in-android-for-flutter-apps-d107c5d4c5ae?source=friends_link&amp;sk=ed13c797f8343cedf188f87b5b1db286"" rel=""nofollow noreferrer"">Article on action_process_text</a> .</p>
<p>Please support this package by letting fellow flutter developers know about it and feel free to open issues/bugs and PRs on my github repo: <a href=""https://github.com/coder-with-a-bushido/ACTION_PROCESS_TEXT-Flutter"" rel=""nofollow noreferrer"">action_process_text Source</a> .</p>
",0
ActionBar,Android,performance,65551504,"<p>This is related to our <strong>design</strong> , I think when <strong>design</strong> is sync with <code>Action bar</code> then it is <strong>better</strong> to use it but if we have flexible <strong>design</strong> we have to use custom <strong>Toolbar</strong>.</p>
<p>Some of <strong>benefits</strong> of an <code>Action bar</code> that cause <strong>developers</strong> select it at first :</p>
<p><strong>-Makes important actions accessible in a predictable way (such as Search).</strong></p>
<p><strong>-Supports consistent navigation and view switching within apps.(If you use navigation component is very simple to use Action bar)</strong></p>
<p><strong>-Reduces clutter by providing an action overflow for rarely used actions.</strong></p>
<p><strong>-Provides a dedicated space for giving your app an identity.</strong></p>
<p>And finaly Should you replace <code>ActionBar</code> with <code>ToolBar</code>? YES and NO. YES if you want the flexible header that comes with the <code>Toolbar</code>, NO if you don not need those flexible header. by flexibility, you can do things like <strong>adding</strong> background <strong>image</strong>, <strong>animations</strong>,...</p>
",0
ActionBar,Android,performance,71819449,"<p>You had just created your <code>ActionMode.Callback</code> object, but you are not doing anything with it. You can create it outside of your <code>ClickListener</code> and just use the <code>Activity</code> method <code>startActionMode(ActionMode.Callback)</code> inside of you <code>ClickListener</code>.</p>
<p>Read the documentation for more information:
<a href=""https://developer.android.com/guide/topics/ui/menus.html#CAB"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/ui/menus.html#CAB</a></p>
",0
ActionBar,Android,performance,65551446,"<p>As written in the google documentation <a href=""https://developer.android.com/training/appbar"" rel=""nofollow noreferrer"">https://developer.android.com/training/appbar</a></p>
<p>&quot;The app bar, also known as the action bar, is one of the most important design elements in your app's activities because it provides a visual structure and interactive elements that are familiar to users. [Pay attention to the point 'familiar to users'] Using the app bar makes your app consistent with other Android apps, allowing users to quickly understand how to operate your app and have a great experience. The key functions of the app bar are as follows:</p>
<ol>
<li>A dedicated space for giving your app an identity and indicating the user's location in the app.</li>
<li>Access to important actions in a predictable way, such as search.</li>
<li>Support for navigation and view switching (with tabs or drop-down lists).&quot;</li>
</ol>
<p>To your question.</p>
<p>Yes, it is a valid point that custom action bars provide very robust and diverse functionality, but the point here lies in UI/UX part of the software development.</p>
<p>As you saw in the documentation</p>
<ol>
<li>Familiarity to users</li>
<li>Consistency in design</li>
</ol>
<p>Users are not comfortable with design changes as in general, because</p>
<ol>
<li><p>Most of them do not even care about the design they just have to do what they have to do.</p>
</li>
<li><p>They have to again familiarize themselves to the new design so that they could remember it and navigate through the user interface faster.</p>
</li>
</ol>
<p>So keeping software development aside for a while it becomes a bit difficult for the end-user.</p>
<p>Also, It might be that the default UI elements work better with the operating system [Cache, CPU, etc. ]</p>
",0
ActionBar,Android,performance,65796483,"<p>I think global actions can help solve your problem.
You can put them on the same level as the fragments in the navigation graph.
At least the navigation graph would be less cluttered</p>
<p><strong>Example:</strong></p>
<pre class=""lang-xml prettyprint-override""><code>&lt;navigation xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    
    &lt;fragment
        android:id=&quot;@+id/coolFragment&quot;
     ...
    /&gt;
     
    &lt;action
        android:id=&quot;@+id/coolFragmentAction&quot;
        app:destination=&quot;@id/coolFragment&quot; /&gt;
&lt;/navigation&gt;

</code></pre>
<p>You can read more about it here:
<a href=""https://developer.android.com/guide/navigation/navigation-global-action"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-global-action</a></p>
",0
ActionBar,Android,performance,75936073,"<p>In code you have mentioned, you're trying to do two things at once that is setting <code>actionbar</code> title and <code>toolbar</code> title. That is why its not working.</p>
<p><strong>Solution:</strong></p>
<p>If you want to set <strong>title</strong> to your <strong>Actionbar</strong> this is how you can do it:</p>
<pre><code> ActionBar actionBar = getSupportActionBar();
 actionBar.setTitle(&quot;ACTIONBAR TITLE&quot;);
</code></pre>
<p>Now if you want to set <strong>title</strong> to <strong>Custom toolbar</strong> that you have created you can do it like this:</p>
<pre><code>Toolbar toolbar = findViewById(R.id.toolbar);
toolbar.setTitle(&quot;TOOLBAR TITLE&quot;);
</code></pre>
<p><strong>Remember:</strong></p>
<p><strong>ActionBar</strong> is the element present at the top of the activity screen. It is a salient feature of a mobile application that has a consistent presence over all its activities.</p>
<p><strong>Toolbar</strong> is a View included in a layout like any other View. As a regular View , the toolbar is easier to position, animate and control. Multiple distinct Toolbar elements can be defined within a single activity.</p>
<p>Let me know if it you any doubts. Happy Coding!!</p>
",0
ActionBar,Android,performance,64196683,"<p>I see that you're using multiple activities. I suggest you use the navigation components. What you are wanting to do becomes much easier. Check the docs: <a href=""https://developer.android.com/guide/navigation/navigation-ui"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-ui</a></p>
",0
ActionBar,Android,performance,77464305,"<p><code>android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS</code> is equals to <code>android.settings.APPLICATION_DETAILS_SETTINGS</code> String. And package URL is just your application package (applicationId) with <code>package:</code> scheme: <code>package:com.example.application</code></p>
<ol>
<li><p>Create <code>activity</code> tag inside navigation graph with corresponding intent action and data.</p>
<pre><code>&lt;activity
    android:id=&quot;@+id/app_settings&quot;
    app:action=&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;
    app:data=&quot;package:com.example.application&quot;
/&gt;
</code></pre>
</li>
<li><p>Create <code>action</code> tag inside navigation graph with previously created activity</p>
<pre><code>&lt;action
    android:id=&quot;@+id/action_global_to_app_settings&quot;
    app:destination=&quot;@id/app_settings&quot;
/&gt;
</code></pre>
</li>
<li><p>Navigate to created action with Navigation Component</p>
<pre><code>navController.navigate(NavGraphDirections.actionGlobalToAppSettings())
</code></pre>
</li>
</ol>
",0
ActionBar,Android,performance,64153202,"<p>It is possible to get the launch intent of an action defined in the navigation graph.
To achieve it you need to:</p>
<ol>
<li>Get the navigation direction (NavDirections)</li>
<li>Get the action ID and use it to get the Action from the navigation controller</li>
<li>Get the destination ID from the Action</li>
<li>Find the node in the graph using the destination ID</li>
<li>Get the Intent from that ActivityNavigator.Destination node</li>
</ol>
<pre class=""lang-kotlin prettyprint-override""><code>val direction = MyGeneratedDirections.actionOpenMyDestination(myParam)
val destId = findNavController().currentDestination.getAction(direction.actionId).destinationId
val intent = (findNavController().graph.findNode(destId) as? ActivityNavigator.Destination)?.intent
</code></pre>
<p>See <a href=""https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()"" rel=""nofollow noreferrer"">https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()</a></p>
",0
ActionBar,Android,performance,63978131,"<p>There are three ways to get that notification icon depending upon the theme you are using in your Activity.</p>
<p><strong>1. No.ActionBar Theme:</strong> If you're not using any ActionBar or toolbar in your activity then you can create a View(ImageView or Button) in your Activity's layout file with Height and Width as same as the notification icon which is around 28dp and then position it at the top right corner of the screen. You can change the background image of the view according to the state you want.</p>
<p><strong>2. Create your own toolbar:</strong> You can create your own toolbar and set the menu item in it. While creating the menu item make sure that you select <code>showAsAction=&quot;always&quot;</code> this way your icon is always visible. here is a <a href=""https://codinginflow.com/tutorials/android/toolbar"" rel=""nofollow noreferrer"">link</a> for the reference</p>
<p><strong>3.ActionBar Theme:</strong> If you're using the action bar theme then you can create a menu file with one item like in Option 2 and then override the onCreateOptionsMenu and inflate then inflate your menu in it.</p>
",0
ActionBar,Android,performance,67254817,"<p>If you use the toolbar inside an activity you can set the toolbar as support action bar by calling <code>setSupportActionBar</code> inside your activity and then set up the action bar with the nav controller by calling <code>NavigationUI.setupActionBarWithNavController</code>.</p>
<p>You get the animation because NavigationUI uses <code>ToolbarOnDestinationChangedListener</code> class if you set up it with toolbar, and this class has the following method:</p>
<pre><code>@Override
    protected void setNavigationIcon(Drawable icon,
            @StringRes int contentDescription) {
        Toolbar toolbar = mToolbarWeakReference.get();
        if (toolbar != null) {
            boolean useTransition = icon == null &amp;&amp; toolbar.getNavigationIcon() != null;
            toolbar.setNavigationIcon(icon);
            toolbar.setNavigationContentDescription(contentDescription);
            if (useTransition) {
                TransitionManager.beginDelayedTransition(toolbar);
            }
        }
    }
</code></pre>
<p>As you can see, this method uses <code>TransitionManager</code> to animate removing of navigation icon, but it also affects the title. I don't think you can disable it.</p>
",0
ActionBar,Android,directive,65551504,"<p>This is related to our <strong>design</strong> , I think when <strong>design</strong> is sync with <code>Action bar</code> then it is <strong>better</strong> to use it but if we have flexible <strong>design</strong> we have to use custom <strong>Toolbar</strong>.</p>
<p>Some of <strong>benefits</strong> of an <code>Action bar</code> that cause <strong>developers</strong> select it at first :</p>
<p><strong>-Makes important actions accessible in a predictable way (such as Search).</strong></p>
<p><strong>-Supports consistent navigation and view switching within apps.(If you use navigation component is very simple to use Action bar)</strong></p>
<p><strong>-Reduces clutter by providing an action overflow for rarely used actions.</strong></p>
<p><strong>-Provides a dedicated space for giving your app an identity.</strong></p>
<p>And finaly Should you replace <code>ActionBar</code> with <code>ToolBar</code>? YES and NO. YES if you want the flexible header that comes with the <code>Toolbar</code>, NO if you don not need those flexible header. by flexibility, you can do things like <strong>adding</strong> background <strong>image</strong>, <strong>animations</strong>,...</p>
",0
ActionBar,Android,directive,65551446,"<p>As written in the google documentation <a href=""https://developer.android.com/training/appbar"" rel=""nofollow noreferrer"">https://developer.android.com/training/appbar</a></p>
<p>&quot;The app bar, also known as the action bar, is one of the most important design elements in your app's activities because it provides a visual structure and interactive elements that are familiar to users. [Pay attention to the point 'familiar to users'] Using the app bar makes your app consistent with other Android apps, allowing users to quickly understand how to operate your app and have a great experience. The key functions of the app bar are as follows:</p>
<ol>
<li>A dedicated space for giving your app an identity and indicating the user's location in the app.</li>
<li>Access to important actions in a predictable way, such as search.</li>
<li>Support for navigation and view switching (with tabs or drop-down lists).&quot;</li>
</ol>
<p>To your question.</p>
<p>Yes, it is a valid point that custom action bars provide very robust and diverse functionality, but the point here lies in UI/UX part of the software development.</p>
<p>As you saw in the documentation</p>
<ol>
<li>Familiarity to users</li>
<li>Consistency in design</li>
</ol>
<p>Users are not comfortable with design changes as in general, because</p>
<ol>
<li><p>Most of them do not even care about the design they just have to do what they have to do.</p>
</li>
<li><p>They have to again familiarize themselves to the new design so that they could remember it and navigate through the user interface faster.</p>
</li>
</ol>
<p>So keeping software development aside for a while it becomes a bit difficult for the end-user.</p>
<p>Also, It might be that the default UI elements work better with the operating system [Cache, CPU, etc. ]</p>
",0
ActionBar,Android,directive,64153202,"<p>It is possible to get the launch intent of an action defined in the navigation graph.
To achieve it you need to:</p>
<ol>
<li>Get the navigation direction (NavDirections)</li>
<li>Get the action ID and use it to get the Action from the navigation controller</li>
<li>Get the destination ID from the Action</li>
<li>Find the node in the graph using the destination ID</li>
<li>Get the Intent from that ActivityNavigator.Destination node</li>
</ol>
<pre class=""lang-kotlin prettyprint-override""><code>val direction = MyGeneratedDirections.actionOpenMyDestination(myParam)
val destId = findNavController().currentDestination.getAction(direction.actionId).destinationId
val intent = (findNavController().graph.findNode(destId) as? ActivityNavigator.Destination)?.intent
</code></pre>
<p>See <a href=""https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()"" rel=""nofollow noreferrer"">https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()</a></p>
",0
ActionBar,Android,directive,71819449,"<p>You had just created your <code>ActionMode.Callback</code> object, but you are not doing anything with it. You can create it outside of your <code>ClickListener</code> and just use the <code>Activity</code> method <code>startActionMode(ActionMode.Callback)</code> inside of you <code>ClickListener</code>.</p>
<p>Read the documentation for more information:
<a href=""https://developer.android.com/guide/topics/ui/menus.html#CAB"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/ui/menus.html#CAB</a></p>
",0
ActionBar,Android,directive,65796483,"<p>I think global actions can help solve your problem.
You can put them on the same level as the fragments in the navigation graph.
At least the navigation graph would be less cluttered</p>
<p><strong>Example:</strong></p>
<pre class=""lang-xml prettyprint-override""><code>&lt;navigation xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    
    &lt;fragment
        android:id=&quot;@+id/coolFragment&quot;
     ...
    /&gt;
     
    &lt;action
        android:id=&quot;@+id/coolFragmentAction&quot;
        app:destination=&quot;@id/coolFragment&quot; /&gt;
&lt;/navigation&gt;

</code></pre>
<p>You can read more about it here:
<a href=""https://developer.android.com/guide/navigation/navigation-global-action"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-global-action</a></p>
",0
ActionBar,Android,directive,64196683,"<p>I see that you're using multiple activities. I suggest you use the navigation components. What you are wanting to do becomes much easier. Check the docs: <a href=""https://developer.android.com/guide/navigation/navigation-ui"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-ui</a></p>
",0
ActionBar,Android,directive,77464305,"<p><code>android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS</code> is equals to <code>android.settings.APPLICATION_DETAILS_SETTINGS</code> String. And package URL is just your application package (applicationId) with <code>package:</code> scheme: <code>package:com.example.application</code></p>
<ol>
<li><p>Create <code>activity</code> tag inside navigation graph with corresponding intent action and data.</p>
<pre><code>&lt;activity
    android:id=&quot;@+id/app_settings&quot;
    app:action=&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;
    app:data=&quot;package:com.example.application&quot;
/&gt;
</code></pre>
</li>
<li><p>Create <code>action</code> tag inside navigation graph with previously created activity</p>
<pre><code>&lt;action
    android:id=&quot;@+id/action_global_to_app_settings&quot;
    app:destination=&quot;@id/app_settings&quot;
/&gt;
</code></pre>
</li>
<li><p>Navigate to created action with Navigation Component</p>
<pre><code>navController.navigate(NavGraphDirections.actionGlobalToAppSettings())
</code></pre>
</li>
</ol>
",0
ActionBar,Android,directive,63978131,"<p>There are three ways to get that notification icon depending upon the theme you are using in your Activity.</p>
<p><strong>1. No.ActionBar Theme:</strong> If you're not using any ActionBar or toolbar in your activity then you can create a View(ImageView or Button) in your Activity's layout file with Height and Width as same as the notification icon which is around 28dp and then position it at the top right corner of the screen. You can change the background image of the view according to the state you want.</p>
<p><strong>2. Create your own toolbar:</strong> You can create your own toolbar and set the menu item in it. While creating the menu item make sure that you select <code>showAsAction=&quot;always&quot;</code> this way your icon is always visible. here is a <a href=""https://codinginflow.com/tutorials/android/toolbar"" rel=""nofollow noreferrer"">link</a> for the reference</p>
<p><strong>3.ActionBar Theme:</strong> If you're using the action bar theme then you can create a menu file with one item like in Option 2 and then override the onCreateOptionsMenu and inflate then inflate your menu in it.</p>
",0
ActionBar,Android,directive,75936073,"<p>In code you have mentioned, you're trying to do two things at once that is setting <code>actionbar</code> title and <code>toolbar</code> title. That is why its not working.</p>
<p><strong>Solution:</strong></p>
<p>If you want to set <strong>title</strong> to your <strong>Actionbar</strong> this is how you can do it:</p>
<pre><code> ActionBar actionBar = getSupportActionBar();
 actionBar.setTitle(&quot;ACTIONBAR TITLE&quot;);
</code></pre>
<p>Now if you want to set <strong>title</strong> to <strong>Custom toolbar</strong> that you have created you can do it like this:</p>
<pre><code>Toolbar toolbar = findViewById(R.id.toolbar);
toolbar.setTitle(&quot;TOOLBAR TITLE&quot;);
</code></pre>
<p><strong>Remember:</strong></p>
<p><strong>ActionBar</strong> is the element present at the top of the activity screen. It is a salient feature of a mobile application that has a consistent presence over all its activities.</p>
<p><strong>Toolbar</strong> is a View included in a layout like any other View. As a regular View , the toolbar is easier to position, animate and control. Multiple distinct Toolbar elements can be defined within a single activity.</p>
<p>Let me know if it you any doubts. Happy Coding!!</p>
",1
ActionBar,Android,directive,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,pattern,65551504,"<p>This is related to our <strong>design</strong> , I think when <strong>design</strong> is sync with <code>Action bar</code> then it is <strong>better</strong> to use it but if we have flexible <strong>design</strong> we have to use custom <strong>Toolbar</strong>.</p>
<p>Some of <strong>benefits</strong> of an <code>Action bar</code> that cause <strong>developers</strong> select it at first :</p>
<p><strong>-Makes important actions accessible in a predictable way (such as Search).</strong></p>
<p><strong>-Supports consistent navigation and view switching within apps.(If you use navigation component is very simple to use Action bar)</strong></p>
<p><strong>-Reduces clutter by providing an action overflow for rarely used actions.</strong></p>
<p><strong>-Provides a dedicated space for giving your app an identity.</strong></p>
<p>And finaly Should you replace <code>ActionBar</code> with <code>ToolBar</code>? YES and NO. YES if you want the flexible header that comes with the <code>Toolbar</code>, NO if you don not need those flexible header. by flexibility, you can do things like <strong>adding</strong> background <strong>image</strong>, <strong>animations</strong>,...</p>
",1
ActionBar,Android,pattern,71819449,"<p>You had just created your <code>ActionMode.Callback</code> object, but you are not doing anything with it. You can create it outside of your <code>ClickListener</code> and just use the <code>Activity</code> method <code>startActionMode(ActionMode.Callback)</code> inside of you <code>ClickListener</code>.</p>
<p>Read the documentation for more information:
<a href=""https://developer.android.com/guide/topics/ui/menus.html#CAB"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/ui/menus.html#CAB</a></p>
",0
ActionBar,Android,pattern,65551446,"<p>As written in the google documentation <a href=""https://developer.android.com/training/appbar"" rel=""nofollow noreferrer"">https://developer.android.com/training/appbar</a></p>
<p>&quot;The app bar, also known as the action bar, is one of the most important design elements in your app's activities because it provides a visual structure and interactive elements that are familiar to users. [Pay attention to the point 'familiar to users'] Using the app bar makes your app consistent with other Android apps, allowing users to quickly understand how to operate your app and have a great experience. The key functions of the app bar are as follows:</p>
<ol>
<li>A dedicated space for giving your app an identity and indicating the user's location in the app.</li>
<li>Access to important actions in a predictable way, such as search.</li>
<li>Support for navigation and view switching (with tabs or drop-down lists).&quot;</li>
</ol>
<p>To your question.</p>
<p>Yes, it is a valid point that custom action bars provide very robust and diverse functionality, but the point here lies in UI/UX part of the software development.</p>
<p>As you saw in the documentation</p>
<ol>
<li>Familiarity to users</li>
<li>Consistency in design</li>
</ol>
<p>Users are not comfortable with design changes as in general, because</p>
<ol>
<li><p>Most of them do not even care about the design they just have to do what they have to do.</p>
</li>
<li><p>They have to again familiarize themselves to the new design so that they could remember it and navigate through the user interface faster.</p>
</li>
</ol>
<p>So keeping software development aside for a while it becomes a bit difficult for the end-user.</p>
<p>Also, It might be that the default UI elements work better with the operating system [Cache, CPU, etc. ]</p>
",1
ActionBar,Android,pattern,64153202,"<p>It is possible to get the launch intent of an action defined in the navigation graph.
To achieve it you need to:</p>
<ol>
<li>Get the navigation direction (NavDirections)</li>
<li>Get the action ID and use it to get the Action from the navigation controller</li>
<li>Get the destination ID from the Action</li>
<li>Find the node in the graph using the destination ID</li>
<li>Get the Intent from that ActivityNavigator.Destination node</li>
</ol>
<pre class=""lang-kotlin prettyprint-override""><code>val direction = MyGeneratedDirections.actionOpenMyDestination(myParam)
val destId = findNavController().currentDestination.getAction(direction.actionId).destinationId
val intent = (findNavController().graph.findNode(destId) as? ActivityNavigator.Destination)?.intent
</code></pre>
<p>See <a href=""https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()"" rel=""nofollow noreferrer"">https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()</a></p>
",0
ActionBar,Android,pattern,77464305,"<p><code>android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS</code> is equals to <code>android.settings.APPLICATION_DETAILS_SETTINGS</code> String. And package URL is just your application package (applicationId) with <code>package:</code> scheme: <code>package:com.example.application</code></p>
<ol>
<li><p>Create <code>activity</code> tag inside navigation graph with corresponding intent action and data.</p>
<pre><code>&lt;activity
    android:id=&quot;@+id/app_settings&quot;
    app:action=&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;
    app:data=&quot;package:com.example.application&quot;
/&gt;
</code></pre>
</li>
<li><p>Create <code>action</code> tag inside navigation graph with previously created activity</p>
<pre><code>&lt;action
    android:id=&quot;@+id/action_global_to_app_settings&quot;
    app:destination=&quot;@id/app_settings&quot;
/&gt;
</code></pre>
</li>
<li><p>Navigate to created action with Navigation Component</p>
<pre><code>navController.navigate(NavGraphDirections.actionGlobalToAppSettings())
</code></pre>
</li>
</ol>
",0
ActionBar,Android,pattern,64196683,"<p>I see that you're using multiple activities. I suggest you use the navigation components. What you are wanting to do becomes much easier. Check the docs: <a href=""https://developer.android.com/guide/navigation/navigation-ui"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-ui</a></p>
",0
ActionBar,Android,pattern,65796483,"<p>I think global actions can help solve your problem.
You can put them on the same level as the fragments in the navigation graph.
At least the navigation graph would be less cluttered</p>
<p><strong>Example:</strong></p>
<pre class=""lang-xml prettyprint-override""><code>&lt;navigation xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    
    &lt;fragment
        android:id=&quot;@+id/coolFragment&quot;
     ...
    /&gt;
     
    &lt;action
        android:id=&quot;@+id/coolFragmentAction&quot;
        app:destination=&quot;@id/coolFragment&quot; /&gt;
&lt;/navigation&gt;

</code></pre>
<p>You can read more about it here:
<a href=""https://developer.android.com/guide/navigation/navigation-global-action"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-global-action</a></p>
",0
ActionBar,Android,pattern,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,pattern,64041015,"<p>I have made a plugin to implement this.</p>
<p>Please check out: <a href=""https://pub.dev/packages/action_process_text"" rel=""nofollow noreferrer"">action_process_text Plugin</a> .</p>
<p>First, include it in your project.</p>
<pre class=""lang-yaml prettyprint-override""><code>dependencies:
  action_process_text: &lt;latest version&gt;
</code></pre>
<p>Run pub get and get packages.</p>
<p>Add this to <code>AndroidManifest.xml</code> in the <code>android\app\src\main\</code> folder.</p>
<pre class=""lang-xml prettyprint-override""><code> &lt;activity android:name=&quot;com.example.action_process_text.ActionProcessTextPlugin&quot;
            android:label=&quot;Action_Text&quot; android:theme=&quot;@style/LaunchTheme&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.PROCESS_TEXT&quot; /&gt;
                &lt;data android:mimeType=&quot;text/plain&quot;/&gt;
                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;
            &lt;/intent-filter&gt;
   &lt;/activity&gt;
</code></pre>
<p>Change the <code>android:label</code> from <code>Action_Text</code> to the action text that you want to display.</p>
<p>Then import the package to use it.</p>
<pre class=""lang-dart prettyprint-override""><code>import 'package:action_process_text/action_process_text.dart';
</code></pre>
<p>Now, use the constructor of the widget to initialize the action_process_text. <code>ActionProcessText.getInputText</code> is used to get the selected text from the android action.</p>
<p><strong>Example snippet:</strong></p>
<pre class=""lang-dart prettyprint-override""><code>class MainPage extends StatefulWidget {
  @override
  _MainPageState createState() =&gt; _MainPageState();
}

class _MainPageState extends State&lt;MainPage&gt; {
  _MainPageState() {
    initActionProcessText();
  }

  Future&lt;void&gt; initActionProcessText() async {
    inputText = await ActionProcessText.getInputText;
    setState(() {});
  }

  String inputText = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold();
  }
  }
</code></pre>
<p>And check out my article on this plugin at: <a href=""https://medium.com/@coder_with_a_bushido/adding-text-selection-action-in-android-for-flutter-apps-d107c5d4c5ae?source=friends_link&amp;sk=ed13c797f8343cedf188f87b5b1db286"" rel=""nofollow noreferrer"">Article on action_process_text</a> .</p>
<p>Please support this package by letting fellow flutter developers know about it and feel free to open issues/bugs and PRs on my github repo: <a href=""https://github.com/coder-with-a-bushido/ACTION_PROCESS_TEXT-Flutter"" rel=""nofollow noreferrer"">action_process_text Source</a> .</p>
",0
ActionBar,Android,pattern,75936073,"<p>In code you have mentioned, you're trying to do two things at once that is setting <code>actionbar</code> title and <code>toolbar</code> title. That is why its not working.</p>
<p><strong>Solution:</strong></p>
<p>If you want to set <strong>title</strong> to your <strong>Actionbar</strong> this is how you can do it:</p>
<pre><code> ActionBar actionBar = getSupportActionBar();
 actionBar.setTitle(&quot;ACTIONBAR TITLE&quot;);
</code></pre>
<p>Now if you want to set <strong>title</strong> to <strong>Custom toolbar</strong> that you have created you can do it like this:</p>
<pre><code>Toolbar toolbar = findViewById(R.id.toolbar);
toolbar.setTitle(&quot;TOOLBAR TITLE&quot;);
</code></pre>
<p><strong>Remember:</strong></p>
<p><strong>ActionBar</strong> is the element present at the top of the activity screen. It is a salient feature of a mobile application that has a consistent presence over all its activities.</p>
<p><strong>Toolbar</strong> is a View included in a layout like any other View. As a regular View , the toolbar is easier to position, animate and control. Multiple distinct Toolbar elements can be defined within a single activity.</p>
<p>Let me know if it you any doubts. Happy Coding!!</p>
",1
ActionBar,Android,environment,65551504,"<p>This is related to our <strong>design</strong> , I think when <strong>design</strong> is sync with <code>Action bar</code> then it is <strong>better</strong> to use it but if we have flexible <strong>design</strong> we have to use custom <strong>Toolbar</strong>.</p>
<p>Some of <strong>benefits</strong> of an <code>Action bar</code> that cause <strong>developers</strong> select it at first :</p>
<p><strong>-Makes important actions accessible in a predictable way (such as Search).</strong></p>
<p><strong>-Supports consistent navigation and view switching within apps.(If you use navigation component is very simple to use Action bar)</strong></p>
<p><strong>-Reduces clutter by providing an action overflow for rarely used actions.</strong></p>
<p><strong>-Provides a dedicated space for giving your app an identity.</strong></p>
<p>And finaly Should you replace <code>ActionBar</code> with <code>ToolBar</code>? YES and NO. YES if you want the flexible header that comes with the <code>Toolbar</code>, NO if you don not need those flexible header. by flexibility, you can do things like <strong>adding</strong> background <strong>image</strong>, <strong>animations</strong>,...</p>
",1
ActionBar,Android,environment,65551446,"<p>As written in the google documentation <a href=""https://developer.android.com/training/appbar"" rel=""nofollow noreferrer"">https://developer.android.com/training/appbar</a></p>
<p>&quot;The app bar, also known as the action bar, is one of the most important design elements in your app's activities because it provides a visual structure and interactive elements that are familiar to users. [Pay attention to the point 'familiar to users'] Using the app bar makes your app consistent with other Android apps, allowing users to quickly understand how to operate your app and have a great experience. The key functions of the app bar are as follows:</p>
<ol>
<li>A dedicated space for giving your app an identity and indicating the user's location in the app.</li>
<li>Access to important actions in a predictable way, such as search.</li>
<li>Support for navigation and view switching (with tabs or drop-down lists).&quot;</li>
</ol>
<p>To your question.</p>
<p>Yes, it is a valid point that custom action bars provide very robust and diverse functionality, but the point here lies in UI/UX part of the software development.</p>
<p>As you saw in the documentation</p>
<ol>
<li>Familiarity to users</li>
<li>Consistency in design</li>
</ol>
<p>Users are not comfortable with design changes as in general, because</p>
<ol>
<li><p>Most of them do not even care about the design they just have to do what they have to do.</p>
</li>
<li><p>They have to again familiarize themselves to the new design so that they could remember it and navigate through the user interface faster.</p>
</li>
</ol>
<p>So keeping software development aside for a while it becomes a bit difficult for the end-user.</p>
<p>Also, It might be that the default UI elements work better with the operating system [Cache, CPU, etc. ]</p>
",1
ActionBar,Android,environment,77464305,"<p><code>android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS</code> is equals to <code>android.settings.APPLICATION_DETAILS_SETTINGS</code> String. And package URL is just your application package (applicationId) with <code>package:</code> scheme: <code>package:com.example.application</code></p>
<ol>
<li><p>Create <code>activity</code> tag inside navigation graph with corresponding intent action and data.</p>
<pre><code>&lt;activity
    android:id=&quot;@+id/app_settings&quot;
    app:action=&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;
    app:data=&quot;package:com.example.application&quot;
/&gt;
</code></pre>
</li>
<li><p>Create <code>action</code> tag inside navigation graph with previously created activity</p>
<pre><code>&lt;action
    android:id=&quot;@+id/action_global_to_app_settings&quot;
    app:destination=&quot;@id/app_settings&quot;
/&gt;
</code></pre>
</li>
<li><p>Navigate to created action with Navigation Component</p>
<pre><code>navController.navigate(NavGraphDirections.actionGlobalToAppSettings())
</code></pre>
</li>
</ol>
",0
ActionBar,Android,environment,64153202,"<p>It is possible to get the launch intent of an action defined in the navigation graph.
To achieve it you need to:</p>
<ol>
<li>Get the navigation direction (NavDirections)</li>
<li>Get the action ID and use it to get the Action from the navigation controller</li>
<li>Get the destination ID from the Action</li>
<li>Find the node in the graph using the destination ID</li>
<li>Get the Intent from that ActivityNavigator.Destination node</li>
</ol>
<pre class=""lang-kotlin prettyprint-override""><code>val direction = MyGeneratedDirections.actionOpenMyDestination(myParam)
val destId = findNavController().currentDestination.getAction(direction.actionId).destinationId
val intent = (findNavController().graph.findNode(destId) as? ActivityNavigator.Destination)?.intent
</code></pre>
<p>See <a href=""https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()"" rel=""nofollow noreferrer"">https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()</a></p>
",0
ActionBar,Android,environment,71819449,"<p>You had just created your <code>ActionMode.Callback</code> object, but you are not doing anything with it. You can create it outside of your <code>ClickListener</code> and just use the <code>Activity</code> method <code>startActionMode(ActionMode.Callback)</code> inside of you <code>ClickListener</code>.</p>
<p>Read the documentation for more information:
<a href=""https://developer.android.com/guide/topics/ui/menus.html#CAB"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/ui/menus.html#CAB</a></p>
",0
ActionBar,Android,environment,64196683,"<p>I see that you're using multiple activities. I suggest you use the navigation components. What you are wanting to do becomes much easier. Check the docs: <a href=""https://developer.android.com/guide/navigation/navigation-ui"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-ui</a></p>
",0
ActionBar,Android,environment,63978131,"<p>There are three ways to get that notification icon depending upon the theme you are using in your Activity.</p>
<p><strong>1. No.ActionBar Theme:</strong> If you're not using any ActionBar or toolbar in your activity then you can create a View(ImageView or Button) in your Activity's layout file with Height and Width as same as the notification icon which is around 28dp and then position it at the top right corner of the screen. You can change the background image of the view according to the state you want.</p>
<p><strong>2. Create your own toolbar:</strong> You can create your own toolbar and set the menu item in it. While creating the menu item make sure that you select <code>showAsAction=&quot;always&quot;</code> this way your icon is always visible. here is a <a href=""https://codinginflow.com/tutorials/android/toolbar"" rel=""nofollow noreferrer"">link</a> for the reference</p>
<p><strong>3.ActionBar Theme:</strong> If you're using the action bar theme then you can create a menu file with one item like in Option 2 and then override the onCreateOptionsMenu and inflate then inflate your menu in it.</p>
",1
ActionBar,Android,environment,75936073,"<p>In code you have mentioned, you're trying to do two things at once that is setting <code>actionbar</code> title and <code>toolbar</code> title. That is why its not working.</p>
<p><strong>Solution:</strong></p>
<p>If you want to set <strong>title</strong> to your <strong>Actionbar</strong> this is how you can do it:</p>
<pre><code> ActionBar actionBar = getSupportActionBar();
 actionBar.setTitle(&quot;ACTIONBAR TITLE&quot;);
</code></pre>
<p>Now if you want to set <strong>title</strong> to <strong>Custom toolbar</strong> that you have created you can do it like this:</p>
<pre><code>Toolbar toolbar = findViewById(R.id.toolbar);
toolbar.setTitle(&quot;TOOLBAR TITLE&quot;);
</code></pre>
<p><strong>Remember:</strong></p>
<p><strong>ActionBar</strong> is the element present at the top of the activity screen. It is a salient feature of a mobile application that has a consistent presence over all its activities.</p>
<p><strong>Toolbar</strong> is a View included in a layout like any other View. As a regular View , the toolbar is easier to position, animate and control. Multiple distinct Toolbar elements can be defined within a single activity.</p>
<p>Let me know if it you any doubts. Happy Coding!!</p>
",1
ActionBar,Android,environment,65796483,"<p>I think global actions can help solve your problem.
You can put them on the same level as the fragments in the navigation graph.
At least the navigation graph would be less cluttered</p>
<p><strong>Example:</strong></p>
<pre class=""lang-xml prettyprint-override""><code>&lt;navigation xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    
    &lt;fragment
        android:id=&quot;@+id/coolFragment&quot;
     ...
    /&gt;
     
    &lt;action
        android:id=&quot;@+id/coolFragmentAction&quot;
        app:destination=&quot;@id/coolFragment&quot; /&gt;
&lt;/navigation&gt;

</code></pre>
<p>You can read more about it here:
<a href=""https://developer.android.com/guide/navigation/navigation-global-action"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-global-action</a></p>
",0
ActionBar,Android,environment,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,alternative,65551504,"<p>This is related to our <strong>design</strong> , I think when <strong>design</strong> is sync with <code>Action bar</code> then it is <strong>better</strong> to use it but if we have flexible <strong>design</strong> we have to use custom <strong>Toolbar</strong>.</p>
<p>Some of <strong>benefits</strong> of an <code>Action bar</code> that cause <strong>developers</strong> select it at first :</p>
<p><strong>-Makes important actions accessible in a predictable way (such as Search).</strong></p>
<p><strong>-Supports consistent navigation and view switching within apps.(If you use navigation component is very simple to use Action bar)</strong></p>
<p><strong>-Reduces clutter by providing an action overflow for rarely used actions.</strong></p>
<p><strong>-Provides a dedicated space for giving your app an identity.</strong></p>
<p>And finaly Should you replace <code>ActionBar</code> with <code>ToolBar</code>? YES and NO. YES if you want the flexible header that comes with the <code>Toolbar</code>, NO if you don not need those flexible header. by flexibility, you can do things like <strong>adding</strong> background <strong>image</strong>, <strong>animations</strong>,...</p>
",1
ActionBar,Android,alternative,65551446,"<p>As written in the google documentation <a href=""https://developer.android.com/training/appbar"" rel=""nofollow noreferrer"">https://developer.android.com/training/appbar</a></p>
<p>&quot;The app bar, also known as the action bar, is one of the most important design elements in your app's activities because it provides a visual structure and interactive elements that are familiar to users. [Pay attention to the point 'familiar to users'] Using the app bar makes your app consistent with other Android apps, allowing users to quickly understand how to operate your app and have a great experience. The key functions of the app bar are as follows:</p>
<ol>
<li>A dedicated space for giving your app an identity and indicating the user's location in the app.</li>
<li>Access to important actions in a predictable way, such as search.</li>
<li>Support for navigation and view switching (with tabs or drop-down lists).&quot;</li>
</ol>
<p>To your question.</p>
<p>Yes, it is a valid point that custom action bars provide very robust and diverse functionality, but the point here lies in UI/UX part of the software development.</p>
<p>As you saw in the documentation</p>
<ol>
<li>Familiarity to users</li>
<li>Consistency in design</li>
</ol>
<p>Users are not comfortable with design changes as in general, because</p>
<ol>
<li><p>Most of them do not even care about the design they just have to do what they have to do.</p>
</li>
<li><p>They have to again familiarize themselves to the new design so that they could remember it and navigate through the user interface faster.</p>
</li>
</ol>
<p>So keeping software development aside for a while it becomes a bit difficult for the end-user.</p>
<p>Also, It might be that the default UI elements work better with the operating system [Cache, CPU, etc. ]</p>
",0
ActionBar,Android,alternative,71819449,"<p>You had just created your <code>ActionMode.Callback</code> object, but you are not doing anything with it. You can create it outside of your <code>ClickListener</code> and just use the <code>Activity</code> method <code>startActionMode(ActionMode.Callback)</code> inside of you <code>ClickListener</code>.</p>
<p>Read the documentation for more information:
<a href=""https://developer.android.com/guide/topics/ui/menus.html#CAB"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/ui/menus.html#CAB</a></p>
",0
ActionBar,Android,alternative,65796483,"<p>I think global actions can help solve your problem.
You can put them on the same level as the fragments in the navigation graph.
At least the navigation graph would be less cluttered</p>
<p><strong>Example:</strong></p>
<pre class=""lang-xml prettyprint-override""><code>&lt;navigation xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    
    &lt;fragment
        android:id=&quot;@+id/coolFragment&quot;
     ...
    /&gt;
     
    &lt;action
        android:id=&quot;@+id/coolFragmentAction&quot;
        app:destination=&quot;@id/coolFragment&quot; /&gt;
&lt;/navigation&gt;

</code></pre>
<p>You can read more about it here:
<a href=""https://developer.android.com/guide/navigation/navigation-global-action"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-global-action</a></p>
",0
ActionBar,Android,alternative,64153202,"<p>It is possible to get the launch intent of an action defined in the navigation graph.
To achieve it you need to:</p>
<ol>
<li>Get the navigation direction (NavDirections)</li>
<li>Get the action ID and use it to get the Action from the navigation controller</li>
<li>Get the destination ID from the Action</li>
<li>Find the node in the graph using the destination ID</li>
<li>Get the Intent from that ActivityNavigator.Destination node</li>
</ol>
<pre class=""lang-kotlin prettyprint-override""><code>val direction = MyGeneratedDirections.actionOpenMyDestination(myParam)
val destId = findNavController().currentDestination.getAction(direction.actionId).destinationId
val intent = (findNavController().graph.findNode(destId) as? ActivityNavigator.Destination)?.intent
</code></pre>
<p>See <a href=""https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()"" rel=""nofollow noreferrer"">https://developer.android.com/reference/androidx/navigation/ActivityNavigator.Destination#getIntent()</a></p>
",0
ActionBar,Android,alternative,77464305,"<p><code>android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS</code> is equals to <code>android.settings.APPLICATION_DETAILS_SETTINGS</code> String. And package URL is just your application package (applicationId) with <code>package:</code> scheme: <code>package:com.example.application</code></p>
<ol>
<li><p>Create <code>activity</code> tag inside navigation graph with corresponding intent action and data.</p>
<pre><code>&lt;activity
    android:id=&quot;@+id/app_settings&quot;
    app:action=&quot;android.settings.APPLICATION_DETAILS_SETTINGS&quot;
    app:data=&quot;package:com.example.application&quot;
/&gt;
</code></pre>
</li>
<li><p>Create <code>action</code> tag inside navigation graph with previously created activity</p>
<pre><code>&lt;action
    android:id=&quot;@+id/action_global_to_app_settings&quot;
    app:destination=&quot;@id/app_settings&quot;
/&gt;
</code></pre>
</li>
<li><p>Navigate to created action with Navigation Component</p>
<pre><code>navController.navigate(NavGraphDirections.actionGlobalToAppSettings())
</code></pre>
</li>
</ol>
",0
ActionBar,Android,alternative,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,alternative,64196683,"<p>I see that you're using multiple activities. I suggest you use the navigation components. What you are wanting to do becomes much easier. Check the docs: <a href=""https://developer.android.com/guide/navigation/navigation-ui"" rel=""nofollow noreferrer"">https://developer.android.com/guide/navigation/navigation-ui</a></p>
",0
ActionBar,Android,alternative,62504946,"<p>Just change the <code>activity_navigation.xml</code> to</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;androidx.drawerlayout.widget.DrawerLayout
    ...&gt;

    &lt;RelativeLayout...&gt;

    &lt;com.google.android.material.navigation.NavigationView
        android:layout_gravity=&quot;start&quot;
         .../&gt;

&lt;/androidx.drawerlayout.widget.DrawerLayout&gt;
</code></pre>
<p>Also you have to handle the click on the settings item with <code>navigationView.setNavigationItemSelectedListener</code>.</p>
<p>About the <code>DrawerLayout</code> <a href=""https://developer.android.com/guide/navigation/navigation-ui#add_a_navigation_drawer"" rel=""nofollow noreferrer"">check the doc</a>:</p>
<blockquote>
<p>Note: When using NavigationUI, the top app bar helpers automatically transition between the drawer icon and the Up icon as the current destination changes. You <strong>don't need</strong> to use <code>ActionBarDrawerToggle</code>.</p>
</blockquote>
<p>In your code remove the code about the <code>ActionBarDrawerToggle</code> and use:</p>
<pre><code>AppBarConfiguration appBarConfiguration =
        new AppBarConfiguration.Builder(...........)
            .setDrawerLayout(drawerLayout)
            .build();
</code></pre>
",0
ActionBar,Android,alternative,63978131,"<p>There are three ways to get that notification icon depending upon the theme you are using in your Activity.</p>
<p><strong>1. No.ActionBar Theme:</strong> If you're not using any ActionBar or toolbar in your activity then you can create a View(ImageView or Button) in your Activity's layout file with Height and Width as same as the notification icon which is around 28dp and then position it at the top right corner of the screen. You can change the background image of the view according to the state you want.</p>
<p><strong>2. Create your own toolbar:</strong> You can create your own toolbar and set the menu item in it. While creating the menu item make sure that you select <code>showAsAction=&quot;always&quot;</code> this way your icon is always visible. here is a <a href=""https://codinginflow.com/tutorials/android/toolbar"" rel=""nofollow noreferrer"">link</a> for the reference</p>
<p><strong>3.ActionBar Theme:</strong> If you're using the action bar theme then you can create a menu file with one item like in Option 2 and then override the onCreateOptionsMenu and inflate then inflate your menu in it.</p>
",0
VariableSynchronization,TensorFlow,functionality,58826636,"<p>Though I can't guarantee this is the easiest way to run the conversion, I have run into the need to save and restore tensorflow variables as raw numpy arrays, and this could definitely help you with your conversion.</p>

<p>On the Tensorflow 2 side, make a dictionary of the Tensorflow variables and the names of those variables in the Tensorflow 1 graph, then make a dictionary with the names of the variables to the value they hold using variable.value().  You'll then probably need to serialize the name-value dictionary to a file, unless you can manage to load both versions of tensorflow simultaneously into the same program.</p>

<p>On the Tensorflow 1 side, use tf.trainable_variables() to fetch the list of variables to assign.  Get the name of the variable with variable.name, use the saved dictionary to fetch the value for that variable, and then use session.run(variable.assign(value)) to populate the parameters with the trained values.</p>

<p>A little bit cumbersome, admittedly, and it might not be hugely performant, but it shouldn't take more than two dozen lines of code to implement, at least!  </p>
",0
VariableSynchronization,TensorFlow,functionality,62189608,"<p>In TensorFlow 2 with Eager execution, you can still use <code>tf.name_scope</code> which was moved to TF2.  </p>

<p>Below is an example.  </p>

<pre><code>with tf.name_scope(""foo""):
    with tf.name_scope(""bar""):
        v = tf.Variable([0], dtype=tf.float32, name=""v"")
        assert v.name == ""foo/bar/v:0"" 
</code></pre>

<p>But since Variable is in Tensorflow 2 has many changes and improvements by addressing drawbacks like <code>variables reusing</code>, <code>reliance on global scopes</code>.<br>
It is not really necessary to use <code>variable_scope</code> with these changes to the Variables.  </p>

<p>But if you still need to use variable_scope you can use it in the following way.  </p>

<blockquote>
  <p><code>to control variable naming users can use tf.name_scope + tf.Variable</code> </p>
</blockquote>

<p>You can follow community RFC <a href=""https://github.com/tensorflow/community/blob/master/rfcs/20180817-variables-20.md"" rel=""nofollow noreferrer"">Variables in TensorFlow 2.0</a> for detailed information on all the major changes on Variables from Tensorflow 1 to Tensorflow 2</p>
",0
VariableSynchronization,TensorFlow,functionality,64448224,"<p>Migrating code from <code>Tensorflow 1.x</code> to <code>Tensorflow 2.x</code> using Automated script will just do an initial pass. But in the process, you need to note that there are many things which won't fall under <code>Tensorflow 2.x</code> implementations such as <code>placeholders</code>, <code>sessions</code>, <code>collections</code>,t<code>f.contrib</code>, and other 1.x functionalities including changes in the behavior of <code>variables</code>.</p>
<p>First, let me tell you the difference between <code>tf.get_variable</code> and <code>tf.Variable</code>.</p>
<p><code>tf.get_variable</code> gets an existing variable with specifies parameters from the graph, and if it doesn't exist it creates a new one, whereas <code>tf.Variable</code> will always create a new variable, even if the same name is passed, Tensorflow will assign the new name with the suffix <em>variable_name</em>_1.</p>
<p>In <code>Tensorflow 2.x</code> using <code>tf.Variable</code> creates a Resource variable as default with eager execution is enabled by default.</p>
<p>You don't have to worry about this warning unless you are facing behavior in your variables usage.
If you want to disable the resource variable  <code>tf.compat.v1.disable_resource_variables()</code> is depreciated instead you can use <code>use_resource= False</code> in <code>tf.get_variable()</code> which will be forced to true when eager excecution is enabled by default in <code>Tensorflow 2.x</code>.</p>
<p>You can see all the other changes and observations to be made during migrating your code from <a href=""https://www.tensorflow.org/guide/migrate"" rel=""nofollow noreferrer"">this</a> documentation from Tensorflow.</p>
",0
VariableSynchronization,TensorFlow,functionality,57073294,"<p>Resolved:</p>

<p>After debugging and observing the TensorBoard graph I realized that only the Variable_weights/initial_value node has the actual values after session run. 
So the solution above is working since Variable_weights/initial_value is a constant TensorFlow node that is automatically created and is the input to the assigned node of TensorFlow Variable.</p>

<p>Every Variable in the TensorFlow graph has 4 operations/nodes. The Variable, Identity, Assign and Const which is the initial_value.</p>

<p>At first, I thought that the 'Variable' node will return the values.</p>

<p>But eventually, I invoked the snippet bellow in ""initial_value"" node and gets the values.</p>

<p>Solution:</p>

<p><code>if 'Variable_weights/initial_value' in n.name:
     var = tensor_util.MakeNdarray(n.attr['value'].tensor)</code></p>
",0
VariableSynchronization,TensorFlow,functionality,72620413,"<p>Refer to Official Contents tensorflow.org with detailed info COMPATIBLE versions with CUDA, Tensorflow Version, Python Version, CuDNN: <br>
For Windows: <a href=""https://www.tensorflow.org/install/source_windows#cpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#cpu</a> <br>
<a href=""https://www.tensorflow.org/install/source_windows#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#gpu</a> <br><br></p>
<p>For Linux: <a href=""https://www.tensorflow.org/install/source#linux"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#linux</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu</a> <br><br></p>
<p>For MacOS: <a href=""https://www.tensorflow.org/install/source#macos"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#macos</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu_2"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu_2</a></p>
",0
VariableSynchronization,TensorFlow,functionality,68679940,"<p>It sounds like you are using Tensorflow 1.x API since you mentioned using <code>tf.placeholder</code> and <code>sess.run</code>, so I have provided the solution using the Tensorflow 1.x API from Tensorflow 2.x. If you want to run in Tensorflow 1.x, just remove <code>compat.v1</code>.</p>
<pre><code>    tf_x = tf.compat.v1.placeholder(tf.float32, [None, 1], name='x')  # input x
    tf_y = tf.compat.v1.placeholder(tf.float32, [None, 1], name='y')  # input y
    h = tf.Variable(0.0, name='h')

    l1 = tf.compat.v1.layers.dense(tf_x, 1, name='layer_1')  # assume linear activation
    output = tf.compat.v1.layers.dense(l1, 1, name='output')  # output layer
    loss = tf.reduce_max(tf.abs(tf_y - output)) + tf.abs((h - tf.reduce_max(tf.abs(tf_y - output))))
    optimizer = tf.compat.v1.train.GradientDescentOptimizer(learning_rate=0.1).minimize(loss)
    init = tf.compat.v1.global_variables_initializer()
    variables = tf.compat.v1.trainable_variables()

    x = np.expand_dims(np.array([5.0, 5.0], dtype=np.float32), axis=-1)
    y = np.expand_dims(np.array([2.0, 3.0], dtype=np.float32), axis=-1)

    with tf.compat.v1.Session() as sess:
        sess.run(init)

        for step in range(1000):
            _, val = sess.run([optimizer, loss],
                              feed_dict={tf_x: x, tf_y: y})
            prediction = sess.run(output, feed_dict={'x:0': x})
            print(prediction)
            if step % 5 == 0:
                print(&quot;step: {}, loss: {}&quot;.format(step, val))
            print([{variable.name: sess.run(variable)} for variable in variables])
</code></pre>
<p>I have included some print statements to assist with observing the training process. The loss function is a bit weird looking because of the problem statement - we're learning both the function <code>f(x)</code> which approximates <code>y</code> and the residual error <code>h</code>. I used dummy inputs to verify the functionality of the model - by providing two 5's with an output of 2 and 3, the model is forced to compromise and converge around predicting 2.5. From the last steps:</p>
<pre><code>step: 990, loss: 0.6000000238418579
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
step: 995, loss: 0.6999993324279785
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
</code></pre>
<p>Notice the model predicts 2.4-2.6 for the inputs and for <code>h</code>, the estimate is between 0.5-0.7, which is close to the actual residual errors (0.4-0.6). The behavior may change with real data - specifically, with real data there may not be duplicate inputs with different outputs, which is confusing for a model. To sanity check, we can run again with the same outputs, but change the input to 7:</p>
<pre><code>step: 995, loss: 1.9000002145767212
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[0.60248166]], dtype=float32)}, {'layer_1/bias:0': array([0.21199825], dtype=float32)}, {'output/kernel:0': array([[1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[-0.767429 ]
 [-1.0744007]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.88150656]], dtype=float32)}, {'layer_1/bias:0': array([-6.8724134e-08], dtype=float32)}, {'output/kernel:0': array([[0.1741176]], dtype=float32)}, {'output/bias:0': array([0.], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 2.0000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
</code></pre>
<p>It's fairly accurate, as the residual error is about 2.1 (7 - 4.89) and <code>h</code> is output as 1.8.</p>
<p>It's worth noting some additional pieces may be required for this loss function - for example, bounding <code>output</code> since it's linear and can go to infinity (which the model may do to minimize the loss - <code> tf.reduce_max(tf.abs(tf_y - output))</code> means that <code>output</code> being infinity results in a negative infinity loss) - but this should be a starting point.</p>
",0
VariableSynchronization,TensorFlow,functionality,69639317,"<p>I have similar experience with you.
I have two GPU, each GPU run three threads, each thread running a session, each session running time fluct a lot.
if run only one thread on each GPU, session running time is quite stable.</p>
<p>from these appearence, we can conclude that ,thread in tensorflow not cowork well,
the mechanism of tensorflow has problem.</p>
",0
VariableSynchronization,TensorFlow,functionality,61929802,"<p>Many TensorFlow operations are accelerated using the GPU for computation. Without any annotations, TensorFlow automatically decides whether to use the GPU or CPU for an operation—copying the tensor between CPU and GPU memory, if necessary. Tensors produced by an operation are typically backed by the memory of the device on which the operation executed.</p>

<p>Tensorflow will only allocate memory and place operations on visible physical devices, as otherwise no LogicalDevice will be created on them. By default all discovered devices are marked as visible. </p>

<p>Also GPU utilization depends on the <code>batch_size</code>. The utilization may change with varying <code>batch_size</code>. </p>

<p>You can also compare your current results(time taken and utilization) with model using the <code>Example 3</code> from <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/utils/multi_gpu_model"" rel=""nofollow noreferrer"">multi_gpu_model</a>.</p>

<p>Also if you go into the link, it states -</p>

<blockquote>
  <p>Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2020-04-01. Instructions for updating: Use tf.distribute.MirroredStrategy instead.</p>
</blockquote>

<p>There should be performance improvement and GPU Utilization using <code>tf.distribute.MirroredStrategy</code>. This strategy is typically used for training on one machine with multiple GPUs. The <code>tf.distribute.Strategy</code> API provides an abstraction for distributing your training across multiple processing units. The goal is to allow users to enable distributed training using existing models and training code, with minimal changes.</p>

<p>For example, a variable created under a <code>MirroredStrategy</code> is a <code>MirroredVariable</code>. If no devices are specified in the constructor argument of the strategy then it will use all the available <code>GPUs</code>. If no <code>GPUs</code> are found, it will use the available <code>CPUs</code>. Note that TensorFlow treats all <code>CPUs</code> on a machine as a single device, and uses threads internally for parallelism.</p>

<p>Would recommend to go through <a href=""https://www.tensorflow.org/tutorials/distribute/custom_training"" rel=""nofollow noreferrer"">Custom training with tf.distribute.Strategy</a> tutorial that demonstrates on how to use tf.distribute.Strategy with custom training loops. They will train a simple CNN model on the fashion MNIST dataset.</p>

<p>Hope this answers your question. Happy Learning.</p>
",0
VariableSynchronization,TensorFlow,functionality,74435180,"<p><strong>This diagram was most likely made by a human.</strong></p>
<p>Labels like &quot;copy and crop&quot; are not typically derived from your raw model, maybe you could train a model for it ;D</p>
<p>There are many frameworks which can visualize your Tensorflow Model, Tensorflow has it's own suite <a href=""https://tensorboard.dev/"" rel=""nofollow noreferrer"">Tensorboard</a>.</p>
<p>See this <a href=""https://tensorboard.dev/experiment/EDZb7XgKSBKo6Gznh3i8hg/#graphs&amp;run=lr_1E-04%2Cconv%3D1%2Cfc%3D2"" rel=""nofollow noreferrer"">example</a>:</p>
<p><a href=""https://i.sstatic.net/yOypQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/yOypQ.png"" alt=""enter image description here"" /></a></p>
<p>If you want anything else, look at <a href=""https://datascience.stackexchange.com/questions/12851/how-do-you-visualize-neural-network-architectures"">this thread over at Data Science Stack Exchange</a></p>
",0
VariableSynchronization,TensorFlow,functionality,62016362,"<p>Since <code>TensorFlow Hub's</code> initial support for <code>Tensorflow 2.0</code> started from <code>TensorFlow Hub 0.3.0 version</code>, the issue is in the version of <code>TensorFlow Hub</code>(0.1.1) you are using which only supports Tensorflow 1.x versions.  </p>

<p>Upgrade your TensorFlow Hub to latest( 0.8.0 as of today) using below command.  </p>

<pre><code>pip install --upgrade tensorflow-hub  
</code></pre>

<p>As you can see in the error log, the tensorflow hub internally trying to assign <code>FLAGS = tf.flags.FLAGS</code>.<br>
In Tensorlow 2.x <code>tf.flags.FLAGS</code> has been moved to <code>tf.compat.flags.Flag</code>  which is not addressed in <code>Tensorflow Hub 0.1.1</code>.  </p>

<p>Now in the latest Tensorflow Hub(0.8.0) they are using flags like below.  </p>

<pre><code>from absl import flags
FLAGS = flags.FLAGS 
</code></pre>

<p>Upgrading Tensorflow Hub should resolve your issue.</p>
",0
VariableSynchronization,TensorFlow,concept,58826636,"<p>Though I can't guarantee this is the easiest way to run the conversion, I have run into the need to save and restore tensorflow variables as raw numpy arrays, and this could definitely help you with your conversion.</p>

<p>On the Tensorflow 2 side, make a dictionary of the Tensorflow variables and the names of those variables in the Tensorflow 1 graph, then make a dictionary with the names of the variables to the value they hold using variable.value().  You'll then probably need to serialize the name-value dictionary to a file, unless you can manage to load both versions of tensorflow simultaneously into the same program.</p>

<p>On the Tensorflow 1 side, use tf.trainable_variables() to fetch the list of variables to assign.  Get the name of the variable with variable.name, use the saved dictionary to fetch the value for that variable, and then use session.run(variable.assign(value)) to populate the parameters with the trained values.</p>

<p>A little bit cumbersome, admittedly, and it might not be hugely performant, but it shouldn't take more than two dozen lines of code to implement, at least!  </p>
",0
VariableSynchronization,TensorFlow,concept,62189608,"<p>In TensorFlow 2 with Eager execution, you can still use <code>tf.name_scope</code> which was moved to TF2.  </p>

<p>Below is an example.  </p>

<pre><code>with tf.name_scope(""foo""):
    with tf.name_scope(""bar""):
        v = tf.Variable([0], dtype=tf.float32, name=""v"")
        assert v.name == ""foo/bar/v:0"" 
</code></pre>

<p>But since Variable is in Tensorflow 2 has many changes and improvements by addressing drawbacks like <code>variables reusing</code>, <code>reliance on global scopes</code>.<br>
It is not really necessary to use <code>variable_scope</code> with these changes to the Variables.  </p>

<p>But if you still need to use variable_scope you can use it in the following way.  </p>

<blockquote>
  <p><code>to control variable naming users can use tf.name_scope + tf.Variable</code> </p>
</blockquote>

<p>You can follow community RFC <a href=""https://github.com/tensorflow/community/blob/master/rfcs/20180817-variables-20.md"" rel=""nofollow noreferrer"">Variables in TensorFlow 2.0</a> for detailed information on all the major changes on Variables from Tensorflow 1 to Tensorflow 2</p>
",0
VariableSynchronization,TensorFlow,concept,64448224,"<p>Migrating code from <code>Tensorflow 1.x</code> to <code>Tensorflow 2.x</code> using Automated script will just do an initial pass. But in the process, you need to note that there are many things which won't fall under <code>Tensorflow 2.x</code> implementations such as <code>placeholders</code>, <code>sessions</code>, <code>collections</code>,t<code>f.contrib</code>, and other 1.x functionalities including changes in the behavior of <code>variables</code>.</p>
<p>First, let me tell you the difference between <code>tf.get_variable</code> and <code>tf.Variable</code>.</p>
<p><code>tf.get_variable</code> gets an existing variable with specifies parameters from the graph, and if it doesn't exist it creates a new one, whereas <code>tf.Variable</code> will always create a new variable, even if the same name is passed, Tensorflow will assign the new name with the suffix <em>variable_name</em>_1.</p>
<p>In <code>Tensorflow 2.x</code> using <code>tf.Variable</code> creates a Resource variable as default with eager execution is enabled by default.</p>
<p>You don't have to worry about this warning unless you are facing behavior in your variables usage.
If you want to disable the resource variable  <code>tf.compat.v1.disable_resource_variables()</code> is depreciated instead you can use <code>use_resource= False</code> in <code>tf.get_variable()</code> which will be forced to true when eager excecution is enabled by default in <code>Tensorflow 2.x</code>.</p>
<p>You can see all the other changes and observations to be made during migrating your code from <a href=""https://www.tensorflow.org/guide/migrate"" rel=""nofollow noreferrer"">this</a> documentation from Tensorflow.</p>
",0
VariableSynchronization,TensorFlow,concept,57073294,"<p>Resolved:</p>

<p>After debugging and observing the TensorBoard graph I realized that only the Variable_weights/initial_value node has the actual values after session run. 
So the solution above is working since Variable_weights/initial_value is a constant TensorFlow node that is automatically created and is the input to the assigned node of TensorFlow Variable.</p>

<p>Every Variable in the TensorFlow graph has 4 operations/nodes. The Variable, Identity, Assign and Const which is the initial_value.</p>

<p>At first, I thought that the 'Variable' node will return the values.</p>

<p>But eventually, I invoked the snippet bellow in ""initial_value"" node and gets the values.</p>

<p>Solution:</p>

<p><code>if 'Variable_weights/initial_value' in n.name:
     var = tensor_util.MakeNdarray(n.attr['value'].tensor)</code></p>
",0
VariableSynchronization,TensorFlow,concept,74435180,"<p><strong>This diagram was most likely made by a human.</strong></p>
<p>Labels like &quot;copy and crop&quot; are not typically derived from your raw model, maybe you could train a model for it ;D</p>
<p>There are many frameworks which can visualize your Tensorflow Model, Tensorflow has it's own suite <a href=""https://tensorboard.dev/"" rel=""nofollow noreferrer"">Tensorboard</a>.</p>
<p>See this <a href=""https://tensorboard.dev/experiment/EDZb7XgKSBKo6Gznh3i8hg/#graphs&amp;run=lr_1E-04%2Cconv%3D1%2Cfc%3D2"" rel=""nofollow noreferrer"">example</a>:</p>
<p><a href=""https://i.sstatic.net/yOypQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/yOypQ.png"" alt=""enter image description here"" /></a></p>
<p>If you want anything else, look at <a href=""https://datascience.stackexchange.com/questions/12851/how-do-you-visualize-neural-network-architectures"">this thread over at Data Science Stack Exchange</a></p>
",0
VariableSynchronization,TensorFlow,concept,72620413,"<p>Refer to Official Contents tensorflow.org with detailed info COMPATIBLE versions with CUDA, Tensorflow Version, Python Version, CuDNN: <br>
For Windows: <a href=""https://www.tensorflow.org/install/source_windows#cpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#cpu</a> <br>
<a href=""https://www.tensorflow.org/install/source_windows#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#gpu</a> <br><br></p>
<p>For Linux: <a href=""https://www.tensorflow.org/install/source#linux"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#linux</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu</a> <br><br></p>
<p>For MacOS: <a href=""https://www.tensorflow.org/install/source#macos"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#macos</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu_2"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu_2</a></p>
",0
VariableSynchronization,TensorFlow,concept,68679940,"<p>It sounds like you are using Tensorflow 1.x API since you mentioned using <code>tf.placeholder</code> and <code>sess.run</code>, so I have provided the solution using the Tensorflow 1.x API from Tensorflow 2.x. If you want to run in Tensorflow 1.x, just remove <code>compat.v1</code>.</p>
<pre><code>    tf_x = tf.compat.v1.placeholder(tf.float32, [None, 1], name='x')  # input x
    tf_y = tf.compat.v1.placeholder(tf.float32, [None, 1], name='y')  # input y
    h = tf.Variable(0.0, name='h')

    l1 = tf.compat.v1.layers.dense(tf_x, 1, name='layer_1')  # assume linear activation
    output = tf.compat.v1.layers.dense(l1, 1, name='output')  # output layer
    loss = tf.reduce_max(tf.abs(tf_y - output)) + tf.abs((h - tf.reduce_max(tf.abs(tf_y - output))))
    optimizer = tf.compat.v1.train.GradientDescentOptimizer(learning_rate=0.1).minimize(loss)
    init = tf.compat.v1.global_variables_initializer()
    variables = tf.compat.v1.trainable_variables()

    x = np.expand_dims(np.array([5.0, 5.0], dtype=np.float32), axis=-1)
    y = np.expand_dims(np.array([2.0, 3.0], dtype=np.float32), axis=-1)

    with tf.compat.v1.Session() as sess:
        sess.run(init)

        for step in range(1000):
            _, val = sess.run([optimizer, loss],
                              feed_dict={tf_x: x, tf_y: y})
            prediction = sess.run(output, feed_dict={'x:0': x})
            print(prediction)
            if step % 5 == 0:
                print(&quot;step: {}, loss: {}&quot;.format(step, val))
            print([{variable.name: sess.run(variable)} for variable in variables])
</code></pre>
<p>I have included some print statements to assist with observing the training process. The loss function is a bit weird looking because of the problem statement - we're learning both the function <code>f(x)</code> which approximates <code>y</code> and the residual error <code>h</code>. I used dummy inputs to verify the functionality of the model - by providing two 5's with an output of 2 and 3, the model is forced to compromise and converge around predicting 2.5. From the last steps:</p>
<pre><code>step: 990, loss: 0.6000000238418579
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
step: 995, loss: 0.6999993324279785
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
</code></pre>
<p>Notice the model predicts 2.4-2.6 for the inputs and for <code>h</code>, the estimate is between 0.5-0.7, which is close to the actual residual errors (0.4-0.6). The behavior may change with real data - specifically, with real data there may not be duplicate inputs with different outputs, which is confusing for a model. To sanity check, we can run again with the same outputs, but change the input to 7:</p>
<pre><code>step: 995, loss: 1.9000002145767212
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[0.60248166]], dtype=float32)}, {'layer_1/bias:0': array([0.21199825], dtype=float32)}, {'output/kernel:0': array([[1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[-0.767429 ]
 [-1.0744007]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.88150656]], dtype=float32)}, {'layer_1/bias:0': array([-6.8724134e-08], dtype=float32)}, {'output/kernel:0': array([[0.1741176]], dtype=float32)}, {'output/bias:0': array([0.], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 2.0000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
</code></pre>
<p>It's fairly accurate, as the residual error is about 2.1 (7 - 4.89) and <code>h</code> is output as 1.8.</p>
<p>It's worth noting some additional pieces may be required for this loss function - for example, bounding <code>output</code> since it's linear and can go to infinity (which the model may do to minimize the loss - <code> tf.reduce_max(tf.abs(tf_y - output))</code> means that <code>output</code> being infinity results in a negative infinity loss) - but this should be a starting point.</p>
",0
VariableSynchronization,TensorFlow,concept,69639317,"<p>I have similar experience with you.
I have two GPU, each GPU run three threads, each thread running a session, each session running time fluct a lot.
if run only one thread on each GPU, session running time is quite stable.</p>
<p>from these appearence, we can conclude that ,thread in tensorflow not cowork well,
the mechanism of tensorflow has problem.</p>
",0
VariableSynchronization,TensorFlow,concept,55686387,"<p>I suggest using TensorFlow Lite.</p>

<p>It will enable you to compress and quantize your model to make it smaller and faster to run.</p>

<p>It also supports leveraging GPU and/or hardware accelerator if any of this is available to you.</p>

<p><a href=""https://www.tensorflow.org/lite"" rel=""nofollow noreferrer"">https://www.tensorflow.org/lite</a></p>
",0
VariableSynchronization,TensorFlow,concept,61929802,"<p>Many TensorFlow operations are accelerated using the GPU for computation. Without any annotations, TensorFlow automatically decides whether to use the GPU or CPU for an operation—copying the tensor between CPU and GPU memory, if necessary. Tensors produced by an operation are typically backed by the memory of the device on which the operation executed.</p>

<p>Tensorflow will only allocate memory and place operations on visible physical devices, as otherwise no LogicalDevice will be created on them. By default all discovered devices are marked as visible. </p>

<p>Also GPU utilization depends on the <code>batch_size</code>. The utilization may change with varying <code>batch_size</code>. </p>

<p>You can also compare your current results(time taken and utilization) with model using the <code>Example 3</code> from <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/utils/multi_gpu_model"" rel=""nofollow noreferrer"">multi_gpu_model</a>.</p>

<p>Also if you go into the link, it states -</p>

<blockquote>
  <p>Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2020-04-01. Instructions for updating: Use tf.distribute.MirroredStrategy instead.</p>
</blockquote>

<p>There should be performance improvement and GPU Utilization using <code>tf.distribute.MirroredStrategy</code>. This strategy is typically used for training on one machine with multiple GPUs. The <code>tf.distribute.Strategy</code> API provides an abstraction for distributing your training across multiple processing units. The goal is to allow users to enable distributed training using existing models and training code, with minimal changes.</p>

<p>For example, a variable created under a <code>MirroredStrategy</code> is a <code>MirroredVariable</code>. If no devices are specified in the constructor argument of the strategy then it will use all the available <code>GPUs</code>. If no <code>GPUs</code> are found, it will use the available <code>CPUs</code>. Note that TensorFlow treats all <code>CPUs</code> on a machine as a single device, and uses threads internally for parallelism.</p>

<p>Would recommend to go through <a href=""https://www.tensorflow.org/tutorials/distribute/custom_training"" rel=""nofollow noreferrer"">Custom training with tf.distribute.Strategy</a> tutorial that demonstrates on how to use tf.distribute.Strategy with custom training loops. They will train a simple CNN model on the fashion MNIST dataset.</p>

<p>Hope this answers your question. Happy Learning.</p>
",0
VariableSynchronization,TensorFlow,performance,58826636,"<p>Though I can't guarantee this is the easiest way to run the conversion, I have run into the need to save and restore tensorflow variables as raw numpy arrays, and this could definitely help you with your conversion.</p>

<p>On the Tensorflow 2 side, make a dictionary of the Tensorflow variables and the names of those variables in the Tensorflow 1 graph, then make a dictionary with the names of the variables to the value they hold using variable.value().  You'll then probably need to serialize the name-value dictionary to a file, unless you can manage to load both versions of tensorflow simultaneously into the same program.</p>

<p>On the Tensorflow 1 side, use tf.trainable_variables() to fetch the list of variables to assign.  Get the name of the variable with variable.name, use the saved dictionary to fetch the value for that variable, and then use session.run(variable.assign(value)) to populate the parameters with the trained values.</p>

<p>A little bit cumbersome, admittedly, and it might not be hugely performant, but it shouldn't take more than two dozen lines of code to implement, at least!  </p>
",0
VariableSynchronization,TensorFlow,performance,62189608,"<p>In TensorFlow 2 with Eager execution, you can still use <code>tf.name_scope</code> which was moved to TF2.  </p>

<p>Below is an example.  </p>

<pre><code>with tf.name_scope(""foo""):
    with tf.name_scope(""bar""):
        v = tf.Variable([0], dtype=tf.float32, name=""v"")
        assert v.name == ""foo/bar/v:0"" 
</code></pre>

<p>But since Variable is in Tensorflow 2 has many changes and improvements by addressing drawbacks like <code>variables reusing</code>, <code>reliance on global scopes</code>.<br>
It is not really necessary to use <code>variable_scope</code> with these changes to the Variables.  </p>

<p>But if you still need to use variable_scope you can use it in the following way.  </p>

<blockquote>
  <p><code>to control variable naming users can use tf.name_scope + tf.Variable</code> </p>
</blockquote>

<p>You can follow community RFC <a href=""https://github.com/tensorflow/community/blob/master/rfcs/20180817-variables-20.md"" rel=""nofollow noreferrer"">Variables in TensorFlow 2.0</a> for detailed information on all the major changes on Variables from Tensorflow 1 to Tensorflow 2</p>
",0
VariableSynchronization,TensorFlow,performance,64448224,"<p>Migrating code from <code>Tensorflow 1.x</code> to <code>Tensorflow 2.x</code> using Automated script will just do an initial pass. But in the process, you need to note that there are many things which won't fall under <code>Tensorflow 2.x</code> implementations such as <code>placeholders</code>, <code>sessions</code>, <code>collections</code>,t<code>f.contrib</code>, and other 1.x functionalities including changes in the behavior of <code>variables</code>.</p>
<p>First, let me tell you the difference between <code>tf.get_variable</code> and <code>tf.Variable</code>.</p>
<p><code>tf.get_variable</code> gets an existing variable with specifies parameters from the graph, and if it doesn't exist it creates a new one, whereas <code>tf.Variable</code> will always create a new variable, even if the same name is passed, Tensorflow will assign the new name with the suffix <em>variable_name</em>_1.</p>
<p>In <code>Tensorflow 2.x</code> using <code>tf.Variable</code> creates a Resource variable as default with eager execution is enabled by default.</p>
<p>You don't have to worry about this warning unless you are facing behavior in your variables usage.
If you want to disable the resource variable  <code>tf.compat.v1.disable_resource_variables()</code> is depreciated instead you can use <code>use_resource= False</code> in <code>tf.get_variable()</code> which will be forced to true when eager excecution is enabled by default in <code>Tensorflow 2.x</code>.</p>
<p>You can see all the other changes and observations to be made during migrating your code from <a href=""https://www.tensorflow.org/guide/migrate"" rel=""nofollow noreferrer"">this</a> documentation from Tensorflow.</p>
",0
VariableSynchronization,TensorFlow,performance,68679940,"<p>It sounds like you are using Tensorflow 1.x API since you mentioned using <code>tf.placeholder</code> and <code>sess.run</code>, so I have provided the solution using the Tensorflow 1.x API from Tensorflow 2.x. If you want to run in Tensorflow 1.x, just remove <code>compat.v1</code>.</p>
<pre><code>    tf_x = tf.compat.v1.placeholder(tf.float32, [None, 1], name='x')  # input x
    tf_y = tf.compat.v1.placeholder(tf.float32, [None, 1], name='y')  # input y
    h = tf.Variable(0.0, name='h')

    l1 = tf.compat.v1.layers.dense(tf_x, 1, name='layer_1')  # assume linear activation
    output = tf.compat.v1.layers.dense(l1, 1, name='output')  # output layer
    loss = tf.reduce_max(tf.abs(tf_y - output)) + tf.abs((h - tf.reduce_max(tf.abs(tf_y - output))))
    optimizer = tf.compat.v1.train.GradientDescentOptimizer(learning_rate=0.1).minimize(loss)
    init = tf.compat.v1.global_variables_initializer()
    variables = tf.compat.v1.trainable_variables()

    x = np.expand_dims(np.array([5.0, 5.0], dtype=np.float32), axis=-1)
    y = np.expand_dims(np.array([2.0, 3.0], dtype=np.float32), axis=-1)

    with tf.compat.v1.Session() as sess:
        sess.run(init)

        for step in range(1000):
            _, val = sess.run([optimizer, loss],
                              feed_dict={tf_x: x, tf_y: y})
            prediction = sess.run(output, feed_dict={'x:0': x})
            print(prediction)
            if step % 5 == 0:
                print(&quot;step: {}, loss: {}&quot;.format(step, val))
            print([{variable.name: sess.run(variable)} for variable in variables])
</code></pre>
<p>I have included some print statements to assist with observing the training process. The loss function is a bit weird looking because of the problem statement - we're learning both the function <code>f(x)</code> which approximates <code>y</code> and the residual error <code>h</code>. I used dummy inputs to verify the functionality of the model - by providing two 5's with an output of 2 and 3, the model is forced to compromise and converge around predicting 2.5. From the last steps:</p>
<pre><code>step: 990, loss: 0.6000000238418579
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
step: 995, loss: 0.6999993324279785
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
</code></pre>
<p>Notice the model predicts 2.4-2.6 for the inputs and for <code>h</code>, the estimate is between 0.5-0.7, which is close to the actual residual errors (0.4-0.6). The behavior may change with real data - specifically, with real data there may not be duplicate inputs with different outputs, which is confusing for a model. To sanity check, we can run again with the same outputs, but change the input to 7:</p>
<pre><code>step: 995, loss: 1.9000002145767212
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[0.60248166]], dtype=float32)}, {'layer_1/bias:0': array([0.21199825], dtype=float32)}, {'output/kernel:0': array([[1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[-0.767429 ]
 [-1.0744007]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.88150656]], dtype=float32)}, {'layer_1/bias:0': array([-6.8724134e-08], dtype=float32)}, {'output/kernel:0': array([[0.1741176]], dtype=float32)}, {'output/bias:0': array([0.], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 2.0000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
</code></pre>
<p>It's fairly accurate, as the residual error is about 2.1 (7 - 4.89) and <code>h</code> is output as 1.8.</p>
<p>It's worth noting some additional pieces may be required for this loss function - for example, bounding <code>output</code> since it's linear and can go to infinity (which the model may do to minimize the loss - <code> tf.reduce_max(tf.abs(tf_y - output))</code> means that <code>output</code> being infinity results in a negative infinity loss) - but this should be a starting point.</p>
",0
VariableSynchronization,TensorFlow,performance,72620413,"<p>Refer to Official Contents tensorflow.org with detailed info COMPATIBLE versions with CUDA, Tensorflow Version, Python Version, CuDNN: <br>
For Windows: <a href=""https://www.tensorflow.org/install/source_windows#cpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#cpu</a> <br>
<a href=""https://www.tensorflow.org/install/source_windows#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#gpu</a> <br><br></p>
<p>For Linux: <a href=""https://www.tensorflow.org/install/source#linux"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#linux</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu</a> <br><br></p>
<p>For MacOS: <a href=""https://www.tensorflow.org/install/source#macos"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#macos</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu_2"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu_2</a></p>
",0
VariableSynchronization,TensorFlow,performance,57073294,"<p>Resolved:</p>

<p>After debugging and observing the TensorBoard graph I realized that only the Variable_weights/initial_value node has the actual values after session run. 
So the solution above is working since Variable_weights/initial_value is a constant TensorFlow node that is automatically created and is the input to the assigned node of TensorFlow Variable.</p>

<p>Every Variable in the TensorFlow graph has 4 operations/nodes. The Variable, Identity, Assign and Const which is the initial_value.</p>

<p>At first, I thought that the 'Variable' node will return the values.</p>

<p>But eventually, I invoked the snippet bellow in ""initial_value"" node and gets the values.</p>

<p>Solution:</p>

<p><code>if 'Variable_weights/initial_value' in n.name:
     var = tensor_util.MakeNdarray(n.attr['value'].tensor)</code></p>
",0
VariableSynchronization,TensorFlow,performance,69639317,"<p>I have similar experience with you.
I have two GPU, each GPU run three threads, each thread running a session, each session running time fluct a lot.
if run only one thread on each GPU, session running time is quite stable.</p>
<p>from these appearence, we can conclude that ,thread in tensorflow not cowork well,
the mechanism of tensorflow has problem.</p>
",0
VariableSynchronization,TensorFlow,performance,61929802,"<p>Many TensorFlow operations are accelerated using the GPU for computation. Without any annotations, TensorFlow automatically decides whether to use the GPU or CPU for an operation—copying the tensor between CPU and GPU memory, if necessary. Tensors produced by an operation are typically backed by the memory of the device on which the operation executed.</p>

<p>Tensorflow will only allocate memory and place operations on visible physical devices, as otherwise no LogicalDevice will be created on them. By default all discovered devices are marked as visible. </p>

<p>Also GPU utilization depends on the <code>batch_size</code>. The utilization may change with varying <code>batch_size</code>. </p>

<p>You can also compare your current results(time taken and utilization) with model using the <code>Example 3</code> from <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/utils/multi_gpu_model"" rel=""nofollow noreferrer"">multi_gpu_model</a>.</p>

<p>Also if you go into the link, it states -</p>

<blockquote>
  <p>Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2020-04-01. Instructions for updating: Use tf.distribute.MirroredStrategy instead.</p>
</blockquote>

<p>There should be performance improvement and GPU Utilization using <code>tf.distribute.MirroredStrategy</code>. This strategy is typically used for training on one machine with multiple GPUs. The <code>tf.distribute.Strategy</code> API provides an abstraction for distributing your training across multiple processing units. The goal is to allow users to enable distributed training using existing models and training code, with minimal changes.</p>

<p>For example, a variable created under a <code>MirroredStrategy</code> is a <code>MirroredVariable</code>. If no devices are specified in the constructor argument of the strategy then it will use all the available <code>GPUs</code>. If no <code>GPUs</code> are found, it will use the available <code>CPUs</code>. Note that TensorFlow treats all <code>CPUs</code> on a machine as a single device, and uses threads internally for parallelism.</p>

<p>Would recommend to go through <a href=""https://www.tensorflow.org/tutorials/distribute/custom_training"" rel=""nofollow noreferrer"">Custom training with tf.distribute.Strategy</a> tutorial that demonstrates on how to use tf.distribute.Strategy with custom training loops. They will train a simple CNN model on the fashion MNIST dataset.</p>

<p>Hope this answers your question. Happy Learning.</p>
",0
VariableSynchronization,TensorFlow,performance,58406842,"<p>Yes, Tensorflow in graph mode has its own internal global state. </p>

<p>You don't want to reload your model at every prediction, that's really inefficient.</p>

<p>The right strategy is to load the model at the start of your web app and then reference the global state.</p>

<p>Use a global variable for the model and graph and do something like this:</p>

<pre class=""lang-py prettyprint-override""><code>loaded_model = None
graph = None

def load_model(export_path):

    # global variables
    global loaded_model
    global graph

    loaded_model = load_model('model.h5'))
    graph = tf.get_default_graph()
</code></pre>

<p>then, in your prediction function you do:</p>

<pre class=""lang-py prettyprint-override""><code>@app.route('/', methods=[""POST""])
def predict():
    if request.method == ""POST"":
        data = request.data

        with graph.as_default():
            probas = loaded_model.predict(data)
</code></pre>

<p>An complete short example for how to do this can be found <a href=""https://github.com/zerotodeeplearning/ztdl-5-day-bootcamp/blob/7b687fe2761bb5516e2ea239cb8339a0f8931208/day_5/model_serving/flask_serve_model.py"" rel=""nofollow noreferrer"">here</a>.</p>

<p>Alternatively, if you use Tensorflow 2.0, which defaults to Eager mode, you have no graph and therefore no problem.</p>
",0
VariableSynchronization,TensorFlow,performance,55686387,"<p>I suggest using TensorFlow Lite.</p>

<p>It will enable you to compress and quantize your model to make it smaller and faster to run.</p>

<p>It also supports leveraging GPU and/or hardware accelerator if any of this is available to you.</p>

<p><a href=""https://www.tensorflow.org/lite"" rel=""nofollow noreferrer"">https://www.tensorflow.org/lite</a></p>
",0
VariableSynchronization,TensorFlow,directive,58826636,"<p>Though I can't guarantee this is the easiest way to run the conversion, I have run into the need to save and restore tensorflow variables as raw numpy arrays, and this could definitely help you with your conversion.</p>

<p>On the Tensorflow 2 side, make a dictionary of the Tensorflow variables and the names of those variables in the Tensorflow 1 graph, then make a dictionary with the names of the variables to the value they hold using variable.value().  You'll then probably need to serialize the name-value dictionary to a file, unless you can manage to load both versions of tensorflow simultaneously into the same program.</p>

<p>On the Tensorflow 1 side, use tf.trainable_variables() to fetch the list of variables to assign.  Get the name of the variable with variable.name, use the saved dictionary to fetch the value for that variable, and then use session.run(variable.assign(value)) to populate the parameters with the trained values.</p>

<p>A little bit cumbersome, admittedly, and it might not be hugely performant, but it shouldn't take more than two dozen lines of code to implement, at least!  </p>
",0
VariableSynchronization,TensorFlow,directive,62189608,"<p>In TensorFlow 2 with Eager execution, you can still use <code>tf.name_scope</code> which was moved to TF2.  </p>

<p>Below is an example.  </p>

<pre><code>with tf.name_scope(""foo""):
    with tf.name_scope(""bar""):
        v = tf.Variable([0], dtype=tf.float32, name=""v"")
        assert v.name == ""foo/bar/v:0"" 
</code></pre>

<p>But since Variable is in Tensorflow 2 has many changes and improvements by addressing drawbacks like <code>variables reusing</code>, <code>reliance on global scopes</code>.<br>
It is not really necessary to use <code>variable_scope</code> with these changes to the Variables.  </p>

<p>But if you still need to use variable_scope you can use it in the following way.  </p>

<blockquote>
  <p><code>to control variable naming users can use tf.name_scope + tf.Variable</code> </p>
</blockquote>

<p>You can follow community RFC <a href=""https://github.com/tensorflow/community/blob/master/rfcs/20180817-variables-20.md"" rel=""nofollow noreferrer"">Variables in TensorFlow 2.0</a> for detailed information on all the major changes on Variables from Tensorflow 1 to Tensorflow 2</p>
",0
VariableSynchronization,TensorFlow,directive,64448224,"<p>Migrating code from <code>Tensorflow 1.x</code> to <code>Tensorflow 2.x</code> using Automated script will just do an initial pass. But in the process, you need to note that there are many things which won't fall under <code>Tensorflow 2.x</code> implementations such as <code>placeholders</code>, <code>sessions</code>, <code>collections</code>,t<code>f.contrib</code>, and other 1.x functionalities including changes in the behavior of <code>variables</code>.</p>
<p>First, let me tell you the difference between <code>tf.get_variable</code> and <code>tf.Variable</code>.</p>
<p><code>tf.get_variable</code> gets an existing variable with specifies parameters from the graph, and if it doesn't exist it creates a new one, whereas <code>tf.Variable</code> will always create a new variable, even if the same name is passed, Tensorflow will assign the new name with the suffix <em>variable_name</em>_1.</p>
<p>In <code>Tensorflow 2.x</code> using <code>tf.Variable</code> creates a Resource variable as default with eager execution is enabled by default.</p>
<p>You don't have to worry about this warning unless you are facing behavior in your variables usage.
If you want to disable the resource variable  <code>tf.compat.v1.disable_resource_variables()</code> is depreciated instead you can use <code>use_resource= False</code> in <code>tf.get_variable()</code> which will be forced to true when eager excecution is enabled by default in <code>Tensorflow 2.x</code>.</p>
<p>You can see all the other changes and observations to be made during migrating your code from <a href=""https://www.tensorflow.org/guide/migrate"" rel=""nofollow noreferrer"">this</a> documentation from Tensorflow.</p>
",0
VariableSynchronization,TensorFlow,directive,57073294,"<p>Resolved:</p>

<p>After debugging and observing the TensorBoard graph I realized that only the Variable_weights/initial_value node has the actual values after session run. 
So the solution above is working since Variable_weights/initial_value is a constant TensorFlow node that is automatically created and is the input to the assigned node of TensorFlow Variable.</p>

<p>Every Variable in the TensorFlow graph has 4 operations/nodes. The Variable, Identity, Assign and Const which is the initial_value.</p>

<p>At first, I thought that the 'Variable' node will return the values.</p>

<p>But eventually, I invoked the snippet bellow in ""initial_value"" node and gets the values.</p>

<p>Solution:</p>

<p><code>if 'Variable_weights/initial_value' in n.name:
     var = tensor_util.MakeNdarray(n.attr['value'].tensor)</code></p>
",0
VariableSynchronization,TensorFlow,directive,68679940,"<p>It sounds like you are using Tensorflow 1.x API since you mentioned using <code>tf.placeholder</code> and <code>sess.run</code>, so I have provided the solution using the Tensorflow 1.x API from Tensorflow 2.x. If you want to run in Tensorflow 1.x, just remove <code>compat.v1</code>.</p>
<pre><code>    tf_x = tf.compat.v1.placeholder(tf.float32, [None, 1], name='x')  # input x
    tf_y = tf.compat.v1.placeholder(tf.float32, [None, 1], name='y')  # input y
    h = tf.Variable(0.0, name='h')

    l1 = tf.compat.v1.layers.dense(tf_x, 1, name='layer_1')  # assume linear activation
    output = tf.compat.v1.layers.dense(l1, 1, name='output')  # output layer
    loss = tf.reduce_max(tf.abs(tf_y - output)) + tf.abs((h - tf.reduce_max(tf.abs(tf_y - output))))
    optimizer = tf.compat.v1.train.GradientDescentOptimizer(learning_rate=0.1).minimize(loss)
    init = tf.compat.v1.global_variables_initializer()
    variables = tf.compat.v1.trainable_variables()

    x = np.expand_dims(np.array([5.0, 5.0], dtype=np.float32), axis=-1)
    y = np.expand_dims(np.array([2.0, 3.0], dtype=np.float32), axis=-1)

    with tf.compat.v1.Session() as sess:
        sess.run(init)

        for step in range(1000):
            _, val = sess.run([optimizer, loss],
                              feed_dict={tf_x: x, tf_y: y})
            prediction = sess.run(output, feed_dict={'x:0': x})
            print(prediction)
            if step % 5 == 0:
                print(&quot;step: {}, loss: {}&quot;.format(step, val))
            print([{variable.name: sess.run(variable)} for variable in variables])
</code></pre>
<p>I have included some print statements to assist with observing the training process. The loss function is a bit weird looking because of the problem statement - we're learning both the function <code>f(x)</code> which approximates <code>y</code> and the residual error <code>h</code>. I used dummy inputs to verify the functionality of the model - by providing two 5's with an output of 2 and 3, the model is forced to compromise and converge around predicting 2.5. From the last steps:</p>
<pre><code>step: 990, loss: 0.6000000238418579
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
step: 995, loss: 0.6999993324279785
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
</code></pre>
<p>Notice the model predicts 2.4-2.6 for the inputs and for <code>h</code>, the estimate is between 0.5-0.7, which is close to the actual residual errors (0.4-0.6). The behavior may change with real data - specifically, with real data there may not be duplicate inputs with different outputs, which is confusing for a model. To sanity check, we can run again with the same outputs, but change the input to 7:</p>
<pre><code>step: 995, loss: 1.9000002145767212
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[0.60248166]], dtype=float32)}, {'layer_1/bias:0': array([0.21199825], dtype=float32)}, {'output/kernel:0': array([[1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[-0.767429 ]
 [-1.0744007]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.88150656]], dtype=float32)}, {'layer_1/bias:0': array([-6.8724134e-08], dtype=float32)}, {'output/kernel:0': array([[0.1741176]], dtype=float32)}, {'output/bias:0': array([0.], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 2.0000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
</code></pre>
<p>It's fairly accurate, as the residual error is about 2.1 (7 - 4.89) and <code>h</code> is output as 1.8.</p>
<p>It's worth noting some additional pieces may be required for this loss function - for example, bounding <code>output</code> since it's linear and can go to infinity (which the model may do to minimize the loss - <code> tf.reduce_max(tf.abs(tf_y - output))</code> means that <code>output</code> being infinity results in a negative infinity loss) - but this should be a starting point.</p>
",0
VariableSynchronization,TensorFlow,directive,72620413,"<p>Refer to Official Contents tensorflow.org with detailed info COMPATIBLE versions with CUDA, Tensorflow Version, Python Version, CuDNN: <br>
For Windows: <a href=""https://www.tensorflow.org/install/source_windows#cpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#cpu</a> <br>
<a href=""https://www.tensorflow.org/install/source_windows#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#gpu</a> <br><br></p>
<p>For Linux: <a href=""https://www.tensorflow.org/install/source#linux"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#linux</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu</a> <br><br></p>
<p>For MacOS: <a href=""https://www.tensorflow.org/install/source#macos"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#macos</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu_2"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu_2</a></p>
",0
VariableSynchronization,TensorFlow,directive,58406842,"<p>Yes, Tensorflow in graph mode has its own internal global state. </p>

<p>You don't want to reload your model at every prediction, that's really inefficient.</p>

<p>The right strategy is to load the model at the start of your web app and then reference the global state.</p>

<p>Use a global variable for the model and graph and do something like this:</p>

<pre class=""lang-py prettyprint-override""><code>loaded_model = None
graph = None

def load_model(export_path):

    # global variables
    global loaded_model
    global graph

    loaded_model = load_model('model.h5'))
    graph = tf.get_default_graph()
</code></pre>

<p>then, in your prediction function you do:</p>

<pre class=""lang-py prettyprint-override""><code>@app.route('/', methods=[""POST""])
def predict():
    if request.method == ""POST"":
        data = request.data

        with graph.as_default():
            probas = loaded_model.predict(data)
</code></pre>

<p>An complete short example for how to do this can be found <a href=""https://github.com/zerotodeeplearning/ztdl-5-day-bootcamp/blob/7b687fe2761bb5516e2ea239cb8339a0f8931208/day_5/model_serving/flask_serve_model.py"" rel=""nofollow noreferrer"">here</a>.</p>

<p>Alternatively, if you use Tensorflow 2.0, which defaults to Eager mode, you have no graph and therefore no problem.</p>
",0
VariableSynchronization,TensorFlow,directive,62016362,"<p>Since <code>TensorFlow Hub's</code> initial support for <code>Tensorflow 2.0</code> started from <code>TensorFlow Hub 0.3.0 version</code>, the issue is in the version of <code>TensorFlow Hub</code>(0.1.1) you are using which only supports Tensorflow 1.x versions.  </p>

<p>Upgrade your TensorFlow Hub to latest( 0.8.0 as of today) using below command.  </p>

<pre><code>pip install --upgrade tensorflow-hub  
</code></pre>

<p>As you can see in the error log, the tensorflow hub internally trying to assign <code>FLAGS = tf.flags.FLAGS</code>.<br>
In Tensorlow 2.x <code>tf.flags.FLAGS</code> has been moved to <code>tf.compat.flags.Flag</code>  which is not addressed in <code>Tensorflow Hub 0.1.1</code>.  </p>

<p>Now in the latest Tensorflow Hub(0.8.0) they are using flags like below.  </p>

<pre><code>from absl import flags
FLAGS = flags.FLAGS 
</code></pre>

<p>Upgrading Tensorflow Hub should resolve your issue.</p>
",0
VariableSynchronization,TensorFlow,directive,61929802,"<p>Many TensorFlow operations are accelerated using the GPU for computation. Without any annotations, TensorFlow automatically decides whether to use the GPU or CPU for an operation—copying the tensor between CPU and GPU memory, if necessary. Tensors produced by an operation are typically backed by the memory of the device on which the operation executed.</p>

<p>Tensorflow will only allocate memory and place operations on visible physical devices, as otherwise no LogicalDevice will be created on them. By default all discovered devices are marked as visible. </p>

<p>Also GPU utilization depends on the <code>batch_size</code>. The utilization may change with varying <code>batch_size</code>. </p>

<p>You can also compare your current results(time taken and utilization) with model using the <code>Example 3</code> from <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/utils/multi_gpu_model"" rel=""nofollow noreferrer"">multi_gpu_model</a>.</p>

<p>Also if you go into the link, it states -</p>

<blockquote>
  <p>Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2020-04-01. Instructions for updating: Use tf.distribute.MirroredStrategy instead.</p>
</blockquote>

<p>There should be performance improvement and GPU Utilization using <code>tf.distribute.MirroredStrategy</code>. This strategy is typically used for training on one machine with multiple GPUs. The <code>tf.distribute.Strategy</code> API provides an abstraction for distributing your training across multiple processing units. The goal is to allow users to enable distributed training using existing models and training code, with minimal changes.</p>

<p>For example, a variable created under a <code>MirroredStrategy</code> is a <code>MirroredVariable</code>. If no devices are specified in the constructor argument of the strategy then it will use all the available <code>GPUs</code>. If no <code>GPUs</code> are found, it will use the available <code>CPUs</code>. Note that TensorFlow treats all <code>CPUs</code> on a machine as a single device, and uses threads internally for parallelism.</p>

<p>Would recommend to go through <a href=""https://www.tensorflow.org/tutorials/distribute/custom_training"" rel=""nofollow noreferrer"">Custom training with tf.distribute.Strategy</a> tutorial that demonstrates on how to use tf.distribute.Strategy with custom training loops. They will train a simple CNN model on the fashion MNIST dataset.</p>

<p>Hope this answers your question. Happy Learning.</p>
",0
VariableSynchronization,TensorFlow,directive,74435180,"<p><strong>This diagram was most likely made by a human.</strong></p>
<p>Labels like &quot;copy and crop&quot; are not typically derived from your raw model, maybe you could train a model for it ;D</p>
<p>There are many frameworks which can visualize your Tensorflow Model, Tensorflow has it's own suite <a href=""https://tensorboard.dev/"" rel=""nofollow noreferrer"">Tensorboard</a>.</p>
<p>See this <a href=""https://tensorboard.dev/experiment/EDZb7XgKSBKo6Gznh3i8hg/#graphs&amp;run=lr_1E-04%2Cconv%3D1%2Cfc%3D2"" rel=""nofollow noreferrer"">example</a>:</p>
<p><a href=""https://i.sstatic.net/yOypQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/yOypQ.png"" alt=""enter image description here"" /></a></p>
<p>If you want anything else, look at <a href=""https://datascience.stackexchange.com/questions/12851/how-do-you-visualize-neural-network-architectures"">this thread over at Data Science Stack Exchange</a></p>
",0
VariableSynchronization,TensorFlow,pattern,62189608,"<p>In TensorFlow 2 with Eager execution, you can still use <code>tf.name_scope</code> which was moved to TF2.  </p>

<p>Below is an example.  </p>

<pre><code>with tf.name_scope(""foo""):
    with tf.name_scope(""bar""):
        v = tf.Variable([0], dtype=tf.float32, name=""v"")
        assert v.name == ""foo/bar/v:0"" 
</code></pre>

<p>But since Variable is in Tensorflow 2 has many changes and improvements by addressing drawbacks like <code>variables reusing</code>, <code>reliance on global scopes</code>.<br>
It is not really necessary to use <code>variable_scope</code> with these changes to the Variables.  </p>

<p>But if you still need to use variable_scope you can use it in the following way.  </p>

<blockquote>
  <p><code>to control variable naming users can use tf.name_scope + tf.Variable</code> </p>
</blockquote>

<p>You can follow community RFC <a href=""https://github.com/tensorflow/community/blob/master/rfcs/20180817-variables-20.md"" rel=""nofollow noreferrer"">Variables in TensorFlow 2.0</a> for detailed information on all the major changes on Variables from Tensorflow 1 to Tensorflow 2</p>
",0
VariableSynchronization,TensorFlow,pattern,58826636,"<p>Though I can't guarantee this is the easiest way to run the conversion, I have run into the need to save and restore tensorflow variables as raw numpy arrays, and this could definitely help you with your conversion.</p>

<p>On the Tensorflow 2 side, make a dictionary of the Tensorflow variables and the names of those variables in the Tensorflow 1 graph, then make a dictionary with the names of the variables to the value they hold using variable.value().  You'll then probably need to serialize the name-value dictionary to a file, unless you can manage to load both versions of tensorflow simultaneously into the same program.</p>

<p>On the Tensorflow 1 side, use tf.trainable_variables() to fetch the list of variables to assign.  Get the name of the variable with variable.name, use the saved dictionary to fetch the value for that variable, and then use session.run(variable.assign(value)) to populate the parameters with the trained values.</p>

<p>A little bit cumbersome, admittedly, and it might not be hugely performant, but it shouldn't take more than two dozen lines of code to implement, at least!  </p>
",0
VariableSynchronization,TensorFlow,pattern,64448224,"<p>Migrating code from <code>Tensorflow 1.x</code> to <code>Tensorflow 2.x</code> using Automated script will just do an initial pass. But in the process, you need to note that there are many things which won't fall under <code>Tensorflow 2.x</code> implementations such as <code>placeholders</code>, <code>sessions</code>, <code>collections</code>,t<code>f.contrib</code>, and other 1.x functionalities including changes in the behavior of <code>variables</code>.</p>
<p>First, let me tell you the difference between <code>tf.get_variable</code> and <code>tf.Variable</code>.</p>
<p><code>tf.get_variable</code> gets an existing variable with specifies parameters from the graph, and if it doesn't exist it creates a new one, whereas <code>tf.Variable</code> will always create a new variable, even if the same name is passed, Tensorflow will assign the new name with the suffix <em>variable_name</em>_1.</p>
<p>In <code>Tensorflow 2.x</code> using <code>tf.Variable</code> creates a Resource variable as default with eager execution is enabled by default.</p>
<p>You don't have to worry about this warning unless you are facing behavior in your variables usage.
If you want to disable the resource variable  <code>tf.compat.v1.disable_resource_variables()</code> is depreciated instead you can use <code>use_resource= False</code> in <code>tf.get_variable()</code> which will be forced to true when eager excecution is enabled by default in <code>Tensorflow 2.x</code>.</p>
<p>You can see all the other changes and observations to be made during migrating your code from <a href=""https://www.tensorflow.org/guide/migrate"" rel=""nofollow noreferrer"">this</a> documentation from Tensorflow.</p>
",0
VariableSynchronization,TensorFlow,pattern,57073294,"<p>Resolved:</p>

<p>After debugging and observing the TensorBoard graph I realized that only the Variable_weights/initial_value node has the actual values after session run. 
So the solution above is working since Variable_weights/initial_value is a constant TensorFlow node that is automatically created and is the input to the assigned node of TensorFlow Variable.</p>

<p>Every Variable in the TensorFlow graph has 4 operations/nodes. The Variable, Identity, Assign and Const which is the initial_value.</p>

<p>At first, I thought that the 'Variable' node will return the values.</p>

<p>But eventually, I invoked the snippet bellow in ""initial_value"" node and gets the values.</p>

<p>Solution:</p>

<p><code>if 'Variable_weights/initial_value' in n.name:
     var = tensor_util.MakeNdarray(n.attr['value'].tensor)</code></p>
",0
VariableSynchronization,TensorFlow,pattern,72620413,"<p>Refer to Official Contents tensorflow.org with detailed info COMPATIBLE versions with CUDA, Tensorflow Version, Python Version, CuDNN: <br>
For Windows: <a href=""https://www.tensorflow.org/install/source_windows#cpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#cpu</a> <br>
<a href=""https://www.tensorflow.org/install/source_windows#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#gpu</a> <br><br></p>
<p>For Linux: <a href=""https://www.tensorflow.org/install/source#linux"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#linux</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu</a> <br><br></p>
<p>For MacOS: <a href=""https://www.tensorflow.org/install/source#macos"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#macos</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu_2"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu_2</a></p>
",0
VariableSynchronization,TensorFlow,pattern,62016362,"<p>Since <code>TensorFlow Hub's</code> initial support for <code>Tensorflow 2.0</code> started from <code>TensorFlow Hub 0.3.0 version</code>, the issue is in the version of <code>TensorFlow Hub</code>(0.1.1) you are using which only supports Tensorflow 1.x versions.  </p>

<p>Upgrade your TensorFlow Hub to latest( 0.8.0 as of today) using below command.  </p>

<pre><code>pip install --upgrade tensorflow-hub  
</code></pre>

<p>As you can see in the error log, the tensorflow hub internally trying to assign <code>FLAGS = tf.flags.FLAGS</code>.<br>
In Tensorlow 2.x <code>tf.flags.FLAGS</code> has been moved to <code>tf.compat.flags.Flag</code>  which is not addressed in <code>Tensorflow Hub 0.1.1</code>.  </p>

<p>Now in the latest Tensorflow Hub(0.8.0) they are using flags like below.  </p>

<pre><code>from absl import flags
FLAGS = flags.FLAGS 
</code></pre>

<p>Upgrading Tensorflow Hub should resolve your issue.</p>
",0
VariableSynchronization,TensorFlow,pattern,68679940,"<p>It sounds like you are using Tensorflow 1.x API since you mentioned using <code>tf.placeholder</code> and <code>sess.run</code>, so I have provided the solution using the Tensorflow 1.x API from Tensorflow 2.x. If you want to run in Tensorflow 1.x, just remove <code>compat.v1</code>.</p>
<pre><code>    tf_x = tf.compat.v1.placeholder(tf.float32, [None, 1], name='x')  # input x
    tf_y = tf.compat.v1.placeholder(tf.float32, [None, 1], name='y')  # input y
    h = tf.Variable(0.0, name='h')

    l1 = tf.compat.v1.layers.dense(tf_x, 1, name='layer_1')  # assume linear activation
    output = tf.compat.v1.layers.dense(l1, 1, name='output')  # output layer
    loss = tf.reduce_max(tf.abs(tf_y - output)) + tf.abs((h - tf.reduce_max(tf.abs(tf_y - output))))
    optimizer = tf.compat.v1.train.GradientDescentOptimizer(learning_rate=0.1).minimize(loss)
    init = tf.compat.v1.global_variables_initializer()
    variables = tf.compat.v1.trainable_variables()

    x = np.expand_dims(np.array([5.0, 5.0], dtype=np.float32), axis=-1)
    y = np.expand_dims(np.array([2.0, 3.0], dtype=np.float32), axis=-1)

    with tf.compat.v1.Session() as sess:
        sess.run(init)

        for step in range(1000):
            _, val = sess.run([optimizer, loss],
                              feed_dict={tf_x: x, tf_y: y})
            prediction = sess.run(output, feed_dict={'x:0': x})
            print(prediction)
            if step % 5 == 0:
                print(&quot;step: {}, loss: {}&quot;.format(step, val))
            print([{variable.name: sess.run(variable)} for variable in variables])
</code></pre>
<p>I have included some print statements to assist with observing the training process. The loss function is a bit weird looking because of the problem statement - we're learning both the function <code>f(x)</code> which approximates <code>y</code> and the residual error <code>h</code>. I used dummy inputs to verify the functionality of the model - by providing two 5's with an output of 2 and 3, the model is forced to compromise and converge around predicting 2.5. From the last steps:</p>
<pre><code>step: 990, loss: 0.6000000238418579
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
step: 995, loss: 0.6999993324279785
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
</code></pre>
<p>Notice the model predicts 2.4-2.6 for the inputs and for <code>h</code>, the estimate is between 0.5-0.7, which is close to the actual residual errors (0.4-0.6). The behavior may change with real data - specifically, with real data there may not be duplicate inputs with different outputs, which is confusing for a model. To sanity check, we can run again with the same outputs, but change the input to 7:</p>
<pre><code>step: 995, loss: 1.9000002145767212
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[0.60248166]], dtype=float32)}, {'layer_1/bias:0': array([0.21199825], dtype=float32)}, {'output/kernel:0': array([[1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[-0.767429 ]
 [-1.0744007]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.88150656]], dtype=float32)}, {'layer_1/bias:0': array([-6.8724134e-08], dtype=float32)}, {'output/kernel:0': array([[0.1741176]], dtype=float32)}, {'output/bias:0': array([0.], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 2.0000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
</code></pre>
<p>It's fairly accurate, as the residual error is about 2.1 (7 - 4.89) and <code>h</code> is output as 1.8.</p>
<p>It's worth noting some additional pieces may be required for this loss function - for example, bounding <code>output</code> since it's linear and can go to infinity (which the model may do to minimize the loss - <code> tf.reduce_max(tf.abs(tf_y - output))</code> means that <code>output</code> being infinity results in a negative infinity loss) - but this should be a starting point.</p>
",0
VariableSynchronization,TensorFlow,pattern,74435180,"<p><strong>This diagram was most likely made by a human.</strong></p>
<p>Labels like &quot;copy and crop&quot; are not typically derived from your raw model, maybe you could train a model for it ;D</p>
<p>There are many frameworks which can visualize your Tensorflow Model, Tensorflow has it's own suite <a href=""https://tensorboard.dev/"" rel=""nofollow noreferrer"">Tensorboard</a>.</p>
<p>See this <a href=""https://tensorboard.dev/experiment/EDZb7XgKSBKo6Gznh3i8hg/#graphs&amp;run=lr_1E-04%2Cconv%3D1%2Cfc%3D2"" rel=""nofollow noreferrer"">example</a>:</p>
<p><a href=""https://i.sstatic.net/yOypQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/yOypQ.png"" alt=""enter image description here"" /></a></p>
<p>If you want anything else, look at <a href=""https://datascience.stackexchange.com/questions/12851/how-do-you-visualize-neural-network-architectures"">this thread over at Data Science Stack Exchange</a></p>
",0
VariableSynchronization,TensorFlow,pattern,61929802,"<p>Many TensorFlow operations are accelerated using the GPU for computation. Without any annotations, TensorFlow automatically decides whether to use the GPU or CPU for an operation—copying the tensor between CPU and GPU memory, if necessary. Tensors produced by an operation are typically backed by the memory of the device on which the operation executed.</p>

<p>Tensorflow will only allocate memory and place operations on visible physical devices, as otherwise no LogicalDevice will be created on them. By default all discovered devices are marked as visible. </p>

<p>Also GPU utilization depends on the <code>batch_size</code>. The utilization may change with varying <code>batch_size</code>. </p>

<p>You can also compare your current results(time taken and utilization) with model using the <code>Example 3</code> from <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/utils/multi_gpu_model"" rel=""nofollow noreferrer"">multi_gpu_model</a>.</p>

<p>Also if you go into the link, it states -</p>

<blockquote>
  <p>Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2020-04-01. Instructions for updating: Use tf.distribute.MirroredStrategy instead.</p>
</blockquote>

<p>There should be performance improvement and GPU Utilization using <code>tf.distribute.MirroredStrategy</code>. This strategy is typically used for training on one machine with multiple GPUs. The <code>tf.distribute.Strategy</code> API provides an abstraction for distributing your training across multiple processing units. The goal is to allow users to enable distributed training using existing models and training code, with minimal changes.</p>

<p>For example, a variable created under a <code>MirroredStrategy</code> is a <code>MirroredVariable</code>. If no devices are specified in the constructor argument of the strategy then it will use all the available <code>GPUs</code>. If no <code>GPUs</code> are found, it will use the available <code>CPUs</code>. Note that TensorFlow treats all <code>CPUs</code> on a machine as a single device, and uses threads internally for parallelism.</p>

<p>Would recommend to go through <a href=""https://www.tensorflow.org/tutorials/distribute/custom_training"" rel=""nofollow noreferrer"">Custom training with tf.distribute.Strategy</a> tutorial that demonstrates on how to use tf.distribute.Strategy with custom training loops. They will train a simple CNN model on the fashion MNIST dataset.</p>

<p>Hope this answers your question. Happy Learning.</p>
",0
VariableSynchronization,TensorFlow,pattern,69639317,"<p>I have similar experience with you.
I have two GPU, each GPU run three threads, each thread running a session, each session running time fluct a lot.
if run only one thread on each GPU, session running time is quite stable.</p>
<p>from these appearence, we can conclude that ,thread in tensorflow not cowork well,
the mechanism of tensorflow has problem.</p>
",0
VariableSynchronization,TensorFlow,environment,58826636,"<p>Though I can't guarantee this is the easiest way to run the conversion, I have run into the need to save and restore tensorflow variables as raw numpy arrays, and this could definitely help you with your conversion.</p>

<p>On the Tensorflow 2 side, make a dictionary of the Tensorflow variables and the names of those variables in the Tensorflow 1 graph, then make a dictionary with the names of the variables to the value they hold using variable.value().  You'll then probably need to serialize the name-value dictionary to a file, unless you can manage to load both versions of tensorflow simultaneously into the same program.</p>

<p>On the Tensorflow 1 side, use tf.trainable_variables() to fetch the list of variables to assign.  Get the name of the variable with variable.name, use the saved dictionary to fetch the value for that variable, and then use session.run(variable.assign(value)) to populate the parameters with the trained values.</p>

<p>A little bit cumbersome, admittedly, and it might not be hugely performant, but it shouldn't take more than two dozen lines of code to implement, at least!  </p>
",0
VariableSynchronization,TensorFlow,environment,64448224,"<p>Migrating code from <code>Tensorflow 1.x</code> to <code>Tensorflow 2.x</code> using Automated script will just do an initial pass. But in the process, you need to note that there are many things which won't fall under <code>Tensorflow 2.x</code> implementations such as <code>placeholders</code>, <code>sessions</code>, <code>collections</code>,t<code>f.contrib</code>, and other 1.x functionalities including changes in the behavior of <code>variables</code>.</p>
<p>First, let me tell you the difference between <code>tf.get_variable</code> and <code>tf.Variable</code>.</p>
<p><code>tf.get_variable</code> gets an existing variable with specifies parameters from the graph, and if it doesn't exist it creates a new one, whereas <code>tf.Variable</code> will always create a new variable, even if the same name is passed, Tensorflow will assign the new name with the suffix <em>variable_name</em>_1.</p>
<p>In <code>Tensorflow 2.x</code> using <code>tf.Variable</code> creates a Resource variable as default with eager execution is enabled by default.</p>
<p>You don't have to worry about this warning unless you are facing behavior in your variables usage.
If you want to disable the resource variable  <code>tf.compat.v1.disable_resource_variables()</code> is depreciated instead you can use <code>use_resource= False</code> in <code>tf.get_variable()</code> which will be forced to true when eager excecution is enabled by default in <code>Tensorflow 2.x</code>.</p>
<p>You can see all the other changes and observations to be made during migrating your code from <a href=""https://www.tensorflow.org/guide/migrate"" rel=""nofollow noreferrer"">this</a> documentation from Tensorflow.</p>
",0
VariableSynchronization,TensorFlow,environment,62189608,"<p>In TensorFlow 2 with Eager execution, you can still use <code>tf.name_scope</code> which was moved to TF2.  </p>

<p>Below is an example.  </p>

<pre><code>with tf.name_scope(""foo""):
    with tf.name_scope(""bar""):
        v = tf.Variable([0], dtype=tf.float32, name=""v"")
        assert v.name == ""foo/bar/v:0"" 
</code></pre>

<p>But since Variable is in Tensorflow 2 has many changes and improvements by addressing drawbacks like <code>variables reusing</code>, <code>reliance on global scopes</code>.<br>
It is not really necessary to use <code>variable_scope</code> with these changes to the Variables.  </p>

<p>But if you still need to use variable_scope you can use it in the following way.  </p>

<blockquote>
  <p><code>to control variable naming users can use tf.name_scope + tf.Variable</code> </p>
</blockquote>

<p>You can follow community RFC <a href=""https://github.com/tensorflow/community/blob/master/rfcs/20180817-variables-20.md"" rel=""nofollow noreferrer"">Variables in TensorFlow 2.0</a> for detailed information on all the major changes on Variables from Tensorflow 1 to Tensorflow 2</p>
",0
VariableSynchronization,TensorFlow,environment,72620413,"<p>Refer to Official Contents tensorflow.org with detailed info COMPATIBLE versions with CUDA, Tensorflow Version, Python Version, CuDNN: <br>
For Windows: <a href=""https://www.tensorflow.org/install/source_windows#cpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#cpu</a> <br>
<a href=""https://www.tensorflow.org/install/source_windows#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#gpu</a> <br><br></p>
<p>For Linux: <a href=""https://www.tensorflow.org/install/source#linux"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#linux</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu</a> <br><br></p>
<p>For MacOS: <a href=""https://www.tensorflow.org/install/source#macos"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#macos</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu_2"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu_2</a></p>
",0
VariableSynchronization,TensorFlow,environment,57073294,"<p>Resolved:</p>

<p>After debugging and observing the TensorBoard graph I realized that only the Variable_weights/initial_value node has the actual values after session run. 
So the solution above is working since Variable_weights/initial_value is a constant TensorFlow node that is automatically created and is the input to the assigned node of TensorFlow Variable.</p>

<p>Every Variable in the TensorFlow graph has 4 operations/nodes. The Variable, Identity, Assign and Const which is the initial_value.</p>

<p>At first, I thought that the 'Variable' node will return the values.</p>

<p>But eventually, I invoked the snippet bellow in ""initial_value"" node and gets the values.</p>

<p>Solution:</p>

<p><code>if 'Variable_weights/initial_value' in n.name:
     var = tensor_util.MakeNdarray(n.attr['value'].tensor)</code></p>
",0
VariableSynchronization,TensorFlow,environment,61929802,"<p>Many TensorFlow operations are accelerated using the GPU for computation. Without any annotations, TensorFlow automatically decides whether to use the GPU or CPU for an operation—copying the tensor between CPU and GPU memory, if necessary. Tensors produced by an operation are typically backed by the memory of the device on which the operation executed.</p>

<p>Tensorflow will only allocate memory and place operations on visible physical devices, as otherwise no LogicalDevice will be created on them. By default all discovered devices are marked as visible. </p>

<p>Also GPU utilization depends on the <code>batch_size</code>. The utilization may change with varying <code>batch_size</code>. </p>

<p>You can also compare your current results(time taken and utilization) with model using the <code>Example 3</code> from <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/utils/multi_gpu_model"" rel=""nofollow noreferrer"">multi_gpu_model</a>.</p>

<p>Also if you go into the link, it states -</p>

<blockquote>
  <p>Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2020-04-01. Instructions for updating: Use tf.distribute.MirroredStrategy instead.</p>
</blockquote>

<p>There should be performance improvement and GPU Utilization using <code>tf.distribute.MirroredStrategy</code>. This strategy is typically used for training on one machine with multiple GPUs. The <code>tf.distribute.Strategy</code> API provides an abstraction for distributing your training across multiple processing units. The goal is to allow users to enable distributed training using existing models and training code, with minimal changes.</p>

<p>For example, a variable created under a <code>MirroredStrategy</code> is a <code>MirroredVariable</code>. If no devices are specified in the constructor argument of the strategy then it will use all the available <code>GPUs</code>. If no <code>GPUs</code> are found, it will use the available <code>CPUs</code>. Note that TensorFlow treats all <code>CPUs</code> on a machine as a single device, and uses threads internally for parallelism.</p>

<p>Would recommend to go through <a href=""https://www.tensorflow.org/tutorials/distribute/custom_training"" rel=""nofollow noreferrer"">Custom training with tf.distribute.Strategy</a> tutorial that demonstrates on how to use tf.distribute.Strategy with custom training loops. They will train a simple CNN model on the fashion MNIST dataset.</p>

<p>Hope this answers your question. Happy Learning.</p>
",0
VariableSynchronization,TensorFlow,environment,68679940,"<p>It sounds like you are using Tensorflow 1.x API since you mentioned using <code>tf.placeholder</code> and <code>sess.run</code>, so I have provided the solution using the Tensorflow 1.x API from Tensorflow 2.x. If you want to run in Tensorflow 1.x, just remove <code>compat.v1</code>.</p>
<pre><code>    tf_x = tf.compat.v1.placeholder(tf.float32, [None, 1], name='x')  # input x
    tf_y = tf.compat.v1.placeholder(tf.float32, [None, 1], name='y')  # input y
    h = tf.Variable(0.0, name='h')

    l1 = tf.compat.v1.layers.dense(tf_x, 1, name='layer_1')  # assume linear activation
    output = tf.compat.v1.layers.dense(l1, 1, name='output')  # output layer
    loss = tf.reduce_max(tf.abs(tf_y - output)) + tf.abs((h - tf.reduce_max(tf.abs(tf_y - output))))
    optimizer = tf.compat.v1.train.GradientDescentOptimizer(learning_rate=0.1).minimize(loss)
    init = tf.compat.v1.global_variables_initializer()
    variables = tf.compat.v1.trainable_variables()

    x = np.expand_dims(np.array([5.0, 5.0], dtype=np.float32), axis=-1)
    y = np.expand_dims(np.array([2.0, 3.0], dtype=np.float32), axis=-1)

    with tf.compat.v1.Session() as sess:
        sess.run(init)

        for step in range(1000):
            _, val = sess.run([optimizer, loss],
                              feed_dict={tf_x: x, tf_y: y})
            prediction = sess.run(output, feed_dict={'x:0': x})
            print(prediction)
            if step % 5 == 0:
                print(&quot;step: {}, loss: {}&quot;.format(step, val))
            print([{variable.name: sess.run(variable)} for variable in variables])
</code></pre>
<p>I have included some print statements to assist with observing the training process. The loss function is a bit weird looking because of the problem statement - we're learning both the function <code>f(x)</code> which approximates <code>y</code> and the residual error <code>h</code>. I used dummy inputs to verify the functionality of the model - by providing two 5's with an output of 2 and 3, the model is forced to compromise and converge around predicting 2.5. From the last steps:</p>
<pre><code>step: 990, loss: 0.6000000238418579
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
step: 995, loss: 0.6999993324279785
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
</code></pre>
<p>Notice the model predicts 2.4-2.6 for the inputs and for <code>h</code>, the estimate is between 0.5-0.7, which is close to the actual residual errors (0.4-0.6). The behavior may change with real data - specifically, with real data there may not be duplicate inputs with different outputs, which is confusing for a model. To sanity check, we can run again with the same outputs, but change the input to 7:</p>
<pre><code>step: 995, loss: 1.9000002145767212
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[0.60248166]], dtype=float32)}, {'layer_1/bias:0': array([0.21199825], dtype=float32)}, {'output/kernel:0': array([[1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[-0.767429 ]
 [-1.0744007]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.88150656]], dtype=float32)}, {'layer_1/bias:0': array([-6.8724134e-08], dtype=float32)}, {'output/kernel:0': array([[0.1741176]], dtype=float32)}, {'output/bias:0': array([0.], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 2.0000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
</code></pre>
<p>It's fairly accurate, as the residual error is about 2.1 (7 - 4.89) and <code>h</code> is output as 1.8.</p>
<p>It's worth noting some additional pieces may be required for this loss function - for example, bounding <code>output</code> since it's linear and can go to infinity (which the model may do to minimize the loss - <code> tf.reduce_max(tf.abs(tf_y - output))</code> means that <code>output</code> being infinity results in a negative infinity loss) - but this should be a starting point.</p>
",0
VariableSynchronization,TensorFlow,environment,74435180,"<p><strong>This diagram was most likely made by a human.</strong></p>
<p>Labels like &quot;copy and crop&quot; are not typically derived from your raw model, maybe you could train a model for it ;D</p>
<p>There are many frameworks which can visualize your Tensorflow Model, Tensorflow has it's own suite <a href=""https://tensorboard.dev/"" rel=""nofollow noreferrer"">Tensorboard</a>.</p>
<p>See this <a href=""https://tensorboard.dev/experiment/EDZb7XgKSBKo6Gznh3i8hg/#graphs&amp;run=lr_1E-04%2Cconv%3D1%2Cfc%3D2"" rel=""nofollow noreferrer"">example</a>:</p>
<p><a href=""https://i.sstatic.net/yOypQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/yOypQ.png"" alt=""enter image description here"" /></a></p>
<p>If you want anything else, look at <a href=""https://datascience.stackexchange.com/questions/12851/how-do-you-visualize-neural-network-architectures"">this thread over at Data Science Stack Exchange</a></p>
",0
VariableSynchronization,TensorFlow,environment,58406842,"<p>Yes, Tensorflow in graph mode has its own internal global state. </p>

<p>You don't want to reload your model at every prediction, that's really inefficient.</p>

<p>The right strategy is to load the model at the start of your web app and then reference the global state.</p>

<p>Use a global variable for the model and graph and do something like this:</p>

<pre class=""lang-py prettyprint-override""><code>loaded_model = None
graph = None

def load_model(export_path):

    # global variables
    global loaded_model
    global graph

    loaded_model = load_model('model.h5'))
    graph = tf.get_default_graph()
</code></pre>

<p>then, in your prediction function you do:</p>

<pre class=""lang-py prettyprint-override""><code>@app.route('/', methods=[""POST""])
def predict():
    if request.method == ""POST"":
        data = request.data

        with graph.as_default():
            probas = loaded_model.predict(data)
</code></pre>

<p>An complete short example for how to do this can be found <a href=""https://github.com/zerotodeeplearning/ztdl-5-day-bootcamp/blob/7b687fe2761bb5516e2ea239cb8339a0f8931208/day_5/model_serving/flask_serve_model.py"" rel=""nofollow noreferrer"">here</a>.</p>

<p>Alternatively, if you use Tensorflow 2.0, which defaults to Eager mode, you have no graph and therefore no problem.</p>
",0
VariableSynchronization,TensorFlow,environment,70782668,"<h3>Yes this behaviour is normal for TensorFlow!</h3>
<p>From the <a href=""https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth"" rel=""noreferrer"">TensorFlow docs</a></p>
<blockquote>
<p>By default, TensorFlow maps nearly all of the GPU memory of all GPUs (subject to CUDA_VISIBLE_DEVICES) visible to the process. This is done to more efficiently use the relatively precious GPU memory resources on the devices by reducing memory fragmentation. To limit TensorFlow to a specific set of GPUs, use the <a href=""https://www.tensorflow.org/api_docs/python/tf/config/set_visible_devices"" rel=""noreferrer"">tf.config.set_visible_devices</a> method.</p>
</blockquote>
<hr />
<p>If you don't want TensorFlow to allocate the totality of your VRAM, you can either set a hard limit on how much memory to use or tell TensorFlow to only allocate as much memory as needed.</p>
<h3>To set a hard limit</h3>
<p>Configure a virtual GPU device as follows:</p>
<pre class=""lang-py prettyprint-override""><code>gpus = tf.config.list_physical_devices('GPU')
if gpus:
  # Restrict TensorFlow to only allocate 1GB of memory on the first GPU
  try:
    tf.config.set_logical_device_configuration(
        gpus[0],
        [tf.config.LogicalDeviceConfiguration(memory_limit=1024)])
    logical_gpus = tf.config.list_logical_devices('GPU')
    print(len(gpus), &quot;Physical GPUs,&quot;, len(logical_gpus), &quot;Logical GPUs&quot;)
  except RuntimeError as e:
    # Virtual devices must be set before GPUs have been initialized
    print(e)
</code></pre>
<h3>Only use as much as needed</h3>
<ul>
<li>You can set the environment variable <code>TF_FORCE_GPU_ALLOW_GROWTH=true</code></li>
</ul>
<p>OR</p>
<ul>
<li>Use <code>tf.config.experimental.set_memory_growth</code> as follows:</li>
</ul>
<pre class=""lang-py prettyprint-override""><code>gpus = tf.config.list_physical_devices('GPU')
if gpus:
  try:
    # Currently, memory growth needs to be the same across GPUs
    for gpu in gpus:
      tf.config.experimental.set_memory_growth(gpu, True)
    logical_gpus = tf.config.list_logical_devices('GPU')
    print(len(gpus), &quot;Physical GPUs,&quot;, len(logical_gpus), &quot;Logical GPUs&quot;)
  except RuntimeError as e:
    # Memory growth must be set before GPUs have been initialized
    print(e)
</code></pre>
<p>All code and information here is taken from <a href=""https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth"" rel=""noreferrer"">https://www.tensorflow.org/guide/gpu#limiting_gpu_memory_growth</a></p>
",0
VariableSynchronization,TensorFlow,alternative,58826636,"<p>Though I can't guarantee this is the easiest way to run the conversion, I have run into the need to save and restore tensorflow variables as raw numpy arrays, and this could definitely help you with your conversion.</p>

<p>On the Tensorflow 2 side, make a dictionary of the Tensorflow variables and the names of those variables in the Tensorflow 1 graph, then make a dictionary with the names of the variables to the value they hold using variable.value().  You'll then probably need to serialize the name-value dictionary to a file, unless you can manage to load both versions of tensorflow simultaneously into the same program.</p>

<p>On the Tensorflow 1 side, use tf.trainable_variables() to fetch the list of variables to assign.  Get the name of the variable with variable.name, use the saved dictionary to fetch the value for that variable, and then use session.run(variable.assign(value)) to populate the parameters with the trained values.</p>

<p>A little bit cumbersome, admittedly, and it might not be hugely performant, but it shouldn't take more than two dozen lines of code to implement, at least!  </p>
",0
VariableSynchronization,TensorFlow,alternative,62189608,"<p>In TensorFlow 2 with Eager execution, you can still use <code>tf.name_scope</code> which was moved to TF2.  </p>

<p>Below is an example.  </p>

<pre><code>with tf.name_scope(""foo""):
    with tf.name_scope(""bar""):
        v = tf.Variable([0], dtype=tf.float32, name=""v"")
        assert v.name == ""foo/bar/v:0"" 
</code></pre>

<p>But since Variable is in Tensorflow 2 has many changes and improvements by addressing drawbacks like <code>variables reusing</code>, <code>reliance on global scopes</code>.<br>
It is not really necessary to use <code>variable_scope</code> with these changes to the Variables.  </p>

<p>But if you still need to use variable_scope you can use it in the following way.  </p>

<blockquote>
  <p><code>to control variable naming users can use tf.name_scope + tf.Variable</code> </p>
</blockquote>

<p>You can follow community RFC <a href=""https://github.com/tensorflow/community/blob/master/rfcs/20180817-variables-20.md"" rel=""nofollow noreferrer"">Variables in TensorFlow 2.0</a> for detailed information on all the major changes on Variables from Tensorflow 1 to Tensorflow 2</p>
",0
VariableSynchronization,TensorFlow,alternative,64448224,"<p>Migrating code from <code>Tensorflow 1.x</code> to <code>Tensorflow 2.x</code> using Automated script will just do an initial pass. But in the process, you need to note that there are many things which won't fall under <code>Tensorflow 2.x</code> implementations such as <code>placeholders</code>, <code>sessions</code>, <code>collections</code>,t<code>f.contrib</code>, and other 1.x functionalities including changes in the behavior of <code>variables</code>.</p>
<p>First, let me tell you the difference between <code>tf.get_variable</code> and <code>tf.Variable</code>.</p>
<p><code>tf.get_variable</code> gets an existing variable with specifies parameters from the graph, and if it doesn't exist it creates a new one, whereas <code>tf.Variable</code> will always create a new variable, even if the same name is passed, Tensorflow will assign the new name with the suffix <em>variable_name</em>_1.</p>
<p>In <code>Tensorflow 2.x</code> using <code>tf.Variable</code> creates a Resource variable as default with eager execution is enabled by default.</p>
<p>You don't have to worry about this warning unless you are facing behavior in your variables usage.
If you want to disable the resource variable  <code>tf.compat.v1.disable_resource_variables()</code> is depreciated instead you can use <code>use_resource= False</code> in <code>tf.get_variable()</code> which will be forced to true when eager excecution is enabled by default in <code>Tensorflow 2.x</code>.</p>
<p>You can see all the other changes and observations to be made during migrating your code from <a href=""https://www.tensorflow.org/guide/migrate"" rel=""nofollow noreferrer"">this</a> documentation from Tensorflow.</p>
",0
VariableSynchronization,TensorFlow,alternative,57073294,"<p>Resolved:</p>

<p>After debugging and observing the TensorBoard graph I realized that only the Variable_weights/initial_value node has the actual values after session run. 
So the solution above is working since Variable_weights/initial_value is a constant TensorFlow node that is automatically created and is the input to the assigned node of TensorFlow Variable.</p>

<p>Every Variable in the TensorFlow graph has 4 operations/nodes. The Variable, Identity, Assign and Const which is the initial_value.</p>

<p>At first, I thought that the 'Variable' node will return the values.</p>

<p>But eventually, I invoked the snippet bellow in ""initial_value"" node and gets the values.</p>

<p>Solution:</p>

<p><code>if 'Variable_weights/initial_value' in n.name:
     var = tensor_util.MakeNdarray(n.attr['value'].tensor)</code></p>
",0
VariableSynchronization,TensorFlow,alternative,68679940,"<p>It sounds like you are using Tensorflow 1.x API since you mentioned using <code>tf.placeholder</code> and <code>sess.run</code>, so I have provided the solution using the Tensorflow 1.x API from Tensorflow 2.x. If you want to run in Tensorflow 1.x, just remove <code>compat.v1</code>.</p>
<pre><code>    tf_x = tf.compat.v1.placeholder(tf.float32, [None, 1], name='x')  # input x
    tf_y = tf.compat.v1.placeholder(tf.float32, [None, 1], name='y')  # input y
    h = tf.Variable(0.0, name='h')

    l1 = tf.compat.v1.layers.dense(tf_x, 1, name='layer_1')  # assume linear activation
    output = tf.compat.v1.layers.dense(l1, 1, name='output')  # output layer
    loss = tf.reduce_max(tf.abs(tf_y - output)) + tf.abs((h - tf.reduce_max(tf.abs(tf_y - output))))
    optimizer = tf.compat.v1.train.GradientDescentOptimizer(learning_rate=0.1).minimize(loss)
    init = tf.compat.v1.global_variables_initializer()
    variables = tf.compat.v1.trainable_variables()

    x = np.expand_dims(np.array([5.0, 5.0], dtype=np.float32), axis=-1)
    y = np.expand_dims(np.array([2.0, 3.0], dtype=np.float32), axis=-1)

    with tf.compat.v1.Session() as sess:
        sess.run(init)

        for step in range(1000):
            _, val = sess.run([optimizer, loss],
                              feed_dict={tf_x: x, tf_y: y})
            prediction = sess.run(output, feed_dict={'x:0': x})
            print(prediction)
            if step % 5 == 0:
                print(&quot;step: {}, loss: {}&quot;.format(step, val))
            print([{variable.name: sess.run(variable)} for variable in variables])
</code></pre>
<p>I have included some print statements to assist with observing the training process. The loss function is a bit weird looking because of the problem statement - we're learning both the function <code>f(x)</code> which approximates <code>y</code> and the residual error <code>h</code>. I used dummy inputs to verify the functionality of the model - by providing two 5's with an output of 2 and 3, the model is forced to compromise and converge around predicting 2.5. From the last steps:</p>
<pre><code>step: 990, loss: 0.6000000238418579
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
step: 995, loss: 0.6999993324279785
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.70000005}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.4000003]
 [2.4000003]]
[{'h:0': 0.5}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.4000003], dtype=float32)}]
[[2.6000004]
 [2.6000004]]
[{'h:0': 0.6}, {'layer_1/kernel:0': array([[0.04334712]], dtype=float32)}, {'layer_1/bias:0': array([-0.2167356], dtype=float32)}, {'output/kernel:0': array([[-1.0096708e-09]], dtype=float32)}, {'output/bias:0': array([2.6000004], dtype=float32)}]
</code></pre>
<p>Notice the model predicts 2.4-2.6 for the inputs and for <code>h</code>, the estimate is between 0.5-0.7, which is close to the actual residual errors (0.4-0.6). The behavior may change with real data - specifically, with real data there may not be duplicate inputs with different outputs, which is confusing for a model. To sanity check, we can run again with the same outputs, but change the input to 7:</p>
<pre><code>step: 995, loss: 1.9000002145767212
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[0.60248166]], dtype=float32)}, {'layer_1/bias:0': array([0.21199825], dtype=float32)}, {'output/kernel:0': array([[1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[-0.767429 ]
 [-1.0744007]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.88150656]], dtype=float32)}, {'layer_1/bias:0': array([-6.8724134e-08], dtype=float32)}, {'output/kernel:0': array([[0.1741176]], dtype=float32)}, {'output/bias:0': array([0.], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 2.0000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.9000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
[[3.543093]
 [4.895095]]
[{'h:0': 1.8000002}, {'layer_1/kernel:0': array([[-0.6377419]], dtype=float32)}, {'layer_1/bias:0': array([0.03482345], dtype=float32)}, {'output/kernel:0': array([[-1.0599916]], dtype=float32)}, {'output/bias:0': array([0.2], dtype=float32)}]
</code></pre>
<p>It's fairly accurate, as the residual error is about 2.1 (7 - 4.89) and <code>h</code> is output as 1.8.</p>
<p>It's worth noting some additional pieces may be required for this loss function - for example, bounding <code>output</code> since it's linear and can go to infinity (which the model may do to minimize the loss - <code> tf.reduce_max(tf.abs(tf_y - output))</code> means that <code>output</code> being infinity results in a negative infinity loss) - but this should be a starting point.</p>
",0
VariableSynchronization,TensorFlow,alternative,72620413,"<p>Refer to Official Contents tensorflow.org with detailed info COMPATIBLE versions with CUDA, Tensorflow Version, Python Version, CuDNN: <br>
For Windows: <a href=""https://www.tensorflow.org/install/source_windows#cpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#cpu</a> <br>
<a href=""https://www.tensorflow.org/install/source_windows#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source_windows#gpu</a> <br><br></p>
<p>For Linux: <a href=""https://www.tensorflow.org/install/source#linux"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#linux</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu</a> <br><br></p>
<p>For MacOS: <a href=""https://www.tensorflow.org/install/source#macos"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#macos</a> <br>
<a href=""https://www.tensorflow.org/install/source#gpu_2"" rel=""nofollow noreferrer"">https://www.tensorflow.org/install/source#gpu_2</a></p>
",0
VariableSynchronization,TensorFlow,alternative,69639317,"<p>I have similar experience with you.
I have two GPU, each GPU run three threads, each thread running a session, each session running time fluct a lot.
if run only one thread on each GPU, session running time is quite stable.</p>
<p>from these appearence, we can conclude that ,thread in tensorflow not cowork well,
the mechanism of tensorflow has problem.</p>
",0
VariableSynchronization,TensorFlow,alternative,61929802,"<p>Many TensorFlow operations are accelerated using the GPU for computation. Without any annotations, TensorFlow automatically decides whether to use the GPU or CPU for an operation—copying the tensor between CPU and GPU memory, if necessary. Tensors produced by an operation are typically backed by the memory of the device on which the operation executed.</p>

<p>Tensorflow will only allocate memory and place operations on visible physical devices, as otherwise no LogicalDevice will be created on them. By default all discovered devices are marked as visible. </p>

<p>Also GPU utilization depends on the <code>batch_size</code>. The utilization may change with varying <code>batch_size</code>. </p>

<p>You can also compare your current results(time taken and utilization) with model using the <code>Example 3</code> from <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/utils/multi_gpu_model"" rel=""nofollow noreferrer"">multi_gpu_model</a>.</p>

<p>Also if you go into the link, it states -</p>

<blockquote>
  <p>Warning: THIS FUNCTION IS DEPRECATED. It will be removed after 2020-04-01. Instructions for updating: Use tf.distribute.MirroredStrategy instead.</p>
</blockquote>

<p>There should be performance improvement and GPU Utilization using <code>tf.distribute.MirroredStrategy</code>. This strategy is typically used for training on one machine with multiple GPUs. The <code>tf.distribute.Strategy</code> API provides an abstraction for distributing your training across multiple processing units. The goal is to allow users to enable distributed training using existing models and training code, with minimal changes.</p>

<p>For example, a variable created under a <code>MirroredStrategy</code> is a <code>MirroredVariable</code>. If no devices are specified in the constructor argument of the strategy then it will use all the available <code>GPUs</code>. If no <code>GPUs</code> are found, it will use the available <code>CPUs</code>. Note that TensorFlow treats all <code>CPUs</code> on a machine as a single device, and uses threads internally for parallelism.</p>

<p>Would recommend to go through <a href=""https://www.tensorflow.org/tutorials/distribute/custom_training"" rel=""nofollow noreferrer"">Custom training with tf.distribute.Strategy</a> tutorial that demonstrates on how to use tf.distribute.Strategy with custom training loops. They will train a simple CNN model on the fashion MNIST dataset.</p>

<p>Hope this answers your question. Happy Learning.</p>
",0
VariableSynchronization,TensorFlow,alternative,58406842,"<p>Yes, Tensorflow in graph mode has its own internal global state. </p>

<p>You don't want to reload your model at every prediction, that's really inefficient.</p>

<p>The right strategy is to load the model at the start of your web app and then reference the global state.</p>

<p>Use a global variable for the model and graph and do something like this:</p>

<pre class=""lang-py prettyprint-override""><code>loaded_model = None
graph = None

def load_model(export_path):

    # global variables
    global loaded_model
    global graph

    loaded_model = load_model('model.h5'))
    graph = tf.get_default_graph()
</code></pre>

<p>then, in your prediction function you do:</p>

<pre class=""lang-py prettyprint-override""><code>@app.route('/', methods=[""POST""])
def predict():
    if request.method == ""POST"":
        data = request.data

        with graph.as_default():
            probas = loaded_model.predict(data)
</code></pre>

<p>An complete short example for how to do this can be found <a href=""https://github.com/zerotodeeplearning/ztdl-5-day-bootcamp/blob/7b687fe2761bb5516e2ea239cb8339a0f8931208/day_5/model_serving/flask_serve_model.py"" rel=""nofollow noreferrer"">here</a>.</p>

<p>Alternatively, if you use Tensorflow 2.0, which defaults to Eager mode, you have no graph and therefore no problem.</p>
",0
VariableSynchronization,TensorFlow,alternative,62016362,"<p>Since <code>TensorFlow Hub's</code> initial support for <code>Tensorflow 2.0</code> started from <code>TensorFlow Hub 0.3.0 version</code>, the issue is in the version of <code>TensorFlow Hub</code>(0.1.1) you are using which only supports Tensorflow 1.x versions.  </p>

<p>Upgrade your TensorFlow Hub to latest( 0.8.0 as of today) using below command.  </p>

<pre><code>pip install --upgrade tensorflow-hub  
</code></pre>

<p>As you can see in the error log, the tensorflow hub internally trying to assign <code>FLAGS = tf.flags.FLAGS</code>.<br>
In Tensorlow 2.x <code>tf.flags.FLAGS</code> has been moved to <code>tf.compat.flags.Flag</code>  which is not addressed in <code>Tensorflow Hub 0.1.1</code>.  </p>

<p>Now in the latest Tensorflow Hub(0.8.0) they are using flags like below.  </p>

<pre><code>from absl import flags
FLAGS = flags.FLAGS 
</code></pre>

<p>Upgrading Tensorflow Hub should resolve your issue.</p>
",0
GradientTape,TensorFlow,functionality,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",1
GradientTape,TensorFlow,functionality,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,functionality,70597883,"<p>You have 2 problems in your code which prevents you from getting the result you want.</p>
<ol>
<li>If you want to compute higher-order derivatives you have to create nested GradientTape objects</li>
<li>GradientTape automatically track variables in its context, if you want to track tensors (as in your case, you want to track <code>z</code> and <code>t</code>) you have to call <code>tape.watch(&lt;my_tensor&gt;)</code> otherwise you will not have gradients for it.</li>
</ol>
<p>Fixed code:</p>
<pre><code>def solve_pde(self, value_function, X, idx):
    z, f, t = X[:, 0:1], X[:, 1:2], X[:, 2:3]
    with tf.GradientTape(persistent=True) as tape:
        tape.watch(z)
        with tf.GradientTape(persistent=True) as tape2:
            tape2.watch(z)
            tape2.watch(t)
            u = value_function(tf.concat([z, f, t], axis=1))
        u_z = tape2.gradient(u, z)
    u_zz = tape.gradient(u_z, z)
    u_t = tape2.gradient(u, t)
    u_pde = u_t + u_z + u_zz - tf.cast(0.5, dtype=tf.float32) * u
    return u_pde
</code></pre>
<p>More on gradient tape can be found in the official documentation: <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,functionality,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,functionality,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",1
GradientTape,TensorFlow,functionality,56293214,"<p>As far as I know, almost all TensorFlow ops are differentiable, including ops such as <code>tf.abs</code> or <code>tf.where</code> and gradient flows correctly through them. TensorFlow has an automatic differentiation engine, that takes any TensorFlow graph and computes derivatives w.r.t. desired variables.</p>

<p>So if your graph is composed of TensorFlow ops I wouldn't worry about the gradients being wrong (if you would post the code of your layer, I could expand further). However, there are still issues like numerical stability which can make otherwise mathematically sound operation still fail in practice (e.g. naive softmax computation, or tf.exp in your graph in general). Apart from that, TensorFlow differentiation should be correct and taken care of, from the user's point of view.</p>

<p>If you still want to examine your gradients by hand, you can compute the derivatives in your graph using <code>tf.gradients</code> op, which will get you the gradients that you wish and you can check by hand if TensorFlow did the differentiation correctly. (See <a href=""https://www.tensorflow.org/api_docs/python/tf/gradients"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/gradients</a>)</p>
",0
GradientTape,TensorFlow,functionality,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,functionality,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",1
GradientTape,TensorFlow,functionality,56188643,"<p>Gradients can only be computed for ""trainable"" tensors, so you might want to wrap your input into tf.Variable().</p>

<p>As soon as you want to work with gradient, I would suggest doing it using tensorflow, which nicely integrates with Keras. Below is my example of doing it, note that it works in eager execution mode (default in tensorflow 2.0).</p>

<pre><code>def train_actor(self, sars):
    obs1, actions, rewards, obs2 = sars


    with tf.GradientTape() as tape:
        would_do_actions = self.compute_actions(obs1)
        score = tf.reduce_mean(self.critic(observations=obs1, actions=would_do_actions))
        loss = - score

    grads = tape.gradient(loss, self.actor.trainable_weights)
    self.optimizer.apply_gradients(zip(grads, self.actor.trainable_weights))
</code></pre>
",1
GradientTape,TensorFlow,functionality,57336013,"<p>Look at @tf.custom_gradient for writing your own gradient calculation function. </p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/custom_gradient"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/custom_gradient</a></p>

<p>If you're using eager execution, you can monitor the gradients using Gradient Tape.</p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,concept,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",1
GradientTape,TensorFlow,concept,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,concept,70597883,"<p>You have 2 problems in your code which prevents you from getting the result you want.</p>
<ol>
<li>If you want to compute higher-order derivatives you have to create nested GradientTape objects</li>
<li>GradientTape automatically track variables in its context, if you want to track tensors (as in your case, you want to track <code>z</code> and <code>t</code>) you have to call <code>tape.watch(&lt;my_tensor&gt;)</code> otherwise you will not have gradients for it.</li>
</ol>
<p>Fixed code:</p>
<pre><code>def solve_pde(self, value_function, X, idx):
    z, f, t = X[:, 0:1], X[:, 1:2], X[:, 2:3]
    with tf.GradientTape(persistent=True) as tape:
        tape.watch(z)
        with tf.GradientTape(persistent=True) as tape2:
            tape2.watch(z)
            tape2.watch(t)
            u = value_function(tf.concat([z, f, t], axis=1))
        u_z = tape2.gradient(u, z)
    u_zz = tape.gradient(u_z, z)
    u_t = tape2.gradient(u, t)
    u_pde = u_t + u_z + u_zz - tf.cast(0.5, dtype=tf.float32) * u
    return u_pde
</code></pre>
<p>More on gradient tape can be found in the official documentation: <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,concept,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,concept,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",1
GradientTape,TensorFlow,concept,56293214,"<p>As far as I know, almost all TensorFlow ops are differentiable, including ops such as <code>tf.abs</code> or <code>tf.where</code> and gradient flows correctly through them. TensorFlow has an automatic differentiation engine, that takes any TensorFlow graph and computes derivatives w.r.t. desired variables.</p>

<p>So if your graph is composed of TensorFlow ops I wouldn't worry about the gradients being wrong (if you would post the code of your layer, I could expand further). However, there are still issues like numerical stability which can make otherwise mathematically sound operation still fail in practice (e.g. naive softmax computation, or tf.exp in your graph in general). Apart from that, TensorFlow differentiation should be correct and taken care of, from the user's point of view.</p>

<p>If you still want to examine your gradients by hand, you can compute the derivatives in your graph using <code>tf.gradients</code> op, which will get you the gradients that you wish and you can check by hand if TensorFlow did the differentiation correctly. (See <a href=""https://www.tensorflow.org/api_docs/python/tf/gradients"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/gradients</a>)</p>
",0
GradientTape,TensorFlow,concept,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",1
GradientTape,TensorFlow,concept,56188643,"<p>Gradients can only be computed for ""trainable"" tensors, so you might want to wrap your input into tf.Variable().</p>

<p>As soon as you want to work with gradient, I would suggest doing it using tensorflow, which nicely integrates with Keras. Below is my example of doing it, note that it works in eager execution mode (default in tensorflow 2.0).</p>

<pre><code>def train_actor(self, sars):
    obs1, actions, rewards, obs2 = sars


    with tf.GradientTape() as tape:
        would_do_actions = self.compute_actions(obs1)
        score = tf.reduce_mean(self.critic(observations=obs1, actions=would_do_actions))
        loss = - score

    grads = tape.gradient(loss, self.actor.trainable_weights)
    self.optimizer.apply_gradients(zip(grads, self.actor.trainable_weights))
</code></pre>
",1
GradientTape,TensorFlow,concept,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,concept,57336013,"<p>Look at @tf.custom_gradient for writing your own gradient calculation function. </p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/custom_gradient"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/custom_gradient</a></p>

<p>If you're using eager execution, you can monitor the gradients using Gradient Tape.</p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,performance,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",0
GradientTape,TensorFlow,performance,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,performance,70597883,"<p>You have 2 problems in your code which prevents you from getting the result you want.</p>
<ol>
<li>If you want to compute higher-order derivatives you have to create nested GradientTape objects</li>
<li>GradientTape automatically track variables in its context, if you want to track tensors (as in your case, you want to track <code>z</code> and <code>t</code>) you have to call <code>tape.watch(&lt;my_tensor&gt;)</code> otherwise you will not have gradients for it.</li>
</ol>
<p>Fixed code:</p>
<pre><code>def solve_pde(self, value_function, X, idx):
    z, f, t = X[:, 0:1], X[:, 1:2], X[:, 2:3]
    with tf.GradientTape(persistent=True) as tape:
        tape.watch(z)
        with tf.GradientTape(persistent=True) as tape2:
            tape2.watch(z)
            tape2.watch(t)
            u = value_function(tf.concat([z, f, t], axis=1))
        u_z = tape2.gradient(u, z)
    u_zz = tape.gradient(u_z, z)
    u_t = tape2.gradient(u, t)
    u_pde = u_t + u_z + u_zz - tf.cast(0.5, dtype=tf.float32) * u
    return u_pde
</code></pre>
<p>More on gradient tape can be found in the official documentation: <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,performance,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,performance,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",1
GradientTape,TensorFlow,performance,56188643,"<p>Gradients can only be computed for ""trainable"" tensors, so you might want to wrap your input into tf.Variable().</p>

<p>As soon as you want to work with gradient, I would suggest doing it using tensorflow, which nicely integrates with Keras. Below is my example of doing it, note that it works in eager execution mode (default in tensorflow 2.0).</p>

<pre><code>def train_actor(self, sars):
    obs1, actions, rewards, obs2 = sars


    with tf.GradientTape() as tape:
        would_do_actions = self.compute_actions(obs1)
        score = tf.reduce_mean(self.critic(observations=obs1, actions=would_do_actions))
        loss = - score

    grads = tape.gradient(loss, self.actor.trainable_weights)
    self.optimizer.apply_gradients(zip(grads, self.actor.trainable_weights))
</code></pre>
",1
GradientTape,TensorFlow,performance,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",0
GradientTape,TensorFlow,performance,57336013,"<p>Look at @tf.custom_gradient for writing your own gradient calculation function. </p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/custom_gradient"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/custom_gradient</a></p>

<p>If you're using eager execution, you can monitor the gradients using Gradient Tape.</p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,performance,56293214,"<p>As far as I know, almost all TensorFlow ops are differentiable, including ops such as <code>tf.abs</code> or <code>tf.where</code> and gradient flows correctly through them. TensorFlow has an automatic differentiation engine, that takes any TensorFlow graph and computes derivatives w.r.t. desired variables.</p>

<p>So if your graph is composed of TensorFlow ops I wouldn't worry about the gradients being wrong (if you would post the code of your layer, I could expand further). However, there are still issues like numerical stability which can make otherwise mathematically sound operation still fail in practice (e.g. naive softmax computation, or tf.exp in your graph in general). Apart from that, TensorFlow differentiation should be correct and taken care of, from the user's point of view.</p>

<p>If you still want to examine your gradients by hand, you can compute the derivatives in your graph using <code>tf.gradients</code> op, which will get you the gradients that you wish and you can check by hand if TensorFlow did the differentiation correctly. (See <a href=""https://www.tensorflow.org/api_docs/python/tf/gradients"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/gradients</a>)</p>
",0
GradientTape,TensorFlow,performance,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",1
GradientTape,TensorFlow,directive,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",1
GradientTape,TensorFlow,directive,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,directive,70597883,"<p>You have 2 problems in your code which prevents you from getting the result you want.</p>
<ol>
<li>If you want to compute higher-order derivatives you have to create nested GradientTape objects</li>
<li>GradientTape automatically track variables in its context, if you want to track tensors (as in your case, you want to track <code>z</code> and <code>t</code>) you have to call <code>tape.watch(&lt;my_tensor&gt;)</code> otherwise you will not have gradients for it.</li>
</ol>
<p>Fixed code:</p>
<pre><code>def solve_pde(self, value_function, X, idx):
    z, f, t = X[:, 0:1], X[:, 1:2], X[:, 2:3]
    with tf.GradientTape(persistent=True) as tape:
        tape.watch(z)
        with tf.GradientTape(persistent=True) as tape2:
            tape2.watch(z)
            tape2.watch(t)
            u = value_function(tf.concat([z, f, t], axis=1))
        u_z = tape2.gradient(u, z)
    u_zz = tape.gradient(u_z, z)
    u_t = tape2.gradient(u, t)
    u_pde = u_t + u_z + u_zz - tf.cast(0.5, dtype=tf.float32) * u
    return u_pde
</code></pre>
<p>More on gradient tape can be found in the official documentation: <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,directive,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,directive,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",1
GradientTape,TensorFlow,directive,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",1
GradientTape,TensorFlow,directive,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,directive,56293214,"<p>As far as I know, almost all TensorFlow ops are differentiable, including ops such as <code>tf.abs</code> or <code>tf.where</code> and gradient flows correctly through them. TensorFlow has an automatic differentiation engine, that takes any TensorFlow graph and computes derivatives w.r.t. desired variables.</p>

<p>So if your graph is composed of TensorFlow ops I wouldn't worry about the gradients being wrong (if you would post the code of your layer, I could expand further). However, there are still issues like numerical stability which can make otherwise mathematically sound operation still fail in practice (e.g. naive softmax computation, or tf.exp in your graph in general). Apart from that, TensorFlow differentiation should be correct and taken care of, from the user's point of view.</p>

<p>If you still want to examine your gradients by hand, you can compute the derivatives in your graph using <code>tf.gradients</code> op, which will get you the gradients that you wish and you can check by hand if TensorFlow did the differentiation correctly. (See <a href=""https://www.tensorflow.org/api_docs/python/tf/gradients"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/gradients</a>)</p>
",0
GradientTape,TensorFlow,directive,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",1
GradientTape,TensorFlow,directive,57336013,"<p>Look at @tf.custom_gradient for writing your own gradient calculation function. </p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/custom_gradient"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/custom_gradient</a></p>

<p>If you're using eager execution, you can monitor the gradients using Gradient Tape.</p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,pattern,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",1
GradientTape,TensorFlow,pattern,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,pattern,70597883,"<p>You have 2 problems in your code which prevents you from getting the result you want.</p>
<ol>
<li>If you want to compute higher-order derivatives you have to create nested GradientTape objects</li>
<li>GradientTape automatically track variables in its context, if you want to track tensors (as in your case, you want to track <code>z</code> and <code>t</code>) you have to call <code>tape.watch(&lt;my_tensor&gt;)</code> otherwise you will not have gradients for it.</li>
</ol>
<p>Fixed code:</p>
<pre><code>def solve_pde(self, value_function, X, idx):
    z, f, t = X[:, 0:1], X[:, 1:2], X[:, 2:3]
    with tf.GradientTape(persistent=True) as tape:
        tape.watch(z)
        with tf.GradientTape(persistent=True) as tape2:
            tape2.watch(z)
            tape2.watch(t)
            u = value_function(tf.concat([z, f, t], axis=1))
        u_z = tape2.gradient(u, z)
    u_zz = tape.gradient(u_z, z)
    u_t = tape2.gradient(u, t)
    u_pde = u_t + u_z + u_zz - tf.cast(0.5, dtype=tf.float32) * u
    return u_pde
</code></pre>
<p>More on gradient tape can be found in the official documentation: <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,pattern,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",1
GradientTape,TensorFlow,pattern,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,pattern,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,pattern,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",1
GradientTape,TensorFlow,pattern,56188643,"<p>Gradients can only be computed for ""trainable"" tensors, so you might want to wrap your input into tf.Variable().</p>

<p>As soon as you want to work with gradient, I would suggest doing it using tensorflow, which nicely integrates with Keras. Below is my example of doing it, note that it works in eager execution mode (default in tensorflow 2.0).</p>

<pre><code>def train_actor(self, sars):
    obs1, actions, rewards, obs2 = sars


    with tf.GradientTape() as tape:
        would_do_actions = self.compute_actions(obs1)
        score = tf.reduce_mean(self.critic(observations=obs1, actions=would_do_actions))
        loss = - score

    grads = tape.gradient(loss, self.actor.trainable_weights)
    self.optimizer.apply_gradients(zip(grads, self.actor.trainable_weights))
</code></pre>
",1
GradientTape,TensorFlow,pattern,62297190,"<p>For <code>tape.gradient</code>, you have to pass <code>(loss, model.trainable_weights)</code>, but you are passing <code>tape.gradient(loss, output_processado)</code>. Also for <code>optimizer.apply_gradients</code>, you have to pass <code>(grad, model.trainable_variables)</code>, but you are passing <code>(zip([grad],[output_processado])</code>.</p>

<p>Calling a model inside a <code>GradientTape</code> scope enables you to retrieve the gradients of the trainable weights of the layer with respect to a loss value. Using an optimizer instance, you can use these gradients to update these variables (which you can retrieve using <code>model.trainable_weights</code>).</p>

<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of a computation with respect to its input variables. Tensorflow ""records"" all operations executed inside the context of a tf.GradientTape onto a ""tape"". Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a ""recorded"" computation using reverse mode differentiation.</p>

<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>

<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>

<p>Here is a simple example for mnist data. The comments are present in the code to explain better.</p>

<p><strong>Code-</strong></p>

<pre><code>import tensorflow as tf
print(tf.__version__)
from tensorflow import keras
from tensorflow.keras import layers

(x_train, y_train), (x_test, y_test) = keras.datasets.mnist.load_data()

# Preprocess the data (these are Numpy arrays)
x_train = x_train.reshape(60000, 784).astype('float32') / 255
x_test = x_test.reshape(10000, 784).astype('float32') / 255

y_train = y_train.astype('float32')
y_test = y_test.astype('float32')

# Reserve 10,000 samples for validation
x_val = x_train[-10000:]
y_val = y_train[-10000:]
x_train = x_train[:-10000]
y_train = y_train[:-10000]

# Get the model.
inputs = keras.Input(shape=(784,), name='digits')
x = layers.Dense(64, activation='relu', name='dense_1')(inputs)
x = layers.Dense(64, activation='relu', name='dense_2')(x)
outputs = layers.Dense(10, name='predictions')(x)
model = keras.Model(inputs=inputs, outputs=outputs)

# Instantiate an optimizer.
optimizer = keras.optimizers.SGD(learning_rate=1e-3)
# Instantiate a loss function.
loss_fn = keras.losses.SparseCategoricalCrossentropy(from_logits=True)

# Prepare the training dataset.
batch_size = 64
train_dataset = tf.data.Dataset.from_tensor_slices((x_train, y_train))
train_dataset = train_dataset.shuffle(buffer_size=1024).batch(batch_size)

epochs = 3
for epoch in range(epochs):
  print('Start of epoch %d' % (epoch,))

  # Iterate over the batches of the dataset.
  for step, (x_batch_train, y_batch_train) in enumerate(train_dataset):

    # Open a GradientTape to record the operations run
    # during the forward pass, which enables autodifferentiation.
    with tf.GradientTape() as tape:

      # Run the forward pass of the layer.
      # The operations that the layer applies
      # to its inputs are going to be recorded
      # on the GradientTape.
      logits = model(x_batch_train, training=True)  # Logits for this minibatch

      # Compute the loss value for this minibatch.
      loss_value = loss_fn(y_batch_train, logits)

    # Use the gradient tape to automatically retrieve
    # the gradients of the trainable variables with respect to the loss.
    grads = tape.gradient(loss_value, model.trainable_weights)

    # Run one step of gradient descent by updating
    # the value of the variables to minimize the loss.
    optimizer.apply_gradients(zip(grads, model.trainable_weights))

    # Log every 200 batches.
    if step % 200 == 0:
        print('Training loss (for one batch) at step %s: %s' % (step, float(loss_value)))
        print('Seen so far: %s samples' % ((step + 1) * 64))
</code></pre>

<p><strong>Output -</strong></p>

<pre><code>2.2.0
Start of epoch 0
Training loss (for one batch) at step 0: 2.323657512664795
Seen so far: 64 samples
Training loss (for one batch) at step 200: 2.3156163692474365
Seen so far: 12864 samples
Training loss (for one batch) at step 400: 2.2302279472351074
Seen so far: 25664 samples
Training loss (for one batch) at step 600: 2.131979465484619
Seen so far: 38464 samples
Start of epoch 1
Training loss (for one batch) at step 0: 2.00234317779541
Seen so far: 64 samples
Training loss (for one batch) at step 200: 1.7992427349090576
Seen so far: 12864 samples
Training loss (for one batch) at step 400: 1.8583933115005493
Seen so far: 25664 samples
Training loss (for one batch) at step 600: 1.6005337238311768
Seen so far: 38464 samples
Start of epoch 2
Training loss (for one batch) at step 0: 1.6701987981796265
Seen so far: 64 samples
Training loss (for one batch) at step 200: 1.6237502098083496
Seen so far: 12864 samples
Training loss (for one batch) at step 400: 1.3603084087371826
Seen so far: 25664 samples
Training loss (for one batch) at step 600: 1.246948480606079
Seen so far: 38464 samples
</code></pre>

<p>You can find more about tf.GradientTape <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape#args"" rel=""nofollow noreferrer"">here</a>. The example used here is taken from <a href=""https://www.tensorflow.org/guide/keras/train_and_evaluate"" rel=""nofollow noreferrer"">here</a>.</p>

<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,pattern,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",1
GradientTape,TensorFlow,environment,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",1
GradientTape,TensorFlow,environment,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,environment,70597883,"<p>You have 2 problems in your code which prevents you from getting the result you want.</p>
<ol>
<li>If you want to compute higher-order derivatives you have to create nested GradientTape objects</li>
<li>GradientTape automatically track variables in its context, if you want to track tensors (as in your case, you want to track <code>z</code> and <code>t</code>) you have to call <code>tape.watch(&lt;my_tensor&gt;)</code> otherwise you will not have gradients for it.</li>
</ol>
<p>Fixed code:</p>
<pre><code>def solve_pde(self, value_function, X, idx):
    z, f, t = X[:, 0:1], X[:, 1:2], X[:, 2:3]
    with tf.GradientTape(persistent=True) as tape:
        tape.watch(z)
        with tf.GradientTape(persistent=True) as tape2:
            tape2.watch(z)
            tape2.watch(t)
            u = value_function(tf.concat([z, f, t], axis=1))
        u_z = tape2.gradient(u, z)
    u_zz = tape.gradient(u_z, z)
    u_t = tape2.gradient(u, t)
    u_pde = u_t + u_z + u_zz - tf.cast(0.5, dtype=tf.float32) * u
    return u_pde
</code></pre>
<p>More on gradient tape can be found in the official documentation: <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,environment,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",1
GradientTape,TensorFlow,environment,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",1
GradientTape,TensorFlow,environment,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,environment,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,environment,56293214,"<p>As far as I know, almost all TensorFlow ops are differentiable, including ops such as <code>tf.abs</code> or <code>tf.where</code> and gradient flows correctly through them. TensorFlow has an automatic differentiation engine, that takes any TensorFlow graph and computes derivatives w.r.t. desired variables.</p>

<p>So if your graph is composed of TensorFlow ops I wouldn't worry about the gradients being wrong (if you would post the code of your layer, I could expand further). However, there are still issues like numerical stability which can make otherwise mathematically sound operation still fail in practice (e.g. naive softmax computation, or tf.exp in your graph in general). Apart from that, TensorFlow differentiation should be correct and taken care of, from the user's point of view.</p>

<p>If you still want to examine your gradients by hand, you can compute the derivatives in your graph using <code>tf.gradients</code> op, which will get you the gradients that you wish and you can check by hand if TensorFlow did the differentiation correctly. (See <a href=""https://www.tensorflow.org/api_docs/python/tf/gradients"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/gradients</a>)</p>
",0
GradientTape,TensorFlow,environment,57336013,"<p>Look at @tf.custom_gradient for writing your own gradient calculation function. </p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/custom_gradient"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/custom_gradient</a></p>

<p>If you're using eager execution, you can monitor the gradients using Gradient Tape.</p>

<p><a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,environment,56188643,"<p>Gradients can only be computed for ""trainable"" tensors, so you might want to wrap your input into tf.Variable().</p>

<p>As soon as you want to work with gradient, I would suggest doing it using tensorflow, which nicely integrates with Keras. Below is my example of doing it, note that it works in eager execution mode (default in tensorflow 2.0).</p>

<pre><code>def train_actor(self, sars):
    obs1, actions, rewards, obs2 = sars


    with tf.GradientTape() as tape:
        would_do_actions = self.compute_actions(obs1)
        score = tf.reduce_mean(self.critic(observations=obs1, actions=would_do_actions))
        loss = - score

    grads = tape.gradient(loss, self.actor.trainable_weights)
    self.optimizer.apply_gradients(zip(grads, self.actor.trainable_weights))
</code></pre>
",1
GradientTape,TensorFlow,alternative,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",0
GradientTape,TensorFlow,alternative,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,alternative,70597883,"<p>You have 2 problems in your code which prevents you from getting the result you want.</p>
<ol>
<li>If you want to compute higher-order derivatives you have to create nested GradientTape objects</li>
<li>GradientTape automatically track variables in its context, if you want to track tensors (as in your case, you want to track <code>z</code> and <code>t</code>) you have to call <code>tape.watch(&lt;my_tensor&gt;)</code> otherwise you will not have gradients for it.</li>
</ol>
<p>Fixed code:</p>
<pre><code>def solve_pde(self, value_function, X, idx):
    z, f, t = X[:, 0:1], X[:, 1:2], X[:, 2:3]
    with tf.GradientTape(persistent=True) as tape:
        tape.watch(z)
        with tf.GradientTape(persistent=True) as tape2:
            tape2.watch(z)
            tape2.watch(t)
            u = value_function(tf.concat([z, f, t], axis=1))
        u_z = tape2.gradient(u, z)
    u_zz = tape.gradient(u_z, z)
    u_t = tape2.gradient(u, t)
    u_pde = u_t + u_z + u_zz - tf.cast(0.5, dtype=tf.float32) * u
    return u_pde
</code></pre>
<p>More on gradient tape can be found in the official documentation: <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>
",1
GradientTape,TensorFlow,alternative,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",0
GradientTape,TensorFlow,alternative,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,alternative,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",1
GradientTape,TensorFlow,alternative,56293214,"<p>As far as I know, almost all TensorFlow ops are differentiable, including ops such as <code>tf.abs</code> or <code>tf.where</code> and gradient flows correctly through them. TensorFlow has an automatic differentiation engine, that takes any TensorFlow graph and computes derivatives w.r.t. desired variables.</p>

<p>So if your graph is composed of TensorFlow ops I wouldn't worry about the gradients being wrong (if you would post the code of your layer, I could expand further). However, there are still issues like numerical stability which can make otherwise mathematically sound operation still fail in practice (e.g. naive softmax computation, or tf.exp in your graph in general). Apart from that, TensorFlow differentiation should be correct and taken care of, from the user's point of view.</p>

<p>If you still want to examine your gradients by hand, you can compute the derivatives in your graph using <code>tf.gradients</code> op, which will get you the gradients that you wish and you can check by hand if TensorFlow did the differentiation correctly. (See <a href=""https://www.tensorflow.org/api_docs/python/tf/gradients"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/gradients</a>)</p>
",0
GradientTape,TensorFlow,alternative,62297190,"<p>For <code>tape.gradient</code>, you have to pass <code>(loss, model.trainable_weights)</code>, but you are passing <code>tape.gradient(loss, output_processado)</code>. Also for <code>optimizer.apply_gradients</code>, you have to pass <code>(grad, model.trainable_variables)</code>, but you are passing <code>(zip([grad],[output_processado])</code>.</p>

<p>Calling a model inside a <code>GradientTape</code> scope enables you to retrieve the gradients of the trainable weights of the layer with respect to a loss value. Using an optimizer instance, you can use these gradients to update these variables (which you can retrieve using <code>model.trainable_weights</code>).</p>

<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of a computation with respect to its input variables. Tensorflow ""records"" all operations executed inside the context of a tf.GradientTape onto a ""tape"". Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a ""recorded"" computation using reverse mode differentiation.</p>

<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>

<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>

<p>Here is a simple example for mnist data. The comments are present in the code to explain better.</p>

<p><strong>Code-</strong></p>

<pre><code>import tensorflow as tf
print(tf.__version__)
from tensorflow import keras
from tensorflow.keras import layers

(x_train, y_train), (x_test, y_test) = keras.datasets.mnist.load_data()

# Preprocess the data (these are Numpy arrays)
x_train = x_train.reshape(60000, 784).astype('float32') / 255
x_test = x_test.reshape(10000, 784).astype('float32') / 255

y_train = y_train.astype('float32')
y_test = y_test.astype('float32')

# Reserve 10,000 samples for validation
x_val = x_train[-10000:]
y_val = y_train[-10000:]
x_train = x_train[:-10000]
y_train = y_train[:-10000]

# Get the model.
inputs = keras.Input(shape=(784,), name='digits')
x = layers.Dense(64, activation='relu', name='dense_1')(inputs)
x = layers.Dense(64, activation='relu', name='dense_2')(x)
outputs = layers.Dense(10, name='predictions')(x)
model = keras.Model(inputs=inputs, outputs=outputs)

# Instantiate an optimizer.
optimizer = keras.optimizers.SGD(learning_rate=1e-3)
# Instantiate a loss function.
loss_fn = keras.losses.SparseCategoricalCrossentropy(from_logits=True)

# Prepare the training dataset.
batch_size = 64
train_dataset = tf.data.Dataset.from_tensor_slices((x_train, y_train))
train_dataset = train_dataset.shuffle(buffer_size=1024).batch(batch_size)

epochs = 3
for epoch in range(epochs):
  print('Start of epoch %d' % (epoch,))

  # Iterate over the batches of the dataset.
  for step, (x_batch_train, y_batch_train) in enumerate(train_dataset):

    # Open a GradientTape to record the operations run
    # during the forward pass, which enables autodifferentiation.
    with tf.GradientTape() as tape:

      # Run the forward pass of the layer.
      # The operations that the layer applies
      # to its inputs are going to be recorded
      # on the GradientTape.
      logits = model(x_batch_train, training=True)  # Logits for this minibatch

      # Compute the loss value for this minibatch.
      loss_value = loss_fn(y_batch_train, logits)

    # Use the gradient tape to automatically retrieve
    # the gradients of the trainable variables with respect to the loss.
    grads = tape.gradient(loss_value, model.trainable_weights)

    # Run one step of gradient descent by updating
    # the value of the variables to minimize the loss.
    optimizer.apply_gradients(zip(grads, model.trainable_weights))

    # Log every 200 batches.
    if step % 200 == 0:
        print('Training loss (for one batch) at step %s: %s' % (step, float(loss_value)))
        print('Seen so far: %s samples' % ((step + 1) * 64))
</code></pre>

<p><strong>Output -</strong></p>

<pre><code>2.2.0
Start of epoch 0
Training loss (for one batch) at step 0: 2.323657512664795
Seen so far: 64 samples
Training loss (for one batch) at step 200: 2.3156163692474365
Seen so far: 12864 samples
Training loss (for one batch) at step 400: 2.2302279472351074
Seen so far: 25664 samples
Training loss (for one batch) at step 600: 2.131979465484619
Seen so far: 38464 samples
Start of epoch 1
Training loss (for one batch) at step 0: 2.00234317779541
Seen so far: 64 samples
Training loss (for one batch) at step 200: 1.7992427349090576
Seen so far: 12864 samples
Training loss (for one batch) at step 400: 1.8583933115005493
Seen so far: 25664 samples
Training loss (for one batch) at step 600: 1.6005337238311768
Seen so far: 38464 samples
Start of epoch 2
Training loss (for one batch) at step 0: 1.6701987981796265
Seen so far: 64 samples
Training loss (for one batch) at step 200: 1.6237502098083496
Seen so far: 12864 samples
Training loss (for one batch) at step 400: 1.3603084087371826
Seen so far: 25664 samples
Training loss (for one batch) at step 600: 1.246948480606079
Seen so far: 38464 samples
</code></pre>

<p>You can find more about tf.GradientTape <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape#args"" rel=""nofollow noreferrer"">here</a>. The example used here is taken from <a href=""https://www.tensorflow.org/guide/keras/train_and_evaluate"" rel=""nofollow noreferrer"">here</a>.</p>

<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,alternative,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,alternative,56188643,"<p>Gradients can only be computed for ""trainable"" tensors, so you might want to wrap your input into tf.Variable().</p>

<p>As soon as you want to work with gradient, I would suggest doing it using tensorflow, which nicely integrates with Keras. Below is my example of doing it, note that it works in eager execution mode (default in tensorflow 2.0).</p>

<pre><code>def train_actor(self, sars):
    obs1, actions, rewards, obs2 = sars


    with tf.GradientTape() as tape:
        would_do_actions = self.compute_actions(obs1)
        score = tf.reduce_mean(self.critic(observations=obs1, actions=would_do_actions))
        loss = - score

    grads = tape.gradient(loss, self.actor.trainable_weights)
    self.optimizer.apply_gradients(zip(grads, self.actor.trainable_weights))
</code></pre>
",0
IllegalArgumentException,Kotlin,functionality,58549996,"<p>Since Kotlin 1.2, there is already a function for that.</p>

<p>You can use the function: <code>isInitialized</code> <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/is-initialized.html"" rel=""nofollow noreferrer"">docs</a></p>

<p>Code example:</p>

<pre><code>lateinit var key: String

fun useKey() {
    check(::key.isInitialized) { ""The field 'key' must be initialized"" }
    // use key safely
}
</code></pre>

<p><strong>Note:</strong> <code>check</code> will throw an IllegalStateException if the variable is not initialized.</p>
",0
IllegalArgumentException,Kotlin,functionality,69577350,"<p>Checking nullable boolean against <code>true</code> or <code>false</code> is an <a href=""https://kotlinlang.org/docs/idioms.html#nullable-boolean"" rel=""nofollow noreferrer"">&quot;official&quot; Kotlin idiom</a>:</p>
<blockquote>
<h3>Nullable Boolean</h3>
<pre><code>val b: Boolean? = ... 
if (b == true) {
    ... 
} else {
    // `b` is false or null 
}
</code></pre>
</blockquote>
<p>Here is <a href=""https://discuss.kotlinlang.org/t/is-the-idiom-for-checking-nullable-booleans-helpful/8238"" rel=""nofollow noreferrer"">the relevant discussion</a> regarding the idiom, including opinions for and against it.</p>
",0
IllegalArgumentException,Kotlin,functionality,62318185,"<p>More idiomatic way to apply constrains in Kotlin is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/require.html"" rel=""noreferrer""><code>require</code></a> function:</p>

<pre><code>data class TotallyMadeUpClass(val username: String) {
    init {
        require(username.length &gt; 10) { ""Length must be greater than 10"" }
        // ...
    }
}
</code></pre>

<p>It throws an <strong>IllegalArgumentException</strong> if the value is <strong>false</strong>.</p>
",1
IllegalArgumentException,Kotlin,functionality,61095341,"<p>As @Madhu Bhat mentioned  in comment above, your variable 'x' is still nullable.
You may use your function simply like this:</p>

<pre><code>x.test().length
</code></pre>

<p>Otherwise  you can check for null by following inline function and then perform any functions directly on the variable. (Note the usage of 'contract' and annotations '@ExperimentalContracts')</p>

<pre><code>@ExperimentalContracts
fun &lt;T&gt; T?.notNull(): Boolean {

    contract {
        returns(true) implies (this@notNull != null)
    }

    return this != null
}
</code></pre>

<p>Now you can use this function like this</p>

<pre><code>if(x.notNull()){
  x.length
}
</code></pre>

<p>But its not seems so useful if your using this function just to check nullability.</p>

<p>Check here to know more  about Kotlin <a href=""https://pspdfkit.com/blog/2018/kotlin-contracts/"" rel=""nofollow noreferrer"">contracts</a> </p>
",0
IllegalArgumentException,Kotlin,functionality,74887779,"<p>Well, it is kinda suggesting what you have to do:</p>
<blockquote>
<p>&quot;Only safe (?.) or non-null asserted (!!.) calls are allowed on a nullable reciever&quot;</p>
</blockquote>
<p>Means that whatever variable you are using, might be null.
So if you tried running</p>
<pre class=""lang-kotlin prettyprint-override""><code>(activity as MainActivity?).enableButtons(buttonState)
</code></pre>
<p>this might end up as:</p>
<pre class=""lang-kotlin prettyprint-override""><code>null.enableButtons(buttonState)
</code></pre>
<p>which (you may already know) will cause a crash</p>
<p>All kotlin is asking for is an alternative (when the variable is in fact <code>null</code>) or a &quot;promise&quot; that the variable is not null (!!)</p>
<p>A simple fix would be just to use:</p>
<pre><code>(activity as MainActivity?)!!.enableButtons(buttonState)
</code></pre>
<p>or just remove <code>?</code> after <code>MainActivity</code></p>
<p>(more on <code>.?</code> and <code>!!</code> you can find here: <a href=""https://stackoverflow.com/questions/44536114/whats-the-difference-between-and-in-kotlin"">What&#39;s the difference between !! and ? in Kotlin?</a>)</p>
",0
IllegalArgumentException,Kotlin,functionality,64028609,"<p>Kotlin is a lot more expressive than a lot of cascading if...</p>
<p>Also, Kollin handles nullity at compile time so IDE should notify you if is null or not.</p>
<p>I tried to rewrite your code because is very undebuggable.
I honestly don't know if it works and if it does the same things (it should but as i saidall those if are difficult to understand) but I find it more readable and debuggable.</p>
<p>Remember that in order to remove all if !=null you can use ?. operator</p>
<p>Hope it helps you to understand Kotlin expressivity</p>
<pre><code>private fun loadAllSKUs() {
    billingClient.takeIf{it.isReady}
    ?.let {
    val params = SkuDetailsParams.newBuilder()
            .setSkusList(skuList)
            .setType(BillingClient.SkuType.INAPP)
            .build()
    billingClient.querySkuDetailsAsync(params) { billingResult, skuDetailsList -&gt;
    skuDetailsList
        ?.takeIf{ billingResult.responseCode === BillingClient.BillingResponseCode.OK &amp;&amp; skuDetailsList.isNotEmpty() }
        ?.filter {it.sku.equals(&quot;product&quot;)}
        ?.forEach { skuDetails -&gt; 
            val result: Purchase.PurchasesResult = billingClient.queryPurchases(BillingClient.SkuType.INAPP)
            val purchases: List&lt;Purchase&gt;? = result.getPurchasesList() as? List&lt;Purchase&gt;
            val isOwned = purchases?.any { it.sku == &quot;product&quot; }?:false
            
            if(!isOwned){
                val billingFlowParams = BillingFlowParams
                        .newBuilder()
                        .setSkuDetails(skuDetails)
                        .build()
                billingClient.launchBillingFlow(skuDetails@ActivityClass, billingFlowParams)
                }
            }
        }
    }
</code></pre>
",0
IllegalArgumentException,Kotlin,functionality,66511427,"<p>The question is, what do you want to do if your variable is null? If you want to throw an exception, go with <code>require</code> or <code>check</code> as @hotkey suggested.</p>
<p>However I have the case where I just want to return if the value is null. So I wrote myself a little helper function that allows for this:</p>
<pre><code>private inline fun &lt;T&gt; T?.exitIfNull(exitBlock: () -&gt; Nothing): T {
    if (this == null)
        exitBlock()
    else
        return this
}
</code></pre>
<p>You can call this function as follows:</p>
<pre><code>val (a, b) = variable?.run {
    1 to 2
}.exitIfNull {
    return
}
</code></pre>
<p>A nice little use of the <code>Nothing</code> keyword in Kotlin that I personally find quite fascinating</p>
",0
IllegalArgumentException,Kotlin,functionality,59151072,"<p>Kotlin, unlike Java and many other languages, requires that you explicitly identify a nullable value as nullable or it will throw up a compiler error (as you've discovered). This is done to prevent the dreaded NullPointerException, an effect of the so-called <a href=""https://medium.com/@hinchman_amanda/null-pointer-references-the-billion-dollar-mistake-1e616534d485"" rel=""nofollow noreferrer"">billion dollar mistake</a> (programmers the world over forgetting to check for null before assuming a variable's value is not null, and causing a NPE).</p>

<p>There are three ways to go about handling what you're asking about in Kotlin, and it boils down to a stylistic preference on your part plus a bit about how much code is conditioned upon the null/non-null status of the value. The methods all incorporate a null check.</p>

<p>For purposes of this answer, I'll assume if the latitude property is null, you want to throw an error. But one great thing about explicit nullability in Kotlin is it forces you to think about how you actually want to handle null values (is it an error that halts your code? do you plug in a default value and continue your code? etc.)</p>

<p>First, you can use the traditional <code>if/else</code>. For personal aesthetic reasons, I tend not to use this in Kotlin. I just enjoy using the other methods because they're ""new"" to me, coming from C-like languages, where if/else is old hat.</p>

<pre><code>val myVal: Location? = someValue

if(myVal == null) {
   throw IllegalStateException(""myVal is null"")
} else {
   /* handle the non-null case(s) */
}
</code></pre>

<p>Second, you can use one of the Kotlin <a href=""https://medium.com/@elye.project/mastering-kotlin-standard-functions-run-with-let-also-and-apply-9cd334b0ef84"" rel=""nofollow noreferrer"">scoping functions</a> (they are all used in subtly different ways but are interchangeable for the purposes of your question).</p>

<p><code>myValue.let</code> tells Kotlin to stick <code>myValue</code> into the following code block but renamed to <code>it</code>. But <code>myValue?.let</code> tells Kotlin to do this <em>only if myValue is non-null</em>. If myValue is null, the block of code following <code>let</code> will not execute. If you put a <code>?:</code> and some code after the block of code, that will be run if myValue is null:</p>

<pre><code>val myVal: Location? = someValue

myVal?.let { location -&gt;
   /* handle the non-null case */
} ?: throw IllegalStateException(""myVal is null"")
</code></pre>

<p>In the above, <code>throw ...</code> only executes if myVal is null. If myVal is non-null, it will not throw.</p>

<p>The third option is similar to the second:</p>

<pre><code>val myVal: Location? = someValue

myVal ?: throw IllegalStateException(""myVal is null"")

/* now handle the non-null case */
</code></pre>

<p>Remember the <code>?:</code> from above? That's it again, and it operates the same way: if <code>myVal</code> is null, it will execute what comes to the right of it. In this case, a throw. If this were in a function, you could also do <code>myVal ?: return someDefaultValue</code> for example.</p>

<p>It operates as a type guard and ensures that for any subsequent code, myVal <em>cannot</em> be null (because myVal is immutable and we've now determined it's not null).</p>
",0
IllegalArgumentException,Kotlin,functionality,77274546,"<p>This is currently not documented – or anyway I couldn't find any documentation – so it's surprisingly hard to find an answer but from what I observed/found:</p>
<ul>
<li><code>@Suppress(&quot;all&quot;)</code> is defined by Detekt: <a href=""https://detekt.dev/docs/introduction/suppressing-rules/"" rel=""nofollow noreferrer"">https://detekt.dev/docs/introduction/suppressing-rules/</a></li>
<li>The Kotlin compiler gives you an indication of the value you should use if you want to suppress a specific warning (e.g., <code>@Suppress(&quot;KotlinConstantConditions&quot;)</code>)</li>
<li>Apparently, <code>@Suppress(&quot;warnings&quot;)</code> disables all warnings, but couldn't find any documentation on this</li>
</ul>
",0
IllegalArgumentException,Kotlin,functionality,57320458,"<p>It's because kotlin Null-Safety is kick in when reading the following code:</p>

<pre><code>val lat: String = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>if you visit the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java"" rel=""noreferrer"">SharedPreferences</a> code, you can see the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java#257"" rel=""noreferrer"">following code</a>:</p>

<pre><code>@Nullable
String getString(String key, @Nullable String defValue);
</code></pre>

<p>which is give us a probability to use null as <code>defValue</code> parameter. So, Kotlin try to guard it and give you the matching error:</p>

<blockquote>
  <p>""Type mismatch. Required String, found String?""</p>
</blockquote>

<p>You can fix the problem by enabling nullable for your String variable with:</p>

<pre><code>val lat: String? = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>though this against <a href=""https://kotlinlang.org/docs/reference/null-safety.html"" rel=""noreferrer"">Kotlin type system purpose</a>:</p>

<blockquote>
  <p>Kotlin's type system is aimed at eliminating the danger of null references from code, also known as the The Billion Dollar Mistake.</p>
</blockquote>
",0
IllegalArgumentException,Kotlin,concept,69577350,"<p>Checking nullable boolean against <code>true</code> or <code>false</code> is an <a href=""https://kotlinlang.org/docs/idioms.html#nullable-boolean"" rel=""nofollow noreferrer"">&quot;official&quot; Kotlin idiom</a>:</p>
<blockquote>
<h3>Nullable Boolean</h3>
<pre><code>val b: Boolean? = ... 
if (b == true) {
    ... 
} else {
    // `b` is false or null 
}
</code></pre>
</blockquote>
<p>Here is <a href=""https://discuss.kotlinlang.org/t/is-the-idiom-for-checking-nullable-booleans-helpful/8238"" rel=""nofollow noreferrer"">the relevant discussion</a> regarding the idiom, including opinions for and against it.</p>
",0
IllegalArgumentException,Kotlin,concept,62318185,"<p>More idiomatic way to apply constrains in Kotlin is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/require.html"" rel=""noreferrer""><code>require</code></a> function:</p>

<pre><code>data class TotallyMadeUpClass(val username: String) {
    init {
        require(username.length &gt; 10) { ""Length must be greater than 10"" }
        // ...
    }
}
</code></pre>

<p>It throws an <strong>IllegalArgumentException</strong> if the value is <strong>false</strong>.</p>
",1
IllegalArgumentException,Kotlin,concept,58549996,"<p>Since Kotlin 1.2, there is already a function for that.</p>

<p>You can use the function: <code>isInitialized</code> <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/is-initialized.html"" rel=""nofollow noreferrer"">docs</a></p>

<p>Code example:</p>

<pre><code>lateinit var key: String

fun useKey() {
    check(::key.isInitialized) { ""The field 'key' must be initialized"" }
    // use key safely
}
</code></pre>

<p><strong>Note:</strong> <code>check</code> will throw an IllegalStateException if the variable is not initialized.</p>
",0
IllegalArgumentException,Kotlin,concept,77274546,"<p>This is currently not documented – or anyway I couldn't find any documentation – so it's surprisingly hard to find an answer but from what I observed/found:</p>
<ul>
<li><code>@Suppress(&quot;all&quot;)</code> is defined by Detekt: <a href=""https://detekt.dev/docs/introduction/suppressing-rules/"" rel=""nofollow noreferrer"">https://detekt.dev/docs/introduction/suppressing-rules/</a></li>
<li>The Kotlin compiler gives you an indication of the value you should use if you want to suppress a specific warning (e.g., <code>@Suppress(&quot;KotlinConstantConditions&quot;)</code>)</li>
<li>Apparently, <code>@Suppress(&quot;warnings&quot;)</code> disables all warnings, but couldn't find any documentation on this</li>
</ul>
",0
IllegalArgumentException,Kotlin,concept,61095341,"<p>As @Madhu Bhat mentioned  in comment above, your variable 'x' is still nullable.
You may use your function simply like this:</p>

<pre><code>x.test().length
</code></pre>

<p>Otherwise  you can check for null by following inline function and then perform any functions directly on the variable. (Note the usage of 'contract' and annotations '@ExperimentalContracts')</p>

<pre><code>@ExperimentalContracts
fun &lt;T&gt; T?.notNull(): Boolean {

    contract {
        returns(true) implies (this@notNull != null)
    }

    return this != null
}
</code></pre>

<p>Now you can use this function like this</p>

<pre><code>if(x.notNull()){
  x.length
}
</code></pre>

<p>But its not seems so useful if your using this function just to check nullability.</p>

<p>Check here to know more  about Kotlin <a href=""https://pspdfkit.com/blog/2018/kotlin-contracts/"" rel=""nofollow noreferrer"">contracts</a> </p>
",0
IllegalArgumentException,Kotlin,concept,59151072,"<p>Kotlin, unlike Java and many other languages, requires that you explicitly identify a nullable value as nullable or it will throw up a compiler error (as you've discovered). This is done to prevent the dreaded NullPointerException, an effect of the so-called <a href=""https://medium.com/@hinchman_amanda/null-pointer-references-the-billion-dollar-mistake-1e616534d485"" rel=""nofollow noreferrer"">billion dollar mistake</a> (programmers the world over forgetting to check for null before assuming a variable's value is not null, and causing a NPE).</p>

<p>There are three ways to go about handling what you're asking about in Kotlin, and it boils down to a stylistic preference on your part plus a bit about how much code is conditioned upon the null/non-null status of the value. The methods all incorporate a null check.</p>

<p>For purposes of this answer, I'll assume if the latitude property is null, you want to throw an error. But one great thing about explicit nullability in Kotlin is it forces you to think about how you actually want to handle null values (is it an error that halts your code? do you plug in a default value and continue your code? etc.)</p>

<p>First, you can use the traditional <code>if/else</code>. For personal aesthetic reasons, I tend not to use this in Kotlin. I just enjoy using the other methods because they're ""new"" to me, coming from C-like languages, where if/else is old hat.</p>

<pre><code>val myVal: Location? = someValue

if(myVal == null) {
   throw IllegalStateException(""myVal is null"")
} else {
   /* handle the non-null case(s) */
}
</code></pre>

<p>Second, you can use one of the Kotlin <a href=""https://medium.com/@elye.project/mastering-kotlin-standard-functions-run-with-let-also-and-apply-9cd334b0ef84"" rel=""nofollow noreferrer"">scoping functions</a> (they are all used in subtly different ways but are interchangeable for the purposes of your question).</p>

<p><code>myValue.let</code> tells Kotlin to stick <code>myValue</code> into the following code block but renamed to <code>it</code>. But <code>myValue?.let</code> tells Kotlin to do this <em>only if myValue is non-null</em>. If myValue is null, the block of code following <code>let</code> will not execute. If you put a <code>?:</code> and some code after the block of code, that will be run if myValue is null:</p>

<pre><code>val myVal: Location? = someValue

myVal?.let { location -&gt;
   /* handle the non-null case */
} ?: throw IllegalStateException(""myVal is null"")
</code></pre>

<p>In the above, <code>throw ...</code> only executes if myVal is null. If myVal is non-null, it will not throw.</p>

<p>The third option is similar to the second:</p>

<pre><code>val myVal: Location? = someValue

myVal ?: throw IllegalStateException(""myVal is null"")

/* now handle the non-null case */
</code></pre>

<p>Remember the <code>?:</code> from above? That's it again, and it operates the same way: if <code>myVal</code> is null, it will execute what comes to the right of it. In this case, a throw. If this were in a function, you could also do <code>myVal ?: return someDefaultValue</code> for example.</p>

<p>It operates as a type guard and ensures that for any subsequent code, myVal <em>cannot</em> be null (because myVal is immutable and we've now determined it's not null).</p>
",0
IllegalArgumentException,Kotlin,concept,64028609,"<p>Kotlin is a lot more expressive than a lot of cascading if...</p>
<p>Also, Kollin handles nullity at compile time so IDE should notify you if is null or not.</p>
<p>I tried to rewrite your code because is very undebuggable.
I honestly don't know if it works and if it does the same things (it should but as i saidall those if are difficult to understand) but I find it more readable and debuggable.</p>
<p>Remember that in order to remove all if !=null you can use ?. operator</p>
<p>Hope it helps you to understand Kotlin expressivity</p>
<pre><code>private fun loadAllSKUs() {
    billingClient.takeIf{it.isReady}
    ?.let {
    val params = SkuDetailsParams.newBuilder()
            .setSkusList(skuList)
            .setType(BillingClient.SkuType.INAPP)
            .build()
    billingClient.querySkuDetailsAsync(params) { billingResult, skuDetailsList -&gt;
    skuDetailsList
        ?.takeIf{ billingResult.responseCode === BillingClient.BillingResponseCode.OK &amp;&amp; skuDetailsList.isNotEmpty() }
        ?.filter {it.sku.equals(&quot;product&quot;)}
        ?.forEach { skuDetails -&gt; 
            val result: Purchase.PurchasesResult = billingClient.queryPurchases(BillingClient.SkuType.INAPP)
            val purchases: List&lt;Purchase&gt;? = result.getPurchasesList() as? List&lt;Purchase&gt;
            val isOwned = purchases?.any { it.sku == &quot;product&quot; }?:false
            
            if(!isOwned){
                val billingFlowParams = BillingFlowParams
                        .newBuilder()
                        .setSkuDetails(skuDetails)
                        .build()
                billingClient.launchBillingFlow(skuDetails@ActivityClass, billingFlowParams)
                }
            }
        }
    }
</code></pre>
",0
IllegalArgumentException,Kotlin,concept,57320458,"<p>It's because kotlin Null-Safety is kick in when reading the following code:</p>

<pre><code>val lat: String = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>if you visit the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java"" rel=""noreferrer"">SharedPreferences</a> code, you can see the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java#257"" rel=""noreferrer"">following code</a>:</p>

<pre><code>@Nullable
String getString(String key, @Nullable String defValue);
</code></pre>

<p>which is give us a probability to use null as <code>defValue</code> parameter. So, Kotlin try to guard it and give you the matching error:</p>

<blockquote>
  <p>""Type mismatch. Required String, found String?""</p>
</blockquote>

<p>You can fix the problem by enabling nullable for your String variable with:</p>

<pre><code>val lat: String? = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>though this against <a href=""https://kotlinlang.org/docs/reference/null-safety.html"" rel=""noreferrer"">Kotlin type system purpose</a>:</p>

<blockquote>
  <p>Kotlin's type system is aimed at eliminating the danger of null references from code, also known as the The Billion Dollar Mistake.</p>
</blockquote>
",0
IllegalArgumentException,Kotlin,concept,74887779,"<p>Well, it is kinda suggesting what you have to do:</p>
<blockquote>
<p>&quot;Only safe (?.) or non-null asserted (!!.) calls are allowed on a nullable reciever&quot;</p>
</blockquote>
<p>Means that whatever variable you are using, might be null.
So if you tried running</p>
<pre class=""lang-kotlin prettyprint-override""><code>(activity as MainActivity?).enableButtons(buttonState)
</code></pre>
<p>this might end up as:</p>
<pre class=""lang-kotlin prettyprint-override""><code>null.enableButtons(buttonState)
</code></pre>
<p>which (you may already know) will cause a crash</p>
<p>All kotlin is asking for is an alternative (when the variable is in fact <code>null</code>) or a &quot;promise&quot; that the variable is not null (!!)</p>
<p>A simple fix would be just to use:</p>
<pre><code>(activity as MainActivity?)!!.enableButtons(buttonState)
</code></pre>
<p>or just remove <code>?</code> after <code>MainActivity</code></p>
<p>(more on <code>.?</code> and <code>!!</code> you can find here: <a href=""https://stackoverflow.com/questions/44536114/whats-the-difference-between-and-in-kotlin"">What&#39;s the difference between !! and ? in Kotlin?</a>)</p>
",0
IllegalArgumentException,Kotlin,concept,66511427,"<p>The question is, what do you want to do if your variable is null? If you want to throw an exception, go with <code>require</code> or <code>check</code> as @hotkey suggested.</p>
<p>However I have the case where I just want to return if the value is null. So I wrote myself a little helper function that allows for this:</p>
<pre><code>private inline fun &lt;T&gt; T?.exitIfNull(exitBlock: () -&gt; Nothing): T {
    if (this == null)
        exitBlock()
    else
        return this
}
</code></pre>
<p>You can call this function as follows:</p>
<pre><code>val (a, b) = variable?.run {
    1 to 2
}.exitIfNull {
    return
}
</code></pre>
<p>A nice little use of the <code>Nothing</code> keyword in Kotlin that I personally find quite fascinating</p>
",0
IllegalArgumentException,Kotlin,performance,58549996,"<p>Since Kotlin 1.2, there is already a function for that.</p>

<p>You can use the function: <code>isInitialized</code> <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/is-initialized.html"" rel=""nofollow noreferrer"">docs</a></p>

<p>Code example:</p>

<pre><code>lateinit var key: String

fun useKey() {
    check(::key.isInitialized) { ""The field 'key' must be initialized"" }
    // use key safely
}
</code></pre>

<p><strong>Note:</strong> <code>check</code> will throw an IllegalStateException if the variable is not initialized.</p>
",0
IllegalArgumentException,Kotlin,performance,64028609,"<p>Kotlin is a lot more expressive than a lot of cascading if...</p>
<p>Also, Kollin handles nullity at compile time so IDE should notify you if is null or not.</p>
<p>I tried to rewrite your code because is very undebuggable.
I honestly don't know if it works and if it does the same things (it should but as i saidall those if are difficult to understand) but I find it more readable and debuggable.</p>
<p>Remember that in order to remove all if !=null you can use ?. operator</p>
<p>Hope it helps you to understand Kotlin expressivity</p>
<pre><code>private fun loadAllSKUs() {
    billingClient.takeIf{it.isReady}
    ?.let {
    val params = SkuDetailsParams.newBuilder()
            .setSkusList(skuList)
            .setType(BillingClient.SkuType.INAPP)
            .build()
    billingClient.querySkuDetailsAsync(params) { billingResult, skuDetailsList -&gt;
    skuDetailsList
        ?.takeIf{ billingResult.responseCode === BillingClient.BillingResponseCode.OK &amp;&amp; skuDetailsList.isNotEmpty() }
        ?.filter {it.sku.equals(&quot;product&quot;)}
        ?.forEach { skuDetails -&gt; 
            val result: Purchase.PurchasesResult = billingClient.queryPurchases(BillingClient.SkuType.INAPP)
            val purchases: List&lt;Purchase&gt;? = result.getPurchasesList() as? List&lt;Purchase&gt;
            val isOwned = purchases?.any { it.sku == &quot;product&quot; }?:false
            
            if(!isOwned){
                val billingFlowParams = BillingFlowParams
                        .newBuilder()
                        .setSkuDetails(skuDetails)
                        .build()
                billingClient.launchBillingFlow(skuDetails@ActivityClass, billingFlowParams)
                }
            }
        }
    }
</code></pre>
",0
IllegalArgumentException,Kotlin,performance,77274546,"<p>This is currently not documented – or anyway I couldn't find any documentation – so it's surprisingly hard to find an answer but from what I observed/found:</p>
<ul>
<li><code>@Suppress(&quot;all&quot;)</code> is defined by Detekt: <a href=""https://detekt.dev/docs/introduction/suppressing-rules/"" rel=""nofollow noreferrer"">https://detekt.dev/docs/introduction/suppressing-rules/</a></li>
<li>The Kotlin compiler gives you an indication of the value you should use if you want to suppress a specific warning (e.g., <code>@Suppress(&quot;KotlinConstantConditions&quot;)</code>)</li>
<li>Apparently, <code>@Suppress(&quot;warnings&quot;)</code> disables all warnings, but couldn't find any documentation on this</li>
</ul>
",0
IllegalArgumentException,Kotlin,performance,61095341,"<p>As @Madhu Bhat mentioned  in comment above, your variable 'x' is still nullable.
You may use your function simply like this:</p>

<pre><code>x.test().length
</code></pre>

<p>Otherwise  you can check for null by following inline function and then perform any functions directly on the variable. (Note the usage of 'contract' and annotations '@ExperimentalContracts')</p>

<pre><code>@ExperimentalContracts
fun &lt;T&gt; T?.notNull(): Boolean {

    contract {
        returns(true) implies (this@notNull != null)
    }

    return this != null
}
</code></pre>

<p>Now you can use this function like this</p>

<pre><code>if(x.notNull()){
  x.length
}
</code></pre>

<p>But its not seems so useful if your using this function just to check nullability.</p>

<p>Check here to know more  about Kotlin <a href=""https://pspdfkit.com/blog/2018/kotlin-contracts/"" rel=""nofollow noreferrer"">contracts</a> </p>
",0
IllegalArgumentException,Kotlin,performance,69577350,"<p>Checking nullable boolean against <code>true</code> or <code>false</code> is an <a href=""https://kotlinlang.org/docs/idioms.html#nullable-boolean"" rel=""nofollow noreferrer"">&quot;official&quot; Kotlin idiom</a>:</p>
<blockquote>
<h3>Nullable Boolean</h3>
<pre><code>val b: Boolean? = ... 
if (b == true) {
    ... 
} else {
    // `b` is false or null 
}
</code></pre>
</blockquote>
<p>Here is <a href=""https://discuss.kotlinlang.org/t/is-the-idiom-for-checking-nullable-booleans-helpful/8238"" rel=""nofollow noreferrer"">the relevant discussion</a> regarding the idiom, including opinions for and against it.</p>
",0
IllegalArgumentException,Kotlin,performance,76457075,"<p>The difference stems from the fact that Kotlin adds null-checking code.
Check the decompiled source of your test class:</p>
<pre class=""lang-java prettyprint-override""><code>public final class TextUtilsWrapperTest {
  @Test
  public final void testWrapperStatic() {
    Parcel parcel = (Parcel)Mockito.mock(Parcel.class);
    MockedStatic textUtilsWrapperMockedStatic = Mockito.mockStatic(TextUtilsWrapper.class);
    textUtilsWrapperMockedStatic.when(TextUtilsWrapperTest::testWrapperStatic$lambda$0)
      .thenReturn(&quot;hello&quot;);
    Intrinsics.checkNotNullExpressionValue(parcel, &quot;parcel&quot;);
    Assertions.assertEquals(&quot;hello&quot;, TextUtilsWrapper.createFromParcel(parcel));
  }
  
  private static final void testWrapperStatic$lambda$0() {
    Intrinsics.checkNotNullExpressionValue(ArgumentMatchers.any(), &quot;any()&quot;);
    TextUtilsWrapper.createFromParcel((Parcel)ArgumentMatchers.any());
  }
}
</code></pre>
<p>The expected event sequence is:</p>
<ul>
<li>argument matcher is called and registered on stack</li>
<li>mocked method call is intercepted and <code>MockMethodAdvice.handleStatic</code> is called</li>
<li>this calls <code>ArgumentMatcherStorageImpl.pullLocalizedMatchers</code> and clears the matchers stack.</li>
</ul>
<p>See: <a href=""https://stackoverflow.com/questions/22822512/how-do-mockito-matchers-work"">How do Mockito matchers work?</a></p>
<p>Unfortunately, <code>Intrinsics.checkNotNullExpressionValue</code> throws a NullPointerExeption, as <code>ArgumentMatchers.any()</code> returnes null.</p>
<p>This NPE is silently ignored, but mocked method is not called, and thus handleStatic is not called - the matchers stack is not cleared.</p>
<p>The matchers stack is checked upon <code>MockedStaticImpl.when</code> call, and the <code>InvalidUseOfMatchersException</code> is reported.</p>
<p>To solve, use <code>mockito-kotlin</code> provided argument matchers:</p>
<pre><code>/** Matches any object, excluding nulls. */
inline fun &lt;reified T : Any&gt; any(): T {
    return ArgumentMatchers.any(T::class.java) ?: createInstance()
}

/** Matches anything, including nulls. */
inline fun &lt;reified T : Any&gt; anyOrNull(): T {
    return ArgumentMatchers.any&lt;T&gt;() ?: createInstance()
}
</code></pre>
",0
IllegalArgumentException,Kotlin,performance,62318185,"<p>More idiomatic way to apply constrains in Kotlin is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/require.html"" rel=""noreferrer""><code>require</code></a> function:</p>

<pre><code>data class TotallyMadeUpClass(val username: String) {
    init {
        require(username.length &gt; 10) { ""Length must be greater than 10"" }
        // ...
    }
}
</code></pre>

<p>It throws an <strong>IllegalArgumentException</strong> if the value is <strong>false</strong>.</p>
",1
IllegalArgumentException,Kotlin,performance,74887779,"<p>Well, it is kinda suggesting what you have to do:</p>
<blockquote>
<p>&quot;Only safe (?.) or non-null asserted (!!.) calls are allowed on a nullable reciever&quot;</p>
</blockquote>
<p>Means that whatever variable you are using, might be null.
So if you tried running</p>
<pre class=""lang-kotlin prettyprint-override""><code>(activity as MainActivity?).enableButtons(buttonState)
</code></pre>
<p>this might end up as:</p>
<pre class=""lang-kotlin prettyprint-override""><code>null.enableButtons(buttonState)
</code></pre>
<p>which (you may already know) will cause a crash</p>
<p>All kotlin is asking for is an alternative (when the variable is in fact <code>null</code>) or a &quot;promise&quot; that the variable is not null (!!)</p>
<p>A simple fix would be just to use:</p>
<pre><code>(activity as MainActivity?)!!.enableButtons(buttonState)
</code></pre>
<p>or just remove <code>?</code> after <code>MainActivity</code></p>
<p>(more on <code>.?</code> and <code>!!</code> you can find here: <a href=""https://stackoverflow.com/questions/44536114/whats-the-difference-between-and-in-kotlin"">What&#39;s the difference between !! and ? in Kotlin?</a>)</p>
",0
IllegalArgumentException,Kotlin,performance,61996691,"<p>So the first thing to embrace with kotlin is: <code>Null Safety</code>.</p>

<p><code>Null Safety</code> does not mean that you do not get nulls.</p>

<p>It means, that if something is possibly null, the compiler forces you to think about it and handle it at a point that makes sense. If you don't, you potentially get the notorious <code>NullPointerException</code> at an unexpected and possibly ugly point of execution.</p>

<p>So, to eliminate the <code>?</code> think about where you want to handle the possibility of it being null -> check it -> handle it in an elegant way, and then safely pass the checked result without a <code>?</code> to the rest of your code.</p>
",0
IllegalArgumentException,Kotlin,performance,59151072,"<p>Kotlin, unlike Java and many other languages, requires that you explicitly identify a nullable value as nullable or it will throw up a compiler error (as you've discovered). This is done to prevent the dreaded NullPointerException, an effect of the so-called <a href=""https://medium.com/@hinchman_amanda/null-pointer-references-the-billion-dollar-mistake-1e616534d485"" rel=""nofollow noreferrer"">billion dollar mistake</a> (programmers the world over forgetting to check for null before assuming a variable's value is not null, and causing a NPE).</p>

<p>There are three ways to go about handling what you're asking about in Kotlin, and it boils down to a stylistic preference on your part plus a bit about how much code is conditioned upon the null/non-null status of the value. The methods all incorporate a null check.</p>

<p>For purposes of this answer, I'll assume if the latitude property is null, you want to throw an error. But one great thing about explicit nullability in Kotlin is it forces you to think about how you actually want to handle null values (is it an error that halts your code? do you plug in a default value and continue your code? etc.)</p>

<p>First, you can use the traditional <code>if/else</code>. For personal aesthetic reasons, I tend not to use this in Kotlin. I just enjoy using the other methods because they're ""new"" to me, coming from C-like languages, where if/else is old hat.</p>

<pre><code>val myVal: Location? = someValue

if(myVal == null) {
   throw IllegalStateException(""myVal is null"")
} else {
   /* handle the non-null case(s) */
}
</code></pre>

<p>Second, you can use one of the Kotlin <a href=""https://medium.com/@elye.project/mastering-kotlin-standard-functions-run-with-let-also-and-apply-9cd334b0ef84"" rel=""nofollow noreferrer"">scoping functions</a> (they are all used in subtly different ways but are interchangeable for the purposes of your question).</p>

<p><code>myValue.let</code> tells Kotlin to stick <code>myValue</code> into the following code block but renamed to <code>it</code>. But <code>myValue?.let</code> tells Kotlin to do this <em>only if myValue is non-null</em>. If myValue is null, the block of code following <code>let</code> will not execute. If you put a <code>?:</code> and some code after the block of code, that will be run if myValue is null:</p>

<pre><code>val myVal: Location? = someValue

myVal?.let { location -&gt;
   /* handle the non-null case */
} ?: throw IllegalStateException(""myVal is null"")
</code></pre>

<p>In the above, <code>throw ...</code> only executes if myVal is null. If myVal is non-null, it will not throw.</p>

<p>The third option is similar to the second:</p>

<pre><code>val myVal: Location? = someValue

myVal ?: throw IllegalStateException(""myVal is null"")

/* now handle the non-null case */
</code></pre>

<p>Remember the <code>?:</code> from above? That's it again, and it operates the same way: if <code>myVal</code> is null, it will execute what comes to the right of it. In this case, a throw. If this were in a function, you could also do <code>myVal ?: return someDefaultValue</code> for example.</p>

<p>It operates as a type guard and ensures that for any subsequent code, myVal <em>cannot</em> be null (because myVal is immutable and we've now determined it's not null).</p>
",0
IllegalArgumentException,Kotlin,directive,77274546,"<p>This is currently not documented – or anyway I couldn't find any documentation – so it's surprisingly hard to find an answer but from what I observed/found:</p>
<ul>
<li><code>@Suppress(&quot;all&quot;)</code> is defined by Detekt: <a href=""https://detekt.dev/docs/introduction/suppressing-rules/"" rel=""nofollow noreferrer"">https://detekt.dev/docs/introduction/suppressing-rules/</a></li>
<li>The Kotlin compiler gives you an indication of the value you should use if you want to suppress a specific warning (e.g., <code>@Suppress(&quot;KotlinConstantConditions&quot;)</code>)</li>
<li>Apparently, <code>@Suppress(&quot;warnings&quot;)</code> disables all warnings, but couldn't find any documentation on this</li>
</ul>
",0
IllegalArgumentException,Kotlin,directive,58549996,"<p>Since Kotlin 1.2, there is already a function for that.</p>

<p>You can use the function: <code>isInitialized</code> <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/is-initialized.html"" rel=""nofollow noreferrer"">docs</a></p>

<p>Code example:</p>

<pre><code>lateinit var key: String

fun useKey() {
    check(::key.isInitialized) { ""The field 'key' must be initialized"" }
    // use key safely
}
</code></pre>

<p><strong>Note:</strong> <code>check</code> will throw an IllegalStateException if the variable is not initialized.</p>
",0
IllegalArgumentException,Kotlin,directive,69577350,"<p>Checking nullable boolean against <code>true</code> or <code>false</code> is an <a href=""https://kotlinlang.org/docs/idioms.html#nullable-boolean"" rel=""nofollow noreferrer"">&quot;official&quot; Kotlin idiom</a>:</p>
<blockquote>
<h3>Nullable Boolean</h3>
<pre><code>val b: Boolean? = ... 
if (b == true) {
    ... 
} else {
    // `b` is false or null 
}
</code></pre>
</blockquote>
<p>Here is <a href=""https://discuss.kotlinlang.org/t/is-the-idiom-for-checking-nullable-booleans-helpful/8238"" rel=""nofollow noreferrer"">the relevant discussion</a> regarding the idiom, including opinions for and against it.</p>
",0
IllegalArgumentException,Kotlin,directive,64028609,"<p>Kotlin is a lot more expressive than a lot of cascading if...</p>
<p>Also, Kollin handles nullity at compile time so IDE should notify you if is null or not.</p>
<p>I tried to rewrite your code because is very undebuggable.
I honestly don't know if it works and if it does the same things (it should but as i saidall those if are difficult to understand) but I find it more readable and debuggable.</p>
<p>Remember that in order to remove all if !=null you can use ?. operator</p>
<p>Hope it helps you to understand Kotlin expressivity</p>
<pre><code>private fun loadAllSKUs() {
    billingClient.takeIf{it.isReady}
    ?.let {
    val params = SkuDetailsParams.newBuilder()
            .setSkusList(skuList)
            .setType(BillingClient.SkuType.INAPP)
            .build()
    billingClient.querySkuDetailsAsync(params) { billingResult, skuDetailsList -&gt;
    skuDetailsList
        ?.takeIf{ billingResult.responseCode === BillingClient.BillingResponseCode.OK &amp;&amp; skuDetailsList.isNotEmpty() }
        ?.filter {it.sku.equals(&quot;product&quot;)}
        ?.forEach { skuDetails -&gt; 
            val result: Purchase.PurchasesResult = billingClient.queryPurchases(BillingClient.SkuType.INAPP)
            val purchases: List&lt;Purchase&gt;? = result.getPurchasesList() as? List&lt;Purchase&gt;
            val isOwned = purchases?.any { it.sku == &quot;product&quot; }?:false
            
            if(!isOwned){
                val billingFlowParams = BillingFlowParams
                        .newBuilder()
                        .setSkuDetails(skuDetails)
                        .build()
                billingClient.launchBillingFlow(skuDetails@ActivityClass, billingFlowParams)
                }
            }
        }
    }
</code></pre>
",0
IllegalArgumentException,Kotlin,directive,62318185,"<p>More idiomatic way to apply constrains in Kotlin is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/require.html"" rel=""noreferrer""><code>require</code></a> function:</p>

<pre><code>data class TotallyMadeUpClass(val username: String) {
    init {
        require(username.length &gt; 10) { ""Length must be greater than 10"" }
        // ...
    }
}
</code></pre>

<p>It throws an <strong>IllegalArgumentException</strong> if the value is <strong>false</strong>.</p>
",1
IllegalArgumentException,Kotlin,directive,74887779,"<p>Well, it is kinda suggesting what you have to do:</p>
<blockquote>
<p>&quot;Only safe (?.) or non-null asserted (!!.) calls are allowed on a nullable reciever&quot;</p>
</blockquote>
<p>Means that whatever variable you are using, might be null.
So if you tried running</p>
<pre class=""lang-kotlin prettyprint-override""><code>(activity as MainActivity?).enableButtons(buttonState)
</code></pre>
<p>this might end up as:</p>
<pre class=""lang-kotlin prettyprint-override""><code>null.enableButtons(buttonState)
</code></pre>
<p>which (you may already know) will cause a crash</p>
<p>All kotlin is asking for is an alternative (when the variable is in fact <code>null</code>) or a &quot;promise&quot; that the variable is not null (!!)</p>
<p>A simple fix would be just to use:</p>
<pre><code>(activity as MainActivity?)!!.enableButtons(buttonState)
</code></pre>
<p>or just remove <code>?</code> after <code>MainActivity</code></p>
<p>(more on <code>.?</code> and <code>!!</code> you can find here: <a href=""https://stackoverflow.com/questions/44536114/whats-the-difference-between-and-in-kotlin"">What&#39;s the difference between !! and ? in Kotlin?</a>)</p>
",0
IllegalArgumentException,Kotlin,directive,66511427,"<p>The question is, what do you want to do if your variable is null? If you want to throw an exception, go with <code>require</code> or <code>check</code> as @hotkey suggested.</p>
<p>However I have the case where I just want to return if the value is null. So I wrote myself a little helper function that allows for this:</p>
<pre><code>private inline fun &lt;T&gt; T?.exitIfNull(exitBlock: () -&gt; Nothing): T {
    if (this == null)
        exitBlock()
    else
        return this
}
</code></pre>
<p>You can call this function as follows:</p>
<pre><code>val (a, b) = variable?.run {
    1 to 2
}.exitIfNull {
    return
}
</code></pre>
<p>A nice little use of the <code>Nothing</code> keyword in Kotlin that I personally find quite fascinating</p>
",0
IllegalArgumentException,Kotlin,directive,59151072,"<p>Kotlin, unlike Java and many other languages, requires that you explicitly identify a nullable value as nullable or it will throw up a compiler error (as you've discovered). This is done to prevent the dreaded NullPointerException, an effect of the so-called <a href=""https://medium.com/@hinchman_amanda/null-pointer-references-the-billion-dollar-mistake-1e616534d485"" rel=""nofollow noreferrer"">billion dollar mistake</a> (programmers the world over forgetting to check for null before assuming a variable's value is not null, and causing a NPE).</p>

<p>There are three ways to go about handling what you're asking about in Kotlin, and it boils down to a stylistic preference on your part plus a bit about how much code is conditioned upon the null/non-null status of the value. The methods all incorporate a null check.</p>

<p>For purposes of this answer, I'll assume if the latitude property is null, you want to throw an error. But one great thing about explicit nullability in Kotlin is it forces you to think about how you actually want to handle null values (is it an error that halts your code? do you plug in a default value and continue your code? etc.)</p>

<p>First, you can use the traditional <code>if/else</code>. For personal aesthetic reasons, I tend not to use this in Kotlin. I just enjoy using the other methods because they're ""new"" to me, coming from C-like languages, where if/else is old hat.</p>

<pre><code>val myVal: Location? = someValue

if(myVal == null) {
   throw IllegalStateException(""myVal is null"")
} else {
   /* handle the non-null case(s) */
}
</code></pre>

<p>Second, you can use one of the Kotlin <a href=""https://medium.com/@elye.project/mastering-kotlin-standard-functions-run-with-let-also-and-apply-9cd334b0ef84"" rel=""nofollow noreferrer"">scoping functions</a> (they are all used in subtly different ways but are interchangeable for the purposes of your question).</p>

<p><code>myValue.let</code> tells Kotlin to stick <code>myValue</code> into the following code block but renamed to <code>it</code>. But <code>myValue?.let</code> tells Kotlin to do this <em>only if myValue is non-null</em>. If myValue is null, the block of code following <code>let</code> will not execute. If you put a <code>?:</code> and some code after the block of code, that will be run if myValue is null:</p>

<pre><code>val myVal: Location? = someValue

myVal?.let { location -&gt;
   /* handle the non-null case */
} ?: throw IllegalStateException(""myVal is null"")
</code></pre>

<p>In the above, <code>throw ...</code> only executes if myVal is null. If myVal is non-null, it will not throw.</p>

<p>The third option is similar to the second:</p>

<pre><code>val myVal: Location? = someValue

myVal ?: throw IllegalStateException(""myVal is null"")

/* now handle the non-null case */
</code></pre>

<p>Remember the <code>?:</code> from above? That's it again, and it operates the same way: if <code>myVal</code> is null, it will execute what comes to the right of it. In this case, a throw. If this were in a function, you could also do <code>myVal ?: return someDefaultValue</code> for example.</p>

<p>It operates as a type guard and ensures that for any subsequent code, myVal <em>cannot</em> be null (because myVal is immutable and we've now determined it's not null).</p>
",0
IllegalArgumentException,Kotlin,directive,59290179,"<p>As per your comment, you said you are using <code>KotlinTest</code>.</p>

<p>In KotlinTest, I believe you can use <a href=""https://github.com/kotlintest/kotlintest/blob/master/doc/reference.md#soft-assertions"" rel=""nofollow noreferrer""><code>assertSoftly</code></a> for the behavior you want:</p>

<blockquote>
  <p>Normally, assertions like shouldBe throw an exception when they fail. But sometimes you want to perform multiple assertions in a test, and would like to see all of the assertions that failed. KotlinTest provides the assertSoftly function for this purpose.</p>

<pre><code>assertSoftly {
  foo shouldBe bar
  foo should contain(baz)
}
</code></pre>
  
  <p>If any assertions inside the block failed, the test will continue to run. All failures will be reported in a single exception at the end of the block.</p>
</blockquote>

<p>And then, we can convert your test to use <code>assertSoftly</code>:</p>

<pre><code>assertSoftly {
    success shouldBe true
    shouldNotThrowAny {
        verify(exactly = 1) { mock.methodcall(any()) }
    }
}
</code></pre>

<p>It's necessary to wrap <code>verify</code> in <code>shouldNotThrowAny</code> to make <code>assertSoftly</code> aware of it when it throws an exception</p>
",0
IllegalArgumentException,Kotlin,directive,57320458,"<p>It's because kotlin Null-Safety is kick in when reading the following code:</p>

<pre><code>val lat: String = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>if you visit the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java"" rel=""noreferrer"">SharedPreferences</a> code, you can see the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java#257"" rel=""noreferrer"">following code</a>:</p>

<pre><code>@Nullable
String getString(String key, @Nullable String defValue);
</code></pre>

<p>which is give us a probability to use null as <code>defValue</code> parameter. So, Kotlin try to guard it and give you the matching error:</p>

<blockquote>
  <p>""Type mismatch. Required String, found String?""</p>
</blockquote>

<p>You can fix the problem by enabling nullable for your String variable with:</p>

<pre><code>val lat: String? = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>though this against <a href=""https://kotlinlang.org/docs/reference/null-safety.html"" rel=""noreferrer"">Kotlin type system purpose</a>:</p>

<blockquote>
  <p>Kotlin's type system is aimed at eliminating the danger of null references from code, also known as the The Billion Dollar Mistake.</p>
</blockquote>
",0
IllegalArgumentException,Kotlin,pattern,69577350,"<p>Checking nullable boolean against <code>true</code> or <code>false</code> is an <a href=""https://kotlinlang.org/docs/idioms.html#nullable-boolean"" rel=""nofollow noreferrer"">&quot;official&quot; Kotlin idiom</a>:</p>
<blockquote>
<h3>Nullable Boolean</h3>
<pre><code>val b: Boolean? = ... 
if (b == true) {
    ... 
} else {
    // `b` is false or null 
}
</code></pre>
</blockquote>
<p>Here is <a href=""https://discuss.kotlinlang.org/t/is-the-idiom-for-checking-nullable-booleans-helpful/8238"" rel=""nofollow noreferrer"">the relevant discussion</a> regarding the idiom, including opinions for and against it.</p>
",0
IllegalArgumentException,Kotlin,pattern,77274546,"<p>This is currently not documented – or anyway I couldn't find any documentation – so it's surprisingly hard to find an answer but from what I observed/found:</p>
<ul>
<li><code>@Suppress(&quot;all&quot;)</code> is defined by Detekt: <a href=""https://detekt.dev/docs/introduction/suppressing-rules/"" rel=""nofollow noreferrer"">https://detekt.dev/docs/introduction/suppressing-rules/</a></li>
<li>The Kotlin compiler gives you an indication of the value you should use if you want to suppress a specific warning (e.g., <code>@Suppress(&quot;KotlinConstantConditions&quot;)</code>)</li>
<li>Apparently, <code>@Suppress(&quot;warnings&quot;)</code> disables all warnings, but couldn't find any documentation on this</li>
</ul>
",0
IllegalArgumentException,Kotlin,pattern,58549996,"<p>Since Kotlin 1.2, there is already a function for that.</p>

<p>You can use the function: <code>isInitialized</code> <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/is-initialized.html"" rel=""nofollow noreferrer"">docs</a></p>

<p>Code example:</p>

<pre><code>lateinit var key: String

fun useKey() {
    check(::key.isInitialized) { ""The field 'key' must be initialized"" }
    // use key safely
}
</code></pre>

<p><strong>Note:</strong> <code>check</code> will throw an IllegalStateException if the variable is not initialized.</p>
",0
IllegalArgumentException,Kotlin,pattern,62318185,"<p>More idiomatic way to apply constrains in Kotlin is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/require.html"" rel=""noreferrer""><code>require</code></a> function:</p>

<pre><code>data class TotallyMadeUpClass(val username: String) {
    init {
        require(username.length &gt; 10) { ""Length must be greater than 10"" }
        // ...
    }
}
</code></pre>

<p>It throws an <strong>IllegalArgumentException</strong> if the value is <strong>false</strong>.</p>
",1
IllegalArgumentException,Kotlin,pattern,74887779,"<p>Well, it is kinda suggesting what you have to do:</p>
<blockquote>
<p>&quot;Only safe (?.) or non-null asserted (!!.) calls are allowed on a nullable reciever&quot;</p>
</blockquote>
<p>Means that whatever variable you are using, might be null.
So if you tried running</p>
<pre class=""lang-kotlin prettyprint-override""><code>(activity as MainActivity?).enableButtons(buttonState)
</code></pre>
<p>this might end up as:</p>
<pre class=""lang-kotlin prettyprint-override""><code>null.enableButtons(buttonState)
</code></pre>
<p>which (you may already know) will cause a crash</p>
<p>All kotlin is asking for is an alternative (when the variable is in fact <code>null</code>) or a &quot;promise&quot; that the variable is not null (!!)</p>
<p>A simple fix would be just to use:</p>
<pre><code>(activity as MainActivity?)!!.enableButtons(buttonState)
</code></pre>
<p>or just remove <code>?</code> after <code>MainActivity</code></p>
<p>(more on <code>.?</code> and <code>!!</code> you can find here: <a href=""https://stackoverflow.com/questions/44536114/whats-the-difference-between-and-in-kotlin"">What&#39;s the difference between !! and ? in Kotlin?</a>)</p>
",0
IllegalArgumentException,Kotlin,pattern,75441047,"<p>In general you avoid situations like this, by reducing the scope of mutability in your code.</p>
<p>The difference between <code>require</code> and <code>check</code> is mostly a convention. They throw different Exceptions, namely <code>IllegalArgumentException</code> and <code>IllegalStateException</code> respectively. As the type of the Exceptions suggest, former is suited for validating the (user) input to a method whereas the latter is designed to check intermediate states during the runtime.
Exceptions in Kotlin should be handled as such, being an <em>Exception</em> that should not occur regularly. See also the <a href=""https://kotlinlang.org/docs/exceptions.html#checked-exceptions"" rel=""nofollow noreferrer"">Kotlin documentation</a> why there are no checked exceptions in Kotlin.</p>
<p>You did not write the name of your surrounding Kotlin class, thus I'll call it <code>Foo</code> for the time being.
Rather than providing a function on <code>Foo</code>, that mutates the internal state of <code>Foo</code>, you could create new instances of <code>Foo</code> based on the <code>Iterable&lt;Int&gt; / Sequence&lt;Int&gt;</code>. This way, you only ever have an <code>Foo</code> object when its in a valid state.</p>
<pre class=""lang-kotlin prettyprint-override""><code>private class Foo(source: Iterable&lt;Int&gt;) {

    private val elementArray = ArrayList&lt;Int&gt;()
    private val moduleCount: Int

    init {
        var internalCount = 0

        for (count in source) {
            require(count &gt; 0)

            elementArray.add(count)
            internalCount += count
        }

        moduleCount = internalCount

        if (elementArray.size % 2 == 1) {
            elementArray.add(0)
        }

        check(elementArray.size % 2 == 0)
        // ...
    }
}
</code></pre>
<p>Alternatively, if you want / need to keep the interface as described in your question but also avoid the invalid state, you could make use of an intermediate copy.
As you're copying the incoming <code>Iterable&lt;Int&gt; / Sequence&lt;Int&gt;</code> into an <code>ArrayList&lt;Int&gt;</code> I assume you're not working with very large collections.</p>
<pre class=""lang-kotlin prettyprint-override""><code>private class Foo(source: Iterable&lt;Int&gt;) {

    private val elementArray = ArrayList&lt;Int&gt;()
    private var moduleCount = 0

    public fun loadElements(source: Iterable&lt;Int&gt;) {
        val internalCopy = ArrayList&lt;Int&gt;()
        for (count in source) {
            require(count &gt;= 0)
            internalCopy.add(count)
        }

        elementArray.clear()
        for (count in internalCopy) {
            elementArray.add(count)
            moduleCount += count
        }
        
        if (elementArray.size % 2 == 1) {
            elementArray.add(0)
        }
        check(elementArray.size % 2 == 0)
        // ...
    }
}
</code></pre>
",1
IllegalArgumentException,Kotlin,pattern,57253683,"<p>I ran into the same issue earlier today. It took me a bit to figure it out.</p>

<p>Based on the error message, the compiler can't infer what type X is. X is a type parameter for the useHandle method, which is meant to specify what type of exception (if any) our HandleConsumer will return. In Kotlin, we represent the HandleConsumer with an anonymous function, so really this type parameter should be whatever exception our lambda might throw. If you take a look at the definition of the useHandle method, it becomes a lot easier to understand what you need to do :).</p>

<p>So, the way to fix this error is to specify an explicit type after useHandle. </p>

<p>This should fix the error:</p>

<pre><code>jdbi.useHandle&lt;Exception&gt; { handle -&gt;
    handle.createQuery(""SELECT count(*) FROM levelmaster WHERE `LevelName` = 'Silver' AND `LevelId` &gt;= :ugradingLevel"")
                            .bind(""ugradingLevel"", ugradingLevel)
                            .mapTo(Int::class.java)                            
                            .findOnly() 
}
</code></pre>

<p>The key difference here is <code>jdbi.useHandle&lt;Exception&gt;{ ...</code> </p>

<p>rather than just <code>jdbi.useHandle{ ...</code></p>

<p>I hope that helps! It definitely tripped me up for a minute too. </p>
",0
IllegalArgumentException,Kotlin,pattern,66511427,"<p>The question is, what do you want to do if your variable is null? If you want to throw an exception, go with <code>require</code> or <code>check</code> as @hotkey suggested.</p>
<p>However I have the case where I just want to return if the value is null. So I wrote myself a little helper function that allows for this:</p>
<pre><code>private inline fun &lt;T&gt; T?.exitIfNull(exitBlock: () -&gt; Nothing): T {
    if (this == null)
        exitBlock()
    else
        return this
}
</code></pre>
<p>You can call this function as follows:</p>
<pre><code>val (a, b) = variable?.run {
    1 to 2
}.exitIfNull {
    return
}
</code></pre>
<p>A nice little use of the <code>Nothing</code> keyword in Kotlin that I personally find quite fascinating</p>
",0
IllegalArgumentException,Kotlin,pattern,76457075,"<p>The difference stems from the fact that Kotlin adds null-checking code.
Check the decompiled source of your test class:</p>
<pre class=""lang-java prettyprint-override""><code>public final class TextUtilsWrapperTest {
  @Test
  public final void testWrapperStatic() {
    Parcel parcel = (Parcel)Mockito.mock(Parcel.class);
    MockedStatic textUtilsWrapperMockedStatic = Mockito.mockStatic(TextUtilsWrapper.class);
    textUtilsWrapperMockedStatic.when(TextUtilsWrapperTest::testWrapperStatic$lambda$0)
      .thenReturn(&quot;hello&quot;);
    Intrinsics.checkNotNullExpressionValue(parcel, &quot;parcel&quot;);
    Assertions.assertEquals(&quot;hello&quot;, TextUtilsWrapper.createFromParcel(parcel));
  }
  
  private static final void testWrapperStatic$lambda$0() {
    Intrinsics.checkNotNullExpressionValue(ArgumentMatchers.any(), &quot;any()&quot;);
    TextUtilsWrapper.createFromParcel((Parcel)ArgumentMatchers.any());
  }
}
</code></pre>
<p>The expected event sequence is:</p>
<ul>
<li>argument matcher is called and registered on stack</li>
<li>mocked method call is intercepted and <code>MockMethodAdvice.handleStatic</code> is called</li>
<li>this calls <code>ArgumentMatcherStorageImpl.pullLocalizedMatchers</code> and clears the matchers stack.</li>
</ul>
<p>See: <a href=""https://stackoverflow.com/questions/22822512/how-do-mockito-matchers-work"">How do Mockito matchers work?</a></p>
<p>Unfortunately, <code>Intrinsics.checkNotNullExpressionValue</code> throws a NullPointerExeption, as <code>ArgumentMatchers.any()</code> returnes null.</p>
<p>This NPE is silently ignored, but mocked method is not called, and thus handleStatic is not called - the matchers stack is not cleared.</p>
<p>The matchers stack is checked upon <code>MockedStaticImpl.when</code> call, and the <code>InvalidUseOfMatchersException</code> is reported.</p>
<p>To solve, use <code>mockito-kotlin</code> provided argument matchers:</p>
<pre><code>/** Matches any object, excluding nulls. */
inline fun &lt;reified T : Any&gt; any(): T {
    return ArgumentMatchers.any(T::class.java) ?: createInstance()
}

/** Matches anything, including nulls. */
inline fun &lt;reified T : Any&gt; anyOrNull(): T {
    return ArgumentMatchers.any&lt;T&gt;() ?: createInstance()
}
</code></pre>
",0
IllegalArgumentException,Kotlin,pattern,61095341,"<p>As @Madhu Bhat mentioned  in comment above, your variable 'x' is still nullable.
You may use your function simply like this:</p>

<pre><code>x.test().length
</code></pre>

<p>Otherwise  you can check for null by following inline function and then perform any functions directly on the variable. (Note the usage of 'contract' and annotations '@ExperimentalContracts')</p>

<pre><code>@ExperimentalContracts
fun &lt;T&gt; T?.notNull(): Boolean {

    contract {
        returns(true) implies (this@notNull != null)
    }

    return this != null
}
</code></pre>

<p>Now you can use this function like this</p>

<pre><code>if(x.notNull()){
  x.length
}
</code></pre>

<p>But its not seems so useful if your using this function just to check nullability.</p>

<p>Check here to know more  about Kotlin <a href=""https://pspdfkit.com/blog/2018/kotlin-contracts/"" rel=""nofollow noreferrer"">contracts</a> </p>
",0
IllegalArgumentException,Kotlin,environment,77274546,"<p>This is currently not documented – or anyway I couldn't find any documentation – so it's surprisingly hard to find an answer but from what I observed/found:</p>
<ul>
<li><code>@Suppress(&quot;all&quot;)</code> is defined by Detekt: <a href=""https://detekt.dev/docs/introduction/suppressing-rules/"" rel=""nofollow noreferrer"">https://detekt.dev/docs/introduction/suppressing-rules/</a></li>
<li>The Kotlin compiler gives you an indication of the value you should use if you want to suppress a specific warning (e.g., <code>@Suppress(&quot;KotlinConstantConditions&quot;)</code>)</li>
<li>Apparently, <code>@Suppress(&quot;warnings&quot;)</code> disables all warnings, but couldn't find any documentation on this</li>
</ul>
",0
IllegalArgumentException,Kotlin,environment,75441047,"<p>In general you avoid situations like this, by reducing the scope of mutability in your code.</p>
<p>The difference between <code>require</code> and <code>check</code> is mostly a convention. They throw different Exceptions, namely <code>IllegalArgumentException</code> and <code>IllegalStateException</code> respectively. As the type of the Exceptions suggest, former is suited for validating the (user) input to a method whereas the latter is designed to check intermediate states during the runtime.
Exceptions in Kotlin should be handled as such, being an <em>Exception</em> that should not occur regularly. See also the <a href=""https://kotlinlang.org/docs/exceptions.html#checked-exceptions"" rel=""nofollow noreferrer"">Kotlin documentation</a> why there are no checked exceptions in Kotlin.</p>
<p>You did not write the name of your surrounding Kotlin class, thus I'll call it <code>Foo</code> for the time being.
Rather than providing a function on <code>Foo</code>, that mutates the internal state of <code>Foo</code>, you could create new instances of <code>Foo</code> based on the <code>Iterable&lt;Int&gt; / Sequence&lt;Int&gt;</code>. This way, you only ever have an <code>Foo</code> object when its in a valid state.</p>
<pre class=""lang-kotlin prettyprint-override""><code>private class Foo(source: Iterable&lt;Int&gt;) {

    private val elementArray = ArrayList&lt;Int&gt;()
    private val moduleCount: Int

    init {
        var internalCount = 0

        for (count in source) {
            require(count &gt; 0)

            elementArray.add(count)
            internalCount += count
        }

        moduleCount = internalCount

        if (elementArray.size % 2 == 1) {
            elementArray.add(0)
        }

        check(elementArray.size % 2 == 0)
        // ...
    }
}
</code></pre>
<p>Alternatively, if you want / need to keep the interface as described in your question but also avoid the invalid state, you could make use of an intermediate copy.
As you're copying the incoming <code>Iterable&lt;Int&gt; / Sequence&lt;Int&gt;</code> into an <code>ArrayList&lt;Int&gt;</code> I assume you're not working with very large collections.</p>
<pre class=""lang-kotlin prettyprint-override""><code>private class Foo(source: Iterable&lt;Int&gt;) {

    private val elementArray = ArrayList&lt;Int&gt;()
    private var moduleCount = 0

    public fun loadElements(source: Iterable&lt;Int&gt;) {
        val internalCopy = ArrayList&lt;Int&gt;()
        for (count in source) {
            require(count &gt;= 0)
            internalCopy.add(count)
        }

        elementArray.clear()
        for (count in internalCopy) {
            elementArray.add(count)
            moduleCount += count
        }
        
        if (elementArray.size % 2 == 1) {
            elementArray.add(0)
        }
        check(elementArray.size % 2 == 0)
        // ...
    }
}
</code></pre>
",1
IllegalArgumentException,Kotlin,environment,59151072,"<p>Kotlin, unlike Java and many other languages, requires that you explicitly identify a nullable value as nullable or it will throw up a compiler error (as you've discovered). This is done to prevent the dreaded NullPointerException, an effect of the so-called <a href=""https://medium.com/@hinchman_amanda/null-pointer-references-the-billion-dollar-mistake-1e616534d485"" rel=""nofollow noreferrer"">billion dollar mistake</a> (programmers the world over forgetting to check for null before assuming a variable's value is not null, and causing a NPE).</p>

<p>There are three ways to go about handling what you're asking about in Kotlin, and it boils down to a stylistic preference on your part plus a bit about how much code is conditioned upon the null/non-null status of the value. The methods all incorporate a null check.</p>

<p>For purposes of this answer, I'll assume if the latitude property is null, you want to throw an error. But one great thing about explicit nullability in Kotlin is it forces you to think about how you actually want to handle null values (is it an error that halts your code? do you plug in a default value and continue your code? etc.)</p>

<p>First, you can use the traditional <code>if/else</code>. For personal aesthetic reasons, I tend not to use this in Kotlin. I just enjoy using the other methods because they're ""new"" to me, coming from C-like languages, where if/else is old hat.</p>

<pre><code>val myVal: Location? = someValue

if(myVal == null) {
   throw IllegalStateException(""myVal is null"")
} else {
   /* handle the non-null case(s) */
}
</code></pre>

<p>Second, you can use one of the Kotlin <a href=""https://medium.com/@elye.project/mastering-kotlin-standard-functions-run-with-let-also-and-apply-9cd334b0ef84"" rel=""nofollow noreferrer"">scoping functions</a> (they are all used in subtly different ways but are interchangeable for the purposes of your question).</p>

<p><code>myValue.let</code> tells Kotlin to stick <code>myValue</code> into the following code block but renamed to <code>it</code>. But <code>myValue?.let</code> tells Kotlin to do this <em>only if myValue is non-null</em>. If myValue is null, the block of code following <code>let</code> will not execute. If you put a <code>?:</code> and some code after the block of code, that will be run if myValue is null:</p>

<pre><code>val myVal: Location? = someValue

myVal?.let { location -&gt;
   /* handle the non-null case */
} ?: throw IllegalStateException(""myVal is null"")
</code></pre>

<p>In the above, <code>throw ...</code> only executes if myVal is null. If myVal is non-null, it will not throw.</p>

<p>The third option is similar to the second:</p>

<pre><code>val myVal: Location? = someValue

myVal ?: throw IllegalStateException(""myVal is null"")

/* now handle the non-null case */
</code></pre>

<p>Remember the <code>?:</code> from above? That's it again, and it operates the same way: if <code>myVal</code> is null, it will execute what comes to the right of it. In this case, a throw. If this were in a function, you could also do <code>myVal ?: return someDefaultValue</code> for example.</p>

<p>It operates as a type guard and ensures that for any subsequent code, myVal <em>cannot</em> be null (because myVal is immutable and we've now determined it's not null).</p>
",0
IllegalArgumentException,Kotlin,environment,74887779,"<p>Well, it is kinda suggesting what you have to do:</p>
<blockquote>
<p>&quot;Only safe (?.) or non-null asserted (!!.) calls are allowed on a nullable reciever&quot;</p>
</blockquote>
<p>Means that whatever variable you are using, might be null.
So if you tried running</p>
<pre class=""lang-kotlin prettyprint-override""><code>(activity as MainActivity?).enableButtons(buttonState)
</code></pre>
<p>this might end up as:</p>
<pre class=""lang-kotlin prettyprint-override""><code>null.enableButtons(buttonState)
</code></pre>
<p>which (you may already know) will cause a crash</p>
<p>All kotlin is asking for is an alternative (when the variable is in fact <code>null</code>) or a &quot;promise&quot; that the variable is not null (!!)</p>
<p>A simple fix would be just to use:</p>
<pre><code>(activity as MainActivity?)!!.enableButtons(buttonState)
</code></pre>
<p>or just remove <code>?</code> after <code>MainActivity</code></p>
<p>(more on <code>.?</code> and <code>!!</code> you can find here: <a href=""https://stackoverflow.com/questions/44536114/whats-the-difference-between-and-in-kotlin"">What&#39;s the difference between !! and ? in Kotlin?</a>)</p>
",0
IllegalArgumentException,Kotlin,environment,64028609,"<p>Kotlin is a lot more expressive than a lot of cascading if...</p>
<p>Also, Kollin handles nullity at compile time so IDE should notify you if is null or not.</p>
<p>I tried to rewrite your code because is very undebuggable.
I honestly don't know if it works and if it does the same things (it should but as i saidall those if are difficult to understand) but I find it more readable and debuggable.</p>
<p>Remember that in order to remove all if !=null you can use ?. operator</p>
<p>Hope it helps you to understand Kotlin expressivity</p>
<pre><code>private fun loadAllSKUs() {
    billingClient.takeIf{it.isReady}
    ?.let {
    val params = SkuDetailsParams.newBuilder()
            .setSkusList(skuList)
            .setType(BillingClient.SkuType.INAPP)
            .build()
    billingClient.querySkuDetailsAsync(params) { billingResult, skuDetailsList -&gt;
    skuDetailsList
        ?.takeIf{ billingResult.responseCode === BillingClient.BillingResponseCode.OK &amp;&amp; skuDetailsList.isNotEmpty() }
        ?.filter {it.sku.equals(&quot;product&quot;)}
        ?.forEach { skuDetails -&gt; 
            val result: Purchase.PurchasesResult = billingClient.queryPurchases(BillingClient.SkuType.INAPP)
            val purchases: List&lt;Purchase&gt;? = result.getPurchasesList() as? List&lt;Purchase&gt;
            val isOwned = purchases?.any { it.sku == &quot;product&quot; }?:false
            
            if(!isOwned){
                val billingFlowParams = BillingFlowParams
                        .newBuilder()
                        .setSkuDetails(skuDetails)
                        .build()
                billingClient.launchBillingFlow(skuDetails@ActivityClass, billingFlowParams)
                }
            }
        }
    }
</code></pre>
",0
IllegalArgumentException,Kotlin,environment,58549996,"<p>Since Kotlin 1.2, there is already a function for that.</p>

<p>You can use the function: <code>isInitialized</code> <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/is-initialized.html"" rel=""nofollow noreferrer"">docs</a></p>

<p>Code example:</p>

<pre><code>lateinit var key: String

fun useKey() {
    check(::key.isInitialized) { ""The field 'key' must be initialized"" }
    // use key safely
}
</code></pre>

<p><strong>Note:</strong> <code>check</code> will throw an IllegalStateException if the variable is not initialized.</p>
",0
IllegalArgumentException,Kotlin,environment,57320458,"<p>It's because kotlin Null-Safety is kick in when reading the following code:</p>

<pre><code>val lat: String = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>if you visit the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java"" rel=""noreferrer"">SharedPreferences</a> code, you can see the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java#257"" rel=""noreferrer"">following code</a>:</p>

<pre><code>@Nullable
String getString(String key, @Nullable String defValue);
</code></pre>

<p>which is give us a probability to use null as <code>defValue</code> parameter. So, Kotlin try to guard it and give you the matching error:</p>

<blockquote>
  <p>""Type mismatch. Required String, found String?""</p>
</blockquote>

<p>You can fix the problem by enabling nullable for your String variable with:</p>

<pre><code>val lat: String? = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>though this against <a href=""https://kotlinlang.org/docs/reference/null-safety.html"" rel=""noreferrer"">Kotlin type system purpose</a>:</p>

<blockquote>
  <p>Kotlin's type system is aimed at eliminating the danger of null references from code, also known as the The Billion Dollar Mistake.</p>
</blockquote>
",0
IllegalArgumentException,Kotlin,environment,77013962,"<p>It is redundant, which I just confirmed with some snippet code,</p>
<p><em><strong>But why?</strong></em></p>
<p>I did a bit of digging into it with following sample snippet,</p>
<pre><code>package basic

class SimpleCoroutine {
    private suspend fun foo(): String {
        return bar()
    }

    private suspend fun foo1(): Any {
        return bar1()
    }

    private suspend fun foo2(): RandomSingleton {
        return bar2()
    }

    private suspend fun foo3() {
        return bar3()
    }
}
</code></pre>
<p><em>The generated code is as follows</em></p>
<pre><code>public final class SimpleCoroutine {
   private final Object foo(Continuation $completion) {
      return BarKt.bar($completion);
   }

   private final Object foo1(Continuation $completion) {
      return BarKt.bar1($completion);
   }

   private final Object foo2(Continuation $completion) {
      return BarKt.bar2($completion);
   }

   private final Object foo3(Continuation $completion) {
      Object var10000 = BarKt.bar3($completion);
      return var10000 == IntrinsicsKt.getCOROUTINE_SUSPENDED() ? var10000 : Unit.INSTANCE;
   }
}
</code></pre>
<p>In all function the generated code is almost identical to the source code except for the foo3, where the return type is <code>kotlin.Unit</code> which is a singleton from kotlin standard library. Now we all know that the default return type is <code>Unit</code> in kotlin.</p>
<p>So to clear the air I also made one singleton object of my own which I used to check with <code>foo2()</code> however there no redundant check is applied.</p>
<p>The only conclusion I can reach is that the compiler is doing guess work;</p>
<pre><code>Object var10000 = BarKt.bar($completion);
return var10000 == IntrinsicsKt.getCOROUTINE_SUSPENDED() ? var10000 : Unit.INSTANCE;
</code></pre>
<p>From the above snippet from your question,</p>
<pre><code>var10000 == IntrinsicsKt.getCOROUTINE_SUSPENDED() ? var10000 : Unit.INSTANCE;
</code></pre>
<p>The tricky part is that it is not sure whether the value returned by <code>BarKt.bar($completion);</code> will be <code>COROUTINE_SUSPENDED | kotlin.Unit</code>, it seems that compiler some how not sure for the right part will always <code>kotlin.Unit</code>, which is why it explicitly returns <code>Unit.INSTANCE</code>.</p>
",0
IllegalArgumentException,Kotlin,environment,66511427,"<p>The question is, what do you want to do if your variable is null? If you want to throw an exception, go with <code>require</code> or <code>check</code> as @hotkey suggested.</p>
<p>However I have the case where I just want to return if the value is null. So I wrote myself a little helper function that allows for this:</p>
<pre><code>private inline fun &lt;T&gt; T?.exitIfNull(exitBlock: () -&gt; Nothing): T {
    if (this == null)
        exitBlock()
    else
        return this
}
</code></pre>
<p>You can call this function as follows:</p>
<pre><code>val (a, b) = variable?.run {
    1 to 2
}.exitIfNull {
    return
}
</code></pre>
<p>A nice little use of the <code>Nothing</code> keyword in Kotlin that I personally find quite fascinating</p>
",0
IllegalArgumentException,Kotlin,environment,63936181,"<p>As I have understood, your errors are generating from this code block:</p>
<pre><code>val userEmail = document.get(&quot;userEmail&quot;) as String
val noteTitle = document.get(&quot;noteTitle&quot;) as String
val yourNote = document.get(&quot;yourNote&quot;) as String
val downloadUrl = document.get(&quot;downloadUrl&quot;) as String
</code></pre>
<p>Here one of the variables from <code>document</code> is coming as null which cannot be cast to non-nullable <code>String</code> type in kotlin.</p>
<p>If you are not sure of the fields which can come null, write code like this:</p>
<pre><code>val userEmail : String? = document.get(&quot;userEmail&quot;) as? String
val noteTitle : String?  = document.get(&quot;noteTitle&quot;) as? String
val yourNote : String? = document.get(&quot;yourNote&quot;) as? String
val downloadUrl : String? = document.get(&quot;downloadUrl&quot;) as? String
</code></pre>
<p>For more clarity please check <code>Safe(nullable)-Cast</code> operator in kotlin <a href=""https://kotlinlang.org/docs/reference/typecasts.html#safe-nullable-cast-operator"" rel=""nofollow noreferrer"">docs</a></p>
",0
IllegalArgumentException,Kotlin,alternative,69577350,"<p>Checking nullable boolean against <code>true</code> or <code>false</code> is an <a href=""https://kotlinlang.org/docs/idioms.html#nullable-boolean"" rel=""nofollow noreferrer"">&quot;official&quot; Kotlin idiom</a>:</p>
<blockquote>
<h3>Nullable Boolean</h3>
<pre><code>val b: Boolean? = ... 
if (b == true) {
    ... 
} else {
    // `b` is false or null 
}
</code></pre>
</blockquote>
<p>Here is <a href=""https://discuss.kotlinlang.org/t/is-the-idiom-for-checking-nullable-booleans-helpful/8238"" rel=""nofollow noreferrer"">the relevant discussion</a> regarding the idiom, including opinions for and against it.</p>
",0
IllegalArgumentException,Kotlin,alternative,74887779,"<p>Well, it is kinda suggesting what you have to do:</p>
<blockquote>
<p>&quot;Only safe (?.) or non-null asserted (!!.) calls are allowed on a nullable reciever&quot;</p>
</blockquote>
<p>Means that whatever variable you are using, might be null.
So if you tried running</p>
<pre class=""lang-kotlin prettyprint-override""><code>(activity as MainActivity?).enableButtons(buttonState)
</code></pre>
<p>this might end up as:</p>
<pre class=""lang-kotlin prettyprint-override""><code>null.enableButtons(buttonState)
</code></pre>
<p>which (you may already know) will cause a crash</p>
<p>All kotlin is asking for is an alternative (when the variable is in fact <code>null</code>) or a &quot;promise&quot; that the variable is not null (!!)</p>
<p>A simple fix would be just to use:</p>
<pre><code>(activity as MainActivity?)!!.enableButtons(buttonState)
</code></pre>
<p>or just remove <code>?</code> after <code>MainActivity</code></p>
<p>(more on <code>.?</code> and <code>!!</code> you can find here: <a href=""https://stackoverflow.com/questions/44536114/whats-the-difference-between-and-in-kotlin"">What&#39;s the difference between !! and ? in Kotlin?</a>)</p>
",0
IllegalArgumentException,Kotlin,alternative,62318185,"<p>More idiomatic way to apply constrains in Kotlin is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/require.html"" rel=""noreferrer""><code>require</code></a> function:</p>

<pre><code>data class TotallyMadeUpClass(val username: String) {
    init {
        require(username.length &gt; 10) { ""Length must be greater than 10"" }
        // ...
    }
}
</code></pre>

<p>It throws an <strong>IllegalArgumentException</strong> if the value is <strong>false</strong>.</p>
",1
IllegalArgumentException,Kotlin,alternative,58549996,"<p>Since Kotlin 1.2, there is already a function for that.</p>

<p>You can use the function: <code>isInitialized</code> <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/is-initialized.html"" rel=""nofollow noreferrer"">docs</a></p>

<p>Code example:</p>

<pre><code>lateinit var key: String

fun useKey() {
    check(::key.isInitialized) { ""The field 'key' must be initialized"" }
    // use key safely
}
</code></pre>

<p><strong>Note:</strong> <code>check</code> will throw an IllegalStateException if the variable is not initialized.</p>
",0
IllegalArgumentException,Kotlin,alternative,76457075,"<p>The difference stems from the fact that Kotlin adds null-checking code.
Check the decompiled source of your test class:</p>
<pre class=""lang-java prettyprint-override""><code>public final class TextUtilsWrapperTest {
  @Test
  public final void testWrapperStatic() {
    Parcel parcel = (Parcel)Mockito.mock(Parcel.class);
    MockedStatic textUtilsWrapperMockedStatic = Mockito.mockStatic(TextUtilsWrapper.class);
    textUtilsWrapperMockedStatic.when(TextUtilsWrapperTest::testWrapperStatic$lambda$0)
      .thenReturn(&quot;hello&quot;);
    Intrinsics.checkNotNullExpressionValue(parcel, &quot;parcel&quot;);
    Assertions.assertEquals(&quot;hello&quot;, TextUtilsWrapper.createFromParcel(parcel));
  }
  
  private static final void testWrapperStatic$lambda$0() {
    Intrinsics.checkNotNullExpressionValue(ArgumentMatchers.any(), &quot;any()&quot;);
    TextUtilsWrapper.createFromParcel((Parcel)ArgumentMatchers.any());
  }
}
</code></pre>
<p>The expected event sequence is:</p>
<ul>
<li>argument matcher is called and registered on stack</li>
<li>mocked method call is intercepted and <code>MockMethodAdvice.handleStatic</code> is called</li>
<li>this calls <code>ArgumentMatcherStorageImpl.pullLocalizedMatchers</code> and clears the matchers stack.</li>
</ul>
<p>See: <a href=""https://stackoverflow.com/questions/22822512/how-do-mockito-matchers-work"">How do Mockito matchers work?</a></p>
<p>Unfortunately, <code>Intrinsics.checkNotNullExpressionValue</code> throws a NullPointerExeption, as <code>ArgumentMatchers.any()</code> returnes null.</p>
<p>This NPE is silently ignored, but mocked method is not called, and thus handleStatic is not called - the matchers stack is not cleared.</p>
<p>The matchers stack is checked upon <code>MockedStaticImpl.when</code> call, and the <code>InvalidUseOfMatchersException</code> is reported.</p>
<p>To solve, use <code>mockito-kotlin</code> provided argument matchers:</p>
<pre><code>/** Matches any object, excluding nulls. */
inline fun &lt;reified T : Any&gt; any(): T {
    return ArgumentMatchers.any(T::class.java) ?: createInstance()
}

/** Matches anything, including nulls. */
inline fun &lt;reified T : Any&gt; anyOrNull(): T {
    return ArgumentMatchers.any&lt;T&gt;() ?: createInstance()
}
</code></pre>
",0
IllegalArgumentException,Kotlin,alternative,61095341,"<p>As @Madhu Bhat mentioned  in comment above, your variable 'x' is still nullable.
You may use your function simply like this:</p>

<pre><code>x.test().length
</code></pre>

<p>Otherwise  you can check for null by following inline function and then perform any functions directly on the variable. (Note the usage of 'contract' and annotations '@ExperimentalContracts')</p>

<pre><code>@ExperimentalContracts
fun &lt;T&gt; T?.notNull(): Boolean {

    contract {
        returns(true) implies (this@notNull != null)
    }

    return this != null
}
</code></pre>

<p>Now you can use this function like this</p>

<pre><code>if(x.notNull()){
  x.length
}
</code></pre>

<p>But its not seems so useful if your using this function just to check nullability.</p>

<p>Check here to know more  about Kotlin <a href=""https://pspdfkit.com/blog/2018/kotlin-contracts/"" rel=""nofollow noreferrer"">contracts</a> </p>
",0
IllegalArgumentException,Kotlin,alternative,64028609,"<p>Kotlin is a lot more expressive than a lot of cascading if...</p>
<p>Also, Kollin handles nullity at compile time so IDE should notify you if is null or not.</p>
<p>I tried to rewrite your code because is very undebuggable.
I honestly don't know if it works and if it does the same things (it should but as i saidall those if are difficult to understand) but I find it more readable and debuggable.</p>
<p>Remember that in order to remove all if !=null you can use ?. operator</p>
<p>Hope it helps you to understand Kotlin expressivity</p>
<pre><code>private fun loadAllSKUs() {
    billingClient.takeIf{it.isReady}
    ?.let {
    val params = SkuDetailsParams.newBuilder()
            .setSkusList(skuList)
            .setType(BillingClient.SkuType.INAPP)
            .build()
    billingClient.querySkuDetailsAsync(params) { billingResult, skuDetailsList -&gt;
    skuDetailsList
        ?.takeIf{ billingResult.responseCode === BillingClient.BillingResponseCode.OK &amp;&amp; skuDetailsList.isNotEmpty() }
        ?.filter {it.sku.equals(&quot;product&quot;)}
        ?.forEach { skuDetails -&gt; 
            val result: Purchase.PurchasesResult = billingClient.queryPurchases(BillingClient.SkuType.INAPP)
            val purchases: List&lt;Purchase&gt;? = result.getPurchasesList() as? List&lt;Purchase&gt;
            val isOwned = purchases?.any { it.sku == &quot;product&quot; }?:false
            
            if(!isOwned){
                val billingFlowParams = BillingFlowParams
                        .newBuilder()
                        .setSkuDetails(skuDetails)
                        .build()
                billingClient.launchBillingFlow(skuDetails@ActivityClass, billingFlowParams)
                }
            }
        }
    }
</code></pre>
",0
IllegalArgumentException,Kotlin,alternative,66511427,"<p>The question is, what do you want to do if your variable is null? If you want to throw an exception, go with <code>require</code> or <code>check</code> as @hotkey suggested.</p>
<p>However I have the case where I just want to return if the value is null. So I wrote myself a little helper function that allows for this:</p>
<pre><code>private inline fun &lt;T&gt; T?.exitIfNull(exitBlock: () -&gt; Nothing): T {
    if (this == null)
        exitBlock()
    else
        return this
}
</code></pre>
<p>You can call this function as follows:</p>
<pre><code>val (a, b) = variable?.run {
    1 to 2
}.exitIfNull {
    return
}
</code></pre>
<p>A nice little use of the <code>Nothing</code> keyword in Kotlin that I personally find quite fascinating</p>
",0
IllegalArgumentException,Kotlin,alternative,77274546,"<p>This is currently not documented – or anyway I couldn't find any documentation – so it's surprisingly hard to find an answer but from what I observed/found:</p>
<ul>
<li><code>@Suppress(&quot;all&quot;)</code> is defined by Detekt: <a href=""https://detekt.dev/docs/introduction/suppressing-rules/"" rel=""nofollow noreferrer"">https://detekt.dev/docs/introduction/suppressing-rules/</a></li>
<li>The Kotlin compiler gives you an indication of the value you should use if you want to suppress a specific warning (e.g., <code>@Suppress(&quot;KotlinConstantConditions&quot;)</code>)</li>
<li>Apparently, <code>@Suppress(&quot;warnings&quot;)</code> disables all warnings, but couldn't find any documentation on this</li>
</ul>
",0
IllegalArgumentException,Kotlin,alternative,57320458,"<p>It's because kotlin Null-Safety is kick in when reading the following code:</p>

<pre><code>val lat: String = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>if you visit the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java"" rel=""noreferrer"">SharedPreferences</a> code, you can see the <a href=""https://android.googlesource.com/platform/frameworks/base/+/3e7d977/core/java/android/content/SharedPreferences.java#257"" rel=""noreferrer"">following code</a>:</p>

<pre><code>@Nullable
String getString(String key, @Nullable String defValue);
</code></pre>

<p>which is give us a probability to use null as <code>defValue</code> parameter. So, Kotlin try to guard it and give you the matching error:</p>

<blockquote>
  <p>""Type mismatch. Required String, found String?""</p>
</blockquote>

<p>You can fix the problem by enabling nullable for your String variable with:</p>

<pre><code>val lat: String? = sharedPref.getString(""MyKey"", ""Default"")
</code></pre>

<p>though this against <a href=""https://kotlinlang.org/docs/reference/null-safety.html"" rel=""noreferrer"">Kotlin type system purpose</a>:</p>

<blockquote>
  <p>Kotlin's type system is aimed at eliminating the danger of null references from code, also known as the The Billion Dollar Mistake.</p>
</blockquote>
",0
MBeanServer,Java,functionality,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",1
MBeanServer,Java,functionality,73164930,"<p>Add the following JVM Property to your server instance to get access to WebLogic's mbeans :</p>
<pre><code>-Djavax.management.builder.initial=weblogic.management.jmx.mbeanserver.WLSMBeanServerBuilder
</code></pre>
",0
MBeanServer,Java,functionality,72763030,"<p>According to the comment from @LMC, I made a sample project to get the size of HttpSession with JMX: <a href=""https://github.com/satob/SessionSize"" rel=""nofollow noreferrer"">https://github.com/satob/SessionSize</a></p>
<p>Note that because you cannot access <code>org.apache.catalina.session.ManagerBase</code> directly, this project uses <a href=""https://byteman.jboss.org/"" rel=""nofollow noreferrer"">ByteMan</a>. Store the <code>ManagerBase</code> object to a static field of the MBean <code>SessionMonitor</code> with Byteman like:</p>
<pre><code>RULE Set ManagerBase object to MBean
CLASS ^org.apache.catalina.session.ManagerBase
METHOD initInternal
AT EXIT
IF TRUE
DO
    traceln(&quot;SETTING SessionManager&quot;);
    com.example.sessionsize.SessionMonitor.setSessionManager($this);
ENDRULE
</code></pre>
<p>and use it in the JMX interface like:</p>
<pre class=""lang-java prettyprint-override""><code>package com.example.sessionsize;

import org.apache.catalina.Manager;
import org.apache.catalina.Session;

import net.sourceforge.sizeof.SizeOf;

public class SessionMonitor implements SessionMonitorMBean {

    private static Manager sessionManager = null;

    public static void setSessionManager(Manager manager) {
        sessionManager = manager;
    }

    @Override
    public long getMemoryConsumption() {
        if (sessionManager != null) {
            try {
                Session [] sessions = sessionManager.findSessions();
                return SizeOf.deepSizeOf(sessions);
            } catch(RuntimeException e) {
                // Falied to get size of HttpSession object
                e.printStackTrace();
                return -2;
            }
        } else {
            // SessionManager is not ready
            return -1;
        }
    }

    @Override
    public long getNumberOfActiveHttpSession() {
        return sessionManager.findSessions().length;
    }
}
</code></pre>
<p><a href=""https://i.sstatic.net/VCcue.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/VCcue.png"" alt=""enter image description here"" /></a></p>
",0
MBeanServer,Java,functionality,76075556,"<p>Studio 6.x does not support any other version of Java to startup than JDK 8. This is mentioned in the <a href=""https://docs.mulesoft.com/release-notes/studio/anypoint-studio-6.6-with-3.9.4-runtime-update-site-8-release-notes#software-requirements"" rel=""nofollow noreferrer"">release notes</a>. That page actually says it supports only the AdoptOpenJDK 8 distribution.</p>
<p>After Studio starts with JDK 8 it can execute Mule applications with Java 7 or Java 8, depending of the version of Mule runtime. All Mule versions that support Java 7 are EOL at this time.</p>
",0
MBeanServer,Java,functionality,77763064,"<p>Update your configuration code to this :</p>
<pre><code>@Configuration
@EnableJpaRepositories(basePackages = { &quot;com.myapp.dao&quot; }, transactionManagerRef = &quot;websphereTxManager&quot;)
@EnableTransactionManagement
public class WebSphereDBConfiguration {

    @Resource(lookup = &quot;jdbc/sample&quot;, name = &quot;java:comp/env/jdbc/sample&quot;)
    private DataSource dataSource;

    @Primary
    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean() {
        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean();
        entityManagerFactoryBean.setPackagesToScan(&quot;com.myapp.entity&quot;);
        entityManagerFactoryBean.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
        entityManagerFactoryBean.setDataSource(dataSource);
        entityManagerFactoryBean.setJpaPropertyMap(jpaProperties());
        return entityManagerFactoryBean;
    }

    @Bean
    public EntityManagerFactory entityManagerFactory(LocalContainerEntityManagerFactoryBean entityManagerFactoryBean) {
        return entityManagerFactoryBean.getObject();
    }

    @Bean
    public PlatformTransactionManager websphereTxManager(EntityManagerFactory entityManagerFactory) {
        JpaTransactionManager transactionManager = new JpaTransactionManager();
        transactionManager.setEntityManagerFactory(entityManagerFactory);
        return transactionManager;
    }


    protected Map&lt;String, Object&gt; jpaProperties() {
        Map&lt;String, Object&gt; props = new HashMap&lt;&gt;();
        props.put(&quot;hibernate.physical_naming_strategy&quot;, CamelCaseToUnderscoresNamingStrategy.class.getName());
        props.put(&quot;hibernate.implicit_naming_strategy&quot;, SpringImplicitNamingStrategy.class.getName());
        return props;
    }


}
</code></pre>
<p>Use the same code :</p>
<pre><code>@Async
@Transactional(transactionManager = &quot;websphereTxManager&quot;)
public void convertFile(String documentId) {
     
    CustomLog customLog = new CustomLog();
    customLog.setStatus(&quot;IN_PROGRESS&quot;);
    mySpringDataRepo.save(customLog);
    
    try {
      doConvertFunction(documentId);    
    } catch(Exception e) {
      customLog.setStatus(&quot;FAIL&quot;);
      mySpringDataRepo.save(customLog);
      return;
    }

    customLog.setStatus(&quot;SUCCESS&quot;);
    mySpringDataRepo.save(customLog);
       
}
</code></pre>
<p><strong>Few points to be noted:</strong></p>
<ol>
<li>Creating a bean of <code>LocalContainerEntityManagerFactoryBean</code>.</li>
<li>Creating a bean of <code>EntityManagerFactory</code> via injecting <code>LocalContainerEntityManagerFactoryBean</code> and getting the object via <code>LocalContainerEntityManagerFactoryBean.getObject()</code>. Also, make that bean as the primary bean for the whole application.</li>
<li>You will need to create a custom transaction manager. So, creating a <code>JpaTransactionManager</code> bean via injection and using the <code>EntityManagerFactory</code> bean.</li>
<li>You can see this annotation <code>@EnableTransactionManagement</code>. By use of this annotation, you will tell Spring to use this configuration class to manage your transaction instead of default one.</li>
<li>See this annotation <code>@EnableJpaRepositories</code>. By this annotation, you will tell Spring which packages to scan containing the <strong>JPA</strong> repositories and also tell which transaction manager to use via this property <code>transactionManagerRef</code> by default.</li>
<li>You have to configure datasource on the WebSphere (I guess you already did) and inject it via <code>@Resource</code> and set that datasource in the <code>LocalContainerEntityManagerFactoryBean</code> bean.</li>
</ol>
<p>See if this helps.</p>
",0
MBeanServer,Java,functionality,73418272,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",0
MBeanServer,Java,functionality,77222740,"<p>I don't think this is reasonably expected from Karate, it depends a lot on your environment and how you can set up the previous and current versions. Maybe a data-driven test where you loop over all versions is the way to go.</p>
<p>Consider this not directly supported by Karate, but I know teams that have written some routines over Karate to get this to work. We welcome contributions to Karate, it is open source.</p>
<p>Personally, I consider the returns you get from just testing schemas (which is what you seem to be doing) not really worth it: <a href=""https://www.linkedin.com/pulse/api-contract-testing-visual-guide-peter-thomas/"" rel=""nofollow noreferrer"">https://www.linkedin.com/pulse/api-contract-testing-visual-guide-peter-thomas/</a></p>
",0
MBeanServer,Java,functionality,77469743,"<p>I would recommend that you consider creating a Mule Module (ie a connector) using the <a href=""https://docs.mulesoft.com/mule-sdk/latest/getting-started"" rel=""nofollow noreferrer"">Mule Java SDK</a> instead of calling this code directly. The reason is that a Module or Connector hides its dependencies from the application and simplifies the calling from a flow with a simple operation.</p>
",0
MBeanServer,Java,functionality,74839409,"<p>I guess this comment is the key.</p>
<blockquote>
<p>When I used 2.7.2 instead of 3.0.0(SnapShot) which I originally used
it started working.</p>
</blockquote>
<p>Reading the <a href=""https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories"" rel=""noreferrer"">documentation</a> we realize the <code>Spring Boot JPA</code> module part of the <code>Spring Boot 3</code> release turned to work with <a href=""https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api"" rel=""noreferrer"">Jakarta Persistence API (JPA)</a> rather than with <code>javax.persistence.api</code>. Because of this even configuring properly the <code>Spring JPA</code> annotations like <code>@EntityScan</code> it does not find the entities.</p>
<p>When upgrading <code>Spring Boot</code> up to version 3, the <code>Persistence API</code> artifact must be also migrated.</p>
<p>For more context about this change, it's well explained in <a href=""https://stackoverflow.com/a/60024749/851951"">this</a> other SO thread.</p>
<p>Hope it helps anyone else!</p>
",0
MBeanServer,Java,functionality,72891078,"<p>You should configure Datadog Agent to do JMX fetching. Only then will you be able to export Connect worker and Connector Mbean metrics.</p>
<p><a href=""https://docs.datadoghq.com/integrations/java/?tabs=host"" rel=""nofollow noreferrer"">https://docs.datadoghq.com/integrations/java/?tabs=host</a></p>
",0
MBeanServer,Java,concept,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",1
MBeanServer,Java,concept,73164930,"<p>Add the following JVM Property to your server instance to get access to WebLogic's mbeans :</p>
<pre><code>-Djavax.management.builder.initial=weblogic.management.jmx.mbeanserver.WLSMBeanServerBuilder
</code></pre>
",1
MBeanServer,Java,concept,72763030,"<p>According to the comment from @LMC, I made a sample project to get the size of HttpSession with JMX: <a href=""https://github.com/satob/SessionSize"" rel=""nofollow noreferrer"">https://github.com/satob/SessionSize</a></p>
<p>Note that because you cannot access <code>org.apache.catalina.session.ManagerBase</code> directly, this project uses <a href=""https://byteman.jboss.org/"" rel=""nofollow noreferrer"">ByteMan</a>. Store the <code>ManagerBase</code> object to a static field of the MBean <code>SessionMonitor</code> with Byteman like:</p>
<pre><code>RULE Set ManagerBase object to MBean
CLASS ^org.apache.catalina.session.ManagerBase
METHOD initInternal
AT EXIT
IF TRUE
DO
    traceln(&quot;SETTING SessionManager&quot;);
    com.example.sessionsize.SessionMonitor.setSessionManager($this);
ENDRULE
</code></pre>
<p>and use it in the JMX interface like:</p>
<pre class=""lang-java prettyprint-override""><code>package com.example.sessionsize;

import org.apache.catalina.Manager;
import org.apache.catalina.Session;

import net.sourceforge.sizeof.SizeOf;

public class SessionMonitor implements SessionMonitorMBean {

    private static Manager sessionManager = null;

    public static void setSessionManager(Manager manager) {
        sessionManager = manager;
    }

    @Override
    public long getMemoryConsumption() {
        if (sessionManager != null) {
            try {
                Session [] sessions = sessionManager.findSessions();
                return SizeOf.deepSizeOf(sessions);
            } catch(RuntimeException e) {
                // Falied to get size of HttpSession object
                e.printStackTrace();
                return -2;
            }
        } else {
            // SessionManager is not ready
            return -1;
        }
    }

    @Override
    public long getNumberOfActiveHttpSession() {
        return sessionManager.findSessions().length;
    }
}
</code></pre>
<p><a href=""https://i.sstatic.net/VCcue.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/VCcue.png"" alt=""enter image description here"" /></a></p>
",0
MBeanServer,Java,concept,77763064,"<p>Update your configuration code to this :</p>
<pre><code>@Configuration
@EnableJpaRepositories(basePackages = { &quot;com.myapp.dao&quot; }, transactionManagerRef = &quot;websphereTxManager&quot;)
@EnableTransactionManagement
public class WebSphereDBConfiguration {

    @Resource(lookup = &quot;jdbc/sample&quot;, name = &quot;java:comp/env/jdbc/sample&quot;)
    private DataSource dataSource;

    @Primary
    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean() {
        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean();
        entityManagerFactoryBean.setPackagesToScan(&quot;com.myapp.entity&quot;);
        entityManagerFactoryBean.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
        entityManagerFactoryBean.setDataSource(dataSource);
        entityManagerFactoryBean.setJpaPropertyMap(jpaProperties());
        return entityManagerFactoryBean;
    }

    @Bean
    public EntityManagerFactory entityManagerFactory(LocalContainerEntityManagerFactoryBean entityManagerFactoryBean) {
        return entityManagerFactoryBean.getObject();
    }

    @Bean
    public PlatformTransactionManager websphereTxManager(EntityManagerFactory entityManagerFactory) {
        JpaTransactionManager transactionManager = new JpaTransactionManager();
        transactionManager.setEntityManagerFactory(entityManagerFactory);
        return transactionManager;
    }


    protected Map&lt;String, Object&gt; jpaProperties() {
        Map&lt;String, Object&gt; props = new HashMap&lt;&gt;();
        props.put(&quot;hibernate.physical_naming_strategy&quot;, CamelCaseToUnderscoresNamingStrategy.class.getName());
        props.put(&quot;hibernate.implicit_naming_strategy&quot;, SpringImplicitNamingStrategy.class.getName());
        return props;
    }


}
</code></pre>
<p>Use the same code :</p>
<pre><code>@Async
@Transactional(transactionManager = &quot;websphereTxManager&quot;)
public void convertFile(String documentId) {
     
    CustomLog customLog = new CustomLog();
    customLog.setStatus(&quot;IN_PROGRESS&quot;);
    mySpringDataRepo.save(customLog);
    
    try {
      doConvertFunction(documentId);    
    } catch(Exception e) {
      customLog.setStatus(&quot;FAIL&quot;);
      mySpringDataRepo.save(customLog);
      return;
    }

    customLog.setStatus(&quot;SUCCESS&quot;);
    mySpringDataRepo.save(customLog);
       
}
</code></pre>
<p><strong>Few points to be noted:</strong></p>
<ol>
<li>Creating a bean of <code>LocalContainerEntityManagerFactoryBean</code>.</li>
<li>Creating a bean of <code>EntityManagerFactory</code> via injecting <code>LocalContainerEntityManagerFactoryBean</code> and getting the object via <code>LocalContainerEntityManagerFactoryBean.getObject()</code>. Also, make that bean as the primary bean for the whole application.</li>
<li>You will need to create a custom transaction manager. So, creating a <code>JpaTransactionManager</code> bean via injection and using the <code>EntityManagerFactory</code> bean.</li>
<li>You can see this annotation <code>@EnableTransactionManagement</code>. By use of this annotation, you will tell Spring to use this configuration class to manage your transaction instead of default one.</li>
<li>See this annotation <code>@EnableJpaRepositories</code>. By this annotation, you will tell Spring which packages to scan containing the <strong>JPA</strong> repositories and also tell which transaction manager to use via this property <code>transactionManagerRef</code> by default.</li>
<li>You have to configure datasource on the WebSphere (I guess you already did) and inject it via <code>@Resource</code> and set that datasource in the <code>LocalContainerEntityManagerFactoryBean</code> bean.</li>
</ol>
<p>See if this helps.</p>
",0
MBeanServer,Java,concept,76075556,"<p>Studio 6.x does not support any other version of Java to startup than JDK 8. This is mentioned in the <a href=""https://docs.mulesoft.com/release-notes/studio/anypoint-studio-6.6-with-3.9.4-runtime-update-site-8-release-notes#software-requirements"" rel=""nofollow noreferrer"">release notes</a>. That page actually says it supports only the AdoptOpenJDK 8 distribution.</p>
<p>After Studio starts with JDK 8 it can execute Mule applications with Java 7 or Java 8, depending of the version of Mule runtime. All Mule versions that support Java 7 are EOL at this time.</p>
",0
MBeanServer,Java,concept,73418272,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",0
MBeanServer,Java,concept,74839409,"<p>I guess this comment is the key.</p>
<blockquote>
<p>When I used 2.7.2 instead of 3.0.0(SnapShot) which I originally used
it started working.</p>
</blockquote>
<p>Reading the <a href=""https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories"" rel=""noreferrer"">documentation</a> we realize the <code>Spring Boot JPA</code> module part of the <code>Spring Boot 3</code> release turned to work with <a href=""https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api"" rel=""noreferrer"">Jakarta Persistence API (JPA)</a> rather than with <code>javax.persistence.api</code>. Because of this even configuring properly the <code>Spring JPA</code> annotations like <code>@EntityScan</code> it does not find the entities.</p>
<p>When upgrading <code>Spring Boot</code> up to version 3, the <code>Persistence API</code> artifact must be also migrated.</p>
<p>For more context about this change, it's well explained in <a href=""https://stackoverflow.com/a/60024749/851951"">this</a> other SO thread.</p>
<p>Hope it helps anyone else!</p>
",0
MBeanServer,Java,concept,72891078,"<p>You should configure Datadog Agent to do JMX fetching. Only then will you be able to export Connect worker and Connector Mbean metrics.</p>
<p><a href=""https://docs.datadoghq.com/integrations/java/?tabs=host"" rel=""nofollow noreferrer"">https://docs.datadoghq.com/integrations/java/?tabs=host</a></p>
",0
MBeanServer,Java,concept,76984803,"<p>Java, by itself, does not load any libraries from any special location except for the basic library classes from the <em>rt.jar</em>. When you run a pure Java application, you need to give it the list of all directories and zip files to be searched for classes, as well as the name of the main class. This set of search locations is called the <em>classpath</em>.</p>
<p>Tools like Maven or Gradle simplify selecting and downloading of the libraries, but they also serve another important role: they tell you editor (VC, IntelliJ, Netbeans - whatever) - what should be on the classpath: which classes are available.</p>
<p>If you want to create a Spark application to compile by hand, you will need to:</p>
<ul>
<li>Download all the jars that Spark needs. This might mean not only Spark, but also the libraries that Spark itself needs.</li>
<li>Define your classpath, i.e., a full list of the paths to all the jars downloaded (NOT just the directory storing the jars, but rather the list of the jars within) and your code.</li>
<li>Find a setting in VC that allows you to set the classpath manually; I can't help you with this, but such a setting exists in IntelliJ, Eclipse, and Netbeans - so I guess it might also exist in VC.</li>
</ul>
<p>If I had to do it, I would create first a minimal, throwaway Maven project depending on Spark, without any code. In the root of the project I would then run:</p>
<pre><code>mvn dependency:copy-dependencies
</code></pre>
<p>This would download both Spark and everything else that is needed into the <code>target/dependencies</code> directory. I would copy it out and delete the no-longer-necessary project.</p>
<p>Then I would create a string listing all the jars in the dependency directory joined with <code>:</code>. Something like <code>dependencies/a.jar:dependencies/b.jar:dependencies/c.jar</code>... etc. This string would be quite long, and it would be exactly what needs to be put into the VC settings (presumably).</p>
<p>I could then also write a Java class and compile it by writing something like:</p>
<pre><code>javac -cp dependencies/a.jar:dependencies/b.jar:...:depenendencies/z.jar MyClassToCompile.java
</code></pre>
<p>And run it by:</p>
<pre><code>java -cp dependencies/a.jar:dependencies/b.jar:...:depenendencies/z.jar MyClassToCompile
</code></pre>
<p>Note that the examples above assume that <code>MyClassToCompile</code> is in the default package (otherwise you'd need to append the directories forming the package in the first line and the full qualified name of the class - in the second line).</p>
",0
MBeanServer,Java,concept,77780912,"<p>Note that I'am not used to websphere nor to recent version of jakartaEE</p>
<p>Just some general considerations :</p>
<ul>
<li>@Async methods defer the process to another thread.</li>
<li>Transaction propagation rely on a threadLocal context and so the current transaction / entityManager instance is probably not reachable from your @Async method thread.</li>
<li>All of this is very probably dependent on provider implementation. Maybe you could have better result using Container Managed transaction Manager provided by the Websphere server itself.</li>
<li>Generally speaking using both a jakartaEE server and Spring might lead to additional complexity as their scope often overlap (You can use either Spring or JakartaEE containers in many cases: JPA, DI, Security, etc and problems will emerge if you mix features from both)</li>
<li>Regarding your workaround, instantiating an new EntityManager instance for each method is not necessarily shocking, particularly if the method is directly invoked through a dedicated http request (see <a href=""https://stackoverflow.com/a/22773758/2087640"">https://stackoverflow.com/a/22773758/2087640</a>)</li>
</ul>
",0
MBeanServer,Java,performance,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",0
MBeanServer,Java,performance,73164930,"<p>Add the following JVM Property to your server instance to get access to WebLogic's mbeans :</p>
<pre><code>-Djavax.management.builder.initial=weblogic.management.jmx.mbeanserver.WLSMBeanServerBuilder
</code></pre>
",0
MBeanServer,Java,performance,72763030,"<p>According to the comment from @LMC, I made a sample project to get the size of HttpSession with JMX: <a href=""https://github.com/satob/SessionSize"" rel=""nofollow noreferrer"">https://github.com/satob/SessionSize</a></p>
<p>Note that because you cannot access <code>org.apache.catalina.session.ManagerBase</code> directly, this project uses <a href=""https://byteman.jboss.org/"" rel=""nofollow noreferrer"">ByteMan</a>. Store the <code>ManagerBase</code> object to a static field of the MBean <code>SessionMonitor</code> with Byteman like:</p>
<pre><code>RULE Set ManagerBase object to MBean
CLASS ^org.apache.catalina.session.ManagerBase
METHOD initInternal
AT EXIT
IF TRUE
DO
    traceln(&quot;SETTING SessionManager&quot;);
    com.example.sessionsize.SessionMonitor.setSessionManager($this);
ENDRULE
</code></pre>
<p>and use it in the JMX interface like:</p>
<pre class=""lang-java prettyprint-override""><code>package com.example.sessionsize;

import org.apache.catalina.Manager;
import org.apache.catalina.Session;

import net.sourceforge.sizeof.SizeOf;

public class SessionMonitor implements SessionMonitorMBean {

    private static Manager sessionManager = null;

    public static void setSessionManager(Manager manager) {
        sessionManager = manager;
    }

    @Override
    public long getMemoryConsumption() {
        if (sessionManager != null) {
            try {
                Session [] sessions = sessionManager.findSessions();
                return SizeOf.deepSizeOf(sessions);
            } catch(RuntimeException e) {
                // Falied to get size of HttpSession object
                e.printStackTrace();
                return -2;
            }
        } else {
            // SessionManager is not ready
            return -1;
        }
    }

    @Override
    public long getNumberOfActiveHttpSession() {
        return sessionManager.findSessions().length;
    }
}
</code></pre>
<p><a href=""https://i.sstatic.net/VCcue.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/VCcue.png"" alt=""enter image description here"" /></a></p>
",0
MBeanServer,Java,performance,76075556,"<p>Studio 6.x does not support any other version of Java to startup than JDK 8. This is mentioned in the <a href=""https://docs.mulesoft.com/release-notes/studio/anypoint-studio-6.6-with-3.9.4-runtime-update-site-8-release-notes#software-requirements"" rel=""nofollow noreferrer"">release notes</a>. That page actually says it supports only the AdoptOpenJDK 8 distribution.</p>
<p>After Studio starts with JDK 8 it can execute Mule applications with Java 7 or Java 8, depending of the version of Mule runtime. All Mule versions that support Java 7 are EOL at this time.</p>
",0
MBeanServer,Java,performance,77763064,"<p>Update your configuration code to this :</p>
<pre><code>@Configuration
@EnableJpaRepositories(basePackages = { &quot;com.myapp.dao&quot; }, transactionManagerRef = &quot;websphereTxManager&quot;)
@EnableTransactionManagement
public class WebSphereDBConfiguration {

    @Resource(lookup = &quot;jdbc/sample&quot;, name = &quot;java:comp/env/jdbc/sample&quot;)
    private DataSource dataSource;

    @Primary
    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean() {
        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean();
        entityManagerFactoryBean.setPackagesToScan(&quot;com.myapp.entity&quot;);
        entityManagerFactoryBean.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
        entityManagerFactoryBean.setDataSource(dataSource);
        entityManagerFactoryBean.setJpaPropertyMap(jpaProperties());
        return entityManagerFactoryBean;
    }

    @Bean
    public EntityManagerFactory entityManagerFactory(LocalContainerEntityManagerFactoryBean entityManagerFactoryBean) {
        return entityManagerFactoryBean.getObject();
    }

    @Bean
    public PlatformTransactionManager websphereTxManager(EntityManagerFactory entityManagerFactory) {
        JpaTransactionManager transactionManager = new JpaTransactionManager();
        transactionManager.setEntityManagerFactory(entityManagerFactory);
        return transactionManager;
    }


    protected Map&lt;String, Object&gt; jpaProperties() {
        Map&lt;String, Object&gt; props = new HashMap&lt;&gt;();
        props.put(&quot;hibernate.physical_naming_strategy&quot;, CamelCaseToUnderscoresNamingStrategy.class.getName());
        props.put(&quot;hibernate.implicit_naming_strategy&quot;, SpringImplicitNamingStrategy.class.getName());
        return props;
    }


}
</code></pre>
<p>Use the same code :</p>
<pre><code>@Async
@Transactional(transactionManager = &quot;websphereTxManager&quot;)
public void convertFile(String documentId) {
     
    CustomLog customLog = new CustomLog();
    customLog.setStatus(&quot;IN_PROGRESS&quot;);
    mySpringDataRepo.save(customLog);
    
    try {
      doConvertFunction(documentId);    
    } catch(Exception e) {
      customLog.setStatus(&quot;FAIL&quot;);
      mySpringDataRepo.save(customLog);
      return;
    }

    customLog.setStatus(&quot;SUCCESS&quot;);
    mySpringDataRepo.save(customLog);
       
}
</code></pre>
<p><strong>Few points to be noted:</strong></p>
<ol>
<li>Creating a bean of <code>LocalContainerEntityManagerFactoryBean</code>.</li>
<li>Creating a bean of <code>EntityManagerFactory</code> via injecting <code>LocalContainerEntityManagerFactoryBean</code> and getting the object via <code>LocalContainerEntityManagerFactoryBean.getObject()</code>. Also, make that bean as the primary bean for the whole application.</li>
<li>You will need to create a custom transaction manager. So, creating a <code>JpaTransactionManager</code> bean via injection and using the <code>EntityManagerFactory</code> bean.</li>
<li>You can see this annotation <code>@EnableTransactionManagement</code>. By use of this annotation, you will tell Spring to use this configuration class to manage your transaction instead of default one.</li>
<li>See this annotation <code>@EnableJpaRepositories</code>. By this annotation, you will tell Spring which packages to scan containing the <strong>JPA</strong> repositories and also tell which transaction manager to use via this property <code>transactionManagerRef</code> by default.</li>
<li>You have to configure datasource on the WebSphere (I guess you already did) and inject it via <code>@Resource</code> and set that datasource in the <code>LocalContainerEntityManagerFactoryBean</code> bean.</li>
</ol>
<p>See if this helps.</p>
",0
MBeanServer,Java,performance,77222740,"<p>I don't think this is reasonably expected from Karate, it depends a lot on your environment and how you can set up the previous and current versions. Maybe a data-driven test where you loop over all versions is the way to go.</p>
<p>Consider this not directly supported by Karate, but I know teams that have written some routines over Karate to get this to work. We welcome contributions to Karate, it is open source.</p>
<p>Personally, I consider the returns you get from just testing schemas (which is what you seem to be doing) not really worth it: <a href=""https://www.linkedin.com/pulse/api-contract-testing-visual-guide-peter-thomas/"" rel=""nofollow noreferrer"">https://www.linkedin.com/pulse/api-contract-testing-visual-guide-peter-thomas/</a></p>
",0
MBeanServer,Java,performance,72996735,"<p>JProfiler reports the values returned by the MBean <code>com.sun.management.OperatingSystemMXBean</code>.</p>
<p>A value of 100% means that all CPUs were actively running threads from the JVM 100% of the time during the recent period being observed. Threads from the JVM include the application threads as well as the JVM internal threads.</p>
<p>In the screen shot, it looks like the JVM has detected 16 cores, one of which is fully used by the JVM. The variations in the system load can be due to multiple factors. If you are running the JProfiler GUI on the same machine, it is one of those factors.</p>
",0
MBeanServer,Java,performance,73418272,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",0
MBeanServer,Java,performance,72891078,"<p>You should configure Datadog Agent to do JMX fetching. Only then will you be able to export Connect worker and Connector Mbean metrics.</p>
<p><a href=""https://docs.datadoghq.com/integrations/java/?tabs=host"" rel=""nofollow noreferrer"">https://docs.datadoghq.com/integrations/java/?tabs=host</a></p>
",0
MBeanServer,Java,performance,76145354,"<p>To generate Jakarta Swagger-UI compatible JSON from source code using Maven, you can use the Swagger Maven plugin. Here are the steps:</p>
<ol>
<li><p>Add the Swagger Maven plugin to your pom.xml file:</p>
  
   
     
       io.swagger.core.v3
       swagger-maven-plugin
       2.1.7
       
         
           compile
           
             generate
           
         
       
       
         openapi
         ${project.build.directory}
         JSON
         true
         
           com.example.api
         
       
     
   
 
</li>
<li><p>Modify the resourcePackages value to point to your API's package.</p>
</li>
<li><p>Run the Maven compile goal to generate the JSON file:</p>
<p>mvn compile</p>
</li>
<li><p>The generated JSON file will be located in the target directory, with the name openapi.json</p>
</li>
</ol>
<p>With these steps, you should now have a Jakarta Swagger-UI compatible JSON file generated from your source code using Maven.</p>
",0
MBeanServer,Java,directive,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",1
MBeanServer,Java,directive,73164930,"<p>Add the following JVM Property to your server instance to get access to WebLogic's mbeans :</p>
<pre><code>-Djavax.management.builder.initial=weblogic.management.jmx.mbeanserver.WLSMBeanServerBuilder
</code></pre>
",0
MBeanServer,Java,directive,72763030,"<p>According to the comment from @LMC, I made a sample project to get the size of HttpSession with JMX: <a href=""https://github.com/satob/SessionSize"" rel=""nofollow noreferrer"">https://github.com/satob/SessionSize</a></p>
<p>Note that because you cannot access <code>org.apache.catalina.session.ManagerBase</code> directly, this project uses <a href=""https://byteman.jboss.org/"" rel=""nofollow noreferrer"">ByteMan</a>. Store the <code>ManagerBase</code> object to a static field of the MBean <code>SessionMonitor</code> with Byteman like:</p>
<pre><code>RULE Set ManagerBase object to MBean
CLASS ^org.apache.catalina.session.ManagerBase
METHOD initInternal
AT EXIT
IF TRUE
DO
    traceln(&quot;SETTING SessionManager&quot;);
    com.example.sessionsize.SessionMonitor.setSessionManager($this);
ENDRULE
</code></pre>
<p>and use it in the JMX interface like:</p>
<pre class=""lang-java prettyprint-override""><code>package com.example.sessionsize;

import org.apache.catalina.Manager;
import org.apache.catalina.Session;

import net.sourceforge.sizeof.SizeOf;

public class SessionMonitor implements SessionMonitorMBean {

    private static Manager sessionManager = null;

    public static void setSessionManager(Manager manager) {
        sessionManager = manager;
    }

    @Override
    public long getMemoryConsumption() {
        if (sessionManager != null) {
            try {
                Session [] sessions = sessionManager.findSessions();
                return SizeOf.deepSizeOf(sessions);
            } catch(RuntimeException e) {
                // Falied to get size of HttpSession object
                e.printStackTrace();
                return -2;
            }
        } else {
            // SessionManager is not ready
            return -1;
        }
    }

    @Override
    public long getNumberOfActiveHttpSession() {
        return sessionManager.findSessions().length;
    }
}
</code></pre>
<p><a href=""https://i.sstatic.net/VCcue.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/VCcue.png"" alt=""enter image description here"" /></a></p>
",0
MBeanServer,Java,directive,77763064,"<p>Update your configuration code to this :</p>
<pre><code>@Configuration
@EnableJpaRepositories(basePackages = { &quot;com.myapp.dao&quot; }, transactionManagerRef = &quot;websphereTxManager&quot;)
@EnableTransactionManagement
public class WebSphereDBConfiguration {

    @Resource(lookup = &quot;jdbc/sample&quot;, name = &quot;java:comp/env/jdbc/sample&quot;)
    private DataSource dataSource;

    @Primary
    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean() {
        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean();
        entityManagerFactoryBean.setPackagesToScan(&quot;com.myapp.entity&quot;);
        entityManagerFactoryBean.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
        entityManagerFactoryBean.setDataSource(dataSource);
        entityManagerFactoryBean.setJpaPropertyMap(jpaProperties());
        return entityManagerFactoryBean;
    }

    @Bean
    public EntityManagerFactory entityManagerFactory(LocalContainerEntityManagerFactoryBean entityManagerFactoryBean) {
        return entityManagerFactoryBean.getObject();
    }

    @Bean
    public PlatformTransactionManager websphereTxManager(EntityManagerFactory entityManagerFactory) {
        JpaTransactionManager transactionManager = new JpaTransactionManager();
        transactionManager.setEntityManagerFactory(entityManagerFactory);
        return transactionManager;
    }


    protected Map&lt;String, Object&gt; jpaProperties() {
        Map&lt;String, Object&gt; props = new HashMap&lt;&gt;();
        props.put(&quot;hibernate.physical_naming_strategy&quot;, CamelCaseToUnderscoresNamingStrategy.class.getName());
        props.put(&quot;hibernate.implicit_naming_strategy&quot;, SpringImplicitNamingStrategy.class.getName());
        return props;
    }


}
</code></pre>
<p>Use the same code :</p>
<pre><code>@Async
@Transactional(transactionManager = &quot;websphereTxManager&quot;)
public void convertFile(String documentId) {
     
    CustomLog customLog = new CustomLog();
    customLog.setStatus(&quot;IN_PROGRESS&quot;);
    mySpringDataRepo.save(customLog);
    
    try {
      doConvertFunction(documentId);    
    } catch(Exception e) {
      customLog.setStatus(&quot;FAIL&quot;);
      mySpringDataRepo.save(customLog);
      return;
    }

    customLog.setStatus(&quot;SUCCESS&quot;);
    mySpringDataRepo.save(customLog);
       
}
</code></pre>
<p><strong>Few points to be noted:</strong></p>
<ol>
<li>Creating a bean of <code>LocalContainerEntityManagerFactoryBean</code>.</li>
<li>Creating a bean of <code>EntityManagerFactory</code> via injecting <code>LocalContainerEntityManagerFactoryBean</code> and getting the object via <code>LocalContainerEntityManagerFactoryBean.getObject()</code>. Also, make that bean as the primary bean for the whole application.</li>
<li>You will need to create a custom transaction manager. So, creating a <code>JpaTransactionManager</code> bean via injection and using the <code>EntityManagerFactory</code> bean.</li>
<li>You can see this annotation <code>@EnableTransactionManagement</code>. By use of this annotation, you will tell Spring to use this configuration class to manage your transaction instead of default one.</li>
<li>See this annotation <code>@EnableJpaRepositories</code>. By this annotation, you will tell Spring which packages to scan containing the <strong>JPA</strong> repositories and also tell which transaction manager to use via this property <code>transactionManagerRef</code> by default.</li>
<li>You have to configure datasource on the WebSphere (I guess you already did) and inject it via <code>@Resource</code> and set that datasource in the <code>LocalContainerEntityManagerFactoryBean</code> bean.</li>
</ol>
<p>See if this helps.</p>
",0
MBeanServer,Java,directive,78371072,"<p>You can configure your <code>RelyingPartyRegistrationRepository</code> as follows to read your keystore file :</p>
<pre><code>@Bean
public RelyingPartyRegistrationRepository relyingPartyRegistrations() throws Exception {

    //Here I read a jks file but you can replace the default type with &quot;PKCS12&quot; for example
    KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());
    char[] pwd = keyStorePassword.toCharArray();
    Resource keystoreRes = new ClassPathResource(keyStoreLocation);
    ks.load(keystoreRes.getInputStream(), pwd);

    //Fetch the private key contained in the jks file
    PrivateKey privateRSAKey = (PrivateKey) ks.getKey(keyStoreAlias, keyStorePassword.toCharArray());

    //Fetch the cerrtificate contained in the jks file
    X509Certificate cert = (X509Certificate) ks.getCertificate(keyStoreAlias);

    //Give your certificate to spring relying party bean
    RelyingPartyRegistration registration = RelyingPartyRegistrations
        .fromMetadataLocation(assertingPartyMetadataLocation)
        .registrationId(&quot;example&quot;)
        .signingX509Credentials((c) -&gt; c.add(Saml2X509Credential.signing(privateRSAKey, cert)))
        .decryptionX509Credentials((c) -&gt; c.add(Saml2X509Credential.decryption(privateRSAKey, cert)))
        .build();
    return new InMemoryRelyingPartyRegistrationRepository(registration);
  }
</code></pre>
<p>I didn't find any documentation on spring to do that either.
This piece of code works to read your keystore file however it is not enough alone to make saml work with spring security 6. I suggest you refer to this documentation to implement your filters and the security filter chain that goes with this <code>RelyingPartyRegistrationRepository</code> bean : <a href=""https://docs.spring.io/spring-security/reference/servlet/saml2/login/overview.html"" rel=""nofollow noreferrer"">SAML 2.0 Login Overview</a></p>
",0
MBeanServer,Java,directive,74839409,"<p>I guess this comment is the key.</p>
<blockquote>
<p>When I used 2.7.2 instead of 3.0.0(SnapShot) which I originally used
it started working.</p>
</blockquote>
<p>Reading the <a href=""https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories"" rel=""noreferrer"">documentation</a> we realize the <code>Spring Boot JPA</code> module part of the <code>Spring Boot 3</code> release turned to work with <a href=""https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api"" rel=""noreferrer"">Jakarta Persistence API (JPA)</a> rather than with <code>javax.persistence.api</code>. Because of this even configuring properly the <code>Spring JPA</code> annotations like <code>@EntityScan</code> it does not find the entities.</p>
<p>When upgrading <code>Spring Boot</code> up to version 3, the <code>Persistence API</code> artifact must be also migrated.</p>
<p>For more context about this change, it's well explained in <a href=""https://stackoverflow.com/a/60024749/851951"">this</a> other SO thread.</p>
<p>Hope it helps anyone else!</p>
",0
MBeanServer,Java,directive,76075556,"<p>Studio 6.x does not support any other version of Java to startup than JDK 8. This is mentioned in the <a href=""https://docs.mulesoft.com/release-notes/studio/anypoint-studio-6.6-with-3.9.4-runtime-update-site-8-release-notes#software-requirements"" rel=""nofollow noreferrer"">release notes</a>. That page actually says it supports only the AdoptOpenJDK 8 distribution.</p>
<p>After Studio starts with JDK 8 it can execute Mule applications with Java 7 or Java 8, depending of the version of Mule runtime. All Mule versions that support Java 7 are EOL at this time.</p>
",0
MBeanServer,Java,directive,73418272,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",0
MBeanServer,Java,directive,77222740,"<p>I don't think this is reasonably expected from Karate, it depends a lot on your environment and how you can set up the previous and current versions. Maybe a data-driven test where you loop over all versions is the way to go.</p>
<p>Consider this not directly supported by Karate, but I know teams that have written some routines over Karate to get this to work. We welcome contributions to Karate, it is open source.</p>
<p>Personally, I consider the returns you get from just testing schemas (which is what you seem to be doing) not really worth it: <a href=""https://www.linkedin.com/pulse/api-contract-testing-visual-guide-peter-thomas/"" rel=""nofollow noreferrer"">https://www.linkedin.com/pulse/api-contract-testing-visual-guide-peter-thomas/</a></p>
",0
MBeanServer,Java,directive,72891078,"<p>You should configure Datadog Agent to do JMX fetching. Only then will you be able to export Connect worker and Connector Mbean metrics.</p>
<p><a href=""https://docs.datadoghq.com/integrations/java/?tabs=host"" rel=""nofollow noreferrer"">https://docs.datadoghq.com/integrations/java/?tabs=host</a></p>
",0
MBeanServer,Java,pattern,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",1
MBeanServer,Java,pattern,73164930,"<p>Add the following JVM Property to your server instance to get access to WebLogic's mbeans :</p>
<pre><code>-Djavax.management.builder.initial=weblogic.management.jmx.mbeanserver.WLSMBeanServerBuilder
</code></pre>
",0
MBeanServer,Java,pattern,72763030,"<p>According to the comment from @LMC, I made a sample project to get the size of HttpSession with JMX: <a href=""https://github.com/satob/SessionSize"" rel=""nofollow noreferrer"">https://github.com/satob/SessionSize</a></p>
<p>Note that because you cannot access <code>org.apache.catalina.session.ManagerBase</code> directly, this project uses <a href=""https://byteman.jboss.org/"" rel=""nofollow noreferrer"">ByteMan</a>. Store the <code>ManagerBase</code> object to a static field of the MBean <code>SessionMonitor</code> with Byteman like:</p>
<pre><code>RULE Set ManagerBase object to MBean
CLASS ^org.apache.catalina.session.ManagerBase
METHOD initInternal
AT EXIT
IF TRUE
DO
    traceln(&quot;SETTING SessionManager&quot;);
    com.example.sessionsize.SessionMonitor.setSessionManager($this);
ENDRULE
</code></pre>
<p>and use it in the JMX interface like:</p>
<pre class=""lang-java prettyprint-override""><code>package com.example.sessionsize;

import org.apache.catalina.Manager;
import org.apache.catalina.Session;

import net.sourceforge.sizeof.SizeOf;

public class SessionMonitor implements SessionMonitorMBean {

    private static Manager sessionManager = null;

    public static void setSessionManager(Manager manager) {
        sessionManager = manager;
    }

    @Override
    public long getMemoryConsumption() {
        if (sessionManager != null) {
            try {
                Session [] sessions = sessionManager.findSessions();
                return SizeOf.deepSizeOf(sessions);
            } catch(RuntimeException e) {
                // Falied to get size of HttpSession object
                e.printStackTrace();
                return -2;
            }
        } else {
            // SessionManager is not ready
            return -1;
        }
    }

    @Override
    public long getNumberOfActiveHttpSession() {
        return sessionManager.findSessions().length;
    }
}
</code></pre>
<p><a href=""https://i.sstatic.net/VCcue.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/VCcue.png"" alt=""enter image description here"" /></a></p>
",0
MBeanServer,Java,pattern,76075556,"<p>Studio 6.x does not support any other version of Java to startup than JDK 8. This is mentioned in the <a href=""https://docs.mulesoft.com/release-notes/studio/anypoint-studio-6.6-with-3.9.4-runtime-update-site-8-release-notes#software-requirements"" rel=""nofollow noreferrer"">release notes</a>. That page actually says it supports only the AdoptOpenJDK 8 distribution.</p>
<p>After Studio starts with JDK 8 it can execute Mule applications with Java 7 or Java 8, depending of the version of Mule runtime. All Mule versions that support Java 7 are EOL at this time.</p>
",0
MBeanServer,Java,pattern,77763064,"<p>Update your configuration code to this :</p>
<pre><code>@Configuration
@EnableJpaRepositories(basePackages = { &quot;com.myapp.dao&quot; }, transactionManagerRef = &quot;websphereTxManager&quot;)
@EnableTransactionManagement
public class WebSphereDBConfiguration {

    @Resource(lookup = &quot;jdbc/sample&quot;, name = &quot;java:comp/env/jdbc/sample&quot;)
    private DataSource dataSource;

    @Primary
    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean() {
        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean();
        entityManagerFactoryBean.setPackagesToScan(&quot;com.myapp.entity&quot;);
        entityManagerFactoryBean.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
        entityManagerFactoryBean.setDataSource(dataSource);
        entityManagerFactoryBean.setJpaPropertyMap(jpaProperties());
        return entityManagerFactoryBean;
    }

    @Bean
    public EntityManagerFactory entityManagerFactory(LocalContainerEntityManagerFactoryBean entityManagerFactoryBean) {
        return entityManagerFactoryBean.getObject();
    }

    @Bean
    public PlatformTransactionManager websphereTxManager(EntityManagerFactory entityManagerFactory) {
        JpaTransactionManager transactionManager = new JpaTransactionManager();
        transactionManager.setEntityManagerFactory(entityManagerFactory);
        return transactionManager;
    }


    protected Map&lt;String, Object&gt; jpaProperties() {
        Map&lt;String, Object&gt; props = new HashMap&lt;&gt;();
        props.put(&quot;hibernate.physical_naming_strategy&quot;, CamelCaseToUnderscoresNamingStrategy.class.getName());
        props.put(&quot;hibernate.implicit_naming_strategy&quot;, SpringImplicitNamingStrategy.class.getName());
        return props;
    }


}
</code></pre>
<p>Use the same code :</p>
<pre><code>@Async
@Transactional(transactionManager = &quot;websphereTxManager&quot;)
public void convertFile(String documentId) {
     
    CustomLog customLog = new CustomLog();
    customLog.setStatus(&quot;IN_PROGRESS&quot;);
    mySpringDataRepo.save(customLog);
    
    try {
      doConvertFunction(documentId);    
    } catch(Exception e) {
      customLog.setStatus(&quot;FAIL&quot;);
      mySpringDataRepo.save(customLog);
      return;
    }

    customLog.setStatus(&quot;SUCCESS&quot;);
    mySpringDataRepo.save(customLog);
       
}
</code></pre>
<p><strong>Few points to be noted:</strong></p>
<ol>
<li>Creating a bean of <code>LocalContainerEntityManagerFactoryBean</code>.</li>
<li>Creating a bean of <code>EntityManagerFactory</code> via injecting <code>LocalContainerEntityManagerFactoryBean</code> and getting the object via <code>LocalContainerEntityManagerFactoryBean.getObject()</code>. Also, make that bean as the primary bean for the whole application.</li>
<li>You will need to create a custom transaction manager. So, creating a <code>JpaTransactionManager</code> bean via injection and using the <code>EntityManagerFactory</code> bean.</li>
<li>You can see this annotation <code>@EnableTransactionManagement</code>. By use of this annotation, you will tell Spring to use this configuration class to manage your transaction instead of default one.</li>
<li>See this annotation <code>@EnableJpaRepositories</code>. By this annotation, you will tell Spring which packages to scan containing the <strong>JPA</strong> repositories and also tell which transaction manager to use via this property <code>transactionManagerRef</code> by default.</li>
<li>You have to configure datasource on the WebSphere (I guess you already did) and inject it via <code>@Resource</code> and set that datasource in the <code>LocalContainerEntityManagerFactoryBean</code> bean.</li>
</ol>
<p>See if this helps.</p>
",0
MBeanServer,Java,pattern,73418272,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",0
MBeanServer,Java,pattern,74839409,"<p>I guess this comment is the key.</p>
<blockquote>
<p>When I used 2.7.2 instead of 3.0.0(SnapShot) which I originally used
it started working.</p>
</blockquote>
<p>Reading the <a href=""https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories"" rel=""noreferrer"">documentation</a> we realize the <code>Spring Boot JPA</code> module part of the <code>Spring Boot 3</code> release turned to work with <a href=""https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api"" rel=""noreferrer"">Jakarta Persistence API (JPA)</a> rather than with <code>javax.persistence.api</code>. Because of this even configuring properly the <code>Spring JPA</code> annotations like <code>@EntityScan</code> it does not find the entities.</p>
<p>When upgrading <code>Spring Boot</code> up to version 3, the <code>Persistence API</code> artifact must be also migrated.</p>
<p>For more context about this change, it's well explained in <a href=""https://stackoverflow.com/a/60024749/851951"">this</a> other SO thread.</p>
<p>Hope it helps anyone else!</p>
",0
MBeanServer,Java,pattern,72891078,"<p>You should configure Datadog Agent to do JMX fetching. Only then will you be able to export Connect worker and Connector Mbean metrics.</p>
<p><a href=""https://docs.datadoghq.com/integrations/java/?tabs=host"" rel=""nofollow noreferrer"">https://docs.datadoghq.com/integrations/java/?tabs=host</a></p>
",0
MBeanServer,Java,pattern,77222740,"<p>I don't think this is reasonably expected from Karate, it depends a lot on your environment and how you can set up the previous and current versions. Maybe a data-driven test where you loop over all versions is the way to go.</p>
<p>Consider this not directly supported by Karate, but I know teams that have written some routines over Karate to get this to work. We welcome contributions to Karate, it is open source.</p>
<p>Personally, I consider the returns you get from just testing schemas (which is what you seem to be doing) not really worth it: <a href=""https://www.linkedin.com/pulse/api-contract-testing-visual-guide-peter-thomas/"" rel=""nofollow noreferrer"">https://www.linkedin.com/pulse/api-contract-testing-visual-guide-peter-thomas/</a></p>
",0
MBeanServer,Java,pattern,75332633,"<p>Experienced the same exact problem you had too.</p>
<p><b>Networking operations, like transport.connect(), have to be ran in Threads too</b>! Making a network request on the main thread will cause the thread to wait, or block. Thus, the problem to your solution would be to extend the AmazonSESSample class to the Thread class.</p>
<p><b>Step 1)</b> I am assuming that you have <b>followed the steps provided on Amazon's AWS documentation to send emails programmatically through Amazon SES SMTP interface</b>. If not here is the link to it: <a href=""https://docs.aws.amazon.com/ses/latest/dg/send-using-smtp-programmatically.html"" rel=""nofollow noreferrer"">here</a>.</p>
<p><b>Step 2)</b> Download and import the following jar files if you have yet to do so:</p>
<blockquote>
<p><a href=""https://drive.google.com/drive/folders/1q5n2ROQvlmvkW7DAWyhGxzceRustouhK?usp=sharing"" rel=""nofollow noreferrer"">https://drive.google.com/drive/folders/1q5n2ROQvlmvkW7DAWyhGxzceRustouhK?usp=sharing</a></p>
</blockquote>
<p><b>Step 3)</b> Add the following implementations to your build.gradle file:</p>
<pre><code>dependencies{
implementation files('libs\\javax.mail.jar')
implementation files('libs\\javax.activation.jar')
implementation files('libs\\javax.additionnal.jar')
}
</code></pre>
<p><b>Step 4)</b> Instead of following the code they provided, this is the modified version that worked:</p>
<pre><code>import android.os.Build;

import androidx.annotation.RequiresApi;

import java.io.UnsupportedEncodingException;
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.NoSuchProviderException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

@RequiresApi(api = Build.VERSION_CODES.O)
public class AmazonSESSample extends Thread{

    // Replace sender@example.com with your &quot;From&quot; address.
    // This address must be verified.
    static final String FROM = &quot;sender@example.com&quot;;
    static final String FROMNAME = &quot;Sender Name&quot;;
    
    // Replace recipient@example.com with a &quot;To&quot; address. If your account 
    // is still in the sandbox, this address must be verified.
    static final String TO = &quot;recipient@example.com&quot;;
    
    // Replace smtp_username with your Amazon SES SMTP user name.
    static final String SMTP_USERNAME = &quot;smtp_username&quot;;
    
    // Replace smtp_password with your Amazon SES SMTP password.
    static final String SMTP_PASSWORD = &quot;smtp_password&quot;;
    
    // The name of the Configuration Set to use for this message.
    // If you comment out or remove this variable, you will also need to
    // comment out or remove the header below.
    static final String CONFIGSET = &quot;ConfigSet&quot;;
    
    // Amazon SES SMTP host name. This example uses the US West (Oregon) region.
    // See https://docs.aws.amazon.com/ses/latest/DeveloperGuide/regions.html#region-endpoints
    // for more information.
    static final String HOST = &quot;email-smtp.us-west-2.amazonaws.com&quot;;
    
    // The port you will connect to on the Amazon SES SMTP endpoint. 
    static final int PORT = 587;
    
    static final String SUBJECT = &quot;Amazon SES test (SMTP interface accessed using Java)&quot;;
    
    static final String BODY = String.join(
            System.getProperty(&quot;line.separator&quot;),
            &quot;&lt;h1&gt;Amazon SES SMTP Email Test&lt;/h1&gt;&quot;,
            &quot;&lt;p&gt;This email was sent with Amazon SES using the &quot;, 
            &quot;&lt;a href='https://github.com/javaee/javamail'&gt;Javamail Package&lt;/a&gt;&quot;,
            &quot; for &lt;a href='https://www.java.com'&gt;Java&lt;/a&gt;.&quot;
        );

    public void run() {

        // Create a Properties object to contain connection configuration information.
        Properties props = System.getProperties();
        props.put(&quot;mail.transport.protocol&quot;, &quot;smtp&quot;);
        props.put(&quot;mail.smtp.port&quot;, PORT); 
        props.put(&quot;mail.smtp.starttls.enable&quot;, &quot;true&quot;);
        props.put(&quot;mail.smtp.auth&quot;, &quot;true&quot;);

        // Create a Session object to represent a mail session with the specified properties. 
        Session session = Session.getDefaultInstance(props);

        // Create a message with the specified information. 
        MimeMessage msg = new MimeMessage(session);
        msg.setFrom(new InternetAddress(FROM,FROMNAME));
        msg.setRecipient(Message.RecipientType.TO, new InternetAddress(TO));
        msg.setSubject(SUBJECT);
        msg.setContent(BODY,&quot;text/html&quot;);
        
        // Add a configuration set header. Comment or delete the 
        // next line if you are not using a configuration set
        msg.setHeader(&quot;X-SES-CONFIGURATION-SET&quot;, CONFIGSET);
            
        // Create a transport.
        Transport transport = session.getTransport();
                    
        // Send the message.
        try
        {
            System.out.println(&quot;Sending...&quot;);
            
            // Connect to Amazon SES using the SMTP username and password you specified above.
            transport.connect(HOST, SMTP_USERNAME, SMTP_PASSWORD);
            
            // Send the email.
            transport.sendMessage(msg, msg.getAllRecipients());
            System.out.println(&quot;Email sent!&quot;);
        }
        catch (Exception ex) {
            System.out.println(&quot;The email was not sent.&quot;);
            System.out.println(&quot;Error message: &quot; + ex.getMessage());
        }
        finally
        {
            // Close and terminate the connection.
            transport.close();
        }
    }
}
</code></pre>
<p><b>It is important that you have imported the following jar libraries into your project too:</b></p>
<ol>
<li>javax.activation.jar</li>
<li>javax.additionnal.jar</li>
<li>javax.mail.jar</li>
</ol>
",0
MBeanServer,Java,environment,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",1
MBeanServer,Java,environment,73164930,"<p>Add the following JVM Property to your server instance to get access to WebLogic's mbeans :</p>
<pre><code>-Djavax.management.builder.initial=weblogic.management.jmx.mbeanserver.WLSMBeanServerBuilder
</code></pre>
",1
MBeanServer,Java,environment,72763030,"<p>According to the comment from @LMC, I made a sample project to get the size of HttpSession with JMX: <a href=""https://github.com/satob/SessionSize"" rel=""nofollow noreferrer"">https://github.com/satob/SessionSize</a></p>
<p>Note that because you cannot access <code>org.apache.catalina.session.ManagerBase</code> directly, this project uses <a href=""https://byteman.jboss.org/"" rel=""nofollow noreferrer"">ByteMan</a>. Store the <code>ManagerBase</code> object to a static field of the MBean <code>SessionMonitor</code> with Byteman like:</p>
<pre><code>RULE Set ManagerBase object to MBean
CLASS ^org.apache.catalina.session.ManagerBase
METHOD initInternal
AT EXIT
IF TRUE
DO
    traceln(&quot;SETTING SessionManager&quot;);
    com.example.sessionsize.SessionMonitor.setSessionManager($this);
ENDRULE
</code></pre>
<p>and use it in the JMX interface like:</p>
<pre class=""lang-java prettyprint-override""><code>package com.example.sessionsize;

import org.apache.catalina.Manager;
import org.apache.catalina.Session;

import net.sourceforge.sizeof.SizeOf;

public class SessionMonitor implements SessionMonitorMBean {

    private static Manager sessionManager = null;

    public static void setSessionManager(Manager manager) {
        sessionManager = manager;
    }

    @Override
    public long getMemoryConsumption() {
        if (sessionManager != null) {
            try {
                Session [] sessions = sessionManager.findSessions();
                return SizeOf.deepSizeOf(sessions);
            } catch(RuntimeException e) {
                // Falied to get size of HttpSession object
                e.printStackTrace();
                return -2;
            }
        } else {
            // SessionManager is not ready
            return -1;
        }
    }

    @Override
    public long getNumberOfActiveHttpSession() {
        return sessionManager.findSessions().length;
    }
}
</code></pre>
<p><a href=""https://i.sstatic.net/VCcue.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/VCcue.png"" alt=""enter image description here"" /></a></p>
",1
MBeanServer,Java,environment,77763064,"<p>Update your configuration code to this :</p>
<pre><code>@Configuration
@EnableJpaRepositories(basePackages = { &quot;com.myapp.dao&quot; }, transactionManagerRef = &quot;websphereTxManager&quot;)
@EnableTransactionManagement
public class WebSphereDBConfiguration {

    @Resource(lookup = &quot;jdbc/sample&quot;, name = &quot;java:comp/env/jdbc/sample&quot;)
    private DataSource dataSource;

    @Primary
    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean() {
        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean();
        entityManagerFactoryBean.setPackagesToScan(&quot;com.myapp.entity&quot;);
        entityManagerFactoryBean.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
        entityManagerFactoryBean.setDataSource(dataSource);
        entityManagerFactoryBean.setJpaPropertyMap(jpaProperties());
        return entityManagerFactoryBean;
    }

    @Bean
    public EntityManagerFactory entityManagerFactory(LocalContainerEntityManagerFactoryBean entityManagerFactoryBean) {
        return entityManagerFactoryBean.getObject();
    }

    @Bean
    public PlatformTransactionManager websphereTxManager(EntityManagerFactory entityManagerFactory) {
        JpaTransactionManager transactionManager = new JpaTransactionManager();
        transactionManager.setEntityManagerFactory(entityManagerFactory);
        return transactionManager;
    }


    protected Map&lt;String, Object&gt; jpaProperties() {
        Map&lt;String, Object&gt; props = new HashMap&lt;&gt;();
        props.put(&quot;hibernate.physical_naming_strategy&quot;, CamelCaseToUnderscoresNamingStrategy.class.getName());
        props.put(&quot;hibernate.implicit_naming_strategy&quot;, SpringImplicitNamingStrategy.class.getName());
        return props;
    }


}
</code></pre>
<p>Use the same code :</p>
<pre><code>@Async
@Transactional(transactionManager = &quot;websphereTxManager&quot;)
public void convertFile(String documentId) {
     
    CustomLog customLog = new CustomLog();
    customLog.setStatus(&quot;IN_PROGRESS&quot;);
    mySpringDataRepo.save(customLog);
    
    try {
      doConvertFunction(documentId);    
    } catch(Exception e) {
      customLog.setStatus(&quot;FAIL&quot;);
      mySpringDataRepo.save(customLog);
      return;
    }

    customLog.setStatus(&quot;SUCCESS&quot;);
    mySpringDataRepo.save(customLog);
       
}
</code></pre>
<p><strong>Few points to be noted:</strong></p>
<ol>
<li>Creating a bean of <code>LocalContainerEntityManagerFactoryBean</code>.</li>
<li>Creating a bean of <code>EntityManagerFactory</code> via injecting <code>LocalContainerEntityManagerFactoryBean</code> and getting the object via <code>LocalContainerEntityManagerFactoryBean.getObject()</code>. Also, make that bean as the primary bean for the whole application.</li>
<li>You will need to create a custom transaction manager. So, creating a <code>JpaTransactionManager</code> bean via injection and using the <code>EntityManagerFactory</code> bean.</li>
<li>You can see this annotation <code>@EnableTransactionManagement</code>. By use of this annotation, you will tell Spring to use this configuration class to manage your transaction instead of default one.</li>
<li>See this annotation <code>@EnableJpaRepositories</code>. By this annotation, you will tell Spring which packages to scan containing the <strong>JPA</strong> repositories and also tell which transaction manager to use via this property <code>transactionManagerRef</code> by default.</li>
<li>You have to configure datasource on the WebSphere (I guess you already did) and inject it via <code>@Resource</code> and set that datasource in the <code>LocalContainerEntityManagerFactoryBean</code> bean.</li>
</ol>
<p>See if this helps.</p>
",0
MBeanServer,Java,environment,76075556,"<p>Studio 6.x does not support any other version of Java to startup than JDK 8. This is mentioned in the <a href=""https://docs.mulesoft.com/release-notes/studio/anypoint-studio-6.6-with-3.9.4-runtime-update-site-8-release-notes#software-requirements"" rel=""nofollow noreferrer"">release notes</a>. That page actually says it supports only the AdoptOpenJDK 8 distribution.</p>
<p>After Studio starts with JDK 8 it can execute Mule applications with Java 7 or Java 8, depending of the version of Mule runtime. All Mule versions that support Java 7 are EOL at this time.</p>
",0
MBeanServer,Java,environment,74839409,"<p>I guess this comment is the key.</p>
<blockquote>
<p>When I used 2.7.2 instead of 3.0.0(SnapShot) which I originally used
it started working.</p>
</blockquote>
<p>Reading the <a href=""https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories"" rel=""noreferrer"">documentation</a> we realize the <code>Spring Boot JPA</code> module part of the <code>Spring Boot 3</code> release turned to work with <a href=""https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api"" rel=""noreferrer"">Jakarta Persistence API (JPA)</a> rather than with <code>javax.persistence.api</code>. Because of this even configuring properly the <code>Spring JPA</code> annotations like <code>@EntityScan</code> it does not find the entities.</p>
<p>When upgrading <code>Spring Boot</code> up to version 3, the <code>Persistence API</code> artifact must be also migrated.</p>
<p>For more context about this change, it's well explained in <a href=""https://stackoverflow.com/a/60024749/851951"">this</a> other SO thread.</p>
<p>Hope it helps anyone else!</p>
",0
MBeanServer,Java,environment,73418272,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",0
MBeanServer,Java,environment,72996735,"<p>JProfiler reports the values returned by the MBean <code>com.sun.management.OperatingSystemMXBean</code>.</p>
<p>A value of 100% means that all CPUs were actively running threads from the JVM 100% of the time during the recent period being observed. Threads from the JVM include the application threads as well as the JVM internal threads.</p>
<p>In the screen shot, it looks like the JVM has detected 16 cores, one of which is fully used by the JVM. The variations in the system load can be due to multiple factors. If you are running the JProfiler GUI on the same machine, it is one of those factors.</p>
",0
MBeanServer,Java,environment,72891078,"<p>You should configure Datadog Agent to do JMX fetching. Only then will you be able to export Connect worker and Connector Mbean metrics.</p>
<p><a href=""https://docs.datadoghq.com/integrations/java/?tabs=host"" rel=""nofollow noreferrer"">https://docs.datadoghq.com/integrations/java/?tabs=host</a></p>
",0
MBeanServer,Java,environment,76984803,"<p>Java, by itself, does not load any libraries from any special location except for the basic library classes from the <em>rt.jar</em>. When you run a pure Java application, you need to give it the list of all directories and zip files to be searched for classes, as well as the name of the main class. This set of search locations is called the <em>classpath</em>.</p>
<p>Tools like Maven or Gradle simplify selecting and downloading of the libraries, but they also serve another important role: they tell you editor (VC, IntelliJ, Netbeans - whatever) - what should be on the classpath: which classes are available.</p>
<p>If you want to create a Spark application to compile by hand, you will need to:</p>
<ul>
<li>Download all the jars that Spark needs. This might mean not only Spark, but also the libraries that Spark itself needs.</li>
<li>Define your classpath, i.e., a full list of the paths to all the jars downloaded (NOT just the directory storing the jars, but rather the list of the jars within) and your code.</li>
<li>Find a setting in VC that allows you to set the classpath manually; I can't help you with this, but such a setting exists in IntelliJ, Eclipse, and Netbeans - so I guess it might also exist in VC.</li>
</ul>
<p>If I had to do it, I would create first a minimal, throwaway Maven project depending on Spark, without any code. In the root of the project I would then run:</p>
<pre><code>mvn dependency:copy-dependencies
</code></pre>
<p>This would download both Spark and everything else that is needed into the <code>target/dependencies</code> directory. I would copy it out and delete the no-longer-necessary project.</p>
<p>Then I would create a string listing all the jars in the dependency directory joined with <code>:</code>. Something like <code>dependencies/a.jar:dependencies/b.jar:dependencies/c.jar</code>... etc. This string would be quite long, and it would be exactly what needs to be put into the VC settings (presumably).</p>
<p>I could then also write a Java class and compile it by writing something like:</p>
<pre><code>javac -cp dependencies/a.jar:dependencies/b.jar:...:depenendencies/z.jar MyClassToCompile.java
</code></pre>
<p>And run it by:</p>
<pre><code>java -cp dependencies/a.jar:dependencies/b.jar:...:depenendencies/z.jar MyClassToCompile
</code></pre>
<p>Note that the examples above assume that <code>MyClassToCompile</code> is in the default package (otherwise you'd need to append the directories forming the package in the first line and the full qualified name of the class - in the second line).</p>
",0
MBeanServer,Java,alternative,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",0
MBeanServer,Java,alternative,73164930,"<p>Add the following JVM Property to your server instance to get access to WebLogic's mbeans :</p>
<pre><code>-Djavax.management.builder.initial=weblogic.management.jmx.mbeanserver.WLSMBeanServerBuilder
</code></pre>
",1
MBeanServer,Java,alternative,72763030,"<p>According to the comment from @LMC, I made a sample project to get the size of HttpSession with JMX: <a href=""https://github.com/satob/SessionSize"" rel=""nofollow noreferrer"">https://github.com/satob/SessionSize</a></p>
<p>Note that because you cannot access <code>org.apache.catalina.session.ManagerBase</code> directly, this project uses <a href=""https://byteman.jboss.org/"" rel=""nofollow noreferrer"">ByteMan</a>. Store the <code>ManagerBase</code> object to a static field of the MBean <code>SessionMonitor</code> with Byteman like:</p>
<pre><code>RULE Set ManagerBase object to MBean
CLASS ^org.apache.catalina.session.ManagerBase
METHOD initInternal
AT EXIT
IF TRUE
DO
    traceln(&quot;SETTING SessionManager&quot;);
    com.example.sessionsize.SessionMonitor.setSessionManager($this);
ENDRULE
</code></pre>
<p>and use it in the JMX interface like:</p>
<pre class=""lang-java prettyprint-override""><code>package com.example.sessionsize;

import org.apache.catalina.Manager;
import org.apache.catalina.Session;

import net.sourceforge.sizeof.SizeOf;

public class SessionMonitor implements SessionMonitorMBean {

    private static Manager sessionManager = null;

    public static void setSessionManager(Manager manager) {
        sessionManager = manager;
    }

    @Override
    public long getMemoryConsumption() {
        if (sessionManager != null) {
            try {
                Session [] sessions = sessionManager.findSessions();
                return SizeOf.deepSizeOf(sessions);
            } catch(RuntimeException e) {
                // Falied to get size of HttpSession object
                e.printStackTrace();
                return -2;
            }
        } else {
            // SessionManager is not ready
            return -1;
        }
    }

    @Override
    public long getNumberOfActiveHttpSession() {
        return sessionManager.findSessions().length;
    }
}
</code></pre>
<p><a href=""https://i.sstatic.net/VCcue.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/VCcue.png"" alt=""enter image description here"" /></a></p>
",0
MBeanServer,Java,alternative,76075556,"<p>Studio 6.x does not support any other version of Java to startup than JDK 8. This is mentioned in the <a href=""https://docs.mulesoft.com/release-notes/studio/anypoint-studio-6.6-with-3.9.4-runtime-update-site-8-release-notes#software-requirements"" rel=""nofollow noreferrer"">release notes</a>. That page actually says it supports only the AdoptOpenJDK 8 distribution.</p>
<p>After Studio starts with JDK 8 it can execute Mule applications with Java 7 or Java 8, depending of the version of Mule runtime. All Mule versions that support Java 7 are EOL at this time.</p>
",0
MBeanServer,Java,alternative,77763064,"<p>Update your configuration code to this :</p>
<pre><code>@Configuration
@EnableJpaRepositories(basePackages = { &quot;com.myapp.dao&quot; }, transactionManagerRef = &quot;websphereTxManager&quot;)
@EnableTransactionManagement
public class WebSphereDBConfiguration {

    @Resource(lookup = &quot;jdbc/sample&quot;, name = &quot;java:comp/env/jdbc/sample&quot;)
    private DataSource dataSource;

    @Primary
    @Bean
    public LocalContainerEntityManagerFactoryBean entityManagerFactoryBean() {
        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean();
        entityManagerFactoryBean.setPackagesToScan(&quot;com.myapp.entity&quot;);
        entityManagerFactoryBean.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
        entityManagerFactoryBean.setDataSource(dataSource);
        entityManagerFactoryBean.setJpaPropertyMap(jpaProperties());
        return entityManagerFactoryBean;
    }

    @Bean
    public EntityManagerFactory entityManagerFactory(LocalContainerEntityManagerFactoryBean entityManagerFactoryBean) {
        return entityManagerFactoryBean.getObject();
    }

    @Bean
    public PlatformTransactionManager websphereTxManager(EntityManagerFactory entityManagerFactory) {
        JpaTransactionManager transactionManager = new JpaTransactionManager();
        transactionManager.setEntityManagerFactory(entityManagerFactory);
        return transactionManager;
    }


    protected Map&lt;String, Object&gt; jpaProperties() {
        Map&lt;String, Object&gt; props = new HashMap&lt;&gt;();
        props.put(&quot;hibernate.physical_naming_strategy&quot;, CamelCaseToUnderscoresNamingStrategy.class.getName());
        props.put(&quot;hibernate.implicit_naming_strategy&quot;, SpringImplicitNamingStrategy.class.getName());
        return props;
    }


}
</code></pre>
<p>Use the same code :</p>
<pre><code>@Async
@Transactional(transactionManager = &quot;websphereTxManager&quot;)
public void convertFile(String documentId) {
     
    CustomLog customLog = new CustomLog();
    customLog.setStatus(&quot;IN_PROGRESS&quot;);
    mySpringDataRepo.save(customLog);
    
    try {
      doConvertFunction(documentId);    
    } catch(Exception e) {
      customLog.setStatus(&quot;FAIL&quot;);
      mySpringDataRepo.save(customLog);
      return;
    }

    customLog.setStatus(&quot;SUCCESS&quot;);
    mySpringDataRepo.save(customLog);
       
}
</code></pre>
<p><strong>Few points to be noted:</strong></p>
<ol>
<li>Creating a bean of <code>LocalContainerEntityManagerFactoryBean</code>.</li>
<li>Creating a bean of <code>EntityManagerFactory</code> via injecting <code>LocalContainerEntityManagerFactoryBean</code> and getting the object via <code>LocalContainerEntityManagerFactoryBean.getObject()</code>. Also, make that bean as the primary bean for the whole application.</li>
<li>You will need to create a custom transaction manager. So, creating a <code>JpaTransactionManager</code> bean via injection and using the <code>EntityManagerFactory</code> bean.</li>
<li>You can see this annotation <code>@EnableTransactionManagement</code>. By use of this annotation, you will tell Spring to use this configuration class to manage your transaction instead of default one.</li>
<li>See this annotation <code>@EnableJpaRepositories</code>. By this annotation, you will tell Spring which packages to scan containing the <strong>JPA</strong> repositories and also tell which transaction manager to use via this property <code>transactionManagerRef</code> by default.</li>
<li>You have to configure datasource on the WebSphere (I guess you already did) and inject it via <code>@Resource</code> and set that datasource in the <code>LocalContainerEntityManagerFactoryBean</code> bean.</li>
</ol>
<p>See if this helps.</p>
",0
MBeanServer,Java,alternative,73418272,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",0
MBeanServer,Java,alternative,74839409,"<p>I guess this comment is the key.</p>
<blockquote>
<p>When I used 2.7.2 instead of 3.0.0(SnapShot) which I originally used
it started working.</p>
</blockquote>
<p>Reading the <a href=""https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories"" rel=""noreferrer"">documentation</a> we realize the <code>Spring Boot JPA</code> module part of the <code>Spring Boot 3</code> release turned to work with <a href=""https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api"" rel=""noreferrer"">Jakarta Persistence API (JPA)</a> rather than with <code>javax.persistence.api</code>. Because of this even configuring properly the <code>Spring JPA</code> annotations like <code>@EntityScan</code> it does not find the entities.</p>
<p>When upgrading <code>Spring Boot</code> up to version 3, the <code>Persistence API</code> artifact must be also migrated.</p>
<p>For more context about this change, it's well explained in <a href=""https://stackoverflow.com/a/60024749/851951"">this</a> other SO thread.</p>
<p>Hope it helps anyone else!</p>
",0
MBeanServer,Java,alternative,72471473,"<p>The issue you encounter is a classloading issue during initialization of your EntityManager on your JBoss application environement.</p>
<p>Disabling the logging will not fix this error, but hide it. Check your deployment classpath, and your JDK version. And verify that all required hibernate libraries are present. You can check which libraries you need on the classpath by looking at the dependencies on a site such as mvnRepository (example: <a href=""https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core/6.0.2.Final"" rel=""nofollow noreferrer"">https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core/6.0.2.Final</a>).</p>
<p>Are you using a dependency manager, such as Maven or Gradle?</p>
",0
MBeanServer,Java,alternative,73027138,"<p>Can you please share the output of <code>mvn dependency:tree</code> from the root directory of your project? It seems the dependency <code>jakarta.ws.rs:jakarta.ws.rs-api</code> is not pointing to the right version (<code>2.1.6</code>) or is being overridden by <code>javax.ws.rs:javax.ws.rs-api</code>. To resolve this, only <code>jakarta.ws.rs:jakarta.ws.rs-api</code> version <code>2.1.6</code> should be included in your project.</p>
",0
MBeanServer,Java,alternative,78371072,"<p>You can configure your <code>RelyingPartyRegistrationRepository</code> as follows to read your keystore file :</p>
<pre><code>@Bean
public RelyingPartyRegistrationRepository relyingPartyRegistrations() throws Exception {

    //Here I read a jks file but you can replace the default type with &quot;PKCS12&quot; for example
    KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());
    char[] pwd = keyStorePassword.toCharArray();
    Resource keystoreRes = new ClassPathResource(keyStoreLocation);
    ks.load(keystoreRes.getInputStream(), pwd);

    //Fetch the private key contained in the jks file
    PrivateKey privateRSAKey = (PrivateKey) ks.getKey(keyStoreAlias, keyStorePassword.toCharArray());

    //Fetch the cerrtificate contained in the jks file
    X509Certificate cert = (X509Certificate) ks.getCertificate(keyStoreAlias);

    //Give your certificate to spring relying party bean
    RelyingPartyRegistration registration = RelyingPartyRegistrations
        .fromMetadataLocation(assertingPartyMetadataLocation)
        .registrationId(&quot;example&quot;)
        .signingX509Credentials((c) -&gt; c.add(Saml2X509Credential.signing(privateRSAKey, cert)))
        .decryptionX509Credentials((c) -&gt; c.add(Saml2X509Credential.decryption(privateRSAKey, cert)))
        .build();
    return new InMemoryRelyingPartyRegistrationRepository(registration);
  }
</code></pre>
<p>I didn't find any documentation on spring to do that either.
This piece of code works to read your keystore file however it is not enough alone to make saml work with spring security 6. I suggest you refer to this documentation to implement your filters and the security filter chain that goes with this <code>RelyingPartyRegistrationRepository</code> bean : <a href=""https://docs.spring.io/spring-security/reference/servlet/saml2/login/overview.html"" rel=""nofollow noreferrer"">SAML 2.0 Login Overview</a></p>
",0
Model,TensorFlow,functionality,62630283,"<p>When you define your model for training on your data set, the head of it should be a global pooling layer followed by one dense layer. The dense layer will be used to classify based on your data set. Once your model finishes training, you can create a different model that is based on the graph of your trained model but not including the head of it. Then, you can save the weights of this new model which can be used for transfer learning. Below is a simplified view of what I am explaining using Tensorflow's functional API.</p>
<pre><code>inputs = Input(shape)
# All hidden layers
x = (...)(inputs)
# Final pooling layer
x = GlobalAveragePooling2D()(x)
# Prediction layer
x = Dense(num_classes)(x)

model = Model(inputs, x)
</code></pre>
<p>Once you train this model, create a different one connecting all but the head and save the weights.</p>
<pre><code>new_model = Model(inputs, model.layers[-2])
new_model.save_weights(file_path)
</code></pre>
<p>This new model contains the same input as the previous model, but the output is the layer right before the <code>GlobalAveragePooling2D()</code> layer.</p>
",1
Model,TensorFlow,functionality,70410840,"<p>In your code, firstly you need to create a model. For the research models and techniques, most machine learning or deep learning practitioners use these steps:</p>
<ul>
<li>Data preprocess</li>
<li>Create Model</li>
<li>Save model</li>
<li>Load model</li>
<li>Make Prediction</li>
</ul>
<p>More details have been already cleared in <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load"" rel=""nofollow noreferrer"">Tensorflow official Documentation</a></p>
",0
Model,TensorFlow,functionality,56609014,"<p>From a software perspective <code>Model</code> is a unique python class, likewise as the various layers ( <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/models/Model"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/keras/models/Model</a> is from TF 1.13 documentation ). Like for any python class there are unique methods, so is for <code>Model</code>.</p>

<p>How the <code>Model</code> class integrates the various layers <strong>logically</strong> is in the source code of the Model class that is in <a href=""https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py</a> ( for TF 1.13, source code for TF 2.0 is very likely similar, to easier find search for <code>class Model</code> with Ctrl+F in the file )</p>
",1
Model,TensorFlow,functionality,57704553,"<p>consider to specify the shape of model inputs in the strategy scope, you can try one of the below:
1. call <code>model.build()</code> after the model is created.
2. define <code>input_shape</code> of the first layer of the model in the <code>__init__()</code>.
3. use a real tensor(ones, zeros, ect.) to call <code>model(tensor)</code> after the model is created.</p>

<p>anyway, specify the shape of the model inputs. this works for me.
 hope this will help you.</p>
",1
Model,TensorFlow,functionality,60826241,"<p><strong>TensorFlow Model</strong> only accepts Tensors when called during <strong>Eager Execution</strong> as indicated in their GitHub repository. 
This is <strong>one</strong> of the lines that were raised when you execute <code>model(data)</code>.</p>

<pre><code># Eager execution on data tensors.
        with backend.name_scope(self._name_scope()):
          self._maybe_build(inputs)
          cast_inputs = self._maybe_cast_inputs(inputs)
          with base_layer_utils.autocast_context_manager(
              self._compute_dtype):
            outputs = self.call(cast_inputs, *args, **kwargs)  # &lt;&lt;&lt; ERROR HERE
          self._handle_activity_regularization(inputs, outputs)
          self._set_mask_metadata(inputs, outputs, input_masks)
</code></pre>

<p>I converted the <strong>Data variable</strong> you used to predict into a <strong>Tensor Variable</strong>.</p>

<p>See the modified code below:</p>

<pre><code>from tensorflow.keras import layers, Input
import tensorflow as tf

input_layer = Input(1)
d1 = layers.Dense(64, activation='relu')(input_layer)
d2 = layers.Dense(3, activation='relu')(d1)
model = tf.keras.Model(inputs=[input_layer], outputs=d2)
data = [[1.0]]
print(model.predict(data)) # [[0.02674201 0.         0.        ]]
print(model(tf.Variable(data))) # tf.Tensor([[0.02674201 0.         0.        ]], shape=(1, 3), dtype=float32)

</code></pre>

<p>You could view the <strong>source code</strong> in TensorFlow <a href=""https://github.com/tensorflow/tensorflow/blob/v2.1.0/tensorflow/python/keras/engine/training.py#L81-L2865"" rel=""nofollow noreferrer"">Github</a>.    </p>
",1
Model,TensorFlow,functionality,71951680,"<p>There are a few things wrong with your code.</p>
<ol>
<li><p>You are creating your model inside the training loop. So that’s wrong. Unless you want to train a new version at each epoch. Your model should be defined and compiled before you start training.</p>
</li>
<li><p>Depending on which version of tensorflow you you are using you should enable eager execution before you declare the model. That lets you train the model without creating a session and a scope.</p>
</li>
</ol>
<p>Hope this helps!</p>
",1
Model,TensorFlow,functionality,70773451,"<p>As it is <code>Tensorflow 1.x</code> model, Please save your model using:</p>
<pre><code>tf.saved_model.save(model, model_save_path)    # model and path to save this model
</code></pre>
<p>To check saved_model format</p>
<pre><code>ls {model_save_path}
</code></pre>
<p>Output:</p>
<pre><code>assets/  saved_model.pb  variables/
</code></pre>
<p>To reload the model you can use below method:</p>
<pre><code>tf.saved_model.load(model_save_path)
</code></pre>
<p>You can check <a href=""https://www.tensorflow.org/guide/saved_model#creating_a_savedmodel_from_keras"" rel=""nofollow noreferrer"">this</a> reference for more details.</p>
",0
Model,TensorFlow,functionality,65326687,"<p>I've encountered this problem before. It seems that if I construct my model with Sequential API, the network will start learning from scratch when I set <code>base_model.trainable = True</code>. But if I create my model with Functional API, it seems that everything is okay. The way I create my model is like the one in this official tutorial <a href=""https://www.tensorflow.org/tutorials/images/transfer_learning"" rel=""nofollow noreferrer"">https://www.tensorflow.org/tutorials/images/transfer_learning</a></p>
",1
Model,TensorFlow,functionality,67264511,"<p>When running the model remember to test the model using inputs in form:</p>
<pre><code>model([tf.ones((1,512,512,3)),tf.ones((1,1))])
</code></pre>
<p>...in case where you input one image and one gender to the network. The first &quot;1&quot; in the tensors means the first &quot;batch&quot; of samples, and so on. That kind of input should give as a result like:</p>
<p><a href=""https://i.sstatic.net/KY3yx.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/KY3yx.png"" alt=""enter image description here"" /></a></p>
<p>...which looks like OK at this stage. Go through your code and check this &quot;stage&quot; first and then go forward in your program.</p>
",0
Model,TensorFlow,functionality,58645922,"<p><code>model.predict()</code> executes the actual prediction. You can't predict on placeholders, you need to feed that function real data. If you explicitly feed it <code>None</code> for input data, then <em>the model must have been created with existing data tensor(s)</em>, and it <em>still is what executes the actual prediction</em>.</p>

<p>Normally, when a model is created, it has placeholder tensors for the input and output. However, you have the option of giving it real tensors, instead of placeholders. See an example of this <a href=""https://stackoverflow.com/a/51205167/2846923"">here</a>. In this case, and only this case, you can use fit, predict, or evaluate without feeding it data. The only reason you can do that is because <em>the data already exists</em>.</p>
",1
Model,TensorFlow,concept,62630283,"<p>When you define your model for training on your data set, the head of it should be a global pooling layer followed by one dense layer. The dense layer will be used to classify based on your data set. Once your model finishes training, you can create a different model that is based on the graph of your trained model but not including the head of it. Then, you can save the weights of this new model which can be used for transfer learning. Below is a simplified view of what I am explaining using Tensorflow's functional API.</p>
<pre><code>inputs = Input(shape)
# All hidden layers
x = (...)(inputs)
# Final pooling layer
x = GlobalAveragePooling2D()(x)
# Prediction layer
x = Dense(num_classes)(x)

model = Model(inputs, x)
</code></pre>
<p>Once you train this model, create a different one connecting all but the head and save the weights.</p>
<pre><code>new_model = Model(inputs, model.layers[-2])
new_model.save_weights(file_path)
</code></pre>
<p>This new model contains the same input as the previous model, but the output is the layer right before the <code>GlobalAveragePooling2D()</code> layer.</p>
",1
Model,TensorFlow,concept,57704553,"<p>consider to specify the shape of model inputs in the strategy scope, you can try one of the below:
1. call <code>model.build()</code> after the model is created.
2. define <code>input_shape</code> of the first layer of the model in the <code>__init__()</code>.
3. use a real tensor(ones, zeros, ect.) to call <code>model(tensor)</code> after the model is created.</p>

<p>anyway, specify the shape of the model inputs. this works for me.
 hope this will help you.</p>
",1
Model,TensorFlow,concept,56609014,"<p>From a software perspective <code>Model</code> is a unique python class, likewise as the various layers ( <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/models/Model"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/keras/models/Model</a> is from TF 1.13 documentation ). Like for any python class there are unique methods, so is for <code>Model</code>.</p>

<p>How the <code>Model</code> class integrates the various layers <strong>logically</strong> is in the source code of the Model class that is in <a href=""https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py</a> ( for TF 1.13, source code for TF 2.0 is very likely similar, to easier find search for <code>class Model</code> with Ctrl+F in the file )</p>
",1
Model,TensorFlow,concept,70410840,"<p>In your code, firstly you need to create a model. For the research models and techniques, most machine learning or deep learning practitioners use these steps:</p>
<ul>
<li>Data preprocess</li>
<li>Create Model</li>
<li>Save model</li>
<li>Load model</li>
<li>Make Prediction</li>
</ul>
<p>More details have been already cleared in <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load"" rel=""nofollow noreferrer"">Tensorflow official Documentation</a></p>
",0
Model,TensorFlow,concept,58288583,"<p>When creating a Model, the input should be an Input layer, not a tensor.</p>

<pre><code>input = keras.layers.Input((max_length,))
x = Embedding(top_words, embedding_vector_length)(input)
x = Dense(2, activation='sigmoid')(x)
modelx = Model(inputs=input, outputs=x)
</code></pre>
",1
Model,TensorFlow,concept,67264511,"<p>When running the model remember to test the model using inputs in form:</p>
<pre><code>model([tf.ones((1,512,512,3)),tf.ones((1,1))])
</code></pre>
<p>...in case where you input one image and one gender to the network. The first &quot;1&quot; in the tensors means the first &quot;batch&quot; of samples, and so on. That kind of input should give as a result like:</p>
<p><a href=""https://i.sstatic.net/KY3yx.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/KY3yx.png"" alt=""enter image description here"" /></a></p>
<p>...which looks like OK at this stage. Go through your code and check this &quot;stage&quot; first and then go forward in your program.</p>
",1
Model,TensorFlow,concept,60826241,"<p><strong>TensorFlow Model</strong> only accepts Tensors when called during <strong>Eager Execution</strong> as indicated in their GitHub repository. 
This is <strong>one</strong> of the lines that were raised when you execute <code>model(data)</code>.</p>

<pre><code># Eager execution on data tensors.
        with backend.name_scope(self._name_scope()):
          self._maybe_build(inputs)
          cast_inputs = self._maybe_cast_inputs(inputs)
          with base_layer_utils.autocast_context_manager(
              self._compute_dtype):
            outputs = self.call(cast_inputs, *args, **kwargs)  # &lt;&lt;&lt; ERROR HERE
          self._handle_activity_regularization(inputs, outputs)
          self._set_mask_metadata(inputs, outputs, input_masks)
</code></pre>

<p>I converted the <strong>Data variable</strong> you used to predict into a <strong>Tensor Variable</strong>.</p>

<p>See the modified code below:</p>

<pre><code>from tensorflow.keras import layers, Input
import tensorflow as tf

input_layer = Input(1)
d1 = layers.Dense(64, activation='relu')(input_layer)
d2 = layers.Dense(3, activation='relu')(d1)
model = tf.keras.Model(inputs=[input_layer], outputs=d2)
data = [[1.0]]
print(model.predict(data)) # [[0.02674201 0.         0.        ]]
print(model(tf.Variable(data))) # tf.Tensor([[0.02674201 0.         0.        ]], shape=(1, 3), dtype=float32)

</code></pre>

<p>You could view the <strong>source code</strong> in TensorFlow <a href=""https://github.com/tensorflow/tensorflow/blob/v2.1.0/tensorflow/python/keras/engine/training.py#L81-L2865"" rel=""nofollow noreferrer"">Github</a>.    </p>
",1
Model,TensorFlow,concept,70773451,"<p>As it is <code>Tensorflow 1.x</code> model, Please save your model using:</p>
<pre><code>tf.saved_model.save(model, model_save_path)    # model and path to save this model
</code></pre>
<p>To check saved_model format</p>
<pre><code>ls {model_save_path}
</code></pre>
<p>Output:</p>
<pre><code>assets/  saved_model.pb  variables/
</code></pre>
<p>To reload the model you can use below method:</p>
<pre><code>tf.saved_model.load(model_save_path)
</code></pre>
<p>You can check <a href=""https://www.tensorflow.org/guide/saved_model#creating_a_savedmodel_from_keras"" rel=""nofollow noreferrer"">this</a> reference for more details.</p>
",0
Model,TensorFlow,concept,58645922,"<p><code>model.predict()</code> executes the actual prediction. You can't predict on placeholders, you need to feed that function real data. If you explicitly feed it <code>None</code> for input data, then <em>the model must have been created with existing data tensor(s)</em>, and it <em>still is what executes the actual prediction</em>.</p>

<p>Normally, when a model is created, it has placeholder tensors for the input and output. However, you have the option of giving it real tensors, instead of placeholders. See an example of this <a href=""https://stackoverflow.com/a/51205167/2846923"">here</a>. In this case, and only this case, you can use fit, predict, or evaluate without feeding it data. The only reason you can do that is because <em>the data already exists</em>.</p>
",1
Model,TensorFlow,concept,65326687,"<p>I've encountered this problem before. It seems that if I construct my model with Sequential API, the network will start learning from scratch when I set <code>base_model.trainable = True</code>. But if I create my model with Functional API, it seems that everything is okay. The way I create my model is like the one in this official tutorial <a href=""https://www.tensorflow.org/tutorials/images/transfer_learning"" rel=""nofollow noreferrer"">https://www.tensorflow.org/tutorials/images/transfer_learning</a></p>
",1
Model,TensorFlow,performance,62630283,"<p>When you define your model for training on your data set, the head of it should be a global pooling layer followed by one dense layer. The dense layer will be used to classify based on your data set. Once your model finishes training, you can create a different model that is based on the graph of your trained model but not including the head of it. Then, you can save the weights of this new model which can be used for transfer learning. Below is a simplified view of what I am explaining using Tensorflow's functional API.</p>
<pre><code>inputs = Input(shape)
# All hidden layers
x = (...)(inputs)
# Final pooling layer
x = GlobalAveragePooling2D()(x)
# Prediction layer
x = Dense(num_classes)(x)

model = Model(inputs, x)
</code></pre>
<p>Once you train this model, create a different one connecting all but the head and save the weights.</p>
<pre><code>new_model = Model(inputs, model.layers[-2])
new_model.save_weights(file_path)
</code></pre>
<p>This new model contains the same input as the previous model, but the output is the layer right before the <code>GlobalAveragePooling2D()</code> layer.</p>
",0
Model,TensorFlow,performance,70410840,"<p>In your code, firstly you need to create a model. For the research models and techniques, most machine learning or deep learning practitioners use these steps:</p>
<ul>
<li>Data preprocess</li>
<li>Create Model</li>
<li>Save model</li>
<li>Load model</li>
<li>Make Prediction</li>
</ul>
<p>More details have been already cleared in <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load"" rel=""nofollow noreferrer"">Tensorflow official Documentation</a></p>
",0
Model,TensorFlow,performance,57704553,"<p>consider to specify the shape of model inputs in the strategy scope, you can try one of the below:
1. call <code>model.build()</code> after the model is created.
2. define <code>input_shape</code> of the first layer of the model in the <code>__init__()</code>.
3. use a real tensor(ones, zeros, ect.) to call <code>model(tensor)</code> after the model is created.</p>

<p>anyway, specify the shape of the model inputs. this works for me.
 hope this will help you.</p>
",1
Model,TensorFlow,performance,71951680,"<p>There are a few things wrong with your code.</p>
<ol>
<li><p>You are creating your model inside the training loop. So that’s wrong. Unless you want to train a new version at each epoch. Your model should be defined and compiled before you start training.</p>
</li>
<li><p>Depending on which version of tensorflow you you are using you should enable eager execution before you declare the model. That lets you train the model without creating a session and a scope.</p>
</li>
</ol>
<p>Hope this helps!</p>
",1
Model,TensorFlow,performance,60826241,"<p><strong>TensorFlow Model</strong> only accepts Tensors when called during <strong>Eager Execution</strong> as indicated in their GitHub repository. 
This is <strong>one</strong> of the lines that were raised when you execute <code>model(data)</code>.</p>

<pre><code># Eager execution on data tensors.
        with backend.name_scope(self._name_scope()):
          self._maybe_build(inputs)
          cast_inputs = self._maybe_cast_inputs(inputs)
          with base_layer_utils.autocast_context_manager(
              self._compute_dtype):
            outputs = self.call(cast_inputs, *args, **kwargs)  # &lt;&lt;&lt; ERROR HERE
          self._handle_activity_regularization(inputs, outputs)
          self._set_mask_metadata(inputs, outputs, input_masks)
</code></pre>

<p>I converted the <strong>Data variable</strong> you used to predict into a <strong>Tensor Variable</strong>.</p>

<p>See the modified code below:</p>

<pre><code>from tensorflow.keras import layers, Input
import tensorflow as tf

input_layer = Input(1)
d1 = layers.Dense(64, activation='relu')(input_layer)
d2 = layers.Dense(3, activation='relu')(d1)
model = tf.keras.Model(inputs=[input_layer], outputs=d2)
data = [[1.0]]
print(model.predict(data)) # [[0.02674201 0.         0.        ]]
print(model(tf.Variable(data))) # tf.Tensor([[0.02674201 0.         0.        ]], shape=(1, 3), dtype=float32)

</code></pre>

<p>You could view the <strong>source code</strong> in TensorFlow <a href=""https://github.com/tensorflow/tensorflow/blob/v2.1.0/tensorflow/python/keras/engine/training.py#L81-L2865"" rel=""nofollow noreferrer"">Github</a>.    </p>
",0
Model,TensorFlow,performance,56609014,"<p>From a software perspective <code>Model</code> is a unique python class, likewise as the various layers ( <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/models/Model"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/keras/models/Model</a> is from TF 1.13 documentation ). Like for any python class there are unique methods, so is for <code>Model</code>.</p>

<p>How the <code>Model</code> class integrates the various layers <strong>logically</strong> is in the source code of the Model class that is in <a href=""https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py</a> ( for TF 1.13, source code for TF 2.0 is very likely similar, to easier find search for <code>class Model</code> with Ctrl+F in the file )</p>
",0
Model,TensorFlow,performance,67264511,"<p>When running the model remember to test the model using inputs in form:</p>
<pre><code>model([tf.ones((1,512,512,3)),tf.ones((1,1))])
</code></pre>
<p>...in case where you input one image and one gender to the network. The first &quot;1&quot; in the tensors means the first &quot;batch&quot; of samples, and so on. That kind of input should give as a result like:</p>
<p><a href=""https://i.sstatic.net/KY3yx.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/KY3yx.png"" alt=""enter image description here"" /></a></p>
<p>...which looks like OK at this stage. Go through your code and check this &quot;stage&quot; first and then go forward in your program.</p>
",0
Model,TensorFlow,performance,65326687,"<p>I've encountered this problem before. It seems that if I construct my model with Sequential API, the network will start learning from scratch when I set <code>base_model.trainable = True</code>. But if I create my model with Functional API, it seems that everything is okay. The way I create my model is like the one in this official tutorial <a href=""https://www.tensorflow.org/tutorials/images/transfer_learning"" rel=""nofollow noreferrer"">https://www.tensorflow.org/tutorials/images/transfer_learning</a></p>
",0
Model,TensorFlow,performance,70773451,"<p>As it is <code>Tensorflow 1.x</code> model, Please save your model using:</p>
<pre><code>tf.saved_model.save(model, model_save_path)    # model and path to save this model
</code></pre>
<p>To check saved_model format</p>
<pre><code>ls {model_save_path}
</code></pre>
<p>Output:</p>
<pre><code>assets/  saved_model.pb  variables/
</code></pre>
<p>To reload the model you can use below method:</p>
<pre><code>tf.saved_model.load(model_save_path)
</code></pre>
<p>You can check <a href=""https://www.tensorflow.org/guide/saved_model#creating_a_savedmodel_from_keras"" rel=""nofollow noreferrer"">this</a> reference for more details.</p>
",0
Model,TensorFlow,performance,72776868,"<p>I was able to replicate this error and found the fixes as below:</p>
<blockquote>
<ol>
<li>You need to run this code by selecting <code>Tensorflow 1.x</code>.</li>
<li>The dimensions of input and output should be the same to train the model (otherwise it will show this error <code>&quot;ValueError: Dimensions 11 and 5 are not compatible&quot;</code>).</li>
<li>Also, You must compile your model before training/testing.</li>
</ol>
</blockquote>
<p><strong>Please check this below fixed code:</strong></p>
<pre><code>%tensorflow_version 1.x

!pip install tensorflow_hub

import tensorflow as tf
import tensorflow_hub as hub
import numpy as np
print(tf.__version__)


elmo_model_path = &quot;https://tfhub.dev/google/elmo/3&quot;
elmo_layer = hub.KerasLayer(elmo_model_path, input_shape=[], dtype=tf.string, trainable=False)
    
data = ['rockyfire update  california hwy  closed directions due lake county fire  cafire wildfires', 'flood disaster heavy rain causes flash flooding streets manitou colorado springs areas', 'theres emergency evacuation happening now building across street', 'im afraid tornado coming area', 'three people died heat wave far']
['our deeds reason earthquake may allah forgive us', 'forest fire near la ronge sask canada', 'all residents asked shelter place notified officers no evacuation shelter place orders expected', 'people receive wildfires evacuation orders california', 'just got sent photo ruby alaska smoke wildfires pours school']
label = ['1', '1', '1', '1', '1']

#converting the labels to int value
label = list(map(np.int64, label))

#Creating Training Dataset
training_data = tf.data.Dataset.from_tensor_slices((data,label))

print(type(training_data))

model = tf.keras.Sequential([
    elmo_layer,
    tf.keras.layers.Dense(8, activation='sigmoid'),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam', loss=tf.compat.v1.keras.losses.BinaryCrossentropy(from_logits=True),
              metrics=[tf.compat.v1.keras.metrics.BinaryAccuracy(threshold=0.0, name='accuracy')])

num_epochs = 5
history = model.fit(training_data.shuffle(10000).batch(2), epochs=num_epochs, verbose=2)
</code></pre>
<p>Output:</p>
<pre><code>Train on 3 steps
Epoch 1/5
3/3 - 1s - loss: 0.4621 - accuracy: 1.0000
Epoch 2/5
3/3 - 0s - loss: 0.4337 - accuracy: 1.0000
Epoch 3/5
3/3 - 0s - loss: 0.4143 - accuracy: 1.0000
Epoch 4/5
3/3 - 0s - loss: 0.3986 - accuracy: 1.0000
Epoch 5/5
3/3 - 0s - loss: 0.3882 - accuracy: 1.0000
</code></pre>
",0
Model,TensorFlow,directive,62630283,"<p>When you define your model for training on your data set, the head of it should be a global pooling layer followed by one dense layer. The dense layer will be used to classify based on your data set. Once your model finishes training, you can create a different model that is based on the graph of your trained model but not including the head of it. Then, you can save the weights of this new model which can be used for transfer learning. Below is a simplified view of what I am explaining using Tensorflow's functional API.</p>
<pre><code>inputs = Input(shape)
# All hidden layers
x = (...)(inputs)
# Final pooling layer
x = GlobalAveragePooling2D()(x)
# Prediction layer
x = Dense(num_classes)(x)

model = Model(inputs, x)
</code></pre>
<p>Once you train this model, create a different one connecting all but the head and save the weights.</p>
<pre><code>new_model = Model(inputs, model.layers[-2])
new_model.save_weights(file_path)
</code></pre>
<p>This new model contains the same input as the previous model, but the output is the layer right before the <code>GlobalAveragePooling2D()</code> layer.</p>
",1
Model,TensorFlow,directive,57704553,"<p>consider to specify the shape of model inputs in the strategy scope, you can try one of the below:
1. call <code>model.build()</code> after the model is created.
2. define <code>input_shape</code> of the first layer of the model in the <code>__init__()</code>.
3. use a real tensor(ones, zeros, ect.) to call <code>model(tensor)</code> after the model is created.</p>

<p>anyway, specify the shape of the model inputs. this works for me.
 hope this will help you.</p>
",1
Model,TensorFlow,directive,70410840,"<p>In your code, firstly you need to create a model. For the research models and techniques, most machine learning or deep learning practitioners use these steps:</p>
<ul>
<li>Data preprocess</li>
<li>Create Model</li>
<li>Save model</li>
<li>Load model</li>
<li>Make Prediction</li>
</ul>
<p>More details have been already cleared in <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load"" rel=""nofollow noreferrer"">Tensorflow official Documentation</a></p>
",0
Model,TensorFlow,directive,56609014,"<p>From a software perspective <code>Model</code> is a unique python class, likewise as the various layers ( <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/models/Model"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/keras/models/Model</a> is from TF 1.13 documentation ). Like for any python class there are unique methods, so is for <code>Model</code>.</p>

<p>How the <code>Model</code> class integrates the various layers <strong>logically</strong> is in the source code of the Model class that is in <a href=""https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py</a> ( for TF 1.13, source code for TF 2.0 is very likely similar, to easier find search for <code>class Model</code> with Ctrl+F in the file )</p>
",0
Model,TensorFlow,directive,65326687,"<p>I've encountered this problem before. It seems that if I construct my model with Sequential API, the network will start learning from scratch when I set <code>base_model.trainable = True</code>. But if I create my model with Functional API, it seems that everything is okay. The way I create my model is like the one in this official tutorial <a href=""https://www.tensorflow.org/tutorials/images/transfer_learning"" rel=""nofollow noreferrer"">https://www.tensorflow.org/tutorials/images/transfer_learning</a></p>
",0
Model,TensorFlow,directive,71951680,"<p>There are a few things wrong with your code.</p>
<ol>
<li><p>You are creating your model inside the training loop. So that’s wrong. Unless you want to train a new version at each epoch. Your model should be defined and compiled before you start training.</p>
</li>
<li><p>Depending on which version of tensorflow you you are using you should enable eager execution before you declare the model. That lets you train the model without creating a session and a scope.</p>
</li>
</ol>
<p>Hope this helps!</p>
",1
Model,TensorFlow,directive,70773451,"<p>As it is <code>Tensorflow 1.x</code> model, Please save your model using:</p>
<pre><code>tf.saved_model.save(model, model_save_path)    # model and path to save this model
</code></pre>
<p>To check saved_model format</p>
<pre><code>ls {model_save_path}
</code></pre>
<p>Output:</p>
<pre><code>assets/  saved_model.pb  variables/
</code></pre>
<p>To reload the model you can use below method:</p>
<pre><code>tf.saved_model.load(model_save_path)
</code></pre>
<p>You can check <a href=""https://www.tensorflow.org/guide/saved_model#creating_a_savedmodel_from_keras"" rel=""nofollow noreferrer"">this</a> reference for more details.</p>
",0
Model,TensorFlow,directive,67264511,"<p>When running the model remember to test the model using inputs in form:</p>
<pre><code>model([tf.ones((1,512,512,3)),tf.ones((1,1))])
</code></pre>
<p>...in case where you input one image and one gender to the network. The first &quot;1&quot; in the tensors means the first &quot;batch&quot; of samples, and so on. That kind of input should give as a result like:</p>
<p><a href=""https://i.sstatic.net/KY3yx.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/KY3yx.png"" alt=""enter image description here"" /></a></p>
<p>...which looks like OK at this stage. Go through your code and check this &quot;stage&quot; first and then go forward in your program.</p>
",0
Model,TensorFlow,directive,58645922,"<p><code>model.predict()</code> executes the actual prediction. You can't predict on placeholders, you need to feed that function real data. If you explicitly feed it <code>None</code> for input data, then <em>the model must have been created with existing data tensor(s)</em>, and it <em>still is what executes the actual prediction</em>.</p>

<p>Normally, when a model is created, it has placeholder tensors for the input and output. However, you have the option of giving it real tensors, instead of placeholders. See an example of this <a href=""https://stackoverflow.com/a/51205167/2846923"">here</a>. In this case, and only this case, you can use fit, predict, or evaluate without feeding it data. The only reason you can do that is because <em>the data already exists</em>.</p>
",1
Model,TensorFlow,directive,60826241,"<p><strong>TensorFlow Model</strong> only accepts Tensors when called during <strong>Eager Execution</strong> as indicated in their GitHub repository. 
This is <strong>one</strong> of the lines that were raised when you execute <code>model(data)</code>.</p>

<pre><code># Eager execution on data tensors.
        with backend.name_scope(self._name_scope()):
          self._maybe_build(inputs)
          cast_inputs = self._maybe_cast_inputs(inputs)
          with base_layer_utils.autocast_context_manager(
              self._compute_dtype):
            outputs = self.call(cast_inputs, *args, **kwargs)  # &lt;&lt;&lt; ERROR HERE
          self._handle_activity_regularization(inputs, outputs)
          self._set_mask_metadata(inputs, outputs, input_masks)
</code></pre>

<p>I converted the <strong>Data variable</strong> you used to predict into a <strong>Tensor Variable</strong>.</p>

<p>See the modified code below:</p>

<pre><code>from tensorflow.keras import layers, Input
import tensorflow as tf

input_layer = Input(1)
d1 = layers.Dense(64, activation='relu')(input_layer)
d2 = layers.Dense(3, activation='relu')(d1)
model = tf.keras.Model(inputs=[input_layer], outputs=d2)
data = [[1.0]]
print(model.predict(data)) # [[0.02674201 0.         0.        ]]
print(model(tf.Variable(data))) # tf.Tensor([[0.02674201 0.         0.        ]], shape=(1, 3), dtype=float32)

</code></pre>

<p>You could view the <strong>source code</strong> in TensorFlow <a href=""https://github.com/tensorflow/tensorflow/blob/v2.1.0/tensorflow/python/keras/engine/training.py#L81-L2865"" rel=""nofollow noreferrer"">Github</a>.    </p>
",0
Model,TensorFlow,pattern,62630283,"<p>When you define your model for training on your data set, the head of it should be a global pooling layer followed by one dense layer. The dense layer will be used to classify based on your data set. Once your model finishes training, you can create a different model that is based on the graph of your trained model but not including the head of it. Then, you can save the weights of this new model which can be used for transfer learning. Below is a simplified view of what I am explaining using Tensorflow's functional API.</p>
<pre><code>inputs = Input(shape)
# All hidden layers
x = (...)(inputs)
# Final pooling layer
x = GlobalAveragePooling2D()(x)
# Prediction layer
x = Dense(num_classes)(x)

model = Model(inputs, x)
</code></pre>
<p>Once you train this model, create a different one connecting all but the head and save the weights.</p>
<pre><code>new_model = Model(inputs, model.layers[-2])
new_model.save_weights(file_path)
</code></pre>
<p>This new model contains the same input as the previous model, but the output is the layer right before the <code>GlobalAveragePooling2D()</code> layer.</p>
",1
Model,TensorFlow,pattern,70410840,"<p>In your code, firstly you need to create a model. For the research models and techniques, most machine learning or deep learning practitioners use these steps:</p>
<ul>
<li>Data preprocess</li>
<li>Create Model</li>
<li>Save model</li>
<li>Load model</li>
<li>Make Prediction</li>
</ul>
<p>More details have been already cleared in <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load"" rel=""nofollow noreferrer"">Tensorflow official Documentation</a></p>
",0
Model,TensorFlow,pattern,60826241,"<p><strong>TensorFlow Model</strong> only accepts Tensors when called during <strong>Eager Execution</strong> as indicated in their GitHub repository. 
This is <strong>one</strong> of the lines that were raised when you execute <code>model(data)</code>.</p>

<pre><code># Eager execution on data tensors.
        with backend.name_scope(self._name_scope()):
          self._maybe_build(inputs)
          cast_inputs = self._maybe_cast_inputs(inputs)
          with base_layer_utils.autocast_context_manager(
              self._compute_dtype):
            outputs = self.call(cast_inputs, *args, **kwargs)  # &lt;&lt;&lt; ERROR HERE
          self._handle_activity_regularization(inputs, outputs)
          self._set_mask_metadata(inputs, outputs, input_masks)
</code></pre>

<p>I converted the <strong>Data variable</strong> you used to predict into a <strong>Tensor Variable</strong>.</p>

<p>See the modified code below:</p>

<pre><code>from tensorflow.keras import layers, Input
import tensorflow as tf

input_layer = Input(1)
d1 = layers.Dense(64, activation='relu')(input_layer)
d2 = layers.Dense(3, activation='relu')(d1)
model = tf.keras.Model(inputs=[input_layer], outputs=d2)
data = [[1.0]]
print(model.predict(data)) # [[0.02674201 0.         0.        ]]
print(model(tf.Variable(data))) # tf.Tensor([[0.02674201 0.         0.        ]], shape=(1, 3), dtype=float32)

</code></pre>

<p>You could view the <strong>source code</strong> in TensorFlow <a href=""https://github.com/tensorflow/tensorflow/blob/v2.1.0/tensorflow/python/keras/engine/training.py#L81-L2865"" rel=""nofollow noreferrer"">Github</a>.    </p>
",1
Model,TensorFlow,pattern,57704553,"<p>consider to specify the shape of model inputs in the strategy scope, you can try one of the below:
1. call <code>model.build()</code> after the model is created.
2. define <code>input_shape</code> of the first layer of the model in the <code>__init__()</code>.
3. use a real tensor(ones, zeros, ect.) to call <code>model(tensor)</code> after the model is created.</p>

<p>anyway, specify the shape of the model inputs. this works for me.
 hope this will help you.</p>
",1
Model,TensorFlow,pattern,56609014,"<p>From a software perspective <code>Model</code> is a unique python class, likewise as the various layers ( <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/models/Model"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/keras/models/Model</a> is from TF 1.13 documentation ). Like for any python class there are unique methods, so is for <code>Model</code>.</p>

<p>How the <code>Model</code> class integrates the various layers <strong>logically</strong> is in the source code of the Model class that is in <a href=""https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py</a> ( for TF 1.13, source code for TF 2.0 is very likely similar, to easier find search for <code>class Model</code> with Ctrl+F in the file )</p>
",1
Model,TensorFlow,pattern,70773451,"<p>As it is <code>Tensorflow 1.x</code> model, Please save your model using:</p>
<pre><code>tf.saved_model.save(model, model_save_path)    # model and path to save this model
</code></pre>
<p>To check saved_model format</p>
<pre><code>ls {model_save_path}
</code></pre>
<p>Output:</p>
<pre><code>assets/  saved_model.pb  variables/
</code></pre>
<p>To reload the model you can use below method:</p>
<pre><code>tf.saved_model.load(model_save_path)
</code></pre>
<p>You can check <a href=""https://www.tensorflow.org/guide/saved_model#creating_a_savedmodel_from_keras"" rel=""nofollow noreferrer"">this</a> reference for more details.</p>
",0
Model,TensorFlow,pattern,71951680,"<p>There are a few things wrong with your code.</p>
<ol>
<li><p>You are creating your model inside the training loop. So that’s wrong. Unless you want to train a new version at each epoch. Your model should be defined and compiled before you start training.</p>
</li>
<li><p>Depending on which version of tensorflow you you are using you should enable eager execution before you declare the model. That lets you train the model without creating a session and a scope.</p>
</li>
</ol>
<p>Hope this helps!</p>
",1
Model,TensorFlow,pattern,67264511,"<p>When running the model remember to test the model using inputs in form:</p>
<pre><code>model([tf.ones((1,512,512,3)),tf.ones((1,1))])
</code></pre>
<p>...in case where you input one image and one gender to the network. The first &quot;1&quot; in the tensors means the first &quot;batch&quot; of samples, and so on. That kind of input should give as a result like:</p>
<p><a href=""https://i.sstatic.net/KY3yx.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/KY3yx.png"" alt=""enter image description here"" /></a></p>
<p>...which looks like OK at this stage. Go through your code and check this &quot;stage&quot; first and then go forward in your program.</p>
",1
Model,TensorFlow,pattern,58288583,"<p>When creating a Model, the input should be an Input layer, not a tensor.</p>

<pre><code>input = keras.layers.Input((max_length,))
x = Embedding(top_words, embedding_vector_length)(input)
x = Dense(2, activation='sigmoid')(x)
modelx = Model(inputs=input, outputs=x)
</code></pre>
",1
Model,TensorFlow,pattern,58645922,"<p><code>model.predict()</code> executes the actual prediction. You can't predict on placeholders, you need to feed that function real data. If you explicitly feed it <code>None</code> for input data, then <em>the model must have been created with existing data tensor(s)</em>, and it <em>still is what executes the actual prediction</em>.</p>

<p>Normally, when a model is created, it has placeholder tensors for the input and output. However, you have the option of giving it real tensors, instead of placeholders. See an example of this <a href=""https://stackoverflow.com/a/51205167/2846923"">here</a>. In this case, and only this case, you can use fit, predict, or evaluate without feeding it data. The only reason you can do that is because <em>the data already exists</em>.</p>
",1
Model,TensorFlow,environment,62630283,"<p>When you define your model for training on your data set, the head of it should be a global pooling layer followed by one dense layer. The dense layer will be used to classify based on your data set. Once your model finishes training, you can create a different model that is based on the graph of your trained model but not including the head of it. Then, you can save the weights of this new model which can be used for transfer learning. Below is a simplified view of what I am explaining using Tensorflow's functional API.</p>
<pre><code>inputs = Input(shape)
# All hidden layers
x = (...)(inputs)
# Final pooling layer
x = GlobalAveragePooling2D()(x)
# Prediction layer
x = Dense(num_classes)(x)

model = Model(inputs, x)
</code></pre>
<p>Once you train this model, create a different one connecting all but the head and save the weights.</p>
<pre><code>new_model = Model(inputs, model.layers[-2])
new_model.save_weights(file_path)
</code></pre>
<p>This new model contains the same input as the previous model, but the output is the layer right before the <code>GlobalAveragePooling2D()</code> layer.</p>
",1
Model,TensorFlow,environment,56609014,"<p>From a software perspective <code>Model</code> is a unique python class, likewise as the various layers ( <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/models/Model"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/keras/models/Model</a> is from TF 1.13 documentation ). Like for any python class there are unique methods, so is for <code>Model</code>.</p>

<p>How the <code>Model</code> class integrates the various layers <strong>logically</strong> is in the source code of the Model class that is in <a href=""https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py</a> ( for TF 1.13, source code for TF 2.0 is very likely similar, to easier find search for <code>class Model</code> with Ctrl+F in the file )</p>
",1
Model,TensorFlow,environment,70410840,"<p>In your code, firstly you need to create a model. For the research models and techniques, most machine learning or deep learning practitioners use these steps:</p>
<ul>
<li>Data preprocess</li>
<li>Create Model</li>
<li>Save model</li>
<li>Load model</li>
<li>Make Prediction</li>
</ul>
<p>More details have been already cleared in <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load"" rel=""nofollow noreferrer"">Tensorflow official Documentation</a></p>
",0
Model,TensorFlow,environment,65326687,"<p>I've encountered this problem before. It seems that if I construct my model with Sequential API, the network will start learning from scratch when I set <code>base_model.trainable = True</code>. But if I create my model with Functional API, it seems that everything is okay. The way I create my model is like the one in this official tutorial <a href=""https://www.tensorflow.org/tutorials/images/transfer_learning"" rel=""nofollow noreferrer"">https://www.tensorflow.org/tutorials/images/transfer_learning</a></p>
",1
Model,TensorFlow,environment,57704553,"<p>consider to specify the shape of model inputs in the strategy scope, you can try one of the below:
1. call <code>model.build()</code> after the model is created.
2. define <code>input_shape</code> of the first layer of the model in the <code>__init__()</code>.
3. use a real tensor(ones, zeros, ect.) to call <code>model(tensor)</code> after the model is created.</p>

<p>anyway, specify the shape of the model inputs. this works for me.
 hope this will help you.</p>
",1
Model,TensorFlow,environment,60826241,"<p><strong>TensorFlow Model</strong> only accepts Tensors when called during <strong>Eager Execution</strong> as indicated in their GitHub repository. 
This is <strong>one</strong> of the lines that were raised when you execute <code>model(data)</code>.</p>

<pre><code># Eager execution on data tensors.
        with backend.name_scope(self._name_scope()):
          self._maybe_build(inputs)
          cast_inputs = self._maybe_cast_inputs(inputs)
          with base_layer_utils.autocast_context_manager(
              self._compute_dtype):
            outputs = self.call(cast_inputs, *args, **kwargs)  # &lt;&lt;&lt; ERROR HERE
          self._handle_activity_regularization(inputs, outputs)
          self._set_mask_metadata(inputs, outputs, input_masks)
</code></pre>

<p>I converted the <strong>Data variable</strong> you used to predict into a <strong>Tensor Variable</strong>.</p>

<p>See the modified code below:</p>

<pre><code>from tensorflow.keras import layers, Input
import tensorflow as tf

input_layer = Input(1)
d1 = layers.Dense(64, activation='relu')(input_layer)
d2 = layers.Dense(3, activation='relu')(d1)
model = tf.keras.Model(inputs=[input_layer], outputs=d2)
data = [[1.0]]
print(model.predict(data)) # [[0.02674201 0.         0.        ]]
print(model(tf.Variable(data))) # tf.Tensor([[0.02674201 0.         0.        ]], shape=(1, 3), dtype=float32)

</code></pre>

<p>You could view the <strong>source code</strong> in TensorFlow <a href=""https://github.com/tensorflow/tensorflow/blob/v2.1.0/tensorflow/python/keras/engine/training.py#L81-L2865"" rel=""nofollow noreferrer"">Github</a>.    </p>
",1
Model,TensorFlow,environment,71951680,"<p>There are a few things wrong with your code.</p>
<ol>
<li><p>You are creating your model inside the training loop. So that’s wrong. Unless you want to train a new version at each epoch. Your model should be defined and compiled before you start training.</p>
</li>
<li><p>Depending on which version of tensorflow you you are using you should enable eager execution before you declare the model. That lets you train the model without creating a session and a scope.</p>
</li>
</ol>
<p>Hope this helps!</p>
",1
Model,TensorFlow,environment,67264511,"<p>When running the model remember to test the model using inputs in form:</p>
<pre><code>model([tf.ones((1,512,512,3)),tf.ones((1,1))])
</code></pre>
<p>...in case where you input one image and one gender to the network. The first &quot;1&quot; in the tensors means the first &quot;batch&quot; of samples, and so on. That kind of input should give as a result like:</p>
<p><a href=""https://i.sstatic.net/KY3yx.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/KY3yx.png"" alt=""enter image description here"" /></a></p>
<p>...which looks like OK at this stage. Go through your code and check this &quot;stage&quot; first and then go forward in your program.</p>
",1
Model,TensorFlow,environment,70773451,"<p>As it is <code>Tensorflow 1.x</code> model, Please save your model using:</p>
<pre><code>tf.saved_model.save(model, model_save_path)    # model and path to save this model
</code></pre>
<p>To check saved_model format</p>
<pre><code>ls {model_save_path}
</code></pre>
<p>Output:</p>
<pre><code>assets/  saved_model.pb  variables/
</code></pre>
<p>To reload the model you can use below method:</p>
<pre><code>tf.saved_model.load(model_save_path)
</code></pre>
<p>You can check <a href=""https://www.tensorflow.org/guide/saved_model#creating_a_savedmodel_from_keras"" rel=""nofollow noreferrer"">this</a> reference for more details.</p>
",1
Model,TensorFlow,environment,58288583,"<p>When creating a Model, the input should be an Input layer, not a tensor.</p>

<pre><code>input = keras.layers.Input((max_length,))
x = Embedding(top_words, embedding_vector_length)(input)
x = Dense(2, activation='sigmoid')(x)
modelx = Model(inputs=input, outputs=x)
</code></pre>
",1
Model,TensorFlow,alternative,62630283,"<p>When you define your model for training on your data set, the head of it should be a global pooling layer followed by one dense layer. The dense layer will be used to classify based on your data set. Once your model finishes training, you can create a different model that is based on the graph of your trained model but not including the head of it. Then, you can save the weights of this new model which can be used for transfer learning. Below is a simplified view of what I am explaining using Tensorflow's functional API.</p>
<pre><code>inputs = Input(shape)
# All hidden layers
x = (...)(inputs)
# Final pooling layer
x = GlobalAveragePooling2D()(x)
# Prediction layer
x = Dense(num_classes)(x)

model = Model(inputs, x)
</code></pre>
<p>Once you train this model, create a different one connecting all but the head and save the weights.</p>
<pre><code>new_model = Model(inputs, model.layers[-2])
new_model.save_weights(file_path)
</code></pre>
<p>This new model contains the same input as the previous model, but the output is the layer right before the <code>GlobalAveragePooling2D()</code> layer.</p>
",0
Model,TensorFlow,alternative,70410840,"<p>In your code, firstly you need to create a model. For the research models and techniques, most machine learning or deep learning practitioners use these steps:</p>
<ul>
<li>Data preprocess</li>
<li>Create Model</li>
<li>Save model</li>
<li>Load model</li>
<li>Make Prediction</li>
</ul>
<p>More details have been already cleared in <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load"" rel=""nofollow noreferrer"">Tensorflow official Documentation</a></p>
",0
Model,TensorFlow,alternative,57704553,"<p>consider to specify the shape of model inputs in the strategy scope, you can try one of the below:
1. call <code>model.build()</code> after the model is created.
2. define <code>input_shape</code> of the first layer of the model in the <code>__init__()</code>.
3. use a real tensor(ones, zeros, ect.) to call <code>model(tensor)</code> after the model is created.</p>

<p>anyway, specify the shape of the model inputs. this works for me.
 hope this will help you.</p>
",1
Model,TensorFlow,alternative,70773451,"<p>As it is <code>Tensorflow 1.x</code> model, Please save your model using:</p>
<pre><code>tf.saved_model.save(model, model_save_path)    # model and path to save this model
</code></pre>
<p>To check saved_model format</p>
<pre><code>ls {model_save_path}
</code></pre>
<p>Output:</p>
<pre><code>assets/  saved_model.pb  variables/
</code></pre>
<p>To reload the model you can use below method:</p>
<pre><code>tf.saved_model.load(model_save_path)
</code></pre>
<p>You can check <a href=""https://www.tensorflow.org/guide/saved_model#creating_a_savedmodel_from_keras"" rel=""nofollow noreferrer"">this</a> reference for more details.</p>
",0
Model,TensorFlow,alternative,56609014,"<p>From a software perspective <code>Model</code> is a unique python class, likewise as the various layers ( <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/models/Model"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/keras/models/Model</a> is from TF 1.13 documentation ). Like for any python class there are unique methods, so is for <code>Model</code>.</p>

<p>How the <code>Model</code> class integrates the various layers <strong>logically</strong> is in the source code of the Model class that is in <a href=""https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py"" rel=""nofollow noreferrer"">https://github.com/tensorflow/tensorflow/blob/r1.13/tensorflow/python/keras/engine/training.py</a> ( for TF 1.13, source code for TF 2.0 is very likely similar, to easier find search for <code>class Model</code> with Ctrl+F in the file )</p>
",0
Model,TensorFlow,alternative,60826241,"<p><strong>TensorFlow Model</strong> only accepts Tensors when called during <strong>Eager Execution</strong> as indicated in their GitHub repository. 
This is <strong>one</strong> of the lines that were raised when you execute <code>model(data)</code>.</p>

<pre><code># Eager execution on data tensors.
        with backend.name_scope(self._name_scope()):
          self._maybe_build(inputs)
          cast_inputs = self._maybe_cast_inputs(inputs)
          with base_layer_utils.autocast_context_manager(
              self._compute_dtype):
            outputs = self.call(cast_inputs, *args, **kwargs)  # &lt;&lt;&lt; ERROR HERE
          self._handle_activity_regularization(inputs, outputs)
          self._set_mask_metadata(inputs, outputs, input_masks)
</code></pre>

<p>I converted the <strong>Data variable</strong> you used to predict into a <strong>Tensor Variable</strong>.</p>

<p>See the modified code below:</p>

<pre><code>from tensorflow.keras import layers, Input
import tensorflow as tf

input_layer = Input(1)
d1 = layers.Dense(64, activation='relu')(input_layer)
d2 = layers.Dense(3, activation='relu')(d1)
model = tf.keras.Model(inputs=[input_layer], outputs=d2)
data = [[1.0]]
print(model.predict(data)) # [[0.02674201 0.         0.        ]]
print(model(tf.Variable(data))) # tf.Tensor([[0.02674201 0.         0.        ]], shape=(1, 3), dtype=float32)

</code></pre>

<p>You could view the <strong>source code</strong> in TensorFlow <a href=""https://github.com/tensorflow/tensorflow/blob/v2.1.0/tensorflow/python/keras/engine/training.py#L81-L2865"" rel=""nofollow noreferrer"">Github</a>.    </p>
",0
Model,TensorFlow,alternative,58645922,"<p><code>model.predict()</code> executes the actual prediction. You can't predict on placeholders, you need to feed that function real data. If you explicitly feed it <code>None</code> for input data, then <em>the model must have been created with existing data tensor(s)</em>, and it <em>still is what executes the actual prediction</em>.</p>

<p>Normally, when a model is created, it has placeholder tensors for the input and output. However, you have the option of giving it real tensors, instead of placeholders. See an example of this <a href=""https://stackoverflow.com/a/51205167/2846923"">here</a>. In this case, and only this case, you can use fit, predict, or evaluate without feeding it data. The only reason you can do that is because <em>the data already exists</em>.</p>
",1
Model,TensorFlow,alternative,71951680,"<p>There are a few things wrong with your code.</p>
<ol>
<li><p>You are creating your model inside the training loop. So that’s wrong. Unless you want to train a new version at each epoch. Your model should be defined and compiled before you start training.</p>
</li>
<li><p>Depending on which version of tensorflow you you are using you should enable eager execution before you declare the model. That lets you train the model without creating a session and a scope.</p>
</li>
</ol>
<p>Hope this helps!</p>
",1
Model,TensorFlow,alternative,65326687,"<p>I've encountered this problem before. It seems that if I construct my model with Sequential API, the network will start learning from scratch when I set <code>base_model.trainable = True</code>. But if I create my model with Functional API, it seems that everything is okay. The way I create my model is like the one in this official tutorial <a href=""https://www.tensorflow.org/tutorials/images/transfer_learning"" rel=""nofollow noreferrer"">https://www.tensorflow.org/tutorials/images/transfer_learning</a></p>
",1
Model,TensorFlow,alternative,72776868,"<p>I was able to replicate this error and found the fixes as below:</p>
<blockquote>
<ol>
<li>You need to run this code by selecting <code>Tensorflow 1.x</code>.</li>
<li>The dimensions of input and output should be the same to train the model (otherwise it will show this error <code>&quot;ValueError: Dimensions 11 and 5 are not compatible&quot;</code>).</li>
<li>Also, You must compile your model before training/testing.</li>
</ol>
</blockquote>
<p><strong>Please check this below fixed code:</strong></p>
<pre><code>%tensorflow_version 1.x

!pip install tensorflow_hub

import tensorflow as tf
import tensorflow_hub as hub
import numpy as np
print(tf.__version__)


elmo_model_path = &quot;https://tfhub.dev/google/elmo/3&quot;
elmo_layer = hub.KerasLayer(elmo_model_path, input_shape=[], dtype=tf.string, trainable=False)
    
data = ['rockyfire update  california hwy  closed directions due lake county fire  cafire wildfires', 'flood disaster heavy rain causes flash flooding streets manitou colorado springs areas', 'theres emergency evacuation happening now building across street', 'im afraid tornado coming area', 'three people died heat wave far']
['our deeds reason earthquake may allah forgive us', 'forest fire near la ronge sask canada', 'all residents asked shelter place notified officers no evacuation shelter place orders expected', 'people receive wildfires evacuation orders california', 'just got sent photo ruby alaska smoke wildfires pours school']
label = ['1', '1', '1', '1', '1']

#converting the labels to int value
label = list(map(np.int64, label))

#Creating Training Dataset
training_data = tf.data.Dataset.from_tensor_slices((data,label))

print(type(training_data))

model = tf.keras.Sequential([
    elmo_layer,
    tf.keras.layers.Dense(8, activation='sigmoid'),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam', loss=tf.compat.v1.keras.losses.BinaryCrossentropy(from_logits=True),
              metrics=[tf.compat.v1.keras.metrics.BinaryAccuracy(threshold=0.0, name='accuracy')])

num_epochs = 5
history = model.fit(training_data.shuffle(10000).batch(2), epochs=num_epochs, verbose=2)
</code></pre>
<p>Output:</p>
<pre><code>Train on 3 steps
Epoch 1/5
3/3 - 1s - loss: 0.4621 - accuracy: 1.0000
Epoch 2/5
3/3 - 0s - loss: 0.4337 - accuracy: 1.0000
Epoch 3/5
3/3 - 0s - loss: 0.4143 - accuracy: 1.0000
Epoch 4/5
3/3 - 0s - loss: 0.3986 - accuracy: 1.0000
Epoch 5/5
3/3 - 0s - loss: 0.3882 - accuracy: 1.0000
</code></pre>
",0
MediaPlayer,Android,functionality,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",1
MediaPlayer,Android,functionality,76461455,"<p>On Android, you can use the MediaPlayer class to play sound. The MediaPlayer class can play audio and video files, and it provides a rich set of features such as seeking, looping, and volume control.</p>
<p>On iOS, you can use the AVFoundation framework to play sound. The AVFoundation framework provides classes for playing, recording, and editing audio and video. To play a sound on iOS, you can use the AVPlayer class.</p>
<p>About using the Equalizer you can check that if the MediaPlayer and AVFoundation support the equalizer. MediaPlayer has the Equalizer you can refer to <a href=""https://developer.android.com/reference/android/media/audiofx/Equalizer"" rel=""nofollow noreferrer"">Equalizer for MediaPlayer</a> for more information.</p>
",1
MediaPlayer,Android,functionality,66483686,"<p>Found the answer. Seems like I wasn't Media Session... According to
<a href=""https://developer.android.com/guide/topics/media-apps/working-with-a-media-session"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/working-with-a-media-session</a></p>
<p>We would need to use Media Session to tell the System that there is a media session happening in your app and each time you tell the system that your player is active or playing then your application would have priority over the media controllers on the remote and no other application can access it unless you state that your media session is no longer active.</p>
<p>This helped too! <a href=""https://developer.android.com/codelabs/supporting-mediasession"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/supporting-mediasession</a></p>
<p>Hope this helps anyone else!</p>
",0
MediaPlayer,Android,functionality,69213079,"<p>Currently, <code>AudioTrack</code> doesn't support the Vorbis format. So, you need to decode your source audio track into raw PCM before feeding it into the <code>AudioTrack</code>.</p>
<p>This can be done using <code>MediaExtractor</code> and <code>MediaCodec</code> (decoder).</p>
<p>Links:</p>
<p><a href=""https://developer.android.com/reference/android/media/MediaExtractor"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaExtractor</a></p>
<p><a href=""https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers</a></p>
",0
MediaPlayer,Android,functionality,64641883,"<p>When you use <code>media player</code> to play music, the media player does not directly play the music, but requests the playback engine of the android system to play the music.
When you no longer use the playback engine of the android system, you should call the <code>release()</code> method of the <code>media player</code> to release system resources.</p>
",1
MediaPlayer,Android,functionality,66410738,"<p><strong>Jetpack Media3 has launched!</strong><br />
<a href=""https://developer.android.com/jetpack/androidx/releases/media3"" rel=""nofollow noreferrer"">https://developer.android.com/jetpack/androidx/releases/media3</a></p>
<p><a href=""https://android-developers.googleblog.com/2021/10/jetpack-media3.html"" rel=""nofollow noreferrer"">This blog post gives a great explanation about how the media libraries evolved.</a> <strong>I strongly recommend</strong> integrating with <code>androidx.media3</code>.</p>
<p>If for whatever reason you <em>cannot</em> use <code>androidx.media3</code>, my recommendation is to stick with <code>androidx.media</code> instead of <code>androidx.media2</code> due to the latter not being supported by other media integrations, such as Cast Connect. Integrating Media2 with ExoPlayer is also quite a bit more complex.</p>
<p>From my perspective, the key benefit of switching from Media1 to Media2 is the ability to provide more fine-grained permission controls. <a href=""https://medium.com/google-exoplayer/the-media2-extension-for-exoplayer-d6b7d89b9063"" rel=""nofollow noreferrer"">See Jaewan Kim's blog post</a> that goes in depth about the more complex SessionPlayerConnector API and permissions to accept or reject connections from a controller in media2.</p>
<p>If you have an existing Media1 implementation using MediaSession (preferably using ExoPlayer with MediaSessionConnector), and have no need for the permission controls in Media2, you can either stick with Media1 or upgrade to Media3.</p>
<p>The <a href=""https://youtu.be/sTIBDcyCmCg"" rel=""nofollow noreferrer"">“What's next for AndroidX Media and ExoPlayer”</a> talk from Android Dev Summit 2021 goes much more in depth on Media3.</p>
",0
MediaPlayer,Android,functionality,75930166,"<p>To determine which MediaController is currently playing when there are multiple active sessions, you can use the MediaController.getPlaybackState() method to get the current playback state of each MediaController. Here's an example code snippet that demonstrates how to do this:</p>
<pre><code>private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState?.state == PlaybackState.STATE_PLAYING || 
                playbackState?.state == PlaybackState.STATE_BUFFERING) {
                val mediaMetadata = mediaController.metadata
                // Use the metadata to get information about the currently playing song
                //
            }
        }
    }
</code></pre>
",0
MediaPlayer,Android,functionality,75870736,"<p>I think maybe something like the following might work:</p>
<pre><code>private var currentMediaController: MediaController? = null

private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        var latestPlaybackState: PlaybackState? = null
        var latestMediaController: MediaController? = null

        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState != null) {
                if (latestPlaybackState == null || playbackState.lastPositionUpdateTime &gt; latestPlaybackState.lastPositionUpdateTime) {
                    if (playbackState.state == PlaybackState.STATE_PLAYING) {
                        latestPlaybackState = playbackState
                        latestMediaController = mediaController
                    }
                }
            }
        }

        currentMediaController = latestMediaController
        // Now you have the MediaController that is currently playing.
        // You can get the playback state using currentMediaController?.playbackState.
    }
</code></pre>
<p>This code iterates over all the <code>MediaControllers</code> in the list and checks their <code>PlaybackState</code>. If a <code>MediaController</code> has a <code>PlaybackState</code> that is newer than the previous <code>PlaybackState</code> seen, it becomes the new &quot;latest&quot; <code>PlaybackState</code>, and the corresponding <code>MediaController</code> becomes the new <code>latestMediaController</code>. If the <code>PlaybackState</code> indicates that the media is playing, <code>latestMediaController</code> is updated accordingly.</p>
<p>Note that this code assumes that each <code>MediaController</code> has a unique <code>PlaybackState</code> object. If two <code>MediaControllers</code> have the same <code>PlaybackState</code> object (i.e., they are both playing the same media), this code may not work correctly. In that case, you could use other criteria (such as the package name of the <code>MediaController</code>) to determine which one is actually playing. cg</p>
",1
MediaPlayer,Android,functionality,62966849,"<p><strong>I Think</strong>,change your <code>mediaRecorder?.setoutFormat</code> to</p>
<pre><code>mediaRecorder?.setOutputFormat(MediaRecorder.OutputFormat.MPEG_2_TS)
</code></pre>
<p><strong>Or</strong></p>
<pre><code>mediaRecorder?.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP)
</code></pre>
<p>prepare your MediaPlayer <code>mediaPlayer?.prepare()</code> before starting of your recording</p>
<p>And, play your Background music (with volume as you want) and start the recorder .</p>
<p>May it Works. Thanks!</p>
",0
MediaPlayer,Android,functionality,72345801,"<p>The ExoPlayer documentation discusses this:</p>
<blockquote>
<p>In ExoPlayer every piece of media is represented by a MediaItem. However internally, the player needs MediaSource instances to play the content. The player creates these from media items using a MediaSource.Factory.</p>
</blockquote>
<p>(<a href=""https://exoplayer.dev/media-sources.html"" rel=""nofollow noreferrer"">https://exoplayer.dev/media-sources.html</a>)</p>
<p>and:</p>
<blockquote>
<p>The playlist API is based on MediaItems, which can be conveniently built using MediaItem.Builder. Inside the player, media items are converted into playable MediaSources by a MediaSource.Factory</p>
</blockquote>
<p>If all you want is to play a media item or create a playlist then you probably only need to use MediaItem - there are some good examples in the latest CodeLabs: <a href=""https://developer.android.com/codelabs/exoplayer-intro#0"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/exoplayer-intro#0</a></p>
",0
MediaPlayer,Android,concept,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",1
MediaPlayer,Android,concept,76461455,"<p>On Android, you can use the MediaPlayer class to play sound. The MediaPlayer class can play audio and video files, and it provides a rich set of features such as seeking, looping, and volume control.</p>
<p>On iOS, you can use the AVFoundation framework to play sound. The AVFoundation framework provides classes for playing, recording, and editing audio and video. To play a sound on iOS, you can use the AVPlayer class.</p>
<p>About using the Equalizer you can check that if the MediaPlayer and AVFoundation support the equalizer. MediaPlayer has the Equalizer you can refer to <a href=""https://developer.android.com/reference/android/media/audiofx/Equalizer"" rel=""nofollow noreferrer"">Equalizer for MediaPlayer</a> for more information.</p>
",1
MediaPlayer,Android,concept,66483686,"<p>Found the answer. Seems like I wasn't Media Session... According to
<a href=""https://developer.android.com/guide/topics/media-apps/working-with-a-media-session"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/working-with-a-media-session</a></p>
<p>We would need to use Media Session to tell the System that there is a media session happening in your app and each time you tell the system that your player is active or playing then your application would have priority over the media controllers on the remote and no other application can access it unless you state that your media session is no longer active.</p>
<p>This helped too! <a href=""https://developer.android.com/codelabs/supporting-mediasession"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/supporting-mediasession</a></p>
<p>Hope this helps anyone else!</p>
",0
MediaPlayer,Android,concept,69213079,"<p>Currently, <code>AudioTrack</code> doesn't support the Vorbis format. So, you need to decode your source audio track into raw PCM before feeding it into the <code>AudioTrack</code>.</p>
<p>This can be done using <code>MediaExtractor</code> and <code>MediaCodec</code> (decoder).</p>
<p>Links:</p>
<p><a href=""https://developer.android.com/reference/android/media/MediaExtractor"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaExtractor</a></p>
<p><a href=""https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers</a></p>
",0
MediaPlayer,Android,concept,72345801,"<p>The ExoPlayer documentation discusses this:</p>
<blockquote>
<p>In ExoPlayer every piece of media is represented by a MediaItem. However internally, the player needs MediaSource instances to play the content. The player creates these from media items using a MediaSource.Factory.</p>
</blockquote>
<p>(<a href=""https://exoplayer.dev/media-sources.html"" rel=""nofollow noreferrer"">https://exoplayer.dev/media-sources.html</a>)</p>
<p>and:</p>
<blockquote>
<p>The playlist API is based on MediaItems, which can be conveniently built using MediaItem.Builder. Inside the player, media items are converted into playable MediaSources by a MediaSource.Factory</p>
</blockquote>
<p>If all you want is to play a media item or create a playlist then you probably only need to use MediaItem - there are some good examples in the latest CodeLabs: <a href=""https://developer.android.com/codelabs/exoplayer-intro#0"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/exoplayer-intro#0</a></p>
",0
MediaPlayer,Android,concept,66410738,"<p><strong>Jetpack Media3 has launched!</strong><br />
<a href=""https://developer.android.com/jetpack/androidx/releases/media3"" rel=""nofollow noreferrer"">https://developer.android.com/jetpack/androidx/releases/media3</a></p>
<p><a href=""https://android-developers.googleblog.com/2021/10/jetpack-media3.html"" rel=""nofollow noreferrer"">This blog post gives a great explanation about how the media libraries evolved.</a> <strong>I strongly recommend</strong> integrating with <code>androidx.media3</code>.</p>
<p>If for whatever reason you <em>cannot</em> use <code>androidx.media3</code>, my recommendation is to stick with <code>androidx.media</code> instead of <code>androidx.media2</code> due to the latter not being supported by other media integrations, such as Cast Connect. Integrating Media2 with ExoPlayer is also quite a bit more complex.</p>
<p>From my perspective, the key benefit of switching from Media1 to Media2 is the ability to provide more fine-grained permission controls. <a href=""https://medium.com/google-exoplayer/the-media2-extension-for-exoplayer-d6b7d89b9063"" rel=""nofollow noreferrer"">See Jaewan Kim's blog post</a> that goes in depth about the more complex SessionPlayerConnector API and permissions to accept or reject connections from a controller in media2.</p>
<p>If you have an existing Media1 implementation using MediaSession (preferably using ExoPlayer with MediaSessionConnector), and have no need for the permission controls in Media2, you can either stick with Media1 or upgrade to Media3.</p>
<p>The <a href=""https://youtu.be/sTIBDcyCmCg"" rel=""nofollow noreferrer"">“What's next for AndroidX Media and ExoPlayer”</a> talk from Android Dev Summit 2021 goes much more in depth on Media3.</p>
",0
MediaPlayer,Android,concept,75930166,"<p>To determine which MediaController is currently playing when there are multiple active sessions, you can use the MediaController.getPlaybackState() method to get the current playback state of each MediaController. Here's an example code snippet that demonstrates how to do this:</p>
<pre><code>private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState?.state == PlaybackState.STATE_PLAYING || 
                playbackState?.state == PlaybackState.STATE_BUFFERING) {
                val mediaMetadata = mediaController.metadata
                // Use the metadata to get information about the currently playing song
                //
            }
        }
    }
</code></pre>
",0
MediaPlayer,Android,concept,75440451,"<p>The library suffers lack of documentation (as will probably be the case until a stable release).</p>
<p>For a simple implementation for audio playback, which also supports background playback, we need to have our player separated from our activity, and rather live in something isolated from it but can still be part of our application, the answer is a <code>Service</code>, and services can use application context freely, and can run in the background.</p>
<p>So let's assume you want to create an app that plays music, you will need:</p>
<ul>
<li>An activity (let's call it <code>MainActivity</code>)</li>
<li>A service (let's call it <code>MusicPlayerService</code>)</li>
</ul>
<p><em><strong>1- First of all,</strong></em> we declare our activity in the manifest (I believe everyone is familiar with this step).</p>
<p><em><strong>2- Second of all,</strong></em> we declare our service in the manifest:</p>
<pre><code>    &lt;service
        android:name=&quot;.MusicPlayerService&quot;
        android:enabled=&quot;true&quot;
        android:exported=&quot;true&quot;
        android:foregroundServiceType=&quot;mediaPlayback&quot;
        tools:ignore=&quot;ExportedService&quot;&gt;

        &lt;intent-filter&gt;
            &lt;action android:name=&quot;androidx.media3.session.MediaLibraryService&quot;/&gt;
            &lt;action android:name=&quot;android.media.browse.MediaBrowserService&quot; /&gt;
        &lt;/intent-filter&gt;
    &lt;/service&gt;
</code></pre>
<p><em><strong>3- Now for the important steps,</strong></em> we build the necessary architecture for our Media3 library. The UI (MainActivity) has something called 'MediaController' which is basically an interface with the player that lives in the service.</p>
<p>As for the service, there is something called a MediaSession that lives inside it, and also the player itself (exoplayer). There is a special version of media session which controls also the media items (playlist and its info) and exposes it to other clients (such Android Auto, WearOS, etc). It's called MediaLibraryService, we're gonna be experimenting with this one today (but the process of implementation is almost the same).</p>
<p>So, in our MainActivity:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@UnstableApi class MusicActivity : ComponentActivity() {

    /* This is the global variable of the player
       (which is basically a media controller) 
       you're going to use to control playback,
       you're not gonna need anything else other than this,
       which is created from the media controller */
    lateinit var player: Player

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)


        /* Creating session token (links our UI with service and starts it) */
        val sessionToken = SessionToken(applicationContext, ComponentName(this, MusicPlayerService::class.java))

        /* Instantiating our MediaController and linking it to the service using the session token */
        val mediacontrollerFuture = MediaController.Builder(this, sessionToken).buildAsync()

        mediacontrollerFuture.addListener({


            player = mediacontrollerFuture.get()


        }, MoreExecutors.directExecutor())
    }
}
</code></pre>
<p><em><strong>Now for the most interesting part,</strong></em> we create a class called <code>MusicPlayerService</code> which extends <code>MediaLibraryService</code> (or MediaSessionService, depends on your app needs), it is like this:</p>
<pre class=""lang-kotlin prettyprint-override""><code>
@UnstableApi class MusicPlayerService: MediaLibraryService() {

    /* This is the service side player, the media controller in the activity will control this one, so don't worry about it */
    lateinit var player: Player

    /* This is the session which will delegate everything you need about audio playback such as notifications, pausing player, resuming player, listening to states, etc */
    lateinit var session: MediaLibrarySession
    
    override fun  onCreate() {
        super.onCreate()
        
        /* Step 1 out of 2: Instantiate the player (ExoPlayer) */
        player = ExoPlayer.Builder(applicationContext)
            .setRenderersFactory(
                DefaultRenderersFactory(this).setExtensionRendererMode(
                    DefaultRenderersFactory.EXTENSION_RENDERER_MODE_PREFER /* We prefer extensions, such as FFmpeg */
                )
            ).build()


        /* Step 2 out of 2: Instantiate the session (most important part) */
        session = MediaLibrarySession.Builder(this, player,
            object: MediaLibrarySession.Callback {
                override fun onAddMediaItems(
                    mediaSession: MediaSession,
                    controller: MediaSession.ControllerInfo,
                    mediaItems: MutableList&lt;MediaItem&gt;
                ): ListenableFuture&lt;MutableList&lt;MediaItem&gt;&gt; {

                /* This is the trickiest part, if you don't do this here, nothing will play */
                    val updatedMediaItems = mediaItems.map { it.buildUpon().setUri(it.mediaId).build() }.toMutableList()
                    return Futures.immediateFuture(updatedMediaItems)
                }
            }).build()
    }
}
</code></pre>
<p><em><strong>One last thing</strong></em>, if you want to load a media item in an activity, use this:</p>
<pre class=""lang-kotlin prettyprint-override""><code>fun loadMediaItem(uri: Uri) {
    /* We use setMediaId as a unique identifier for the media (which is needed for mediasession and we do NOT use setUri because we're gonna do
       something like setUri(mediaItem.mediaId) when we need to load the media like we did above in the MusicPlayerService and more precisely when we were building the session */
    val newItem = MediaItem.Builder()
        .setMediaId(&quot;$uri&quot;) /* setMediaId and NOT setUri */
        .build()
    
    /* Load it into our activity's MediaController */
    player.setMediaItem(newItem)
    player.prepare()
    player.play()
}
</code></pre>
<p>Hope this gives you a better approach on Media3.</p>
",0
MediaPlayer,Android,concept,64641883,"<p>When you use <code>media player</code> to play music, the media player does not directly play the music, but requests the playback engine of the android system to play the music.
When you no longer use the playback engine of the android system, you should call the <code>release()</code> method of the <code>media player</code> to release system resources.</p>
",1
MediaPlayer,Android,concept,75870736,"<p>I think maybe something like the following might work:</p>
<pre><code>private var currentMediaController: MediaController? = null

private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        var latestPlaybackState: PlaybackState? = null
        var latestMediaController: MediaController? = null

        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState != null) {
                if (latestPlaybackState == null || playbackState.lastPositionUpdateTime &gt; latestPlaybackState.lastPositionUpdateTime) {
                    if (playbackState.state == PlaybackState.STATE_PLAYING) {
                        latestPlaybackState = playbackState
                        latestMediaController = mediaController
                    }
                }
            }
        }

        currentMediaController = latestMediaController
        // Now you have the MediaController that is currently playing.
        // You can get the playback state using currentMediaController?.playbackState.
    }
</code></pre>
<p>This code iterates over all the <code>MediaControllers</code> in the list and checks their <code>PlaybackState</code>. If a <code>MediaController</code> has a <code>PlaybackState</code> that is newer than the previous <code>PlaybackState</code> seen, it becomes the new &quot;latest&quot; <code>PlaybackState</code>, and the corresponding <code>MediaController</code> becomes the new <code>latestMediaController</code>. If the <code>PlaybackState</code> indicates that the media is playing, <code>latestMediaController</code> is updated accordingly.</p>
<p>Note that this code assumes that each <code>MediaController</code> has a unique <code>PlaybackState</code> object. If two <code>MediaControllers</code> have the same <code>PlaybackState</code> object (i.e., they are both playing the same media), this code may not work correctly. In that case, you could use other criteria (such as the package name of the <code>MediaController</code>) to determine which one is actually playing. cg</p>
",0
MediaPlayer,Android,performance,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",0
MediaPlayer,Android,performance,76461455,"<p>On Android, you can use the MediaPlayer class to play sound. The MediaPlayer class can play audio and video files, and it provides a rich set of features such as seeking, looping, and volume control.</p>
<p>On iOS, you can use the AVFoundation framework to play sound. The AVFoundation framework provides classes for playing, recording, and editing audio and video. To play a sound on iOS, you can use the AVPlayer class.</p>
<p>About using the Equalizer you can check that if the MediaPlayer and AVFoundation support the equalizer. MediaPlayer has the Equalizer you can refer to <a href=""https://developer.android.com/reference/android/media/audiofx/Equalizer"" rel=""nofollow noreferrer"">Equalizer for MediaPlayer</a> for more information.</p>
",0
MediaPlayer,Android,performance,66483686,"<p>Found the answer. Seems like I wasn't Media Session... According to
<a href=""https://developer.android.com/guide/topics/media-apps/working-with-a-media-session"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/working-with-a-media-session</a></p>
<p>We would need to use Media Session to tell the System that there is a media session happening in your app and each time you tell the system that your player is active or playing then your application would have priority over the media controllers on the remote and no other application can access it unless you state that your media session is no longer active.</p>
<p>This helped too! <a href=""https://developer.android.com/codelabs/supporting-mediasession"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/supporting-mediasession</a></p>
<p>Hope this helps anyone else!</p>
",0
MediaPlayer,Android,performance,69213079,"<p>Currently, <code>AudioTrack</code> doesn't support the Vorbis format. So, you need to decode your source audio track into raw PCM before feeding it into the <code>AudioTrack</code>.</p>
<p>This can be done using <code>MediaExtractor</code> and <code>MediaCodec</code> (decoder).</p>
<p>Links:</p>
<p><a href=""https://developer.android.com/reference/android/media/MediaExtractor"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaExtractor</a></p>
<p><a href=""https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers</a></p>
",0
MediaPlayer,Android,performance,75930166,"<p>To determine which MediaController is currently playing when there are multiple active sessions, you can use the MediaController.getPlaybackState() method to get the current playback state of each MediaController. Here's an example code snippet that demonstrates how to do this:</p>
<pre><code>private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState?.state == PlaybackState.STATE_PLAYING || 
                playbackState?.state == PlaybackState.STATE_BUFFERING) {
                val mediaMetadata = mediaController.metadata
                // Use the metadata to get information about the currently playing song
                //
            }
        }
    }
</code></pre>
",0
MediaPlayer,Android,performance,64641883,"<p>When you use <code>media player</code> to play music, the media player does not directly play the music, but requests the playback engine of the android system to play the music.
When you no longer use the playback engine of the android system, you should call the <code>release()</code> method of the <code>media player</code> to release system resources.</p>
",1
MediaPlayer,Android,performance,62966849,"<p><strong>I Think</strong>,change your <code>mediaRecorder?.setoutFormat</code> to</p>
<pre><code>mediaRecorder?.setOutputFormat(MediaRecorder.OutputFormat.MPEG_2_TS)
</code></pre>
<p><strong>Or</strong></p>
<pre><code>mediaRecorder?.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP)
</code></pre>
<p>prepare your MediaPlayer <code>mediaPlayer?.prepare()</code> before starting of your recording</p>
<p>And, play your Background music (with volume as you want) and start the recorder .</p>
<p>May it Works. Thanks!</p>
",0
MediaPlayer,Android,performance,75870736,"<p>I think maybe something like the following might work:</p>
<pre><code>private var currentMediaController: MediaController? = null

private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        var latestPlaybackState: PlaybackState? = null
        var latestMediaController: MediaController? = null

        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState != null) {
                if (latestPlaybackState == null || playbackState.lastPositionUpdateTime &gt; latestPlaybackState.lastPositionUpdateTime) {
                    if (playbackState.state == PlaybackState.STATE_PLAYING) {
                        latestPlaybackState = playbackState
                        latestMediaController = mediaController
                    }
                }
            }
        }

        currentMediaController = latestMediaController
        // Now you have the MediaController that is currently playing.
        // You can get the playback state using currentMediaController?.playbackState.
    }
</code></pre>
<p>This code iterates over all the <code>MediaControllers</code> in the list and checks their <code>PlaybackState</code>. If a <code>MediaController</code> has a <code>PlaybackState</code> that is newer than the previous <code>PlaybackState</code> seen, it becomes the new &quot;latest&quot; <code>PlaybackState</code>, and the corresponding <code>MediaController</code> becomes the new <code>latestMediaController</code>. If the <code>PlaybackState</code> indicates that the media is playing, <code>latestMediaController</code> is updated accordingly.</p>
<p>Note that this code assumes that each <code>MediaController</code> has a unique <code>PlaybackState</code> object. If two <code>MediaControllers</code> have the same <code>PlaybackState</code> object (i.e., they are both playing the same media), this code may not work correctly. In that case, you could use other criteria (such as the package name of the <code>MediaController</code>) to determine which one is actually playing. cg</p>
",0
MediaPlayer,Android,performance,75440451,"<p>The library suffers lack of documentation (as will probably be the case until a stable release).</p>
<p>For a simple implementation for audio playback, which also supports background playback, we need to have our player separated from our activity, and rather live in something isolated from it but can still be part of our application, the answer is a <code>Service</code>, and services can use application context freely, and can run in the background.</p>
<p>So let's assume you want to create an app that plays music, you will need:</p>
<ul>
<li>An activity (let's call it <code>MainActivity</code>)</li>
<li>A service (let's call it <code>MusicPlayerService</code>)</li>
</ul>
<p><em><strong>1- First of all,</strong></em> we declare our activity in the manifest (I believe everyone is familiar with this step).</p>
<p><em><strong>2- Second of all,</strong></em> we declare our service in the manifest:</p>
<pre><code>    &lt;service
        android:name=&quot;.MusicPlayerService&quot;
        android:enabled=&quot;true&quot;
        android:exported=&quot;true&quot;
        android:foregroundServiceType=&quot;mediaPlayback&quot;
        tools:ignore=&quot;ExportedService&quot;&gt;

        &lt;intent-filter&gt;
            &lt;action android:name=&quot;androidx.media3.session.MediaLibraryService&quot;/&gt;
            &lt;action android:name=&quot;android.media.browse.MediaBrowserService&quot; /&gt;
        &lt;/intent-filter&gt;
    &lt;/service&gt;
</code></pre>
<p><em><strong>3- Now for the important steps,</strong></em> we build the necessary architecture for our Media3 library. The UI (MainActivity) has something called 'MediaController' which is basically an interface with the player that lives in the service.</p>
<p>As for the service, there is something called a MediaSession that lives inside it, and also the player itself (exoplayer). There is a special version of media session which controls also the media items (playlist and its info) and exposes it to other clients (such Android Auto, WearOS, etc). It's called MediaLibraryService, we're gonna be experimenting with this one today (but the process of implementation is almost the same).</p>
<p>So, in our MainActivity:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@UnstableApi class MusicActivity : ComponentActivity() {

    /* This is the global variable of the player
       (which is basically a media controller) 
       you're going to use to control playback,
       you're not gonna need anything else other than this,
       which is created from the media controller */
    lateinit var player: Player

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)


        /* Creating session token (links our UI with service and starts it) */
        val sessionToken = SessionToken(applicationContext, ComponentName(this, MusicPlayerService::class.java))

        /* Instantiating our MediaController and linking it to the service using the session token */
        val mediacontrollerFuture = MediaController.Builder(this, sessionToken).buildAsync()

        mediacontrollerFuture.addListener({


            player = mediacontrollerFuture.get()


        }, MoreExecutors.directExecutor())
    }
}
</code></pre>
<p><em><strong>Now for the most interesting part,</strong></em> we create a class called <code>MusicPlayerService</code> which extends <code>MediaLibraryService</code> (or MediaSessionService, depends on your app needs), it is like this:</p>
<pre class=""lang-kotlin prettyprint-override""><code>
@UnstableApi class MusicPlayerService: MediaLibraryService() {

    /* This is the service side player, the media controller in the activity will control this one, so don't worry about it */
    lateinit var player: Player

    /* This is the session which will delegate everything you need about audio playback such as notifications, pausing player, resuming player, listening to states, etc */
    lateinit var session: MediaLibrarySession
    
    override fun  onCreate() {
        super.onCreate()
        
        /* Step 1 out of 2: Instantiate the player (ExoPlayer) */
        player = ExoPlayer.Builder(applicationContext)
            .setRenderersFactory(
                DefaultRenderersFactory(this).setExtensionRendererMode(
                    DefaultRenderersFactory.EXTENSION_RENDERER_MODE_PREFER /* We prefer extensions, such as FFmpeg */
                )
            ).build()


        /* Step 2 out of 2: Instantiate the session (most important part) */
        session = MediaLibrarySession.Builder(this, player,
            object: MediaLibrarySession.Callback {
                override fun onAddMediaItems(
                    mediaSession: MediaSession,
                    controller: MediaSession.ControllerInfo,
                    mediaItems: MutableList&lt;MediaItem&gt;
                ): ListenableFuture&lt;MutableList&lt;MediaItem&gt;&gt; {

                /* This is the trickiest part, if you don't do this here, nothing will play */
                    val updatedMediaItems = mediaItems.map { it.buildUpon().setUri(it.mediaId).build() }.toMutableList()
                    return Futures.immediateFuture(updatedMediaItems)
                }
            }).build()
    }
}
</code></pre>
<p><em><strong>One last thing</strong></em>, if you want to load a media item in an activity, use this:</p>
<pre class=""lang-kotlin prettyprint-override""><code>fun loadMediaItem(uri: Uri) {
    /* We use setMediaId as a unique identifier for the media (which is needed for mediasession and we do NOT use setUri because we're gonna do
       something like setUri(mediaItem.mediaId) when we need to load the media like we did above in the MusicPlayerService and more precisely when we were building the session */
    val newItem = MediaItem.Builder()
        .setMediaId(&quot;$uri&quot;) /* setMediaId and NOT setUri */
        .build()
    
    /* Load it into our activity's MediaController */
    player.setMediaItem(newItem)
    player.prepare()
    player.play()
}
</code></pre>
<p>Hope this gives you a better approach on Media3.</p>
",0
MediaPlayer,Android,performance,66410738,"<p><strong>Jetpack Media3 has launched!</strong><br />
<a href=""https://developer.android.com/jetpack/androidx/releases/media3"" rel=""nofollow noreferrer"">https://developer.android.com/jetpack/androidx/releases/media3</a></p>
<p><a href=""https://android-developers.googleblog.com/2021/10/jetpack-media3.html"" rel=""nofollow noreferrer"">This blog post gives a great explanation about how the media libraries evolved.</a> <strong>I strongly recommend</strong> integrating with <code>androidx.media3</code>.</p>
<p>If for whatever reason you <em>cannot</em> use <code>androidx.media3</code>, my recommendation is to stick with <code>androidx.media</code> instead of <code>androidx.media2</code> due to the latter not being supported by other media integrations, such as Cast Connect. Integrating Media2 with ExoPlayer is also quite a bit more complex.</p>
<p>From my perspective, the key benefit of switching from Media1 to Media2 is the ability to provide more fine-grained permission controls. <a href=""https://medium.com/google-exoplayer/the-media2-extension-for-exoplayer-d6b7d89b9063"" rel=""nofollow noreferrer"">See Jaewan Kim's blog post</a> that goes in depth about the more complex SessionPlayerConnector API and permissions to accept or reject connections from a controller in media2.</p>
<p>If you have an existing Media1 implementation using MediaSession (preferably using ExoPlayer with MediaSessionConnector), and have no need for the permission controls in Media2, you can either stick with Media1 or upgrade to Media3.</p>
<p>The <a href=""https://youtu.be/sTIBDcyCmCg"" rel=""nofollow noreferrer"">“What's next for AndroidX Media and ExoPlayer”</a> talk from Android Dev Summit 2021 goes much more in depth on Media3.</p>
",0
MediaPlayer,Android,directive,66483686,"<p>Found the answer. Seems like I wasn't Media Session... According to
<a href=""https://developer.android.com/guide/topics/media-apps/working-with-a-media-session"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/working-with-a-media-session</a></p>
<p>We would need to use Media Session to tell the System that there is a media session happening in your app and each time you tell the system that your player is active or playing then your application would have priority over the media controllers on the remote and no other application can access it unless you state that your media session is no longer active.</p>
<p>This helped too! <a href=""https://developer.android.com/codelabs/supporting-mediasession"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/supporting-mediasession</a></p>
<p>Hope this helps anyone else!</p>
",0
MediaPlayer,Android,directive,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",0
MediaPlayer,Android,directive,76461455,"<p>On Android, you can use the MediaPlayer class to play sound. The MediaPlayer class can play audio and video files, and it provides a rich set of features such as seeking, looping, and volume control.</p>
<p>On iOS, you can use the AVFoundation framework to play sound. The AVFoundation framework provides classes for playing, recording, and editing audio and video. To play a sound on iOS, you can use the AVPlayer class.</p>
<p>About using the Equalizer you can check that if the MediaPlayer and AVFoundation support the equalizer. MediaPlayer has the Equalizer you can refer to <a href=""https://developer.android.com/reference/android/media/audiofx/Equalizer"" rel=""nofollow noreferrer"">Equalizer for MediaPlayer</a> for more information.</p>
",1
MediaPlayer,Android,directive,66410738,"<p><strong>Jetpack Media3 has launched!</strong><br />
<a href=""https://developer.android.com/jetpack/androidx/releases/media3"" rel=""nofollow noreferrer"">https://developer.android.com/jetpack/androidx/releases/media3</a></p>
<p><a href=""https://android-developers.googleblog.com/2021/10/jetpack-media3.html"" rel=""nofollow noreferrer"">This blog post gives a great explanation about how the media libraries evolved.</a> <strong>I strongly recommend</strong> integrating with <code>androidx.media3</code>.</p>
<p>If for whatever reason you <em>cannot</em> use <code>androidx.media3</code>, my recommendation is to stick with <code>androidx.media</code> instead of <code>androidx.media2</code> due to the latter not being supported by other media integrations, such as Cast Connect. Integrating Media2 with ExoPlayer is also quite a bit more complex.</p>
<p>From my perspective, the key benefit of switching from Media1 to Media2 is the ability to provide more fine-grained permission controls. <a href=""https://medium.com/google-exoplayer/the-media2-extension-for-exoplayer-d6b7d89b9063"" rel=""nofollow noreferrer"">See Jaewan Kim's blog post</a> that goes in depth about the more complex SessionPlayerConnector API and permissions to accept or reject connections from a controller in media2.</p>
<p>If you have an existing Media1 implementation using MediaSession (preferably using ExoPlayer with MediaSessionConnector), and have no need for the permission controls in Media2, you can either stick with Media1 or upgrade to Media3.</p>
<p>The <a href=""https://youtu.be/sTIBDcyCmCg"" rel=""nofollow noreferrer"">“What's next for AndroidX Media and ExoPlayer”</a> talk from Android Dev Summit 2021 goes much more in depth on Media3.</p>
",0
MediaPlayer,Android,directive,69213079,"<p>Currently, <code>AudioTrack</code> doesn't support the Vorbis format. So, you need to decode your source audio track into raw PCM before feeding it into the <code>AudioTrack</code>.</p>
<p>This can be done using <code>MediaExtractor</code> and <code>MediaCodec</code> (decoder).</p>
<p>Links:</p>
<p><a href=""https://developer.android.com/reference/android/media/MediaExtractor"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaExtractor</a></p>
<p><a href=""https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers</a></p>
",0
MediaPlayer,Android,directive,75930166,"<p>To determine which MediaController is currently playing when there are multiple active sessions, you can use the MediaController.getPlaybackState() method to get the current playback state of each MediaController. Here's an example code snippet that demonstrates how to do this:</p>
<pre><code>private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState?.state == PlaybackState.STATE_PLAYING || 
                playbackState?.state == PlaybackState.STATE_BUFFERING) {
                val mediaMetadata = mediaController.metadata
                // Use the metadata to get information about the currently playing song
                //
            }
        }
    }
</code></pre>
",0
MediaPlayer,Android,directive,64641883,"<p>When you use <code>media player</code> to play music, the media player does not directly play the music, but requests the playback engine of the android system to play the music.
When you no longer use the playback engine of the android system, you should call the <code>release()</code> method of the <code>media player</code> to release system resources.</p>
",1
MediaPlayer,Android,directive,75870736,"<p>I think maybe something like the following might work:</p>
<pre><code>private var currentMediaController: MediaController? = null

private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        var latestPlaybackState: PlaybackState? = null
        var latestMediaController: MediaController? = null

        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState != null) {
                if (latestPlaybackState == null || playbackState.lastPositionUpdateTime &gt; latestPlaybackState.lastPositionUpdateTime) {
                    if (playbackState.state == PlaybackState.STATE_PLAYING) {
                        latestPlaybackState = playbackState
                        latestMediaController = mediaController
                    }
                }
            }
        }

        currentMediaController = latestMediaController
        // Now you have the MediaController that is currently playing.
        // You can get the playback state using currentMediaController?.playbackState.
    }
</code></pre>
<p>This code iterates over all the <code>MediaControllers</code> in the list and checks their <code>PlaybackState</code>. If a <code>MediaController</code> has a <code>PlaybackState</code> that is newer than the previous <code>PlaybackState</code> seen, it becomes the new &quot;latest&quot; <code>PlaybackState</code>, and the corresponding <code>MediaController</code> becomes the new <code>latestMediaController</code>. If the <code>PlaybackState</code> indicates that the media is playing, <code>latestMediaController</code> is updated accordingly.</p>
<p>Note that this code assumes that each <code>MediaController</code> has a unique <code>PlaybackState</code> object. If two <code>MediaControllers</code> have the same <code>PlaybackState</code> object (i.e., they are both playing the same media), this code may not work correctly. In that case, you could use other criteria (such as the package name of the <code>MediaController</code>) to determine which one is actually playing. cg</p>
",0
MediaPlayer,Android,directive,61598798,"<p>turns out the videoView starting playback somehow paused the mediaplayer.
what solved the problem was just calling mediaplayer.start() again. it did resume where it had stopped all the times before. the (apparently existing) short break in playback is not noticeable.</p>

<p>why is this behaviour of mediaplayer/videoview not mentioned anywhere?</p>

<p>issue-solving-code:</p>

<pre><code>        z.schedule(new TimerTask() {
        @Override
        public void run() {
            runOnUiThread(new Runnable() {

                @Override
                public void run() {
                    playPart2();
                    mediaplayer.start();
                }
            });
        }
    }, PARTONELENGTH + MAPDISPLAYTIME + IMAGEDISPLAYTIME);
</code></pre>
",1
MediaPlayer,Android,directive,72345801,"<p>The ExoPlayer documentation discusses this:</p>
<blockquote>
<p>In ExoPlayer every piece of media is represented by a MediaItem. However internally, the player needs MediaSource instances to play the content. The player creates these from media items using a MediaSource.Factory.</p>
</blockquote>
<p>(<a href=""https://exoplayer.dev/media-sources.html"" rel=""nofollow noreferrer"">https://exoplayer.dev/media-sources.html</a>)</p>
<p>and:</p>
<blockquote>
<p>The playlist API is based on MediaItems, which can be conveniently built using MediaItem.Builder. Inside the player, media items are converted into playable MediaSources by a MediaSource.Factory</p>
</blockquote>
<p>If all you want is to play a media item or create a playlist then you probably only need to use MediaItem - there are some good examples in the latest CodeLabs: <a href=""https://developer.android.com/codelabs/exoplayer-intro#0"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/exoplayer-intro#0</a></p>
",0
MediaPlayer,Android,pattern,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",1
MediaPlayer,Android,pattern,66483686,"<p>Found the answer. Seems like I wasn't Media Session... According to
<a href=""https://developer.android.com/guide/topics/media-apps/working-with-a-media-session"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/working-with-a-media-session</a></p>
<p>We would need to use Media Session to tell the System that there is a media session happening in your app and each time you tell the system that your player is active or playing then your application would have priority over the media controllers on the remote and no other application can access it unless you state that your media session is no longer active.</p>
<p>This helped too! <a href=""https://developer.android.com/codelabs/supporting-mediasession"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/supporting-mediasession</a></p>
<p>Hope this helps anyone else!</p>
",0
MediaPlayer,Android,pattern,76461455,"<p>On Android, you can use the MediaPlayer class to play sound. The MediaPlayer class can play audio and video files, and it provides a rich set of features such as seeking, looping, and volume control.</p>
<p>On iOS, you can use the AVFoundation framework to play sound. The AVFoundation framework provides classes for playing, recording, and editing audio and video. To play a sound on iOS, you can use the AVPlayer class.</p>
<p>About using the Equalizer you can check that if the MediaPlayer and AVFoundation support the equalizer. MediaPlayer has the Equalizer you can refer to <a href=""https://developer.android.com/reference/android/media/audiofx/Equalizer"" rel=""nofollow noreferrer"">Equalizer for MediaPlayer</a> for more information.</p>
",1
MediaPlayer,Android,pattern,69213079,"<p>Currently, <code>AudioTrack</code> doesn't support the Vorbis format. So, you need to decode your source audio track into raw PCM before feeding it into the <code>AudioTrack</code>.</p>
<p>This can be done using <code>MediaExtractor</code> and <code>MediaCodec</code> (decoder).</p>
<p>Links:</p>
<p><a href=""https://developer.android.com/reference/android/media/MediaExtractor"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaExtractor</a></p>
<p><a href=""https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers</a></p>
",0
MediaPlayer,Android,pattern,64641883,"<p>When you use <code>media player</code> to play music, the media player does not directly play the music, but requests the playback engine of the android system to play the music.
When you no longer use the playback engine of the android system, you should call the <code>release()</code> method of the <code>media player</code> to release system resources.</p>
",1
MediaPlayer,Android,pattern,75930166,"<p>To determine which MediaController is currently playing when there are multiple active sessions, you can use the MediaController.getPlaybackState() method to get the current playback state of each MediaController. Here's an example code snippet that demonstrates how to do this:</p>
<pre><code>private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState?.state == PlaybackState.STATE_PLAYING || 
                playbackState?.state == PlaybackState.STATE_BUFFERING) {
                val mediaMetadata = mediaController.metadata
                // Use the metadata to get information about the currently playing song
                //
            }
        }
    }
</code></pre>
",0
MediaPlayer,Android,pattern,75870736,"<p>I think maybe something like the following might work:</p>
<pre><code>private var currentMediaController: MediaController? = null

private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        var latestPlaybackState: PlaybackState? = null
        var latestMediaController: MediaController? = null

        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState != null) {
                if (latestPlaybackState == null || playbackState.lastPositionUpdateTime &gt; latestPlaybackState.lastPositionUpdateTime) {
                    if (playbackState.state == PlaybackState.STATE_PLAYING) {
                        latestPlaybackState = playbackState
                        latestMediaController = mediaController
                    }
                }
            }
        }

        currentMediaController = latestMediaController
        // Now you have the MediaController that is currently playing.
        // You can get the playback state using currentMediaController?.playbackState.
    }
</code></pre>
<p>This code iterates over all the <code>MediaControllers</code> in the list and checks their <code>PlaybackState</code>. If a <code>MediaController</code> has a <code>PlaybackState</code> that is newer than the previous <code>PlaybackState</code> seen, it becomes the new &quot;latest&quot; <code>PlaybackState</code>, and the corresponding <code>MediaController</code> becomes the new <code>latestMediaController</code>. If the <code>PlaybackState</code> indicates that the media is playing, <code>latestMediaController</code> is updated accordingly.</p>
<p>Note that this code assumes that each <code>MediaController</code> has a unique <code>PlaybackState</code> object. If two <code>MediaControllers</code> have the same <code>PlaybackState</code> object (i.e., they are both playing the same media), this code may not work correctly. In that case, you could use other criteria (such as the package name of the <code>MediaController</code>) to determine which one is actually playing. cg</p>
",1
MediaPlayer,Android,pattern,66410738,"<p><strong>Jetpack Media3 has launched!</strong><br />
<a href=""https://developer.android.com/jetpack/androidx/releases/media3"" rel=""nofollow noreferrer"">https://developer.android.com/jetpack/androidx/releases/media3</a></p>
<p><a href=""https://android-developers.googleblog.com/2021/10/jetpack-media3.html"" rel=""nofollow noreferrer"">This blog post gives a great explanation about how the media libraries evolved.</a> <strong>I strongly recommend</strong> integrating with <code>androidx.media3</code>.</p>
<p>If for whatever reason you <em>cannot</em> use <code>androidx.media3</code>, my recommendation is to stick with <code>androidx.media</code> instead of <code>androidx.media2</code> due to the latter not being supported by other media integrations, such as Cast Connect. Integrating Media2 with ExoPlayer is also quite a bit more complex.</p>
<p>From my perspective, the key benefit of switching from Media1 to Media2 is the ability to provide more fine-grained permission controls. <a href=""https://medium.com/google-exoplayer/the-media2-extension-for-exoplayer-d6b7d89b9063"" rel=""nofollow noreferrer"">See Jaewan Kim's blog post</a> that goes in depth about the more complex SessionPlayerConnector API and permissions to accept or reject connections from a controller in media2.</p>
<p>If you have an existing Media1 implementation using MediaSession (preferably using ExoPlayer with MediaSessionConnector), and have no need for the permission controls in Media2, you can either stick with Media1 or upgrade to Media3.</p>
<p>The <a href=""https://youtu.be/sTIBDcyCmCg"" rel=""nofollow noreferrer"">“What's next for AndroidX Media and ExoPlayer”</a> talk from Android Dev Summit 2021 goes much more in depth on Media3.</p>
",0
MediaPlayer,Android,pattern,62966849,"<p><strong>I Think</strong>,change your <code>mediaRecorder?.setoutFormat</code> to</p>
<pre><code>mediaRecorder?.setOutputFormat(MediaRecorder.OutputFormat.MPEG_2_TS)
</code></pre>
<p><strong>Or</strong></p>
<pre><code>mediaRecorder?.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP)
</code></pre>
<p>prepare your MediaPlayer <code>mediaPlayer?.prepare()</code> before starting of your recording</p>
<p>And, play your Background music (with volume as you want) and start the recorder .</p>
<p>May it Works. Thanks!</p>
",0
MediaPlayer,Android,pattern,61598798,"<p>turns out the videoView starting playback somehow paused the mediaplayer.
what solved the problem was just calling mediaplayer.start() again. it did resume where it had stopped all the times before. the (apparently existing) short break in playback is not noticeable.</p>

<p>why is this behaviour of mediaplayer/videoview not mentioned anywhere?</p>

<p>issue-solving-code:</p>

<pre><code>        z.schedule(new TimerTask() {
        @Override
        public void run() {
            runOnUiThread(new Runnable() {

                @Override
                public void run() {
                    playPart2();
                    mediaplayer.start();
                }
            });
        }
    }, PARTONELENGTH + MAPDISPLAYTIME + IMAGEDISPLAYTIME);
</code></pre>
",1
MediaPlayer,Android,environment,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",1
MediaPlayer,Android,environment,76461455,"<p>On Android, you can use the MediaPlayer class to play sound. The MediaPlayer class can play audio and video files, and it provides a rich set of features such as seeking, looping, and volume control.</p>
<p>On iOS, you can use the AVFoundation framework to play sound. The AVFoundation framework provides classes for playing, recording, and editing audio and video. To play a sound on iOS, you can use the AVPlayer class.</p>
<p>About using the Equalizer you can check that if the MediaPlayer and AVFoundation support the equalizer. MediaPlayer has the Equalizer you can refer to <a href=""https://developer.android.com/reference/android/media/audiofx/Equalizer"" rel=""nofollow noreferrer"">Equalizer for MediaPlayer</a> for more information.</p>
",1
MediaPlayer,Android,environment,66483686,"<p>Found the answer. Seems like I wasn't Media Session... According to
<a href=""https://developer.android.com/guide/topics/media-apps/working-with-a-media-session"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/working-with-a-media-session</a></p>
<p>We would need to use Media Session to tell the System that there is a media session happening in your app and each time you tell the system that your player is active or playing then your application would have priority over the media controllers on the remote and no other application can access it unless you state that your media session is no longer active.</p>
<p>This helped too! <a href=""https://developer.android.com/codelabs/supporting-mediasession"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/supporting-mediasession</a></p>
<p>Hope this helps anyone else!</p>
",0
MediaPlayer,Android,environment,69213079,"<p>Currently, <code>AudioTrack</code> doesn't support the Vorbis format. So, you need to decode your source audio track into raw PCM before feeding it into the <code>AudioTrack</code>.</p>
<p>This can be done using <code>MediaExtractor</code> and <code>MediaCodec</code> (decoder).</p>
<p>Links:</p>
<p><a href=""https://developer.android.com/reference/android/media/MediaExtractor"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaExtractor</a></p>
<p><a href=""https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers</a></p>
",0
MediaPlayer,Android,environment,64641883,"<p>When you use <code>media player</code> to play music, the media player does not directly play the music, but requests the playback engine of the android system to play the music.
When you no longer use the playback engine of the android system, you should call the <code>release()</code> method of the <code>media player</code> to release system resources.</p>
",1
MediaPlayer,Android,environment,75440451,"<p>The library suffers lack of documentation (as will probably be the case until a stable release).</p>
<p>For a simple implementation for audio playback, which also supports background playback, we need to have our player separated from our activity, and rather live in something isolated from it but can still be part of our application, the answer is a <code>Service</code>, and services can use application context freely, and can run in the background.</p>
<p>So let's assume you want to create an app that plays music, you will need:</p>
<ul>
<li>An activity (let's call it <code>MainActivity</code>)</li>
<li>A service (let's call it <code>MusicPlayerService</code>)</li>
</ul>
<p><em><strong>1- First of all,</strong></em> we declare our activity in the manifest (I believe everyone is familiar with this step).</p>
<p><em><strong>2- Second of all,</strong></em> we declare our service in the manifest:</p>
<pre><code>    &lt;service
        android:name=&quot;.MusicPlayerService&quot;
        android:enabled=&quot;true&quot;
        android:exported=&quot;true&quot;
        android:foregroundServiceType=&quot;mediaPlayback&quot;
        tools:ignore=&quot;ExportedService&quot;&gt;

        &lt;intent-filter&gt;
            &lt;action android:name=&quot;androidx.media3.session.MediaLibraryService&quot;/&gt;
            &lt;action android:name=&quot;android.media.browse.MediaBrowserService&quot; /&gt;
        &lt;/intent-filter&gt;
    &lt;/service&gt;
</code></pre>
<p><em><strong>3- Now for the important steps,</strong></em> we build the necessary architecture for our Media3 library. The UI (MainActivity) has something called 'MediaController' which is basically an interface with the player that lives in the service.</p>
<p>As for the service, there is something called a MediaSession that lives inside it, and also the player itself (exoplayer). There is a special version of media session which controls also the media items (playlist and its info) and exposes it to other clients (such Android Auto, WearOS, etc). It's called MediaLibraryService, we're gonna be experimenting with this one today (but the process of implementation is almost the same).</p>
<p>So, in our MainActivity:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@UnstableApi class MusicActivity : ComponentActivity() {

    /* This is the global variable of the player
       (which is basically a media controller) 
       you're going to use to control playback,
       you're not gonna need anything else other than this,
       which is created from the media controller */
    lateinit var player: Player

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)


        /* Creating session token (links our UI with service and starts it) */
        val sessionToken = SessionToken(applicationContext, ComponentName(this, MusicPlayerService::class.java))

        /* Instantiating our MediaController and linking it to the service using the session token */
        val mediacontrollerFuture = MediaController.Builder(this, sessionToken).buildAsync()

        mediacontrollerFuture.addListener({


            player = mediacontrollerFuture.get()


        }, MoreExecutors.directExecutor())
    }
}
</code></pre>
<p><em><strong>Now for the most interesting part,</strong></em> we create a class called <code>MusicPlayerService</code> which extends <code>MediaLibraryService</code> (or MediaSessionService, depends on your app needs), it is like this:</p>
<pre class=""lang-kotlin prettyprint-override""><code>
@UnstableApi class MusicPlayerService: MediaLibraryService() {

    /* This is the service side player, the media controller in the activity will control this one, so don't worry about it */
    lateinit var player: Player

    /* This is the session which will delegate everything you need about audio playback such as notifications, pausing player, resuming player, listening to states, etc */
    lateinit var session: MediaLibrarySession
    
    override fun  onCreate() {
        super.onCreate()
        
        /* Step 1 out of 2: Instantiate the player (ExoPlayer) */
        player = ExoPlayer.Builder(applicationContext)
            .setRenderersFactory(
                DefaultRenderersFactory(this).setExtensionRendererMode(
                    DefaultRenderersFactory.EXTENSION_RENDERER_MODE_PREFER /* We prefer extensions, such as FFmpeg */
                )
            ).build()


        /* Step 2 out of 2: Instantiate the session (most important part) */
        session = MediaLibrarySession.Builder(this, player,
            object: MediaLibrarySession.Callback {
                override fun onAddMediaItems(
                    mediaSession: MediaSession,
                    controller: MediaSession.ControllerInfo,
                    mediaItems: MutableList&lt;MediaItem&gt;
                ): ListenableFuture&lt;MutableList&lt;MediaItem&gt;&gt; {

                /* This is the trickiest part, if you don't do this here, nothing will play */
                    val updatedMediaItems = mediaItems.map { it.buildUpon().setUri(it.mediaId).build() }.toMutableList()
                    return Futures.immediateFuture(updatedMediaItems)
                }
            }).build()
    }
}
</code></pre>
<p><em><strong>One last thing</strong></em>, if you want to load a media item in an activity, use this:</p>
<pre class=""lang-kotlin prettyprint-override""><code>fun loadMediaItem(uri: Uri) {
    /* We use setMediaId as a unique identifier for the media (which is needed for mediasession and we do NOT use setUri because we're gonna do
       something like setUri(mediaItem.mediaId) when we need to load the media like we did above in the MusicPlayerService and more precisely when we were building the session */
    val newItem = MediaItem.Builder()
        .setMediaId(&quot;$uri&quot;) /* setMediaId and NOT setUri */
        .build()
    
    /* Load it into our activity's MediaController */
    player.setMediaItem(newItem)
    player.prepare()
    player.play()
}
</code></pre>
<p>Hope this gives you a better approach on Media3.</p>
",0
MediaPlayer,Android,environment,66410738,"<p><strong>Jetpack Media3 has launched!</strong><br />
<a href=""https://developer.android.com/jetpack/androidx/releases/media3"" rel=""nofollow noreferrer"">https://developer.android.com/jetpack/androidx/releases/media3</a></p>
<p><a href=""https://android-developers.googleblog.com/2021/10/jetpack-media3.html"" rel=""nofollow noreferrer"">This blog post gives a great explanation about how the media libraries evolved.</a> <strong>I strongly recommend</strong> integrating with <code>androidx.media3</code>.</p>
<p>If for whatever reason you <em>cannot</em> use <code>androidx.media3</code>, my recommendation is to stick with <code>androidx.media</code> instead of <code>androidx.media2</code> due to the latter not being supported by other media integrations, such as Cast Connect. Integrating Media2 with ExoPlayer is also quite a bit more complex.</p>
<p>From my perspective, the key benefit of switching from Media1 to Media2 is the ability to provide more fine-grained permission controls. <a href=""https://medium.com/google-exoplayer/the-media2-extension-for-exoplayer-d6b7d89b9063"" rel=""nofollow noreferrer"">See Jaewan Kim's blog post</a> that goes in depth about the more complex SessionPlayerConnector API and permissions to accept or reject connections from a controller in media2.</p>
<p>If you have an existing Media1 implementation using MediaSession (preferably using ExoPlayer with MediaSessionConnector), and have no need for the permission controls in Media2, you can either stick with Media1 or upgrade to Media3.</p>
<p>The <a href=""https://youtu.be/sTIBDcyCmCg"" rel=""nofollow noreferrer"">“What's next for AndroidX Media and ExoPlayer”</a> talk from Android Dev Summit 2021 goes much more in depth on Media3.</p>
",0
MediaPlayer,Android,environment,72345801,"<p>The ExoPlayer documentation discusses this:</p>
<blockquote>
<p>In ExoPlayer every piece of media is represented by a MediaItem. However internally, the player needs MediaSource instances to play the content. The player creates these from media items using a MediaSource.Factory.</p>
</blockquote>
<p>(<a href=""https://exoplayer.dev/media-sources.html"" rel=""nofollow noreferrer"">https://exoplayer.dev/media-sources.html</a>)</p>
<p>and:</p>
<blockquote>
<p>The playlist API is based on MediaItems, which can be conveniently built using MediaItem.Builder. Inside the player, media items are converted into playable MediaSources by a MediaSource.Factory</p>
</blockquote>
<p>If all you want is to play a media item or create a playlist then you probably only need to use MediaItem - there are some good examples in the latest CodeLabs: <a href=""https://developer.android.com/codelabs/exoplayer-intro#0"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/exoplayer-intro#0</a></p>
",0
MediaPlayer,Android,environment,75870736,"<p>I think maybe something like the following might work:</p>
<pre><code>private var currentMediaController: MediaController? = null

private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        var latestPlaybackState: PlaybackState? = null
        var latestMediaController: MediaController? = null

        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState != null) {
                if (latestPlaybackState == null || playbackState.lastPositionUpdateTime &gt; latestPlaybackState.lastPositionUpdateTime) {
                    if (playbackState.state == PlaybackState.STATE_PLAYING) {
                        latestPlaybackState = playbackState
                        latestMediaController = mediaController
                    }
                }
            }
        }

        currentMediaController = latestMediaController
        // Now you have the MediaController that is currently playing.
        // You can get the playback state using currentMediaController?.playbackState.
    }
</code></pre>
<p>This code iterates over all the <code>MediaControllers</code> in the list and checks their <code>PlaybackState</code>. If a <code>MediaController</code> has a <code>PlaybackState</code> that is newer than the previous <code>PlaybackState</code> seen, it becomes the new &quot;latest&quot; <code>PlaybackState</code>, and the corresponding <code>MediaController</code> becomes the new <code>latestMediaController</code>. If the <code>PlaybackState</code> indicates that the media is playing, <code>latestMediaController</code> is updated accordingly.</p>
<p>Note that this code assumes that each <code>MediaController</code> has a unique <code>PlaybackState</code> object. If two <code>MediaControllers</code> have the same <code>PlaybackState</code> object (i.e., they are both playing the same media), this code may not work correctly. In that case, you could use other criteria (such as the package name of the <code>MediaController</code>) to determine which one is actually playing. cg</p>
",1
MediaPlayer,Android,environment,75930166,"<p>To determine which MediaController is currently playing when there are multiple active sessions, you can use the MediaController.getPlaybackState() method to get the current playback state of each MediaController. Here's an example code snippet that demonstrates how to do this:</p>
<pre><code>private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState?.state == PlaybackState.STATE_PLAYING || 
                playbackState?.state == PlaybackState.STATE_BUFFERING) {
                val mediaMetadata = mediaController.metadata
                // Use the metadata to get information about the currently playing song
                //
            }
        }
    }
</code></pre>
",0
MediaPlayer,Android,alternative,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",0
MediaPlayer,Android,alternative,76461455,"<p>On Android, you can use the MediaPlayer class to play sound. The MediaPlayer class can play audio and video files, and it provides a rich set of features such as seeking, looping, and volume control.</p>
<p>On iOS, you can use the AVFoundation framework to play sound. The AVFoundation framework provides classes for playing, recording, and editing audio and video. To play a sound on iOS, you can use the AVPlayer class.</p>
<p>About using the Equalizer you can check that if the MediaPlayer and AVFoundation support the equalizer. MediaPlayer has the Equalizer you can refer to <a href=""https://developer.android.com/reference/android/media/audiofx/Equalizer"" rel=""nofollow noreferrer"">Equalizer for MediaPlayer</a> for more information.</p>
",1
MediaPlayer,Android,alternative,66483686,"<p>Found the answer. Seems like I wasn't Media Session... According to
<a href=""https://developer.android.com/guide/topics/media-apps/working-with-a-media-session"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media-apps/working-with-a-media-session</a></p>
<p>We would need to use Media Session to tell the System that there is a media session happening in your app and each time you tell the system that your player is active or playing then your application would have priority over the media controllers on the remote and no other application can access it unless you state that your media session is no longer active.</p>
<p>This helped too! <a href=""https://developer.android.com/codelabs/supporting-mediasession"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/supporting-mediasession</a></p>
<p>Hope this helps anyone else!</p>
",0
MediaPlayer,Android,alternative,64641883,"<p>When you use <code>media player</code> to play music, the media player does not directly play the music, but requests the playback engine of the android system to play the music.
When you no longer use the playback engine of the android system, you should call the <code>release()</code> method of the <code>media player</code> to release system resources.</p>
",1
MediaPlayer,Android,alternative,66410738,"<p><strong>Jetpack Media3 has launched!</strong><br />
<a href=""https://developer.android.com/jetpack/androidx/releases/media3"" rel=""nofollow noreferrer"">https://developer.android.com/jetpack/androidx/releases/media3</a></p>
<p><a href=""https://android-developers.googleblog.com/2021/10/jetpack-media3.html"" rel=""nofollow noreferrer"">This blog post gives a great explanation about how the media libraries evolved.</a> <strong>I strongly recommend</strong> integrating with <code>androidx.media3</code>.</p>
<p>If for whatever reason you <em>cannot</em> use <code>androidx.media3</code>, my recommendation is to stick with <code>androidx.media</code> instead of <code>androidx.media2</code> due to the latter not being supported by other media integrations, such as Cast Connect. Integrating Media2 with ExoPlayer is also quite a bit more complex.</p>
<p>From my perspective, the key benefit of switching from Media1 to Media2 is the ability to provide more fine-grained permission controls. <a href=""https://medium.com/google-exoplayer/the-media2-extension-for-exoplayer-d6b7d89b9063"" rel=""nofollow noreferrer"">See Jaewan Kim's blog post</a> that goes in depth about the more complex SessionPlayerConnector API and permissions to accept or reject connections from a controller in media2.</p>
<p>If you have an existing Media1 implementation using MediaSession (preferably using ExoPlayer with MediaSessionConnector), and have no need for the permission controls in Media2, you can either stick with Media1 or upgrade to Media3.</p>
<p>The <a href=""https://youtu.be/sTIBDcyCmCg"" rel=""nofollow noreferrer"">“What's next for AndroidX Media and ExoPlayer”</a> talk from Android Dev Summit 2021 goes much more in depth on Media3.</p>
",0
MediaPlayer,Android,alternative,75870736,"<p>I think maybe something like the following might work:</p>
<pre><code>private var currentMediaController: MediaController? = null

private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        var latestPlaybackState: PlaybackState? = null
        var latestMediaController: MediaController? = null

        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState != null) {
                if (latestPlaybackState == null || playbackState.lastPositionUpdateTime &gt; latestPlaybackState.lastPositionUpdateTime) {
                    if (playbackState.state == PlaybackState.STATE_PLAYING) {
                        latestPlaybackState = playbackState
                        latestMediaController = mediaController
                    }
                }
            }
        }

        currentMediaController = latestMediaController
        // Now you have the MediaController that is currently playing.
        // You can get the playback state using currentMediaController?.playbackState.
    }
</code></pre>
<p>This code iterates over all the <code>MediaControllers</code> in the list and checks their <code>PlaybackState</code>. If a <code>MediaController</code> has a <code>PlaybackState</code> that is newer than the previous <code>PlaybackState</code> seen, it becomes the new &quot;latest&quot; <code>PlaybackState</code>, and the corresponding <code>MediaController</code> becomes the new <code>latestMediaController</code>. If the <code>PlaybackState</code> indicates that the media is playing, <code>latestMediaController</code> is updated accordingly.</p>
<p>Note that this code assumes that each <code>MediaController</code> has a unique <code>PlaybackState</code> object. If two <code>MediaControllers</code> have the same <code>PlaybackState</code> object (i.e., they are both playing the same media), this code may not work correctly. In that case, you could use other criteria (such as the package name of the <code>MediaController</code>) to determine which one is actually playing. cg</p>
",1
MediaPlayer,Android,alternative,69213079,"<p>Currently, <code>AudioTrack</code> doesn't support the Vorbis format. So, you need to decode your source audio track into raw PCM before feeding it into the <code>AudioTrack</code>.</p>
<p>This can be done using <code>MediaExtractor</code> and <code>MediaCodec</code> (decoder).</p>
<p>Links:</p>
<p><a href=""https://developer.android.com/reference/android/media/MediaExtractor"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaExtractor</a></p>
<p><a href=""https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/media/MediaCodec#asynchronous-processing-using-buffers</a></p>
",0
MediaPlayer,Android,alternative,75930166,"<p>To determine which MediaController is currently playing when there are multiple active sessions, you can use the MediaController.getPlaybackState() method to get the current playback state of each MediaController. Here's an example code snippet that demonstrates how to do this:</p>
<pre><code>private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState?.state == PlaybackState.STATE_PLAYING || 
                playbackState?.state == PlaybackState.STATE_BUFFERING) {
                val mediaMetadata = mediaController.metadata
                // Use the metadata to get information about the currently playing song
                //
            }
        }
    }
</code></pre>
",0
MediaPlayer,Android,alternative,72345801,"<p>The ExoPlayer documentation discusses this:</p>
<blockquote>
<p>In ExoPlayer every piece of media is represented by a MediaItem. However internally, the player needs MediaSource instances to play the content. The player creates these from media items using a MediaSource.Factory.</p>
</blockquote>
<p>(<a href=""https://exoplayer.dev/media-sources.html"" rel=""nofollow noreferrer"">https://exoplayer.dev/media-sources.html</a>)</p>
<p>and:</p>
<blockquote>
<p>The playlist API is based on MediaItems, which can be conveniently built using MediaItem.Builder. Inside the player, media items are converted into playable MediaSources by a MediaSource.Factory</p>
</blockquote>
<p>If all you want is to play a media item or create a playlist then you probably only need to use MediaItem - there are some good examples in the latest CodeLabs: <a href=""https://developer.android.com/codelabs/exoplayer-intro#0"" rel=""nofollow noreferrer"">https://developer.android.com/codelabs/exoplayer-intro#0</a></p>
",0
MediaPlayer,Android,alternative,61598798,"<p>turns out the videoView starting playback somehow paused the mediaplayer.
what solved the problem was just calling mediaplayer.start() again. it did resume where it had stopped all the times before. the (apparently existing) short break in playback is not noticeable.</p>

<p>why is this behaviour of mediaplayer/videoview not mentioned anywhere?</p>

<p>issue-solving-code:</p>

<pre><code>        z.schedule(new TimerTask() {
        @Override
        public void run() {
            runOnUiThread(new Runnable() {

                @Override
                public void run() {
                    playPart2();
                    mediaplayer.start();
                }
            });
        }
    }, PARTONELENGTH + MAPDISPLAYTIME + IMAGEDISPLAYTIME);
</code></pre>
",1
BigDecimal,Kotlin,functionality,69080938,"<p>I'm afraid you <em>can't</em> convert a BigDecimal into a Double without losing precision, for several reasons:</p>
<ul>
<li>There are many more possible values for BigDecimal than for Double, so the conversion is necessarily lossy.</li>
</ul>
<p>Doubles are 64-bit, so can't have more than 2⁶⁴ distinct values, while BigDecimals are effectively unlimited.</p>
<ul>
<li>BigDecimals store decimal fractions, while Doubles store binary fractions.  There's very little overlap between the two, so in most cases the conversion will need to round the value.</li>
</ul>
<p>Both can store integers exactly (up to a certain value), and both can store fractions such as 0.5 exactly.  But nearly all decimal fractions can't be represented exactly as a binary fraction, and so for example there's no Double holding exactly 0.1.  (1/10 is an infinite recurring fraction in binary — 0.0001100110011… — and so no finite binary fraction can represent it exactly.)</p>
<p>This means that in Kotlin (and most other programming languages), a numeric literal such as 0.1 gets converted to the nearest double-precision number, which is around 0.100000000000000005551115….  In practice, this is usually hidden from you, because when you print out a Double, the formatting routine will round it off, and in many cases that gives back the original number.  But not always, e.g.:</p>
<pre><code>&gt;&gt;&gt; println(0.1 + 0.1 + 0.1)
0.30000000000000004
</code></pre>
<p>(All of this is discussed in other questions, most notably <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<ul>
<li>Unlike BigDecimals, Doubles have no precision, so they can't make the distinction you want anyway.</li>
</ul>
<p>For example, both 1.0 and 1.000000 are represented by exactly the same Double value:</p>
<pre><code>&gt;&gt;&gt; println(1.000000)
1.0
</code></pre>
<hr />
<p>I don't know Vert.x, but I'd be surprised if you really needed a Double here.  Have you tried using a BigDecimal directly?</p>
<p>Or if that doesn't work, have you tried converting it to a String, which will preserve whatever formatting you want?</p>
",1
BigDecimal,Kotlin,functionality,62020741,"<p>Take a look at the <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a> class. You can easily set the scale to 4 digits and it can be created with a Double.</p>
",1
BigDecimal,Kotlin,functionality,74245972,"<p>If you care about exact decimal values, then <a href=""https://stackoverflow.com/questions/588004/is-floating-point-math-broken"">don't use floating-point</a>. Instead, <strong>use a type that's intended for storing exact decimal values, such as <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a></strong>.</p>
<p>(Floating-point types such as Kotlin's Float and Double can hold numbers across a huge range of magnitude, and store and calculate with them efficiently. But they use binary floating-point, not decimal. So they're great when you care about doing calculations efficiently and flexibly — but not when you need to store <em>exact</em> decimal values. Most of the questions about floating-point on this site seem to be for the latter cases, unfortunately…)</p>
<p>Kotlin has lots of <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/java.math.-big-decimal/"" rel=""nofollow noreferrer"">extensions</a> making it almost as easy to handle BigDecimals as the native types. They're a little less efficient, but not by anywhere near enough to be significant in a calculator project. And they do exactly what you want here: storing and manipulating decimal numbers exactly.</p>
<p>And because they're exact, you shouldn't need to do any rounding — and probably won't need to do any formatting either.</p>
<p>(Just make sure you create them directly from strings, not from floats/doubles — which will already have been rounded to the nearest binary floating-point number.)</p>
",1
BigDecimal,Kotlin,functionality,69141252,"<p>This happens because you are declaring a double, <code>8875.87</code>, and <em>then</em> turning it into a BigDecimal. There is no exact double-precision floating point representation for <code>8875.87</code> so the rounding has already occurred before you call <code>toBigDecimal</code>.</p>
<p>To keep the precision, you need to pass the values to the <code>BigDecimal</code> constructor as a string:</p>
<pre><code>val a = BigDecimal(&quot;8875.87&quot;)
val b = BigDecimal(&quot;778.55&quot;)
println(&quot;${a*b}&quot;)
</code></pre>
",1
BigDecimal,Kotlin,functionality,56134099,"<blockquote>
  <p>In Kotlin 123.456 is a valid Double value</p>
</blockquote>

<p>Actually, that's not quite true.  There's a Double value very <em>close</em> to 123.456, but it's not <em>exactly</em> 123.456.  What you're seeing is the consequences of that.</p>

<p>So you can't maintain precision, because you don't have that precision to start with!</p>

<p>Short answer:</p>

<p><strong>If you need exact values, don't use floating-point!</strong></p>

<p>(In particular: <strong>Never store money values in floating-point!</strong>  See for example <a href=""https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency?rq=1"">this</a> question.)</p>

<p>The best alternative is usually <code>BigDecimal</code> which can store and calculate decimal fractions to an arbitrary precision.  They're less efficient, but Kotlin's operator overloading makes them painless to use (unlike Java!).</p>

<p>Or if you're not going to be doing any calculations, you could store them as <code>String</code>s.</p>

<p>Or if you'll only need a certain number of decimal places, you could scale them all up to <code>Int</code>s (or <code>Long</code>s).</p>

<p>Technical explanation:</p>

<p>Floats and Doubles use binary floating-point; they store an integer, and an integer power of 2 to multiple or divide it by.  (For example, 3/4 would be stored as 3*2⁻².)  This means they can store a wide range of binary fractions exactly.</p>

<p>However, just as you can't store 1/3 as a decimal fraction (it's 0.3333333333…, but any finite number of digits will only be an approximation), so you can't store 1/10 as a binary fraction (it's 0.000110011001100…).  This means that <strong>a binary floating-point number can't store most decimal numbers exactly</strong>.</p>

<p>Instead, they store the nearest possible value to the number you want.  And the routines which convert them to a String will try to undo that difference, by rounding appropriately.  But that doesn't always give the result you expect.</p>

<p>Floating-point numbers are great when you need a huge range of values (e.g. in scientific and technical use), but don't care about storing them exactly.</p>
",1
BigDecimal,Kotlin,functionality,68045240,"<p>Using a <a href=""https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html"" rel=""noreferrer""><code>DecimalFormat</code></a> is a perfectly good way to format a number.</p>
<p>However, you have a deeper issue here, which is that you should <strong>never use a Float or Double to store a value that needs to be exact, such as money</strong>.</p>
<p>That's because Floats and Doubles are stored as binary fractions, not decimal fractions.  And just as you can't represent 1/3 exactly as a decimal fraction of any finite length (0.33333333333…), so you can't represent 1/10 exactly as a binary fraction (0.0001100110011…).  So most of the decimal numbers you want to store will get approximated and rounded to the nearest binary fraction that <em>can</em> be stored.  This isn't always obvious — when printing them out, they get rounded again to the nearest decimal fraction, and in many cases that ‘recovers’ the number you want — but there are many cases where it's noticeable, especially as the result of calculations.</p>
<p>You can see the effect in the Kotlin REPL:</p>
<pre><code>&gt;&gt;&gt; 0.1 + 0.2
res0: kotlin.Double = 0.30000000000000004
</code></pre>
<p>In this case, the binary fractions nearest to 0.1 and 0.2 sum to give a binary fraction that's nearer to 0.30000000000000004 than it is to 0.3.</p>
<p>(There are many existing questions on StackOverflow discussing this, such as <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<p>So if you need your money values to be accurate (and you almost always do!), then you should store them some other way.  For example, if you only ever need two decimal places (i.e. the number of paise), then simply store the number of paise as an integer.  Or if you don't need to do any calculations, you could store the number as a string (which is otherwise a bad idea…).</p>
<p>However, the most general and flexible way in Kotlin (and Java) is to <strong>use <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""noreferrer"">BigDecimal</a></strong>.  That uses decimal fractions internally to represent any decimal number exactly, to any precision you need, and you can easily do calculations and other manipulations.</p>
<p>In Java, using it is awkward and long-winded, but Kotlin's operator overloading makes it very natural, e.g.:</p>
<pre><code>&gt;&gt;&gt; val p1 = &quot;0.1&quot;.toBigDecimal()
&gt;&gt;&gt; val p2 = &quot;0.2&quot;.toBigDecimal()
&gt;&gt;&gt; p1 + p2
res3: java.math.BigDecimal = 0.3
</code></pre>
<p><code>DecimalFormat</code> supports it too:</p>
<pre><code>&gt;&gt;&gt; java.text.DecimalFormat(&quot;#,##0.00&quot;).format(p1 + p2)
res4: kotlin.String! = 0.30
</code></pre>
<p>(Note: do <strong>not</strong> create a BigDecimal from a Float or Double, as the damage will already have been done.  If you have an integer value, then start from an integer type such as Int or Long; otherwise, you'll need to start from a String to get an exact value.)</p>
",1
BigDecimal,Kotlin,functionality,62529762,"<p><strong>Triple is the option of your question</strong></p>
<p>Kotlin language provides a simple datatype to store three values in a single instance. This can be done using a data class known as Triple. It is a simple generic class that stores any three values, there is no valuable meaning of the relationship between the three values. The comparison between two Triple objects is done on the basis of values, i.e. two Triples are equal only if all three component are equal.</p>
<p><strong>Class Definition –</strong></p>
<pre><code>data class Pair&lt;out A, out B, out C&gt; : Serializable
</code></pre>
<p>There are three parameters:
A – type of the first value
B – type of the second value
C – type of the third value</p>
<p><strong>Constructor –</strong>
In Kotlin, constructor is a special member function that is invoked when an object of the class is created primarily to initialize variables or properties. To create a new instance of the Triple we use:</p>
<pre><code>Pair(first: A, second: B, third: C)
</code></pre>
<p>Kotlin example of creating triple using the constructor –</p>
<pre><code>fun main() { 
    val (x, y, z) = Triple(1, &quot;Person&quot;, 2.0) 
    println(x) 
    println(y) 
    println(z) 
} 
</code></pre>
<p><strong>Output:</strong></p>
<p>1
Person
2.0</p>
",0
BigDecimal,Kotlin,functionality,61879213,"<p>A key part of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html"" rel=""nofollow noreferrer""><code>BigDecimal</code></a> is that you must use it literally the whole way through: passing <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Double.html"" rel=""nofollow noreferrer""><code>Double</code></a> into <code>BigDecimal</code> destroys any benefit you would get from <code>BigDecimal</code>.</p>
<p>You must use <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#%3Cinit%3E(java.lang.String)"" rel=""nofollow noreferrer"">constructor taking a <code>String</code></a>, <code>BigDecimal(&quot;0.00200&quot;)</code> and <code>BigDecimal(&quot;0.00400&quot;)</code>, with the quotes. Then call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#multiply(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>multiply</code></a> on them.  You must not call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#doubleValue()"" rel=""nofollow noreferrer""><code>doubleValue()</code></a> on the result.</p>
<p>Equality testing on <code>BigDecimal</code> also adds complications, requiring exactly the same scale.  Consider using <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#compareTo(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>compareTo</code></a> like this, <code>assertTrue(expected.compareTo(actual) == 0)</code>.</p>
<p>Another issue: Your math is incorrect. 0.00200 * 0.00400 = 0.000008 rather than 0.00800.</p>
<p>Example code using only <code>BigDecimal</code> while avoiding <code>Double</code>. In Java syntax. Corrected your inputs.</p>
<pre><code>var a = &quot;0.002000&quot; ;
var b = &quot;0.004000&quot; ;
var expected = &quot;0.000008&quot; ;

var actual = new BigDecimal( a ).multiply( new BigDecimal( b ) ) ;
actual = actual.setScale( new BigDecimal( a ).scale() ) ;  // Set scale of result to match the scale of inputs.
boolean matching = actual.equals( new BigDecimal( expected ) ) ;
</code></pre>
<p>See this <a href=""https://ideone.com/Idqphj"" rel=""nofollow noreferrer"">code run live at IdeOne.com</a>.</p>
<blockquote>
<p>actual: actual: 0.000008</p>
<p>matching: true</p>
</blockquote>
",1
BigDecimal,Kotlin,functionality,59947856,"<p>The problem here is not in the <code>setScale()</code> call, but happens before that.  <strong>You're constructing the <code>BigDecimal</code> from a <code>Double</code> value</strong> — a value which is <em>close</em> to 0.58, but isn't exactly.</p>

<p>(<code>FLoat</code>s and <code>Double</code>s are <em>binary</em> floating-point — and almost <strong>no decimal fractions have an exact binary representation</strong>.  In this case, 0.58 is 0.10010100011110101110000101… in binary.  No <code>Double</code> can store that exactly; the best if can do is store a value very close to it.)</p>

<p>The <code>BigDecimal</code> then does its best to store <em>that</em> value as precisely as possible.  You can see this in the REPL:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(0.58)
res1: java.math.BigDecimal = 0.57999999999999996003197111349436454474925994873046875
</code></pre>

<p>…which makes it obvious why that rounds down to 0.57, not 0.58.</p>

<p>And that holds for all of your problem cases: the nearest <code>Double</code> is slightly less than the decimal value you specify, and so rounds down.  (In the others, it's slightly <em>greater</em>, so those round as expected.  But the underlying problem is still there.)</p>

<p>The best solution is to avoid floating-point binary numbers entirely, and <strong>use the <code>BigDecimal(String)</code> constructor</strong>:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(""0.58"").setScale(2, java.math.RoundingMode.FLOOR)
res6: java.math.BigDecimal! = 0.58
</code></pre>

<p>(In this case, of course, there's no longer a need for the <code>setScale()</code> call at all, as the value now has a scale of 2 already!  But it does no harm.)</p>
",1
BigDecimal,Kotlin,functionality,75931629,"<p>This is working correctly per the language.
Documentation around Float: <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-float/"" rel=""nofollow noreferrer"">Kotlin Float</a></p>
<p>Kotlin, like many languages uses IEEE-754 (<a href=""https://en.wikipedia.org/wiki/IEEE_754"" rel=""nofollow noreferrer"">Wiki</a>) as the standard for Floating point math and representation.</p>
<p>The difference of 64 bit width of a Double, and the 32 bit width of a Float means that when converting from Double to Float, we lose precision.</p>
<p><a href=""https://i.sstatic.net/Bu8qP.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/Bu8qP.png"" alt=""Kotlin error for Float precision"" /></a></p>
<p>According to the Wiki for IEEE-754, under the table: <strong>Basic and interchange formats</strong> we see that the max decimal digits of a floating point, 32 bit number is 7 digits. Your example is higher than Kotlin's Float, which is a 32 bit number.</p>
<p>A number with one less digit will let you use the precision you need. Otherwise you will need to use a Double for numbers as large as you are expecting.</p>
<p><a href=""https://i.sstatic.net/6FGpA.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/6FGpA.png"" alt=""incorrect float, correct float, and correct double"" /></a></p>
<p>As a note, Double is limited to 16 significant digits for precision</p>
<p><a href=""https://i.sstatic.net/RG1aW.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/RG1aW.png"" alt=""double max precision"" /></a></p>
<p>You can use the editor suggestion for larger based numbers</p>
",0
BigDecimal,Kotlin,concept,69080938,"<p>I'm afraid you <em>can't</em> convert a BigDecimal into a Double without losing precision, for several reasons:</p>
<ul>
<li>There are many more possible values for BigDecimal than for Double, so the conversion is necessarily lossy.</li>
</ul>
<p>Doubles are 64-bit, so can't have more than 2⁶⁴ distinct values, while BigDecimals are effectively unlimited.</p>
<ul>
<li>BigDecimals store decimal fractions, while Doubles store binary fractions.  There's very little overlap between the two, so in most cases the conversion will need to round the value.</li>
</ul>
<p>Both can store integers exactly (up to a certain value), and both can store fractions such as 0.5 exactly.  But nearly all decimal fractions can't be represented exactly as a binary fraction, and so for example there's no Double holding exactly 0.1.  (1/10 is an infinite recurring fraction in binary — 0.0001100110011… — and so no finite binary fraction can represent it exactly.)</p>
<p>This means that in Kotlin (and most other programming languages), a numeric literal such as 0.1 gets converted to the nearest double-precision number, which is around 0.100000000000000005551115….  In practice, this is usually hidden from you, because when you print out a Double, the formatting routine will round it off, and in many cases that gives back the original number.  But not always, e.g.:</p>
<pre><code>&gt;&gt;&gt; println(0.1 + 0.1 + 0.1)
0.30000000000000004
</code></pre>
<p>(All of this is discussed in other questions, most notably <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<ul>
<li>Unlike BigDecimals, Doubles have no precision, so they can't make the distinction you want anyway.</li>
</ul>
<p>For example, both 1.0 and 1.000000 are represented by exactly the same Double value:</p>
<pre><code>&gt;&gt;&gt; println(1.000000)
1.0
</code></pre>
<hr />
<p>I don't know Vert.x, but I'd be surprised if you really needed a Double here.  Have you tried using a BigDecimal directly?</p>
<p>Or if that doesn't work, have you tried converting it to a String, which will preserve whatever formatting you want?</p>
",1
BigDecimal,Kotlin,concept,62020741,"<p>Take a look at the <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a> class. You can easily set the scale to 4 digits and it can be created with a Double.</p>
",1
BigDecimal,Kotlin,concept,69141252,"<p>This happens because you are declaring a double, <code>8875.87</code>, and <em>then</em> turning it into a BigDecimal. There is no exact double-precision floating point representation for <code>8875.87</code> so the rounding has already occurred before you call <code>toBigDecimal</code>.</p>
<p>To keep the precision, you need to pass the values to the <code>BigDecimal</code> constructor as a string:</p>
<pre><code>val a = BigDecimal(&quot;8875.87&quot;)
val b = BigDecimal(&quot;778.55&quot;)
println(&quot;${a*b}&quot;)
</code></pre>
",1
BigDecimal,Kotlin,concept,74245972,"<p>If you care about exact decimal values, then <a href=""https://stackoverflow.com/questions/588004/is-floating-point-math-broken"">don't use floating-point</a>. Instead, <strong>use a type that's intended for storing exact decimal values, such as <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a></strong>.</p>
<p>(Floating-point types such as Kotlin's Float and Double can hold numbers across a huge range of magnitude, and store and calculate with them efficiently. But they use binary floating-point, not decimal. So they're great when you care about doing calculations efficiently and flexibly — but not when you need to store <em>exact</em> decimal values. Most of the questions about floating-point on this site seem to be for the latter cases, unfortunately…)</p>
<p>Kotlin has lots of <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/java.math.-big-decimal/"" rel=""nofollow noreferrer"">extensions</a> making it almost as easy to handle BigDecimals as the native types. They're a little less efficient, but not by anywhere near enough to be significant in a calculator project. And they do exactly what you want here: storing and manipulating decimal numbers exactly.</p>
<p>And because they're exact, you shouldn't need to do any rounding — and probably won't need to do any formatting either.</p>
<p>(Just make sure you create them directly from strings, not from floats/doubles — which will already have been rounded to the nearest binary floating-point number.)</p>
",1
BigDecimal,Kotlin,concept,60081802,"<p>You can't. A <code>double</code> can represent only a sparse subset of the real numbers. You might get away with using a <code>double</code> if you can format the output appropriately (which is essentially what Microsoft Excel does, along with some very clever tricks for expressions like 1/3 + 1/3 + 1/3).</p>

<p>If you need perfect precision then use a type capable of doing that. The decimal type <code>BigDecimal</code> is probably what you want.</p>

<p>If you're working with money, and don't need to worry about currencies that have 1000s (e.g. Tunisian Dinar) or bitcoin (8 decimal places), then working in cents and using integers is one approach.</p>
",1
BigDecimal,Kotlin,concept,61879213,"<p>A key part of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html"" rel=""nofollow noreferrer""><code>BigDecimal</code></a> is that you must use it literally the whole way through: passing <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Double.html"" rel=""nofollow noreferrer""><code>Double</code></a> into <code>BigDecimal</code> destroys any benefit you would get from <code>BigDecimal</code>.</p>
<p>You must use <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#%3Cinit%3E(java.lang.String)"" rel=""nofollow noreferrer"">constructor taking a <code>String</code></a>, <code>BigDecimal(&quot;0.00200&quot;)</code> and <code>BigDecimal(&quot;0.00400&quot;)</code>, with the quotes. Then call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#multiply(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>multiply</code></a> on them.  You must not call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#doubleValue()"" rel=""nofollow noreferrer""><code>doubleValue()</code></a> on the result.</p>
<p>Equality testing on <code>BigDecimal</code> also adds complications, requiring exactly the same scale.  Consider using <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#compareTo(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>compareTo</code></a> like this, <code>assertTrue(expected.compareTo(actual) == 0)</code>.</p>
<p>Another issue: Your math is incorrect. 0.00200 * 0.00400 = 0.000008 rather than 0.00800.</p>
<p>Example code using only <code>BigDecimal</code> while avoiding <code>Double</code>. In Java syntax. Corrected your inputs.</p>
<pre><code>var a = &quot;0.002000&quot; ;
var b = &quot;0.004000&quot; ;
var expected = &quot;0.000008&quot; ;

var actual = new BigDecimal( a ).multiply( new BigDecimal( b ) ) ;
actual = actual.setScale( new BigDecimal( a ).scale() ) ;  // Set scale of result to match the scale of inputs.
boolean matching = actual.equals( new BigDecimal( expected ) ) ;
</code></pre>
<p>See this <a href=""https://ideone.com/Idqphj"" rel=""nofollow noreferrer"">code run live at IdeOne.com</a>.</p>
<blockquote>
<p>actual: actual: 0.000008</p>
<p>matching: true</p>
</blockquote>
",1
BigDecimal,Kotlin,concept,68045240,"<p>Using a <a href=""https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html"" rel=""noreferrer""><code>DecimalFormat</code></a> is a perfectly good way to format a number.</p>
<p>However, you have a deeper issue here, which is that you should <strong>never use a Float or Double to store a value that needs to be exact, such as money</strong>.</p>
<p>That's because Floats and Doubles are stored as binary fractions, not decimal fractions.  And just as you can't represent 1/3 exactly as a decimal fraction of any finite length (0.33333333333…), so you can't represent 1/10 exactly as a binary fraction (0.0001100110011…).  So most of the decimal numbers you want to store will get approximated and rounded to the nearest binary fraction that <em>can</em> be stored.  This isn't always obvious — when printing them out, they get rounded again to the nearest decimal fraction, and in many cases that ‘recovers’ the number you want — but there are many cases where it's noticeable, especially as the result of calculations.</p>
<p>You can see the effect in the Kotlin REPL:</p>
<pre><code>&gt;&gt;&gt; 0.1 + 0.2
res0: kotlin.Double = 0.30000000000000004
</code></pre>
<p>In this case, the binary fractions nearest to 0.1 and 0.2 sum to give a binary fraction that's nearer to 0.30000000000000004 than it is to 0.3.</p>
<p>(There are many existing questions on StackOverflow discussing this, such as <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<p>So if you need your money values to be accurate (and you almost always do!), then you should store them some other way.  For example, if you only ever need two decimal places (i.e. the number of paise), then simply store the number of paise as an integer.  Or if you don't need to do any calculations, you could store the number as a string (which is otherwise a bad idea…).</p>
<p>However, the most general and flexible way in Kotlin (and Java) is to <strong>use <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""noreferrer"">BigDecimal</a></strong>.  That uses decimal fractions internally to represent any decimal number exactly, to any precision you need, and you can easily do calculations and other manipulations.</p>
<p>In Java, using it is awkward and long-winded, but Kotlin's operator overloading makes it very natural, e.g.:</p>
<pre><code>&gt;&gt;&gt; val p1 = &quot;0.1&quot;.toBigDecimal()
&gt;&gt;&gt; val p2 = &quot;0.2&quot;.toBigDecimal()
&gt;&gt;&gt; p1 + p2
res3: java.math.BigDecimal = 0.3
</code></pre>
<p><code>DecimalFormat</code> supports it too:</p>
<pre><code>&gt;&gt;&gt; java.text.DecimalFormat(&quot;#,##0.00&quot;).format(p1 + p2)
res4: kotlin.String! = 0.30
</code></pre>
<p>(Note: do <strong>not</strong> create a BigDecimal from a Float or Double, as the damage will already have been done.  If you have an integer value, then start from an integer type such as Int or Long; otherwise, you'll need to start from a String to get an exact value.)</p>
",1
BigDecimal,Kotlin,concept,59947856,"<p>The problem here is not in the <code>setScale()</code> call, but happens before that.  <strong>You're constructing the <code>BigDecimal</code> from a <code>Double</code> value</strong> — a value which is <em>close</em> to 0.58, but isn't exactly.</p>

<p>(<code>FLoat</code>s and <code>Double</code>s are <em>binary</em> floating-point — and almost <strong>no decimal fractions have an exact binary representation</strong>.  In this case, 0.58 is 0.10010100011110101110000101… in binary.  No <code>Double</code> can store that exactly; the best if can do is store a value very close to it.)</p>

<p>The <code>BigDecimal</code> then does its best to store <em>that</em> value as precisely as possible.  You can see this in the REPL:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(0.58)
res1: java.math.BigDecimal = 0.57999999999999996003197111349436454474925994873046875
</code></pre>

<p>…which makes it obvious why that rounds down to 0.57, not 0.58.</p>

<p>And that holds for all of your problem cases: the nearest <code>Double</code> is slightly less than the decimal value you specify, and so rounds down.  (In the others, it's slightly <em>greater</em>, so those round as expected.  But the underlying problem is still there.)</p>

<p>The best solution is to avoid floating-point binary numbers entirely, and <strong>use the <code>BigDecimal(String)</code> constructor</strong>:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(""0.58"").setScale(2, java.math.RoundingMode.FLOOR)
res6: java.math.BigDecimal! = 0.58
</code></pre>

<p>(In this case, of course, there's no longer a need for the <code>setScale()</code> call at all, as the value now has a scale of 2 already!  But it does no harm.)</p>
",1
BigDecimal,Kotlin,concept,58448480,"<p>If you are bothered about having to create the <code>BigDecimal</code> over two lines, <code>BigDecimal</code> has constructors that take <code>Int</code> that you can call directly:</p>

<pre><code> val bigDecimalInt = BigDecimal(1)
</code></pre>

<p>This is fine for integer values, BUT for floating-point values like <code>Double</code> the constructor and <code>toBigDecimal</code> actually behave differently. The constructor creates a BigDecimal value of the <code>Double</code> value passed in, which will be ""incorrect"" if that value is not exactly representable in floating-point arithmetic. <code>toBigDecimal</code> converts the value to a String and then uses that which gives the ""correct"" value</p>

<pre><code>val doubleNum:Double = 0.1
println(doubleNum.toBigDecimal()) // prints 0.1

val bigDecimal:BigDecimal = BigDecimal(0.1)
println(bigDecimal)               // prints 0.1000000000000000055511151231257827021181583404541015625
</code></pre>

<p>If none of that makes sense, you probably need to read about Floating Point Arithmetic, this is a common problem affecting all/most programming languages</p>

<p>So <code>toBigDecimal</code> is a safer option</p>
",1
BigDecimal,Kotlin,concept,56134099,"<blockquote>
  <p>In Kotlin 123.456 is a valid Double value</p>
</blockquote>

<p>Actually, that's not quite true.  There's a Double value very <em>close</em> to 123.456, but it's not <em>exactly</em> 123.456.  What you're seeing is the consequences of that.</p>

<p>So you can't maintain precision, because you don't have that precision to start with!</p>

<p>Short answer:</p>

<p><strong>If you need exact values, don't use floating-point!</strong></p>

<p>(In particular: <strong>Never store money values in floating-point!</strong>  See for example <a href=""https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency?rq=1"">this</a> question.)</p>

<p>The best alternative is usually <code>BigDecimal</code> which can store and calculate decimal fractions to an arbitrary precision.  They're less efficient, but Kotlin's operator overloading makes them painless to use (unlike Java!).</p>

<p>Or if you're not going to be doing any calculations, you could store them as <code>String</code>s.</p>

<p>Or if you'll only need a certain number of decimal places, you could scale them all up to <code>Int</code>s (or <code>Long</code>s).</p>

<p>Technical explanation:</p>

<p>Floats and Doubles use binary floating-point; they store an integer, and an integer power of 2 to multiple or divide it by.  (For example, 3/4 would be stored as 3*2⁻².)  This means they can store a wide range of binary fractions exactly.</p>

<p>However, just as you can't store 1/3 as a decimal fraction (it's 0.3333333333…, but any finite number of digits will only be an approximation), so you can't store 1/10 as a binary fraction (it's 0.000110011001100…).  This means that <strong>a binary floating-point number can't store most decimal numbers exactly</strong>.</p>

<p>Instead, they store the nearest possible value to the number you want.  And the routines which convert them to a String will try to undo that difference, by rounding appropriately.  But that doesn't always give the result you expect.</p>

<p>Floating-point numbers are great when you need a huge range of values (e.g. in scientific and technical use), but don't care about storing them exactly.</p>
",1
BigDecimal,Kotlin,performance,69080938,"<p>I'm afraid you <em>can't</em> convert a BigDecimal into a Double without losing precision, for several reasons:</p>
<ul>
<li>There are many more possible values for BigDecimal than for Double, so the conversion is necessarily lossy.</li>
</ul>
<p>Doubles are 64-bit, so can't have more than 2⁶⁴ distinct values, while BigDecimals are effectively unlimited.</p>
<ul>
<li>BigDecimals store decimal fractions, while Doubles store binary fractions.  There's very little overlap between the two, so in most cases the conversion will need to round the value.</li>
</ul>
<p>Both can store integers exactly (up to a certain value), and both can store fractions such as 0.5 exactly.  But nearly all decimal fractions can't be represented exactly as a binary fraction, and so for example there's no Double holding exactly 0.1.  (1/10 is an infinite recurring fraction in binary — 0.0001100110011… — and so no finite binary fraction can represent it exactly.)</p>
<p>This means that in Kotlin (and most other programming languages), a numeric literal such as 0.1 gets converted to the nearest double-precision number, which is around 0.100000000000000005551115….  In practice, this is usually hidden from you, because when you print out a Double, the formatting routine will round it off, and in many cases that gives back the original number.  But not always, e.g.:</p>
<pre><code>&gt;&gt;&gt; println(0.1 + 0.1 + 0.1)
0.30000000000000004
</code></pre>
<p>(All of this is discussed in other questions, most notably <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<ul>
<li>Unlike BigDecimals, Doubles have no precision, so they can't make the distinction you want anyway.</li>
</ul>
<p>For example, both 1.0 and 1.000000 are represented by exactly the same Double value:</p>
<pre><code>&gt;&gt;&gt; println(1.000000)
1.0
</code></pre>
<hr />
<p>I don't know Vert.x, but I'd be surprised if you really needed a Double here.  Have you tried using a BigDecimal directly?</p>
<p>Or if that doesn't work, have you tried converting it to a String, which will preserve whatever formatting you want?</p>
",0
BigDecimal,Kotlin,performance,62020741,"<p>Take a look at the <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a> class. You can easily set the scale to 4 digits and it can be created with a Double.</p>
",0
BigDecimal,Kotlin,performance,61879213,"<p>A key part of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html"" rel=""nofollow noreferrer""><code>BigDecimal</code></a> is that you must use it literally the whole way through: passing <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Double.html"" rel=""nofollow noreferrer""><code>Double</code></a> into <code>BigDecimal</code> destroys any benefit you would get from <code>BigDecimal</code>.</p>
<p>You must use <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#%3Cinit%3E(java.lang.String)"" rel=""nofollow noreferrer"">constructor taking a <code>String</code></a>, <code>BigDecimal(&quot;0.00200&quot;)</code> and <code>BigDecimal(&quot;0.00400&quot;)</code>, with the quotes. Then call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#multiply(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>multiply</code></a> on them.  You must not call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#doubleValue()"" rel=""nofollow noreferrer""><code>doubleValue()</code></a> on the result.</p>
<p>Equality testing on <code>BigDecimal</code> also adds complications, requiring exactly the same scale.  Consider using <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#compareTo(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>compareTo</code></a> like this, <code>assertTrue(expected.compareTo(actual) == 0)</code>.</p>
<p>Another issue: Your math is incorrect. 0.00200 * 0.00400 = 0.000008 rather than 0.00800.</p>
<p>Example code using only <code>BigDecimal</code> while avoiding <code>Double</code>. In Java syntax. Corrected your inputs.</p>
<pre><code>var a = &quot;0.002000&quot; ;
var b = &quot;0.004000&quot; ;
var expected = &quot;0.000008&quot; ;

var actual = new BigDecimal( a ).multiply( new BigDecimal( b ) ) ;
actual = actual.setScale( new BigDecimal( a ).scale() ) ;  // Set scale of result to match the scale of inputs.
boolean matching = actual.equals( new BigDecimal( expected ) ) ;
</code></pre>
<p>See this <a href=""https://ideone.com/Idqphj"" rel=""nofollow noreferrer"">code run live at IdeOne.com</a>.</p>
<blockquote>
<p>actual: actual: 0.000008</p>
<p>matching: true</p>
</blockquote>
",1
BigDecimal,Kotlin,performance,69141252,"<p>This happens because you are declaring a double, <code>8875.87</code>, and <em>then</em> turning it into a BigDecimal. There is no exact double-precision floating point representation for <code>8875.87</code> so the rounding has already occurred before you call <code>toBigDecimal</code>.</p>
<p>To keep the precision, you need to pass the values to the <code>BigDecimal</code> constructor as a string:</p>
<pre><code>val a = BigDecimal(&quot;8875.87&quot;)
val b = BigDecimal(&quot;778.55&quot;)
println(&quot;${a*b}&quot;)
</code></pre>
",0
BigDecimal,Kotlin,performance,60081802,"<p>You can't. A <code>double</code> can represent only a sparse subset of the real numbers. You might get away with using a <code>double</code> if you can format the output appropriately (which is essentially what Microsoft Excel does, along with some very clever tricks for expressions like 1/3 + 1/3 + 1/3).</p>

<p>If you need perfect precision then use a type capable of doing that. The decimal type <code>BigDecimal</code> is probably what you want.</p>

<p>If you're working with money, and don't need to worry about currencies that have 1000s (e.g. Tunisian Dinar) or bitcoin (8 decimal places), then working in cents and using integers is one approach.</p>
",0
BigDecimal,Kotlin,performance,68118825,"<p>Try using</p>
<pre><code>import kotlin.math.max

fun calculateNetResult(): Int = max(0, correctIndex - wrongIndex / 3)
</code></pre>
<p>Assuming you don't need negative score points.</p>
<p>If your method contains only a single statement you can write it with equal sign as shown in kotlin just a shorthand syntax while the max will prevent the net score from going below zero.</p>
",0
BigDecimal,Kotlin,performance,68045240,"<p>Using a <a href=""https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html"" rel=""noreferrer""><code>DecimalFormat</code></a> is a perfectly good way to format a number.</p>
<p>However, you have a deeper issue here, which is that you should <strong>never use a Float or Double to store a value that needs to be exact, such as money</strong>.</p>
<p>That's because Floats and Doubles are stored as binary fractions, not decimal fractions.  And just as you can't represent 1/3 exactly as a decimal fraction of any finite length (0.33333333333…), so you can't represent 1/10 exactly as a binary fraction (0.0001100110011…).  So most of the decimal numbers you want to store will get approximated and rounded to the nearest binary fraction that <em>can</em> be stored.  This isn't always obvious — when printing them out, they get rounded again to the nearest decimal fraction, and in many cases that ‘recovers’ the number you want — but there are many cases where it's noticeable, especially as the result of calculations.</p>
<p>You can see the effect in the Kotlin REPL:</p>
<pre><code>&gt;&gt;&gt; 0.1 + 0.2
res0: kotlin.Double = 0.30000000000000004
</code></pre>
<p>In this case, the binary fractions nearest to 0.1 and 0.2 sum to give a binary fraction that's nearer to 0.30000000000000004 than it is to 0.3.</p>
<p>(There are many existing questions on StackOverflow discussing this, such as <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<p>So if you need your money values to be accurate (and you almost always do!), then you should store them some other way.  For example, if you only ever need two decimal places (i.e. the number of paise), then simply store the number of paise as an integer.  Or if you don't need to do any calculations, you could store the number as a string (which is otherwise a bad idea…).</p>
<p>However, the most general and flexible way in Kotlin (and Java) is to <strong>use <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""noreferrer"">BigDecimal</a></strong>.  That uses decimal fractions internally to represent any decimal number exactly, to any precision you need, and you can easily do calculations and other manipulations.</p>
<p>In Java, using it is awkward and long-winded, but Kotlin's operator overloading makes it very natural, e.g.:</p>
<pre><code>&gt;&gt;&gt; val p1 = &quot;0.1&quot;.toBigDecimal()
&gt;&gt;&gt; val p2 = &quot;0.2&quot;.toBigDecimal()
&gt;&gt;&gt; p1 + p2
res3: java.math.BigDecimal = 0.3
</code></pre>
<p><code>DecimalFormat</code> supports it too:</p>
<pre><code>&gt;&gt;&gt; java.text.DecimalFormat(&quot;#,##0.00&quot;).format(p1 + p2)
res4: kotlin.String! = 0.30
</code></pre>
<p>(Note: do <strong>not</strong> create a BigDecimal from a Float or Double, as the damage will already have been done.  If you have an integer value, then start from an integer type such as Int or Long; otherwise, you'll need to start from a String to get an exact value.)</p>
",1
BigDecimal,Kotlin,performance,74245972,"<p>If you care about exact decimal values, then <a href=""https://stackoverflow.com/questions/588004/is-floating-point-math-broken"">don't use floating-point</a>. Instead, <strong>use a type that's intended for storing exact decimal values, such as <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a></strong>.</p>
<p>(Floating-point types such as Kotlin's Float and Double can hold numbers across a huge range of magnitude, and store and calculate with them efficiently. But they use binary floating-point, not decimal. So they're great when you care about doing calculations efficiently and flexibly — but not when you need to store <em>exact</em> decimal values. Most of the questions about floating-point on this site seem to be for the latter cases, unfortunately…)</p>
<p>Kotlin has lots of <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/java.math.-big-decimal/"" rel=""nofollow noreferrer"">extensions</a> making it almost as easy to handle BigDecimals as the native types. They're a little less efficient, but not by anywhere near enough to be significant in a calculator project. And they do exactly what you want here: storing and manipulating decimal numbers exactly.</p>
<p>And because they're exact, you shouldn't need to do any rounding — and probably won't need to do any formatting either.</p>
<p>(Just make sure you create them directly from strings, not from floats/doubles — which will already have been rounded to the nearest binary floating-point number.)</p>
",1
BigDecimal,Kotlin,performance,70035892,"<p>Kotlin's equality operators (== and !=) can handle nulls, while the order comparison operators (&lt;, &lt;=, &gt;, &gt;=) can't.</p>
<p>You have to check the nullability before doing the comparison.</p>
<p>You may also use another value if the live data is null (like 0) using the Elvis operator, but I won't suggest this solution, because the <em>null</em> value is not the same as the <em>zero</em> value.</p>
",0
BigDecimal,Kotlin,performance,56134099,"<blockquote>
  <p>In Kotlin 123.456 is a valid Double value</p>
</blockquote>

<p>Actually, that's not quite true.  There's a Double value very <em>close</em> to 123.456, but it's not <em>exactly</em> 123.456.  What you're seeing is the consequences of that.</p>

<p>So you can't maintain precision, because you don't have that precision to start with!</p>

<p>Short answer:</p>

<p><strong>If you need exact values, don't use floating-point!</strong></p>

<p>(In particular: <strong>Never store money values in floating-point!</strong>  See for example <a href=""https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency?rq=1"">this</a> question.)</p>

<p>The best alternative is usually <code>BigDecimal</code> which can store and calculate decimal fractions to an arbitrary precision.  They're less efficient, but Kotlin's operator overloading makes them painless to use (unlike Java!).</p>

<p>Or if you're not going to be doing any calculations, you could store them as <code>String</code>s.</p>

<p>Or if you'll only need a certain number of decimal places, you could scale them all up to <code>Int</code>s (or <code>Long</code>s).</p>

<p>Technical explanation:</p>

<p>Floats and Doubles use binary floating-point; they store an integer, and an integer power of 2 to multiple or divide it by.  (For example, 3/4 would be stored as 3*2⁻².)  This means they can store a wide range of binary fractions exactly.</p>

<p>However, just as you can't store 1/3 as a decimal fraction (it's 0.3333333333…, but any finite number of digits will only be an approximation), so you can't store 1/10 as a binary fraction (it's 0.000110011001100…).  This means that <strong>a binary floating-point number can't store most decimal numbers exactly</strong>.</p>

<p>Instead, they store the nearest possible value to the number you want.  And the routines which convert them to a String will try to undo that difference, by rounding appropriately.  But that doesn't always give the result you expect.</p>

<p>Floating-point numbers are great when you need a huge range of values (e.g. in scientific and technical use), but don't care about storing them exactly.</p>
",1
BigDecimal,Kotlin,directive,69080938,"<p>I'm afraid you <em>can't</em> convert a BigDecimal into a Double without losing precision, for several reasons:</p>
<ul>
<li>There are many more possible values for BigDecimal than for Double, so the conversion is necessarily lossy.</li>
</ul>
<p>Doubles are 64-bit, so can't have more than 2⁶⁴ distinct values, while BigDecimals are effectively unlimited.</p>
<ul>
<li>BigDecimals store decimal fractions, while Doubles store binary fractions.  There's very little overlap between the two, so in most cases the conversion will need to round the value.</li>
</ul>
<p>Both can store integers exactly (up to a certain value), and both can store fractions such as 0.5 exactly.  But nearly all decimal fractions can't be represented exactly as a binary fraction, and so for example there's no Double holding exactly 0.1.  (1/10 is an infinite recurring fraction in binary — 0.0001100110011… — and so no finite binary fraction can represent it exactly.)</p>
<p>This means that in Kotlin (and most other programming languages), a numeric literal such as 0.1 gets converted to the nearest double-precision number, which is around 0.100000000000000005551115….  In practice, this is usually hidden from you, because when you print out a Double, the formatting routine will round it off, and in many cases that gives back the original number.  But not always, e.g.:</p>
<pre><code>&gt;&gt;&gt; println(0.1 + 0.1 + 0.1)
0.30000000000000004
</code></pre>
<p>(All of this is discussed in other questions, most notably <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<ul>
<li>Unlike BigDecimals, Doubles have no precision, so they can't make the distinction you want anyway.</li>
</ul>
<p>For example, both 1.0 and 1.000000 are represented by exactly the same Double value:</p>
<pre><code>&gt;&gt;&gt; println(1.000000)
1.0
</code></pre>
<hr />
<p>I don't know Vert.x, but I'd be surprised if you really needed a Double here.  Have you tried using a BigDecimal directly?</p>
<p>Or if that doesn't work, have you tried converting it to a String, which will preserve whatever formatting you want?</p>
",0
BigDecimal,Kotlin,directive,69141252,"<p>This happens because you are declaring a double, <code>8875.87</code>, and <em>then</em> turning it into a BigDecimal. There is no exact double-precision floating point representation for <code>8875.87</code> so the rounding has already occurred before you call <code>toBigDecimal</code>.</p>
<p>To keep the precision, you need to pass the values to the <code>BigDecimal</code> constructor as a string:</p>
<pre><code>val a = BigDecimal(&quot;8875.87&quot;)
val b = BigDecimal(&quot;778.55&quot;)
println(&quot;${a*b}&quot;)
</code></pre>
",1
BigDecimal,Kotlin,directive,62020741,"<p>Take a look at the <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a> class. You can easily set the scale to 4 digits and it can be created with a Double.</p>
",1
BigDecimal,Kotlin,directive,61879213,"<p>A key part of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html"" rel=""nofollow noreferrer""><code>BigDecimal</code></a> is that you must use it literally the whole way through: passing <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Double.html"" rel=""nofollow noreferrer""><code>Double</code></a> into <code>BigDecimal</code> destroys any benefit you would get from <code>BigDecimal</code>.</p>
<p>You must use <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#%3Cinit%3E(java.lang.String)"" rel=""nofollow noreferrer"">constructor taking a <code>String</code></a>, <code>BigDecimal(&quot;0.00200&quot;)</code> and <code>BigDecimal(&quot;0.00400&quot;)</code>, with the quotes. Then call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#multiply(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>multiply</code></a> on them.  You must not call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#doubleValue()"" rel=""nofollow noreferrer""><code>doubleValue()</code></a> on the result.</p>
<p>Equality testing on <code>BigDecimal</code> also adds complications, requiring exactly the same scale.  Consider using <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#compareTo(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>compareTo</code></a> like this, <code>assertTrue(expected.compareTo(actual) == 0)</code>.</p>
<p>Another issue: Your math is incorrect. 0.00200 * 0.00400 = 0.000008 rather than 0.00800.</p>
<p>Example code using only <code>BigDecimal</code> while avoiding <code>Double</code>. In Java syntax. Corrected your inputs.</p>
<pre><code>var a = &quot;0.002000&quot; ;
var b = &quot;0.004000&quot; ;
var expected = &quot;0.000008&quot; ;

var actual = new BigDecimal( a ).multiply( new BigDecimal( b ) ) ;
actual = actual.setScale( new BigDecimal( a ).scale() ) ;  // Set scale of result to match the scale of inputs.
boolean matching = actual.equals( new BigDecimal( expected ) ) ;
</code></pre>
<p>See this <a href=""https://ideone.com/Idqphj"" rel=""nofollow noreferrer"">code run live at IdeOne.com</a>.</p>
<blockquote>
<p>actual: actual: 0.000008</p>
<p>matching: true</p>
</blockquote>
",1
BigDecimal,Kotlin,directive,59947856,"<p>The problem here is not in the <code>setScale()</code> call, but happens before that.  <strong>You're constructing the <code>BigDecimal</code> from a <code>Double</code> value</strong> — a value which is <em>close</em> to 0.58, but isn't exactly.</p>

<p>(<code>FLoat</code>s and <code>Double</code>s are <em>binary</em> floating-point — and almost <strong>no decimal fractions have an exact binary representation</strong>.  In this case, 0.58 is 0.10010100011110101110000101… in binary.  No <code>Double</code> can store that exactly; the best if can do is store a value very close to it.)</p>

<p>The <code>BigDecimal</code> then does its best to store <em>that</em> value as precisely as possible.  You can see this in the REPL:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(0.58)
res1: java.math.BigDecimal = 0.57999999999999996003197111349436454474925994873046875
</code></pre>

<p>…which makes it obvious why that rounds down to 0.57, not 0.58.</p>

<p>And that holds for all of your problem cases: the nearest <code>Double</code> is slightly less than the decimal value you specify, and so rounds down.  (In the others, it's slightly <em>greater</em>, so those round as expected.  But the underlying problem is still there.)</p>

<p>The best solution is to avoid floating-point binary numbers entirely, and <strong>use the <code>BigDecimal(String)</code> constructor</strong>:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(""0.58"").setScale(2, java.math.RoundingMode.FLOOR)
res6: java.math.BigDecimal! = 0.58
</code></pre>

<p>(In this case, of course, there's no longer a need for the <code>setScale()</code> call at all, as the value now has a scale of 2 already!  But it does no harm.)</p>
",1
BigDecimal,Kotlin,directive,74245972,"<p>If you care about exact decimal values, then <a href=""https://stackoverflow.com/questions/588004/is-floating-point-math-broken"">don't use floating-point</a>. Instead, <strong>use a type that's intended for storing exact decimal values, such as <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a></strong>.</p>
<p>(Floating-point types such as Kotlin's Float and Double can hold numbers across a huge range of magnitude, and store and calculate with them efficiently. But they use binary floating-point, not decimal. So they're great when you care about doing calculations efficiently and flexibly — but not when you need to store <em>exact</em> decimal values. Most of the questions about floating-point on this site seem to be for the latter cases, unfortunately…)</p>
<p>Kotlin has lots of <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/java.math.-big-decimal/"" rel=""nofollow noreferrer"">extensions</a> making it almost as easy to handle BigDecimals as the native types. They're a little less efficient, but not by anywhere near enough to be significant in a calculator project. And they do exactly what you want here: storing and manipulating decimal numbers exactly.</p>
<p>And because they're exact, you shouldn't need to do any rounding — and probably won't need to do any formatting either.</p>
<p>(Just make sure you create them directly from strings, not from floats/doubles — which will already have been rounded to the nearest binary floating-point number.)</p>
",1
BigDecimal,Kotlin,directive,60081802,"<p>You can't. A <code>double</code> can represent only a sparse subset of the real numbers. You might get away with using a <code>double</code> if you can format the output appropriately (which is essentially what Microsoft Excel does, along with some very clever tricks for expressions like 1/3 + 1/3 + 1/3).</p>

<p>If you need perfect precision then use a type capable of doing that. The decimal type <code>BigDecimal</code> is probably what you want.</p>

<p>If you're working with money, and don't need to worry about currencies that have 1000s (e.g. Tunisian Dinar) or bitcoin (8 decimal places), then working in cents and using integers is one approach.</p>
",0
BigDecimal,Kotlin,directive,56134099,"<blockquote>
  <p>In Kotlin 123.456 is a valid Double value</p>
</blockquote>

<p>Actually, that's not quite true.  There's a Double value very <em>close</em> to 123.456, but it's not <em>exactly</em> 123.456.  What you're seeing is the consequences of that.</p>

<p>So you can't maintain precision, because you don't have that precision to start with!</p>

<p>Short answer:</p>

<p><strong>If you need exact values, don't use floating-point!</strong></p>

<p>(In particular: <strong>Never store money values in floating-point!</strong>  See for example <a href=""https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency?rq=1"">this</a> question.)</p>

<p>The best alternative is usually <code>BigDecimal</code> which can store and calculate decimal fractions to an arbitrary precision.  They're less efficient, but Kotlin's operator overloading makes them painless to use (unlike Java!).</p>

<p>Or if you're not going to be doing any calculations, you could store them as <code>String</code>s.</p>

<p>Or if you'll only need a certain number of decimal places, you could scale them all up to <code>Int</code>s (or <code>Long</code>s).</p>

<p>Technical explanation:</p>

<p>Floats and Doubles use binary floating-point; they store an integer, and an integer power of 2 to multiple or divide it by.  (For example, 3/4 would be stored as 3*2⁻².)  This means they can store a wide range of binary fractions exactly.</p>

<p>However, just as you can't store 1/3 as a decimal fraction (it's 0.3333333333…, but any finite number of digits will only be an approximation), so you can't store 1/10 as a binary fraction (it's 0.000110011001100…).  This means that <strong>a binary floating-point number can't store most decimal numbers exactly</strong>.</p>

<p>Instead, they store the nearest possible value to the number you want.  And the routines which convert them to a String will try to undo that difference, by rounding appropriately.  But that doesn't always give the result you expect.</p>

<p>Floating-point numbers are great when you need a huge range of values (e.g. in scientific and technical use), but don't care about storing them exactly.</p>
",1
BigDecimal,Kotlin,directive,58448480,"<p>If you are bothered about having to create the <code>BigDecimal</code> over two lines, <code>BigDecimal</code> has constructors that take <code>Int</code> that you can call directly:</p>

<pre><code> val bigDecimalInt = BigDecimal(1)
</code></pre>

<p>This is fine for integer values, BUT for floating-point values like <code>Double</code> the constructor and <code>toBigDecimal</code> actually behave differently. The constructor creates a BigDecimal value of the <code>Double</code> value passed in, which will be ""incorrect"" if that value is not exactly representable in floating-point arithmetic. <code>toBigDecimal</code> converts the value to a String and then uses that which gives the ""correct"" value</p>

<pre><code>val doubleNum:Double = 0.1
println(doubleNum.toBigDecimal()) // prints 0.1

val bigDecimal:BigDecimal = BigDecimal(0.1)
println(bigDecimal)               // prints 0.1000000000000000055511151231257827021181583404541015625
</code></pre>

<p>If none of that makes sense, you probably need to read about Floating Point Arithmetic, this is a common problem affecting all/most programming languages</p>

<p>So <code>toBigDecimal</code> is a safer option</p>
",1
BigDecimal,Kotlin,directive,64238308,"<p>From the <code>BigDecimal</code> <a href=""https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/math/BigDecimal.html#%3Cinit%3E(double)"" rel=""nofollow noreferrer"">docs</a>:</p>
<blockquote>
<ol>
<li>The results of this constructor can be somewhat unpredictable. One might assume that writing new <code>BigDecimal(0.1)</code> in Java creates a
<code>BigDecimal</code> which is exactly equal to 0.1 (an unscaled value of 1,
with a scale of 1), but it is actually equal to
0.1000000000000000055511151231257827021181583404541015625. This is because 0.1 cannot be represented exactly as a double (or, for that
matter, as a binary fraction of any finite length). Thus, the value
that is being passed <em>in</em> to the constructor is not exactly equal to
0.1, appearances notwithstanding.</li>
<li>The String constructor, on the other hand, is perfectly predictable: writing <code>new BigDecimal(&quot;0.1&quot;)</code> creates a <code>BigDecimal</code> which
is exactly equal to 0.1, as one would expect. Therefore, it is
generally recommended that the <a href=""https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/math/BigDecimal.html#%3Cinit%3E(java.lang.String)"" rel=""nofollow noreferrer"">String
constructor</a>
be used in preference to this one.</li>
</ol>
</blockquote>
",1
BigDecimal,Kotlin,pattern,69080938,"<p>I'm afraid you <em>can't</em> convert a BigDecimal into a Double without losing precision, for several reasons:</p>
<ul>
<li>There are many more possible values for BigDecimal than for Double, so the conversion is necessarily lossy.</li>
</ul>
<p>Doubles are 64-bit, so can't have more than 2⁶⁴ distinct values, while BigDecimals are effectively unlimited.</p>
<ul>
<li>BigDecimals store decimal fractions, while Doubles store binary fractions.  There's very little overlap between the two, so in most cases the conversion will need to round the value.</li>
</ul>
<p>Both can store integers exactly (up to a certain value), and both can store fractions such as 0.5 exactly.  But nearly all decimal fractions can't be represented exactly as a binary fraction, and so for example there's no Double holding exactly 0.1.  (1/10 is an infinite recurring fraction in binary — 0.0001100110011… — and so no finite binary fraction can represent it exactly.)</p>
<p>This means that in Kotlin (and most other programming languages), a numeric literal such as 0.1 gets converted to the nearest double-precision number, which is around 0.100000000000000005551115….  In practice, this is usually hidden from you, because when you print out a Double, the formatting routine will round it off, and in many cases that gives back the original number.  But not always, e.g.:</p>
<pre><code>&gt;&gt;&gt; println(0.1 + 0.1 + 0.1)
0.30000000000000004
</code></pre>
<p>(All of this is discussed in other questions, most notably <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<ul>
<li>Unlike BigDecimals, Doubles have no precision, so they can't make the distinction you want anyway.</li>
</ul>
<p>For example, both 1.0 and 1.000000 are represented by exactly the same Double value:</p>
<pre><code>&gt;&gt;&gt; println(1.000000)
1.0
</code></pre>
<hr />
<p>I don't know Vert.x, but I'd be surprised if you really needed a Double here.  Have you tried using a BigDecimal directly?</p>
<p>Or if that doesn't work, have you tried converting it to a String, which will preserve whatever formatting you want?</p>
",1
BigDecimal,Kotlin,pattern,62020741,"<p>Take a look at the <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a> class. You can easily set the scale to 4 digits and it can be created with a Double.</p>
",1
BigDecimal,Kotlin,pattern,69141252,"<p>This happens because you are declaring a double, <code>8875.87</code>, and <em>then</em> turning it into a BigDecimal. There is no exact double-precision floating point representation for <code>8875.87</code> so the rounding has already occurred before you call <code>toBigDecimal</code>.</p>
<p>To keep the precision, you need to pass the values to the <code>BigDecimal</code> constructor as a string:</p>
<pre><code>val a = BigDecimal(&quot;8875.87&quot;)
val b = BigDecimal(&quot;778.55&quot;)
println(&quot;${a*b}&quot;)
</code></pre>
",1
BigDecimal,Kotlin,pattern,74245972,"<p>If you care about exact decimal values, then <a href=""https://stackoverflow.com/questions/588004/is-floating-point-math-broken"">don't use floating-point</a>. Instead, <strong>use a type that's intended for storing exact decimal values, such as <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a></strong>.</p>
<p>(Floating-point types such as Kotlin's Float and Double can hold numbers across a huge range of magnitude, and store and calculate with them efficiently. But they use binary floating-point, not decimal. So they're great when you care about doing calculations efficiently and flexibly — but not when you need to store <em>exact</em> decimal values. Most of the questions about floating-point on this site seem to be for the latter cases, unfortunately…)</p>
<p>Kotlin has lots of <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/java.math.-big-decimal/"" rel=""nofollow noreferrer"">extensions</a> making it almost as easy to handle BigDecimals as the native types. They're a little less efficient, but not by anywhere near enough to be significant in a calculator project. And they do exactly what you want here: storing and manipulating decimal numbers exactly.</p>
<p>And because they're exact, you shouldn't need to do any rounding — and probably won't need to do any formatting either.</p>
<p>(Just make sure you create them directly from strings, not from floats/doubles — which will already have been rounded to the nearest binary floating-point number.)</p>
",1
BigDecimal,Kotlin,pattern,68045240,"<p>Using a <a href=""https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html"" rel=""noreferrer""><code>DecimalFormat</code></a> is a perfectly good way to format a number.</p>
<p>However, you have a deeper issue here, which is that you should <strong>never use a Float or Double to store a value that needs to be exact, such as money</strong>.</p>
<p>That's because Floats and Doubles are stored as binary fractions, not decimal fractions.  And just as you can't represent 1/3 exactly as a decimal fraction of any finite length (0.33333333333…), so you can't represent 1/10 exactly as a binary fraction (0.0001100110011…).  So most of the decimal numbers you want to store will get approximated and rounded to the nearest binary fraction that <em>can</em> be stored.  This isn't always obvious — when printing them out, they get rounded again to the nearest decimal fraction, and in many cases that ‘recovers’ the number you want — but there are many cases where it's noticeable, especially as the result of calculations.</p>
<p>You can see the effect in the Kotlin REPL:</p>
<pre><code>&gt;&gt;&gt; 0.1 + 0.2
res0: kotlin.Double = 0.30000000000000004
</code></pre>
<p>In this case, the binary fractions nearest to 0.1 and 0.2 sum to give a binary fraction that's nearer to 0.30000000000000004 than it is to 0.3.</p>
<p>(There are many existing questions on StackOverflow discussing this, such as <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<p>So if you need your money values to be accurate (and you almost always do!), then you should store them some other way.  For example, if you only ever need two decimal places (i.e. the number of paise), then simply store the number of paise as an integer.  Or if you don't need to do any calculations, you could store the number as a string (which is otherwise a bad idea…).</p>
<p>However, the most general and flexible way in Kotlin (and Java) is to <strong>use <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""noreferrer"">BigDecimal</a></strong>.  That uses decimal fractions internally to represent any decimal number exactly, to any precision you need, and you can easily do calculations and other manipulations.</p>
<p>In Java, using it is awkward and long-winded, but Kotlin's operator overloading makes it very natural, e.g.:</p>
<pre><code>&gt;&gt;&gt; val p1 = &quot;0.1&quot;.toBigDecimal()
&gt;&gt;&gt; val p2 = &quot;0.2&quot;.toBigDecimal()
&gt;&gt;&gt; p1 + p2
res3: java.math.BigDecimal = 0.3
</code></pre>
<p><code>DecimalFormat</code> supports it too:</p>
<pre><code>&gt;&gt;&gt; java.text.DecimalFormat(&quot;#,##0.00&quot;).format(p1 + p2)
res4: kotlin.String! = 0.30
</code></pre>
<p>(Note: do <strong>not</strong> create a BigDecimal from a Float or Double, as the damage will already have been done.  If you have an integer value, then start from an integer type such as Int or Long; otherwise, you'll need to start from a String to get an exact value.)</p>
",1
BigDecimal,Kotlin,pattern,59947856,"<p>The problem here is not in the <code>setScale()</code> call, but happens before that.  <strong>You're constructing the <code>BigDecimal</code> from a <code>Double</code> value</strong> — a value which is <em>close</em> to 0.58, but isn't exactly.</p>

<p>(<code>FLoat</code>s and <code>Double</code>s are <em>binary</em> floating-point — and almost <strong>no decimal fractions have an exact binary representation</strong>.  In this case, 0.58 is 0.10010100011110101110000101… in binary.  No <code>Double</code> can store that exactly; the best if can do is store a value very close to it.)</p>

<p>The <code>BigDecimal</code> then does its best to store <em>that</em> value as precisely as possible.  You can see this in the REPL:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(0.58)
res1: java.math.BigDecimal = 0.57999999999999996003197111349436454474925994873046875
</code></pre>

<p>…which makes it obvious why that rounds down to 0.57, not 0.58.</p>

<p>And that holds for all of your problem cases: the nearest <code>Double</code> is slightly less than the decimal value you specify, and so rounds down.  (In the others, it's slightly <em>greater</em>, so those round as expected.  But the underlying problem is still there.)</p>

<p>The best solution is to avoid floating-point binary numbers entirely, and <strong>use the <code>BigDecimal(String)</code> constructor</strong>:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(""0.58"").setScale(2, java.math.RoundingMode.FLOOR)
res6: java.math.BigDecimal! = 0.58
</code></pre>

<p>(In this case, of course, there's no longer a need for the <code>setScale()</code> call at all, as the value now has a scale of 2 already!  But it does no harm.)</p>
",1
BigDecimal,Kotlin,pattern,56134099,"<blockquote>
  <p>In Kotlin 123.456 is a valid Double value</p>
</blockquote>

<p>Actually, that's not quite true.  There's a Double value very <em>close</em> to 123.456, but it's not <em>exactly</em> 123.456.  What you're seeing is the consequences of that.</p>

<p>So you can't maintain precision, because you don't have that precision to start with!</p>

<p>Short answer:</p>

<p><strong>If you need exact values, don't use floating-point!</strong></p>

<p>(In particular: <strong>Never store money values in floating-point!</strong>  See for example <a href=""https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency?rq=1"">this</a> question.)</p>

<p>The best alternative is usually <code>BigDecimal</code> which can store and calculate decimal fractions to an arbitrary precision.  They're less efficient, but Kotlin's operator overloading makes them painless to use (unlike Java!).</p>

<p>Or if you're not going to be doing any calculations, you could store them as <code>String</code>s.</p>

<p>Or if you'll only need a certain number of decimal places, you could scale them all up to <code>Int</code>s (or <code>Long</code>s).</p>

<p>Technical explanation:</p>

<p>Floats and Doubles use binary floating-point; they store an integer, and an integer power of 2 to multiple or divide it by.  (For example, 3/4 would be stored as 3*2⁻².)  This means they can store a wide range of binary fractions exactly.</p>

<p>However, just as you can't store 1/3 as a decimal fraction (it's 0.3333333333…, but any finite number of digits will only be an approximation), so you can't store 1/10 as a binary fraction (it's 0.000110011001100…).  This means that <strong>a binary floating-point number can't store most decimal numbers exactly</strong>.</p>

<p>Instead, they store the nearest possible value to the number you want.  And the routines which convert them to a String will try to undo that difference, by rounding appropriately.  But that doesn't always give the result you expect.</p>

<p>Floating-point numbers are great when you need a huge range of values (e.g. in scientific and technical use), but don't care about storing them exactly.</p>
",1
BigDecimal,Kotlin,pattern,61879213,"<p>A key part of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html"" rel=""nofollow noreferrer""><code>BigDecimal</code></a> is that you must use it literally the whole way through: passing <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Double.html"" rel=""nofollow noreferrer""><code>Double</code></a> into <code>BigDecimal</code> destroys any benefit you would get from <code>BigDecimal</code>.</p>
<p>You must use <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#%3Cinit%3E(java.lang.String)"" rel=""nofollow noreferrer"">constructor taking a <code>String</code></a>, <code>BigDecimal(&quot;0.00200&quot;)</code> and <code>BigDecimal(&quot;0.00400&quot;)</code>, with the quotes. Then call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#multiply(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>multiply</code></a> on them.  You must not call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#doubleValue()"" rel=""nofollow noreferrer""><code>doubleValue()</code></a> on the result.</p>
<p>Equality testing on <code>BigDecimal</code> also adds complications, requiring exactly the same scale.  Consider using <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#compareTo(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>compareTo</code></a> like this, <code>assertTrue(expected.compareTo(actual) == 0)</code>.</p>
<p>Another issue: Your math is incorrect. 0.00200 * 0.00400 = 0.000008 rather than 0.00800.</p>
<p>Example code using only <code>BigDecimal</code> while avoiding <code>Double</code>. In Java syntax. Corrected your inputs.</p>
<pre><code>var a = &quot;0.002000&quot; ;
var b = &quot;0.004000&quot; ;
var expected = &quot;0.000008&quot; ;

var actual = new BigDecimal( a ).multiply( new BigDecimal( b ) ) ;
actual = actual.setScale( new BigDecimal( a ).scale() ) ;  // Set scale of result to match the scale of inputs.
boolean matching = actual.equals( new BigDecimal( expected ) ) ;
</code></pre>
<p>See this <a href=""https://ideone.com/Idqphj"" rel=""nofollow noreferrer"">code run live at IdeOne.com</a>.</p>
<blockquote>
<p>actual: actual: 0.000008</p>
<p>matching: true</p>
</blockquote>
",1
BigDecimal,Kotlin,pattern,60081802,"<p>You can't. A <code>double</code> can represent only a sparse subset of the real numbers. You might get away with using a <code>double</code> if you can format the output appropriately (which is essentially what Microsoft Excel does, along with some very clever tricks for expressions like 1/3 + 1/3 + 1/3).</p>

<p>If you need perfect precision then use a type capable of doing that. The decimal type <code>BigDecimal</code> is probably what you want.</p>

<p>If you're working with money, and don't need to worry about currencies that have 1000s (e.g. Tunisian Dinar) or bitcoin (8 decimal places), then working in cents and using integers is one approach.</p>
",1
BigDecimal,Kotlin,pattern,74775668,"<p>Decimal division versus Integer division are very likely to have large swings in output values.
In the case of your example:</p>
<pre><code>Int division   : 9 / 5 = 1
Double division: 9 / 5 = 1.8
</code></pre>
<p>Integers never store any concept of decimals, in Kotlin the design decision was to use Integer based division following the choices of Java. <a href=""https://discuss.kotlinlang.org/t/dividing-integers/1662"" rel=""nofollow noreferrer"">Kotlin Discuss</a></p>
<p>This specifically works by outright dropping the decimal rather than applying any rounding</p>
<p>Would round up:</p>
<pre><code>Int   : 11 / 4 = 2
Double: 11 / 4 = 2.75
</code></pre>
<p>Would round down:</p>
<pre><code>Int   : 9 / 4 = 2
Double: 9 / 4 = 2.25
</code></pre>
<p>In general, division with a double will give the correct <em>enough</em> answer (Floating point math does break down in certain circumstances)</p>
",0
BigDecimal,Kotlin,environment,69080938,"<p>I'm afraid you <em>can't</em> convert a BigDecimal into a Double without losing precision, for several reasons:</p>
<ul>
<li>There are many more possible values for BigDecimal than for Double, so the conversion is necessarily lossy.</li>
</ul>
<p>Doubles are 64-bit, so can't have more than 2⁶⁴ distinct values, while BigDecimals are effectively unlimited.</p>
<ul>
<li>BigDecimals store decimal fractions, while Doubles store binary fractions.  There's very little overlap between the two, so in most cases the conversion will need to round the value.</li>
</ul>
<p>Both can store integers exactly (up to a certain value), and both can store fractions such as 0.5 exactly.  But nearly all decimal fractions can't be represented exactly as a binary fraction, and so for example there's no Double holding exactly 0.1.  (1/10 is an infinite recurring fraction in binary — 0.0001100110011… — and so no finite binary fraction can represent it exactly.)</p>
<p>This means that in Kotlin (and most other programming languages), a numeric literal such as 0.1 gets converted to the nearest double-precision number, which is around 0.100000000000000005551115….  In practice, this is usually hidden from you, because when you print out a Double, the formatting routine will round it off, and in many cases that gives back the original number.  But not always, e.g.:</p>
<pre><code>&gt;&gt;&gt; println(0.1 + 0.1 + 0.1)
0.30000000000000004
</code></pre>
<p>(All of this is discussed in other questions, most notably <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<ul>
<li>Unlike BigDecimals, Doubles have no precision, so they can't make the distinction you want anyway.</li>
</ul>
<p>For example, both 1.0 and 1.000000 are represented by exactly the same Double value:</p>
<pre><code>&gt;&gt;&gt; println(1.000000)
1.0
</code></pre>
<hr />
<p>I don't know Vert.x, but I'd be surprised if you really needed a Double here.  Have you tried using a BigDecimal directly?</p>
<p>Or if that doesn't work, have you tried converting it to a String, which will preserve whatever formatting you want?</p>
",1
BigDecimal,Kotlin,environment,62020741,"<p>Take a look at the <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a> class. You can easily set the scale to 4 digits and it can be created with a Double.</p>
",1
BigDecimal,Kotlin,environment,69141252,"<p>This happens because you are declaring a double, <code>8875.87</code>, and <em>then</em> turning it into a BigDecimal. There is no exact double-precision floating point representation for <code>8875.87</code> so the rounding has already occurred before you call <code>toBigDecimal</code>.</p>
<p>To keep the precision, you need to pass the values to the <code>BigDecimal</code> constructor as a string:</p>
<pre><code>val a = BigDecimal(&quot;8875.87&quot;)
val b = BigDecimal(&quot;778.55&quot;)
println(&quot;${a*b}&quot;)
</code></pre>
",1
BigDecimal,Kotlin,environment,74245972,"<p>If you care about exact decimal values, then <a href=""https://stackoverflow.com/questions/588004/is-floating-point-math-broken"">don't use floating-point</a>. Instead, <strong>use a type that's intended for storing exact decimal values, such as <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a></strong>.</p>
<p>(Floating-point types such as Kotlin's Float and Double can hold numbers across a huge range of magnitude, and store and calculate with them efficiently. But they use binary floating-point, not decimal. So they're great when you care about doing calculations efficiently and flexibly — but not when you need to store <em>exact</em> decimal values. Most of the questions about floating-point on this site seem to be for the latter cases, unfortunately…)</p>
<p>Kotlin has lots of <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/java.math.-big-decimal/"" rel=""nofollow noreferrer"">extensions</a> making it almost as easy to handle BigDecimals as the native types. They're a little less efficient, but not by anywhere near enough to be significant in a calculator project. And they do exactly what you want here: storing and manipulating decimal numbers exactly.</p>
<p>And because they're exact, you shouldn't need to do any rounding — and probably won't need to do any formatting either.</p>
<p>(Just make sure you create them directly from strings, not from floats/doubles — which will already have been rounded to the nearest binary floating-point number.)</p>
",1
BigDecimal,Kotlin,environment,56134099,"<blockquote>
  <p>In Kotlin 123.456 is a valid Double value</p>
</blockquote>

<p>Actually, that's not quite true.  There's a Double value very <em>close</em> to 123.456, but it's not <em>exactly</em> 123.456.  What you're seeing is the consequences of that.</p>

<p>So you can't maintain precision, because you don't have that precision to start with!</p>

<p>Short answer:</p>

<p><strong>If you need exact values, don't use floating-point!</strong></p>

<p>(In particular: <strong>Never store money values in floating-point!</strong>  See for example <a href=""https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency?rq=1"">this</a> question.)</p>

<p>The best alternative is usually <code>BigDecimal</code> which can store and calculate decimal fractions to an arbitrary precision.  They're less efficient, but Kotlin's operator overloading makes them painless to use (unlike Java!).</p>

<p>Or if you're not going to be doing any calculations, you could store them as <code>String</code>s.</p>

<p>Or if you'll only need a certain number of decimal places, you could scale them all up to <code>Int</code>s (or <code>Long</code>s).</p>

<p>Technical explanation:</p>

<p>Floats and Doubles use binary floating-point; they store an integer, and an integer power of 2 to multiple or divide it by.  (For example, 3/4 would be stored as 3*2⁻².)  This means they can store a wide range of binary fractions exactly.</p>

<p>However, just as you can't store 1/3 as a decimal fraction (it's 0.3333333333…, but any finite number of digits will only be an approximation), so you can't store 1/10 as a binary fraction (it's 0.000110011001100…).  This means that <strong>a binary floating-point number can't store most decimal numbers exactly</strong>.</p>

<p>Instead, they store the nearest possible value to the number you want.  And the routines which convert them to a String will try to undo that difference, by rounding appropriately.  But that doesn't always give the result you expect.</p>

<p>Floating-point numbers are great when you need a huge range of values (e.g. in scientific and technical use), but don't care about storing them exactly.</p>
",1
BigDecimal,Kotlin,environment,61879213,"<p>A key part of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html"" rel=""nofollow noreferrer""><code>BigDecimal</code></a> is that you must use it literally the whole way through: passing <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Double.html"" rel=""nofollow noreferrer""><code>Double</code></a> into <code>BigDecimal</code> destroys any benefit you would get from <code>BigDecimal</code>.</p>
<p>You must use <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#%3Cinit%3E(java.lang.String)"" rel=""nofollow noreferrer"">constructor taking a <code>String</code></a>, <code>BigDecimal(&quot;0.00200&quot;)</code> and <code>BigDecimal(&quot;0.00400&quot;)</code>, with the quotes. Then call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#multiply(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>multiply</code></a> on them.  You must not call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#doubleValue()"" rel=""nofollow noreferrer""><code>doubleValue()</code></a> on the result.</p>
<p>Equality testing on <code>BigDecimal</code> also adds complications, requiring exactly the same scale.  Consider using <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#compareTo(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>compareTo</code></a> like this, <code>assertTrue(expected.compareTo(actual) == 0)</code>.</p>
<p>Another issue: Your math is incorrect. 0.00200 * 0.00400 = 0.000008 rather than 0.00800.</p>
<p>Example code using only <code>BigDecimal</code> while avoiding <code>Double</code>. In Java syntax. Corrected your inputs.</p>
<pre><code>var a = &quot;0.002000&quot; ;
var b = &quot;0.004000&quot; ;
var expected = &quot;0.000008&quot; ;

var actual = new BigDecimal( a ).multiply( new BigDecimal( b ) ) ;
actual = actual.setScale( new BigDecimal( a ).scale() ) ;  // Set scale of result to match the scale of inputs.
boolean matching = actual.equals( new BigDecimal( expected ) ) ;
</code></pre>
<p>See this <a href=""https://ideone.com/Idqphj"" rel=""nofollow noreferrer"">code run live at IdeOne.com</a>.</p>
<blockquote>
<p>actual: actual: 0.000008</p>
<p>matching: true</p>
</blockquote>
",1
BigDecimal,Kotlin,environment,66088458,"<p>If properties can be missing, I would make them nullable. Why would you want to assign a default value of <code>0</code> to weight and height when <code>null</code> is a more accurate representation of the actual data? The <code>playerId</code> property could be an exception, because the player entity might not be very usable without the identifier.</p>
<p>It boils down to what you want to do with the player entities. If nullable properties make the entities more complicated to use, you can of course use default values. Kotlin has support for both nullable types and default values.</p>
<p>Finally, <a href=""https://github.com/square/moshi#kotlin"" rel=""nofollow noreferrer"">Moshi supports both reflection and codegen for Kotlin</a>. Both approaches have pros and cons. Using reflection, you can leave out the JsonClass annotations and your code would look like this:</p>
<pre><code>// build.gradle.kts
implementation(&quot;com.squareup.moshi:moshi:1.11.0&quot;)
implementation(&quot;com.squareup.moshi:moshi-kotlin:1.11.0&quot;)


// Kotlin code
import com.squareup.moshi.Json
import com.squareup.moshi.Moshi
import com.squareup.moshi.kotlin.reflect.KotlinJsonAdapterFactory


fun main() {
    val jsonPlayers = &quot;&quot;&quot;
        {
            &quot;data&quot;: [
                {
                    &quot;player_id&quot;: 2497,
                    &quot;firstname&quot;: &quot;Jay-Alistaire Frederick&quot;,
                    &quot;lastname&quot;: &quot;Simpson&quot;,
                    &quot;birthday&quot;: &quot;1988-12-01&quot;,
                    &quot;weight&quot;: 85,
                    &quot;height&quot;: 180
                },
                {
                    &quot;player_id&quot;: 2570,
                    &quot;firstname&quot;: &quot;Simranjit&quot;,
                    &quot;lastname&quot;: &quot;Singh Thandi&quot;,
                    &quot;birthday&quot;: &quot;1999-10-11&quot;,
                    &quot;age&quot;: 21,
                    &quot;weight&quot;: null,
                    &quot;height&quot;: null
                }
            ]
        }
        &quot;&quot;&quot;

    val moshi = Moshi.Builder()
            .addLast(KotlinJsonAdapterFactory())
            .build()

    val playerListAdapter = moshi.adapter(PlayerList::class.java)
    val players = playerListAdapter.fromJson(jsonPlayers)

    println(&quot;Players:&quot;)
    players?.data?.forEach { println(it) }
}


data class PlayerList(
        val data: List&lt;PlayerEntity&gt;
)


data class PlayerEntity(
        @Json(name = &quot;player_id&quot;)
        val playerId: Int,
        val firstname: String?,
        val lastname: String?,
        val birthday: String?,
        val age: Int = 0,
        val weight: Int?,
        val height: Int?
)
</code></pre>
",0
BigDecimal,Kotlin,environment,62529762,"<p><strong>Triple is the option of your question</strong></p>
<p>Kotlin language provides a simple datatype to store three values in a single instance. This can be done using a data class known as Triple. It is a simple generic class that stores any three values, there is no valuable meaning of the relationship between the three values. The comparison between two Triple objects is done on the basis of values, i.e. two Triples are equal only if all three component are equal.</p>
<p><strong>Class Definition –</strong></p>
<pre><code>data class Pair&lt;out A, out B, out C&gt; : Serializable
</code></pre>
<p>There are three parameters:
A – type of the first value
B – type of the second value
C – type of the third value</p>
<p><strong>Constructor –</strong>
In Kotlin, constructor is a special member function that is invoked when an object of the class is created primarily to initialize variables or properties. To create a new instance of the Triple we use:</p>
<pre><code>Pair(first: A, second: B, third: C)
</code></pre>
<p>Kotlin example of creating triple using the constructor –</p>
<pre><code>fun main() { 
    val (x, y, z) = Triple(1, &quot;Person&quot;, 2.0) 
    println(x) 
    println(y) 
    println(z) 
} 
</code></pre>
<p><strong>Output:</strong></p>
<p>1
Person
2.0</p>
",0
BigDecimal,Kotlin,environment,68045240,"<p>Using a <a href=""https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html"" rel=""noreferrer""><code>DecimalFormat</code></a> is a perfectly good way to format a number.</p>
<p>However, you have a deeper issue here, which is that you should <strong>never use a Float or Double to store a value that needs to be exact, such as money</strong>.</p>
<p>That's because Floats and Doubles are stored as binary fractions, not decimal fractions.  And just as you can't represent 1/3 exactly as a decimal fraction of any finite length (0.33333333333…), so you can't represent 1/10 exactly as a binary fraction (0.0001100110011…).  So most of the decimal numbers you want to store will get approximated and rounded to the nearest binary fraction that <em>can</em> be stored.  This isn't always obvious — when printing them out, they get rounded again to the nearest decimal fraction, and in many cases that ‘recovers’ the number you want — but there are many cases where it's noticeable, especially as the result of calculations.</p>
<p>You can see the effect in the Kotlin REPL:</p>
<pre><code>&gt;&gt;&gt; 0.1 + 0.2
res0: kotlin.Double = 0.30000000000000004
</code></pre>
<p>In this case, the binary fractions nearest to 0.1 and 0.2 sum to give a binary fraction that's nearer to 0.30000000000000004 than it is to 0.3.</p>
<p>(There are many existing questions on StackOverflow discussing this, such as <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<p>So if you need your money values to be accurate (and you almost always do!), then you should store them some other way.  For example, if you only ever need two decimal places (i.e. the number of paise), then simply store the number of paise as an integer.  Or if you don't need to do any calculations, you could store the number as a string (which is otherwise a bad idea…).</p>
<p>However, the most general and flexible way in Kotlin (and Java) is to <strong>use <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""noreferrer"">BigDecimal</a></strong>.  That uses decimal fractions internally to represent any decimal number exactly, to any precision you need, and you can easily do calculations and other manipulations.</p>
<p>In Java, using it is awkward and long-winded, but Kotlin's operator overloading makes it very natural, e.g.:</p>
<pre><code>&gt;&gt;&gt; val p1 = &quot;0.1&quot;.toBigDecimal()
&gt;&gt;&gt; val p2 = &quot;0.2&quot;.toBigDecimal()
&gt;&gt;&gt; p1 + p2
res3: java.math.BigDecimal = 0.3
</code></pre>
<p><code>DecimalFormat</code> supports it too:</p>
<pre><code>&gt;&gt;&gt; java.text.DecimalFormat(&quot;#,##0.00&quot;).format(p1 + p2)
res4: kotlin.String! = 0.30
</code></pre>
<p>(Note: do <strong>not</strong> create a BigDecimal from a Float or Double, as the damage will already have been done.  If you have an integer value, then start from an integer type such as Int or Long; otherwise, you'll need to start from a String to get an exact value.)</p>
",1
BigDecimal,Kotlin,environment,59947856,"<p>The problem here is not in the <code>setScale()</code> call, but happens before that.  <strong>You're constructing the <code>BigDecimal</code> from a <code>Double</code> value</strong> — a value which is <em>close</em> to 0.58, but isn't exactly.</p>

<p>(<code>FLoat</code>s and <code>Double</code>s are <em>binary</em> floating-point — and almost <strong>no decimal fractions have an exact binary representation</strong>.  In this case, 0.58 is 0.10010100011110101110000101… in binary.  No <code>Double</code> can store that exactly; the best if can do is store a value very close to it.)</p>

<p>The <code>BigDecimal</code> then does its best to store <em>that</em> value as precisely as possible.  You can see this in the REPL:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(0.58)
res1: java.math.BigDecimal = 0.57999999999999996003197111349436454474925994873046875
</code></pre>

<p>…which makes it obvious why that rounds down to 0.57, not 0.58.</p>

<p>And that holds for all of your problem cases: the nearest <code>Double</code> is slightly less than the decimal value you specify, and so rounds down.  (In the others, it's slightly <em>greater</em>, so those round as expected.  But the underlying problem is still there.)</p>

<p>The best solution is to avoid floating-point binary numbers entirely, and <strong>use the <code>BigDecimal(String)</code> constructor</strong>:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(""0.58"").setScale(2, java.math.RoundingMode.FLOOR)
res6: java.math.BigDecimal! = 0.58
</code></pre>

<p>(In this case, of course, there's no longer a need for the <code>setScale()</code> call at all, as the value now has a scale of 2 already!  But it does no harm.)</p>
",1
BigDecimal,Kotlin,alternative,69080938,"<p>I'm afraid you <em>can't</em> convert a BigDecimal into a Double without losing precision, for several reasons:</p>
<ul>
<li>There are many more possible values for BigDecimal than for Double, so the conversion is necessarily lossy.</li>
</ul>
<p>Doubles are 64-bit, so can't have more than 2⁶⁴ distinct values, while BigDecimals are effectively unlimited.</p>
<ul>
<li>BigDecimals store decimal fractions, while Doubles store binary fractions.  There's very little overlap between the two, so in most cases the conversion will need to round the value.</li>
</ul>
<p>Both can store integers exactly (up to a certain value), and both can store fractions such as 0.5 exactly.  But nearly all decimal fractions can't be represented exactly as a binary fraction, and so for example there's no Double holding exactly 0.1.  (1/10 is an infinite recurring fraction in binary — 0.0001100110011… — and so no finite binary fraction can represent it exactly.)</p>
<p>This means that in Kotlin (and most other programming languages), a numeric literal such as 0.1 gets converted to the nearest double-precision number, which is around 0.100000000000000005551115….  In practice, this is usually hidden from you, because when you print out a Double, the formatting routine will round it off, and in many cases that gives back the original number.  But not always, e.g.:</p>
<pre><code>&gt;&gt;&gt; println(0.1 + 0.1 + 0.1)
0.30000000000000004
</code></pre>
<p>(All of this is discussed in other questions, most notably <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<ul>
<li>Unlike BigDecimals, Doubles have no precision, so they can't make the distinction you want anyway.</li>
</ul>
<p>For example, both 1.0 and 1.000000 are represented by exactly the same Double value:</p>
<pre><code>&gt;&gt;&gt; println(1.000000)
1.0
</code></pre>
<hr />
<p>I don't know Vert.x, but I'd be surprised if you really needed a Double here.  Have you tried using a BigDecimal directly?</p>
<p>Or if that doesn't work, have you tried converting it to a String, which will preserve whatever formatting you want?</p>
",1
BigDecimal,Kotlin,alternative,69141252,"<p>This happens because you are declaring a double, <code>8875.87</code>, and <em>then</em> turning it into a BigDecimal. There is no exact double-precision floating point representation for <code>8875.87</code> so the rounding has already occurred before you call <code>toBigDecimal</code>.</p>
<p>To keep the precision, you need to pass the values to the <code>BigDecimal</code> constructor as a string:</p>
<pre><code>val a = BigDecimal(&quot;8875.87&quot;)
val b = BigDecimal(&quot;778.55&quot;)
println(&quot;${a*b}&quot;)
</code></pre>
",1
BigDecimal,Kotlin,alternative,62020741,"<p>Take a look at the <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a> class. You can easily set the scale to 4 digits and it can be created with a Double.</p>
",0
BigDecimal,Kotlin,alternative,59947856,"<p>The problem here is not in the <code>setScale()</code> call, but happens before that.  <strong>You're constructing the <code>BigDecimal</code> from a <code>Double</code> value</strong> — a value which is <em>close</em> to 0.58, but isn't exactly.</p>

<p>(<code>FLoat</code>s and <code>Double</code>s are <em>binary</em> floating-point — and almost <strong>no decimal fractions have an exact binary representation</strong>.  In this case, 0.58 is 0.10010100011110101110000101… in binary.  No <code>Double</code> can store that exactly; the best if can do is store a value very close to it.)</p>

<p>The <code>BigDecimal</code> then does its best to store <em>that</em> value as precisely as possible.  You can see this in the REPL:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(0.58)
res1: java.math.BigDecimal = 0.57999999999999996003197111349436454474925994873046875
</code></pre>

<p>…which makes it obvious why that rounds down to 0.57, not 0.58.</p>

<p>And that holds for all of your problem cases: the nearest <code>Double</code> is slightly less than the decimal value you specify, and so rounds down.  (In the others, it's slightly <em>greater</em>, so those round as expected.  But the underlying problem is still there.)</p>

<p>The best solution is to avoid floating-point binary numbers entirely, and <strong>use the <code>BigDecimal(String)</code> constructor</strong>:</p>

<pre><code>&gt;&gt;&gt; java.math.BigDecimal(""0.58"").setScale(2, java.math.RoundingMode.FLOOR)
res6: java.math.BigDecimal! = 0.58
</code></pre>

<p>(In this case, of course, there's no longer a need for the <code>setScale()</code> call at all, as the value now has a scale of 2 already!  But it does no harm.)</p>
",1
BigDecimal,Kotlin,alternative,61879213,"<p>A key part of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html"" rel=""nofollow noreferrer""><code>BigDecimal</code></a> is that you must use it literally the whole way through: passing <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Double.html"" rel=""nofollow noreferrer""><code>Double</code></a> into <code>BigDecimal</code> destroys any benefit you would get from <code>BigDecimal</code>.</p>
<p>You must use <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#%3Cinit%3E(java.lang.String)"" rel=""nofollow noreferrer"">constructor taking a <code>String</code></a>, <code>BigDecimal(&quot;0.00200&quot;)</code> and <code>BigDecimal(&quot;0.00400&quot;)</code>, with the quotes. Then call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#multiply(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>multiply</code></a> on them.  You must not call <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#doubleValue()"" rel=""nofollow noreferrer""><code>doubleValue()</code></a> on the result.</p>
<p>Equality testing on <code>BigDecimal</code> also adds complications, requiring exactly the same scale.  Consider using <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#compareTo(java.math.BigDecimal)"" rel=""nofollow noreferrer""><code>compareTo</code></a> like this, <code>assertTrue(expected.compareTo(actual) == 0)</code>.</p>
<p>Another issue: Your math is incorrect. 0.00200 * 0.00400 = 0.000008 rather than 0.00800.</p>
<p>Example code using only <code>BigDecimal</code> while avoiding <code>Double</code>. In Java syntax. Corrected your inputs.</p>
<pre><code>var a = &quot;0.002000&quot; ;
var b = &quot;0.004000&quot; ;
var expected = &quot;0.000008&quot; ;

var actual = new BigDecimal( a ).multiply( new BigDecimal( b ) ) ;
actual = actual.setScale( new BigDecimal( a ).scale() ) ;  // Set scale of result to match the scale of inputs.
boolean matching = actual.equals( new BigDecimal( expected ) ) ;
</code></pre>
<p>See this <a href=""https://ideone.com/Idqphj"" rel=""nofollow noreferrer"">code run live at IdeOne.com</a>.</p>
<blockquote>
<p>actual: actual: 0.000008</p>
<p>matching: true</p>
</blockquote>
",1
BigDecimal,Kotlin,alternative,74245972,"<p>If you care about exact decimal values, then <a href=""https://stackoverflow.com/questions/588004/is-floating-point-math-broken"">don't use floating-point</a>. Instead, <strong>use a type that's intended for storing exact decimal values, such as <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""nofollow noreferrer"">BigDecimal</a></strong>.</p>
<p>(Floating-point types such as Kotlin's Float and Double can hold numbers across a huge range of magnitude, and store and calculate with them efficiently. But they use binary floating-point, not decimal. So they're great when you care about doing calculations efficiently and flexibly — but not when you need to store <em>exact</em> decimal values. Most of the questions about floating-point on this site seem to be for the latter cases, unfortunately…)</p>
<p>Kotlin has lots of <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/java.math.-big-decimal/"" rel=""nofollow noreferrer"">extensions</a> making it almost as easy to handle BigDecimals as the native types. They're a little less efficient, but not by anywhere near enough to be significant in a calculator project. And they do exactly what you want here: storing and manipulating decimal numbers exactly.</p>
<p>And because they're exact, you shouldn't need to do any rounding — and probably won't need to do any formatting either.</p>
<p>(Just make sure you create them directly from strings, not from floats/doubles — which will already have been rounded to the nearest binary floating-point number.)</p>
",1
BigDecimal,Kotlin,alternative,68045240,"<p>Using a <a href=""https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html"" rel=""noreferrer""><code>DecimalFormat</code></a> is a perfectly good way to format a number.</p>
<p>However, you have a deeper issue here, which is that you should <strong>never use a Float or Double to store a value that needs to be exact, such as money</strong>.</p>
<p>That's because Floats and Doubles are stored as binary fractions, not decimal fractions.  And just as you can't represent 1/3 exactly as a decimal fraction of any finite length (0.33333333333…), so you can't represent 1/10 exactly as a binary fraction (0.0001100110011…).  So most of the decimal numbers you want to store will get approximated and rounded to the nearest binary fraction that <em>can</em> be stored.  This isn't always obvious — when printing them out, they get rounded again to the nearest decimal fraction, and in many cases that ‘recovers’ the number you want — but there are many cases where it's noticeable, especially as the result of calculations.</p>
<p>You can see the effect in the Kotlin REPL:</p>
<pre><code>&gt;&gt;&gt; 0.1 + 0.2
res0: kotlin.Double = 0.30000000000000004
</code></pre>
<p>In this case, the binary fractions nearest to 0.1 and 0.2 sum to give a binary fraction that's nearer to 0.30000000000000004 than it is to 0.3.</p>
<p>(There are many existing questions on StackOverflow discussing this, such as <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<p>So if you need your money values to be accurate (and you almost always do!), then you should store them some other way.  For example, if you only ever need two decimal places (i.e. the number of paise), then simply store the number of paise as an integer.  Or if you don't need to do any calculations, you could store the number as a string (which is otherwise a bad idea…).</p>
<p>However, the most general and flexible way in Kotlin (and Java) is to <strong>use <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html"" rel=""noreferrer"">BigDecimal</a></strong>.  That uses decimal fractions internally to represent any decimal number exactly, to any precision you need, and you can easily do calculations and other manipulations.</p>
<p>In Java, using it is awkward and long-winded, but Kotlin's operator overloading makes it very natural, e.g.:</p>
<pre><code>&gt;&gt;&gt; val p1 = &quot;0.1&quot;.toBigDecimal()
&gt;&gt;&gt; val p2 = &quot;0.2&quot;.toBigDecimal()
&gt;&gt;&gt; p1 + p2
res3: java.math.BigDecimal = 0.3
</code></pre>
<p><code>DecimalFormat</code> supports it too:</p>
<pre><code>&gt;&gt;&gt; java.text.DecimalFormat(&quot;#,##0.00&quot;).format(p1 + p2)
res4: kotlin.String! = 0.30
</code></pre>
<p>(Note: do <strong>not</strong> create a BigDecimal from a Float or Double, as the damage will already have been done.  If you have an integer value, then start from an integer type such as Int or Long; otherwise, you'll need to start from a String to get an exact value.)</p>
",1
BigDecimal,Kotlin,alternative,56134099,"<blockquote>
  <p>In Kotlin 123.456 is a valid Double value</p>
</blockquote>

<p>Actually, that's not quite true.  There's a Double value very <em>close</em> to 123.456, but it's not <em>exactly</em> 123.456.  What you're seeing is the consequences of that.</p>

<p>So you can't maintain precision, because you don't have that precision to start with!</p>

<p>Short answer:</p>

<p><strong>If you need exact values, don't use floating-point!</strong></p>

<p>(In particular: <strong>Never store money values in floating-point!</strong>  See for example <a href=""https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency?rq=1"">this</a> question.)</p>

<p>The best alternative is usually <code>BigDecimal</code> which can store and calculate decimal fractions to an arbitrary precision.  They're less efficient, but Kotlin's operator overloading makes them painless to use (unlike Java!).</p>

<p>Or if you're not going to be doing any calculations, you could store them as <code>String</code>s.</p>

<p>Or if you'll only need a certain number of decimal places, you could scale them all up to <code>Int</code>s (or <code>Long</code>s).</p>

<p>Technical explanation:</p>

<p>Floats and Doubles use binary floating-point; they store an integer, and an integer power of 2 to multiple or divide it by.  (For example, 3/4 would be stored as 3*2⁻².)  This means they can store a wide range of binary fractions exactly.</p>

<p>However, just as you can't store 1/3 as a decimal fraction (it's 0.3333333333…, but any finite number of digits will only be an approximation), so you can't store 1/10 as a binary fraction (it's 0.000110011001100…).  This means that <strong>a binary floating-point number can't store most decimal numbers exactly</strong>.</p>

<p>Instead, they store the nearest possible value to the number you want.  And the routines which convert them to a String will try to undo that difference, by rounding appropriately.  But that doesn't always give the result you expect.</p>

<p>Floating-point numbers are great when you need a huge range of values (e.g. in scientific and technical use), but don't care about storing them exactly.</p>
",1
BigDecimal,Kotlin,alternative,58448480,"<p>If you are bothered about having to create the <code>BigDecimal</code> over two lines, <code>BigDecimal</code> has constructors that take <code>Int</code> that you can call directly:</p>

<pre><code> val bigDecimalInt = BigDecimal(1)
</code></pre>

<p>This is fine for integer values, BUT for floating-point values like <code>Double</code> the constructor and <code>toBigDecimal</code> actually behave differently. The constructor creates a BigDecimal value of the <code>Double</code> value passed in, which will be ""incorrect"" if that value is not exactly representable in floating-point arithmetic. <code>toBigDecimal</code> converts the value to a String and then uses that which gives the ""correct"" value</p>

<pre><code>val doubleNum:Double = 0.1
println(doubleNum.toBigDecimal()) // prints 0.1

val bigDecimal:BigDecimal = BigDecimal(0.1)
println(bigDecimal)               // prints 0.1000000000000000055511151231257827021181583404541015625
</code></pre>

<p>If none of that makes sense, you probably need to read about Floating Point Arithmetic, this is a common problem affecting all/most programming languages</p>

<p>So <code>toBigDecimal</code> is a safer option</p>
",1
BigDecimal,Kotlin,alternative,74775668,"<p>Decimal division versus Integer division are very likely to have large swings in output values.
In the case of your example:</p>
<pre><code>Int division   : 9 / 5 = 1
Double division: 9 / 5 = 1.8
</code></pre>
<p>Integers never store any concept of decimals, in Kotlin the design decision was to use Integer based division following the choices of Java. <a href=""https://discuss.kotlinlang.org/t/dividing-integers/1662"" rel=""nofollow noreferrer"">Kotlin Discuss</a></p>
<p>This specifically works by outright dropping the decimal rather than applying any rounding</p>
<p>Would round up:</p>
<pre><code>Int   : 11 / 4 = 2
Double: 11 / 4 = 2.75
</code></pre>
<p>Would round down:</p>
<pre><code>Int   : 9 / 4 = 2
Double: 9 / 4 = 2.25
</code></pre>
<p>In general, division with a double will give the correct <em>enough</em> answer (Floating point math does break down in certain circumstances)</p>
",0
ByteArray,Kotlin,functionality,59571483,"<p>when you write a byteArray in kotlin like this :</p>

<pre><code> val byteArray = ByteArray(1024)
 var length = byteArray.size
</code></pre>

<p>documentation says</p>

<blockquote>
  <p>An array of bytes. When targeting the JVM, instances of this class are represented as <code>byte[]</code>.
    @constructor Creates a new array of the specified [size], with all elements initialized to zero.</p>
</blockquote>

<p>to prove it, checking the byte code created is this:</p>

<pre><code> byte[] byteArray = new byte[1024];
 int test = byteArray.length;
</code></pre>

<p>therefor in your case a can code like this.</p>

<pre><code>entry.size = byteArray.size
</code></pre>

<p>but type of <code>size</code> is <code>int</code> and <code>entry.size</code> needs a <code>long</code> value, just add <code>.toLong()</code> to <code>size</code> for fixing this issue.</p>
",1
ByteArray,Kotlin,functionality,70192311,"<p>In Kotlin 1.4+ you can get the least significant bit of any byte with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/take-lowest-one-bit.html"" rel=""nofollow noreferrer"">.takeLowestOneBit()</a> method.</p>
<p>It may happen that it's equal to zero, so you need to iterate byteArray until any non-zero least significant bit is met (I believe this is what was meant under &quot;least significant bit of byteArray&quot;):</p>
<pre class=""lang-kotlin prettyprint-override""><code>var lowestBit: Byte = 0
for (index in sz - 1 downTo 0) {
    val currentLowestBit = buff[index].takeLowestOneBit()
    if (currentLowestBit != 0.toByte()) {
        lowestBit = currentLowestBit
        break
    }
}
</code></pre>
<p>Note that it will print the least significant bit of your buffer, not the whole image (if it's bigger than the buffer)</p>
",0
ByteArray,Kotlin,functionality,66016215,"<p>(Disclaimer: I don't know Flutter, and haven't used JNI.)</p>
<p>There's no such class as <code>java.lang.byte</code><sup>*</sup>, nor <code>java.lang.ByteArray</code>.</p>
<p>On Kotlin/JVM, <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer"">ByteArray</a> compiles down to a simple primitive array — what would be called <code>byte[]</code> in Java.</p>
<p>And that has the JVM descriptor <code>[B</code>.  (You can see this by printing <code>ByteArray(0).toString()</code>, which starts with <code>[B</code> (before the <code>@</code> and hash code).  The gory details are in the <a href=""https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html"" rel=""noreferrer"">JVM Spec</a>.)</p>
<p>So I'd suggest trying <code>[B</code>!</p>
<hr />
<p>(* There <em>is</em> <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html"" rel=""noreferrer"">java.lang.Byte</a>, but that's the primitive wrapper class used for boxing bytes.)</p>
",1
ByteArray,Kotlin,functionality,76727626,"<p>The data you want to receive is a Short value stored in two bytes at position 5 and 6. The easiest way to decode bytes to primitive in kotlin jvm is to wrap this part of the data into a ByteBuffer and decode it.</p>
<p>From one of your line</p>
<blockquote>
<p>[-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ========364gm</p>
</blockquote>
<pre class=""lang-kotlin prettyprint-override""><code>val bleByteArray = byteArrayOf(-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
val buffer = ByteBuffer.wrap(bleByteArray, 5, Short.SIZE_BYTES)
assert(buffer.getShort() == 364)
</code></pre>
<p>Here, <code>buffer</code> only contains bytes 5 and 6. So when <code>getShort</code> is called, the buffer read the first two bytes and return the corresponding short value.</p>
<p>If you want to read other parts of the ble information, you may want to <code>wrap()</code> the whole ByteArray and then read multiple parts of it with other methods of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/ByteBuffer.html"" rel=""nofollow noreferrer"">ByteBuffer</a>.</p>
",0
ByteArray,Kotlin,functionality,64852886,"<p>The following is an object serializable class which is helpful to convert the object to bytes array and vice versa in Kotlin.</p>
<pre><code>public class ObjectSerializer {
    companion object {
        public fun serialize(obj: Any?) : String {
            if (obj == null) {
                return &quot;&quot;
            }

            var baos = ByteArrayOutputStream()
            var oos = ObjectOutputStream(baos)
            oos.writeObject(obj)
            oos.close()

            return encodeBytes(baos.toByteArray())
        }

        public fun deserialize(str: String?) : Any? {
            if (str == null || str.length() == 0) {
                return null
            }

            var bais = ByteArrayInputStream(decodeBytes(str))
            var ois = ObjectInputStream(bais)

            return ois.readObject()
        }

        private fun encodeBytes(bytes: ByteArray) : String {
            var buffer = StringBuffer()

            for (byte in bytes) {
                buffer.append(((byte.toInt() shr 4) and 0xF plus 'a').toChar())
                buffer.append(((byte.toInt()) and 0xF plus 'a').toChar())
            }

            return buffer.toString()
        }

        private fun decodeBytes(str: String) : ByteArray {
            var bytes = ByteArray(str.length() / 2)

            for (i in 0..(str.length() - 1)) {
                var c = str.charAt(i)
                bytes.set(i / 2, ((c minus 'a').toInt() shl 4).toByte())

                c = str.charAt(i + 1)
                bytes.set(i / 2, (bytes.get(i / 2) + (c minus 'a')).toByte())
            }

            return bytes
        }
    }
}
</code></pre>
",1
ByteArray,Kotlin,functionality,65669006,"<p>The equivalent is <code>toByteArray()</code> which does essentially the same thing.</p>
<p>I'm a bit confused by your question, to clarify, there's no <code>asBytes()</code> on a Kotlin <code>String</code>.</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/to-byte-array.html"" rel=""noreferrer""><code>toByteArray</code></a> returns a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer""><code>ByteArray</code></a> which (for Kotlin/JVM) is actually the same type as <code>byte[]</code>.</p>
<p>The naming difference just stems from what the Kotlin designers chose to be more idiomatic for Kotlin itself.</p>
<hr />
<p>Related documentation:</p>
<ul>
<li><a href=""https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays"" rel=""noreferrer"">https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays</a></li>
</ul>
",1
ByteArray,Kotlin,functionality,55416646,"<p>The easiest way is to use </p>

<pre><code>File(""aaa"").readBytes()
</code></pre>

<p>That one will read the whole file into the <code>ByteArray</code>. But you should carefully know you have enough RAM in the heap to do so</p>

<p>The ByteArray can be created via <code>ByteArray(100)</code> call, where <code>100</code> is the size of it</p>

<p>For the <code>RandomAccessFile</code>, it is probably better to use at the <code>readFully</code> function, which reads exactly the requested amount of bytes.</p>

<p>The classic approach is possible to read a file by chunks, e.g. </p>

<pre><code>    val buff = ByteArray(1230)
    File(""aaa"").inputStream().buffered().use { input -&gt;
      while(true) {
        val sz = input.read(buff)
        if (sz &lt;= 0) break

        ///at that point we have a sz bytes in the buff to process
        consumeArray(buff, 0, sz)
      }
    }
</code></pre>
",1
ByteArray,Kotlin,functionality,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",1
ByteArray,Kotlin,functionality,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",1
ByteArray,Kotlin,functionality,72443985,"<p>In Kotlin You can just use decode function for byteArray...</p>
<pre><code>private fun stringToBitmap(encodedString: String): Bitmap {
        val imageBytes = decode(encodedString, DEFAULT)
        return BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.size)
    }
</code></pre>
",0
ByteArray,Kotlin,concept,59571483,"<p>when you write a byteArray in kotlin like this :</p>

<pre><code> val byteArray = ByteArray(1024)
 var length = byteArray.size
</code></pre>

<p>documentation says</p>

<blockquote>
  <p>An array of bytes. When targeting the JVM, instances of this class are represented as <code>byte[]</code>.
    @constructor Creates a new array of the specified [size], with all elements initialized to zero.</p>
</blockquote>

<p>to prove it, checking the byte code created is this:</p>

<pre><code> byte[] byteArray = new byte[1024];
 int test = byteArray.length;
</code></pre>

<p>therefor in your case a can code like this.</p>

<pre><code>entry.size = byteArray.size
</code></pre>

<p>but type of <code>size</code> is <code>int</code> and <code>entry.size</code> needs a <code>long</code> value, just add <code>.toLong()</code> to <code>size</code> for fixing this issue.</p>
",1
ByteArray,Kotlin,concept,66016215,"<p>(Disclaimer: I don't know Flutter, and haven't used JNI.)</p>
<p>There's no such class as <code>java.lang.byte</code><sup>*</sup>, nor <code>java.lang.ByteArray</code>.</p>
<p>On Kotlin/JVM, <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer"">ByteArray</a> compiles down to a simple primitive array — what would be called <code>byte[]</code> in Java.</p>
<p>And that has the JVM descriptor <code>[B</code>.  (You can see this by printing <code>ByteArray(0).toString()</code>, which starts with <code>[B</code> (before the <code>@</code> and hash code).  The gory details are in the <a href=""https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html"" rel=""noreferrer"">JVM Spec</a>.)</p>
<p>So I'd suggest trying <code>[B</code>!</p>
<hr />
<p>(* There <em>is</em> <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html"" rel=""noreferrer"">java.lang.Byte</a>, but that's the primitive wrapper class used for boxing bytes.)</p>
",1
ByteArray,Kotlin,concept,76727626,"<p>The data you want to receive is a Short value stored in two bytes at position 5 and 6. The easiest way to decode bytes to primitive in kotlin jvm is to wrap this part of the data into a ByteBuffer and decode it.</p>
<p>From one of your line</p>
<blockquote>
<p>[-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ========364gm</p>
</blockquote>
<pre class=""lang-kotlin prettyprint-override""><code>val bleByteArray = byteArrayOf(-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
val buffer = ByteBuffer.wrap(bleByteArray, 5, Short.SIZE_BYTES)
assert(buffer.getShort() == 364)
</code></pre>
<p>Here, <code>buffer</code> only contains bytes 5 and 6. So when <code>getShort</code> is called, the buffer read the first two bytes and return the corresponding short value.</p>
<p>If you want to read other parts of the ble information, you may want to <code>wrap()</code> the whole ByteArray and then read multiple parts of it with other methods of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/ByteBuffer.html"" rel=""nofollow noreferrer"">ByteBuffer</a>.</p>
",1
ByteArray,Kotlin,concept,70192311,"<p>In Kotlin 1.4+ you can get the least significant bit of any byte with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/take-lowest-one-bit.html"" rel=""nofollow noreferrer"">.takeLowestOneBit()</a> method.</p>
<p>It may happen that it's equal to zero, so you need to iterate byteArray until any non-zero least significant bit is met (I believe this is what was meant under &quot;least significant bit of byteArray&quot;):</p>
<pre class=""lang-kotlin prettyprint-override""><code>var lowestBit: Byte = 0
for (index in sz - 1 downTo 0) {
    val currentLowestBit = buff[index].takeLowestOneBit()
    if (currentLowestBit != 0.toByte()) {
        lowestBit = currentLowestBit
        break
    }
}
</code></pre>
<p>Note that it will print the least significant bit of your buffer, not the whole image (if it's bigger than the buffer)</p>
",0
ByteArray,Kotlin,concept,64852886,"<p>The following is an object serializable class which is helpful to convert the object to bytes array and vice versa in Kotlin.</p>
<pre><code>public class ObjectSerializer {
    companion object {
        public fun serialize(obj: Any?) : String {
            if (obj == null) {
                return &quot;&quot;
            }

            var baos = ByteArrayOutputStream()
            var oos = ObjectOutputStream(baos)
            oos.writeObject(obj)
            oos.close()

            return encodeBytes(baos.toByteArray())
        }

        public fun deserialize(str: String?) : Any? {
            if (str == null || str.length() == 0) {
                return null
            }

            var bais = ByteArrayInputStream(decodeBytes(str))
            var ois = ObjectInputStream(bais)

            return ois.readObject()
        }

        private fun encodeBytes(bytes: ByteArray) : String {
            var buffer = StringBuffer()

            for (byte in bytes) {
                buffer.append(((byte.toInt() shr 4) and 0xF plus 'a').toChar())
                buffer.append(((byte.toInt()) and 0xF plus 'a').toChar())
            }

            return buffer.toString()
        }

        private fun decodeBytes(str: String) : ByteArray {
            var bytes = ByteArray(str.length() / 2)

            for (i in 0..(str.length() - 1)) {
                var c = str.charAt(i)
                bytes.set(i / 2, ((c minus 'a').toInt() shl 4).toByte())

                c = str.charAt(i + 1)
                bytes.set(i / 2, (bytes.get(i / 2) + (c minus 'a')).toByte())
            }

            return bytes
        }
    }
}
</code></pre>
",1
ByteArray,Kotlin,concept,65669006,"<p>The equivalent is <code>toByteArray()</code> which does essentially the same thing.</p>
<p>I'm a bit confused by your question, to clarify, there's no <code>asBytes()</code> on a Kotlin <code>String</code>.</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/to-byte-array.html"" rel=""noreferrer""><code>toByteArray</code></a> returns a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer""><code>ByteArray</code></a> which (for Kotlin/JVM) is actually the same type as <code>byte[]</code>.</p>
<p>The naming difference just stems from what the Kotlin designers chose to be more idiomatic for Kotlin itself.</p>
<hr />
<p>Related documentation:</p>
<ul>
<li><a href=""https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays"" rel=""noreferrer"">https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays</a></li>
</ul>
",1
ByteArray,Kotlin,concept,55416646,"<p>The easiest way is to use </p>

<pre><code>File(""aaa"").readBytes()
</code></pre>

<p>That one will read the whole file into the <code>ByteArray</code>. But you should carefully know you have enough RAM in the heap to do so</p>

<p>The ByteArray can be created via <code>ByteArray(100)</code> call, where <code>100</code> is the size of it</p>

<p>For the <code>RandomAccessFile</code>, it is probably better to use at the <code>readFully</code> function, which reads exactly the requested amount of bytes.</p>

<p>The classic approach is possible to read a file by chunks, e.g. </p>

<pre><code>    val buff = ByteArray(1230)
    File(""aaa"").inputStream().buffered().use { input -&gt;
      while(true) {
        val sz = input.read(buff)
        if (sz &lt;= 0) break

        ///at that point we have a sz bytes in the buff to process
        consumeArray(buff, 0, sz)
      }
    }
</code></pre>
",1
ByteArray,Kotlin,concept,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",1
ByteArray,Kotlin,concept,69891559,"<p>Here is an one liner that will give you a ByteArray:</p>
<pre><code>fun numberToByteArray (data: Number, size: Int = 4) : ByteArray = 
    ByteArray (size) {i -&gt; (data.toLong() shr (i*8)).toByte()}
</code></pre>
<p>Optionally setting the number of bytes (size), you can convert Shorts, Ints, Longs.</p>
<p>Just call it like this:</p>
<pre><code>var yourByteArray = numberToByteArray (yourNumberHere)
</code></pre>
",1
ByteArray,Kotlin,concept,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",1
ByteArray,Kotlin,performance,70192311,"<p>In Kotlin 1.4+ you can get the least significant bit of any byte with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/take-lowest-one-bit.html"" rel=""nofollow noreferrer"">.takeLowestOneBit()</a> method.</p>
<p>It may happen that it's equal to zero, so you need to iterate byteArray until any non-zero least significant bit is met (I believe this is what was meant under &quot;least significant bit of byteArray&quot;):</p>
<pre class=""lang-kotlin prettyprint-override""><code>var lowestBit: Byte = 0
for (index in sz - 1 downTo 0) {
    val currentLowestBit = buff[index].takeLowestOneBit()
    if (currentLowestBit != 0.toByte()) {
        lowestBit = currentLowestBit
        break
    }
}
</code></pre>
<p>Note that it will print the least significant bit of your buffer, not the whole image (if it's bigger than the buffer)</p>
",0
ByteArray,Kotlin,performance,59571483,"<p>when you write a byteArray in kotlin like this :</p>

<pre><code> val byteArray = ByteArray(1024)
 var length = byteArray.size
</code></pre>

<p>documentation says</p>

<blockquote>
  <p>An array of bytes. When targeting the JVM, instances of this class are represented as <code>byte[]</code>.
    @constructor Creates a new array of the specified [size], with all elements initialized to zero.</p>
</blockquote>

<p>to prove it, checking the byte code created is this:</p>

<pre><code> byte[] byteArray = new byte[1024];
 int test = byteArray.length;
</code></pre>

<p>therefor in your case a can code like this.</p>

<pre><code>entry.size = byteArray.size
</code></pre>

<p>but type of <code>size</code> is <code>int</code> and <code>entry.size</code> needs a <code>long</code> value, just add <code>.toLong()</code> to <code>size</code> for fixing this issue.</p>
",1
ByteArray,Kotlin,performance,76727626,"<p>The data you want to receive is a Short value stored in two bytes at position 5 and 6. The easiest way to decode bytes to primitive in kotlin jvm is to wrap this part of the data into a ByteBuffer and decode it.</p>
<p>From one of your line</p>
<blockquote>
<p>[-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ========364gm</p>
</blockquote>
<pre class=""lang-kotlin prettyprint-override""><code>val bleByteArray = byteArrayOf(-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
val buffer = ByteBuffer.wrap(bleByteArray, 5, Short.SIZE_BYTES)
assert(buffer.getShort() == 364)
</code></pre>
<p>Here, <code>buffer</code> only contains bytes 5 and 6. So when <code>getShort</code> is called, the buffer read the first two bytes and return the corresponding short value.</p>
<p>If you want to read other parts of the ble information, you may want to <code>wrap()</code> the whole ByteArray and then read multiple parts of it with other methods of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/ByteBuffer.html"" rel=""nofollow noreferrer"">ByteBuffer</a>.</p>
",0
ByteArray,Kotlin,performance,66016215,"<p>(Disclaimer: I don't know Flutter, and haven't used JNI.)</p>
<p>There's no such class as <code>java.lang.byte</code><sup>*</sup>, nor <code>java.lang.ByteArray</code>.</p>
<p>On Kotlin/JVM, <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer"">ByteArray</a> compiles down to a simple primitive array — what would be called <code>byte[]</code> in Java.</p>
<p>And that has the JVM descriptor <code>[B</code>.  (You can see this by printing <code>ByteArray(0).toString()</code>, which starts with <code>[B</code> (before the <code>@</code> and hash code).  The gory details are in the <a href=""https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html"" rel=""noreferrer"">JVM Spec</a>.)</p>
<p>So I'd suggest trying <code>[B</code>!</p>
<hr />
<p>(* There <em>is</em> <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html"" rel=""noreferrer"">java.lang.Byte</a>, but that's the primitive wrapper class used for boxing bytes.)</p>
",1
ByteArray,Kotlin,performance,64852886,"<p>The following is an object serializable class which is helpful to convert the object to bytes array and vice versa in Kotlin.</p>
<pre><code>public class ObjectSerializer {
    companion object {
        public fun serialize(obj: Any?) : String {
            if (obj == null) {
                return &quot;&quot;
            }

            var baos = ByteArrayOutputStream()
            var oos = ObjectOutputStream(baos)
            oos.writeObject(obj)
            oos.close()

            return encodeBytes(baos.toByteArray())
        }

        public fun deserialize(str: String?) : Any? {
            if (str == null || str.length() == 0) {
                return null
            }

            var bais = ByteArrayInputStream(decodeBytes(str))
            var ois = ObjectInputStream(bais)

            return ois.readObject()
        }

        private fun encodeBytes(bytes: ByteArray) : String {
            var buffer = StringBuffer()

            for (byte in bytes) {
                buffer.append(((byte.toInt() shr 4) and 0xF plus 'a').toChar())
                buffer.append(((byte.toInt()) and 0xF plus 'a').toChar())
            }

            return buffer.toString()
        }

        private fun decodeBytes(str: String) : ByteArray {
            var bytes = ByteArray(str.length() / 2)

            for (i in 0..(str.length() - 1)) {
                var c = str.charAt(i)
                bytes.set(i / 2, ((c minus 'a').toInt() shl 4).toByte())

                c = str.charAt(i + 1)
                bytes.set(i / 2, (bytes.get(i / 2) + (c minus 'a')).toByte())
            }

            return bytes
        }
    }
}
</code></pre>
",0
ByteArray,Kotlin,performance,55416646,"<p>The easiest way is to use </p>

<pre><code>File(""aaa"").readBytes()
</code></pre>

<p>That one will read the whole file into the <code>ByteArray</code>. But you should carefully know you have enough RAM in the heap to do so</p>

<p>The ByteArray can be created via <code>ByteArray(100)</code> call, where <code>100</code> is the size of it</p>

<p>For the <code>RandomAccessFile</code>, it is probably better to use at the <code>readFully</code> function, which reads exactly the requested amount of bytes.</p>

<p>The classic approach is possible to read a file by chunks, e.g. </p>

<pre><code>    val buff = ByteArray(1230)
    File(""aaa"").inputStream().buffered().use { input -&gt;
      while(true) {
        val sz = input.read(buff)
        if (sz &lt;= 0) break

        ///at that point we have a sz bytes in the buff to process
        consumeArray(buff, 0, sz)
      }
    }
</code></pre>
",1
ByteArray,Kotlin,performance,65669006,"<p>The equivalent is <code>toByteArray()</code> which does essentially the same thing.</p>
<p>I'm a bit confused by your question, to clarify, there's no <code>asBytes()</code> on a Kotlin <code>String</code>.</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/to-byte-array.html"" rel=""noreferrer""><code>toByteArray</code></a> returns a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer""><code>ByteArray</code></a> which (for Kotlin/JVM) is actually the same type as <code>byte[]</code>.</p>
<p>The naming difference just stems from what the Kotlin designers chose to be more idiomatic for Kotlin itself.</p>
<hr />
<p>Related documentation:</p>
<ul>
<li><a href=""https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays"" rel=""noreferrer"">https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays</a></li>
</ul>
",0
ByteArray,Kotlin,performance,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",0
ByteArray,Kotlin,performance,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",0
ByteArray,Kotlin,performance,72443985,"<p>In Kotlin You can just use decode function for byteArray...</p>
<pre><code>private fun stringToBitmap(encodedString: String): Bitmap {
        val imageBytes = decode(encodedString, DEFAULT)
        return BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.size)
    }
</code></pre>
",0
ByteArray,Kotlin,directive,59571483,"<p>when you write a byteArray in kotlin like this :</p>

<pre><code> val byteArray = ByteArray(1024)
 var length = byteArray.size
</code></pre>

<p>documentation says</p>

<blockquote>
  <p>An array of bytes. When targeting the JVM, instances of this class are represented as <code>byte[]</code>.
    @constructor Creates a new array of the specified [size], with all elements initialized to zero.</p>
</blockquote>

<p>to prove it, checking the byte code created is this:</p>

<pre><code> byte[] byteArray = new byte[1024];
 int test = byteArray.length;
</code></pre>

<p>therefor in your case a can code like this.</p>

<pre><code>entry.size = byteArray.size
</code></pre>

<p>but type of <code>size</code> is <code>int</code> and <code>entry.size</code> needs a <code>long</code> value, just add <code>.toLong()</code> to <code>size</code> for fixing this issue.</p>
",1
ByteArray,Kotlin,directive,70192311,"<p>In Kotlin 1.4+ you can get the least significant bit of any byte with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/take-lowest-one-bit.html"" rel=""nofollow noreferrer"">.takeLowestOneBit()</a> method.</p>
<p>It may happen that it's equal to zero, so you need to iterate byteArray until any non-zero least significant bit is met (I believe this is what was meant under &quot;least significant bit of byteArray&quot;):</p>
<pre class=""lang-kotlin prettyprint-override""><code>var lowestBit: Byte = 0
for (index in sz - 1 downTo 0) {
    val currentLowestBit = buff[index].takeLowestOneBit()
    if (currentLowestBit != 0.toByte()) {
        lowestBit = currentLowestBit
        break
    }
}
</code></pre>
<p>Note that it will print the least significant bit of your buffer, not the whole image (if it's bigger than the buffer)</p>
",0
ByteArray,Kotlin,directive,76727626,"<p>The data you want to receive is a Short value stored in two bytes at position 5 and 6. The easiest way to decode bytes to primitive in kotlin jvm is to wrap this part of the data into a ByteBuffer and decode it.</p>
<p>From one of your line</p>
<blockquote>
<p>[-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ========364gm</p>
</blockquote>
<pre class=""lang-kotlin prettyprint-override""><code>val bleByteArray = byteArrayOf(-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
val buffer = ByteBuffer.wrap(bleByteArray, 5, Short.SIZE_BYTES)
assert(buffer.getShort() == 364)
</code></pre>
<p>Here, <code>buffer</code> only contains bytes 5 and 6. So when <code>getShort</code> is called, the buffer read the first two bytes and return the corresponding short value.</p>
<p>If you want to read other parts of the ble information, you may want to <code>wrap()</code> the whole ByteArray and then read multiple parts of it with other methods of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/ByteBuffer.html"" rel=""nofollow noreferrer"">ByteBuffer</a>.</p>
",0
ByteArray,Kotlin,directive,66016215,"<p>(Disclaimer: I don't know Flutter, and haven't used JNI.)</p>
<p>There's no such class as <code>java.lang.byte</code><sup>*</sup>, nor <code>java.lang.ByteArray</code>.</p>
<p>On Kotlin/JVM, <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer"">ByteArray</a> compiles down to a simple primitive array — what would be called <code>byte[]</code> in Java.</p>
<p>And that has the JVM descriptor <code>[B</code>.  (You can see this by printing <code>ByteArray(0).toString()</code>, which starts with <code>[B</code> (before the <code>@</code> and hash code).  The gory details are in the <a href=""https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html"" rel=""noreferrer"">JVM Spec</a>.)</p>
<p>So I'd suggest trying <code>[B</code>!</p>
<hr />
<p>(* There <em>is</em> <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html"" rel=""noreferrer"">java.lang.Byte</a>, but that's the primitive wrapper class used for boxing bytes.)</p>
",1
ByteArray,Kotlin,directive,65669006,"<p>The equivalent is <code>toByteArray()</code> which does essentially the same thing.</p>
<p>I'm a bit confused by your question, to clarify, there's no <code>asBytes()</code> on a Kotlin <code>String</code>.</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/to-byte-array.html"" rel=""noreferrer""><code>toByteArray</code></a> returns a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer""><code>ByteArray</code></a> which (for Kotlin/JVM) is actually the same type as <code>byte[]</code>.</p>
<p>The naming difference just stems from what the Kotlin designers chose to be more idiomatic for Kotlin itself.</p>
<hr />
<p>Related documentation:</p>
<ul>
<li><a href=""https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays"" rel=""noreferrer"">https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays</a></li>
</ul>
",1
ByteArray,Kotlin,directive,64852886,"<p>The following is an object serializable class which is helpful to convert the object to bytes array and vice versa in Kotlin.</p>
<pre><code>public class ObjectSerializer {
    companion object {
        public fun serialize(obj: Any?) : String {
            if (obj == null) {
                return &quot;&quot;
            }

            var baos = ByteArrayOutputStream()
            var oos = ObjectOutputStream(baos)
            oos.writeObject(obj)
            oos.close()

            return encodeBytes(baos.toByteArray())
        }

        public fun deserialize(str: String?) : Any? {
            if (str == null || str.length() == 0) {
                return null
            }

            var bais = ByteArrayInputStream(decodeBytes(str))
            var ois = ObjectInputStream(bais)

            return ois.readObject()
        }

        private fun encodeBytes(bytes: ByteArray) : String {
            var buffer = StringBuffer()

            for (byte in bytes) {
                buffer.append(((byte.toInt() shr 4) and 0xF plus 'a').toChar())
                buffer.append(((byte.toInt()) and 0xF plus 'a').toChar())
            }

            return buffer.toString()
        }

        private fun decodeBytes(str: String) : ByteArray {
            var bytes = ByteArray(str.length() / 2)

            for (i in 0..(str.length() - 1)) {
                var c = str.charAt(i)
                bytes.set(i / 2, ((c minus 'a').toInt() shl 4).toByte())

                c = str.charAt(i + 1)
                bytes.set(i / 2, (bytes.get(i / 2) + (c minus 'a')).toByte())
            }

            return bytes
        }
    }
}
</code></pre>
",0
ByteArray,Kotlin,directive,55416646,"<p>The easiest way is to use </p>

<pre><code>File(""aaa"").readBytes()
</code></pre>

<p>That one will read the whole file into the <code>ByteArray</code>. But you should carefully know you have enough RAM in the heap to do so</p>

<p>The ByteArray can be created via <code>ByteArray(100)</code> call, where <code>100</code> is the size of it</p>

<p>For the <code>RandomAccessFile</code>, it is probably better to use at the <code>readFully</code> function, which reads exactly the requested amount of bytes.</p>

<p>The classic approach is possible to read a file by chunks, e.g. </p>

<pre><code>    val buff = ByteArray(1230)
    File(""aaa"").inputStream().buffered().use { input -&gt;
      while(true) {
        val sz = input.read(buff)
        if (sz &lt;= 0) break

        ///at that point we have a sz bytes in the buff to process
        consumeArray(buff, 0, sz)
      }
    }
</code></pre>
",1
ByteArray,Kotlin,directive,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",1
ByteArray,Kotlin,directive,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",1
ByteArray,Kotlin,directive,72443985,"<p>In Kotlin You can just use decode function for byteArray...</p>
<pre><code>private fun stringToBitmap(encodedString: String): Bitmap {
        val imageBytes = decode(encodedString, DEFAULT)
        return BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.size)
    }
</code></pre>
",0
ByteArray,Kotlin,pattern,59571483,"<p>when you write a byteArray in kotlin like this :</p>

<pre><code> val byteArray = ByteArray(1024)
 var length = byteArray.size
</code></pre>

<p>documentation says</p>

<blockquote>
  <p>An array of bytes. When targeting the JVM, instances of this class are represented as <code>byte[]</code>.
    @constructor Creates a new array of the specified [size], with all elements initialized to zero.</p>
</blockquote>

<p>to prove it, checking the byte code created is this:</p>

<pre><code> byte[] byteArray = new byte[1024];
 int test = byteArray.length;
</code></pre>

<p>therefor in your case a can code like this.</p>

<pre><code>entry.size = byteArray.size
</code></pre>

<p>but type of <code>size</code> is <code>int</code> and <code>entry.size</code> needs a <code>long</code> value, just add <code>.toLong()</code> to <code>size</code> for fixing this issue.</p>
",1
ByteArray,Kotlin,pattern,66016215,"<p>(Disclaimer: I don't know Flutter, and haven't used JNI.)</p>
<p>There's no such class as <code>java.lang.byte</code><sup>*</sup>, nor <code>java.lang.ByteArray</code>.</p>
<p>On Kotlin/JVM, <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer"">ByteArray</a> compiles down to a simple primitive array — what would be called <code>byte[]</code> in Java.</p>
<p>And that has the JVM descriptor <code>[B</code>.  (You can see this by printing <code>ByteArray(0).toString()</code>, which starts with <code>[B</code> (before the <code>@</code> and hash code).  The gory details are in the <a href=""https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html"" rel=""noreferrer"">JVM Spec</a>.)</p>
<p>So I'd suggest trying <code>[B</code>!</p>
<hr />
<p>(* There <em>is</em> <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html"" rel=""noreferrer"">java.lang.Byte</a>, but that's the primitive wrapper class used for boxing bytes.)</p>
",1
ByteArray,Kotlin,pattern,70192311,"<p>In Kotlin 1.4+ you can get the least significant bit of any byte with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/take-lowest-one-bit.html"" rel=""nofollow noreferrer"">.takeLowestOneBit()</a> method.</p>
<p>It may happen that it's equal to zero, so you need to iterate byteArray until any non-zero least significant bit is met (I believe this is what was meant under &quot;least significant bit of byteArray&quot;):</p>
<pre class=""lang-kotlin prettyprint-override""><code>var lowestBit: Byte = 0
for (index in sz - 1 downTo 0) {
    val currentLowestBit = buff[index].takeLowestOneBit()
    if (currentLowestBit != 0.toByte()) {
        lowestBit = currentLowestBit
        break
    }
}
</code></pre>
<p>Note that it will print the least significant bit of your buffer, not the whole image (if it's bigger than the buffer)</p>
",0
ByteArray,Kotlin,pattern,76727626,"<p>The data you want to receive is a Short value stored in two bytes at position 5 and 6. The easiest way to decode bytes to primitive in kotlin jvm is to wrap this part of the data into a ByteBuffer and decode it.</p>
<p>From one of your line</p>
<blockquote>
<p>[-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ========364gm</p>
</blockquote>
<pre class=""lang-kotlin prettyprint-override""><code>val bleByteArray = byteArrayOf(-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
val buffer = ByteBuffer.wrap(bleByteArray, 5, Short.SIZE_BYTES)
assert(buffer.getShort() == 364)
</code></pre>
<p>Here, <code>buffer</code> only contains bytes 5 and 6. So when <code>getShort</code> is called, the buffer read the first two bytes and return the corresponding short value.</p>
<p>If you want to read other parts of the ble information, you may want to <code>wrap()</code> the whole ByteArray and then read multiple parts of it with other methods of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/ByteBuffer.html"" rel=""nofollow noreferrer"">ByteBuffer</a>.</p>
",1
ByteArray,Kotlin,pattern,64852886,"<p>The following is an object serializable class which is helpful to convert the object to bytes array and vice versa in Kotlin.</p>
<pre><code>public class ObjectSerializer {
    companion object {
        public fun serialize(obj: Any?) : String {
            if (obj == null) {
                return &quot;&quot;
            }

            var baos = ByteArrayOutputStream()
            var oos = ObjectOutputStream(baos)
            oos.writeObject(obj)
            oos.close()

            return encodeBytes(baos.toByteArray())
        }

        public fun deserialize(str: String?) : Any? {
            if (str == null || str.length() == 0) {
                return null
            }

            var bais = ByteArrayInputStream(decodeBytes(str))
            var ois = ObjectInputStream(bais)

            return ois.readObject()
        }

        private fun encodeBytes(bytes: ByteArray) : String {
            var buffer = StringBuffer()

            for (byte in bytes) {
                buffer.append(((byte.toInt() shr 4) and 0xF plus 'a').toChar())
                buffer.append(((byte.toInt()) and 0xF plus 'a').toChar())
            }

            return buffer.toString()
        }

        private fun decodeBytes(str: String) : ByteArray {
            var bytes = ByteArray(str.length() / 2)

            for (i in 0..(str.length() - 1)) {
                var c = str.charAt(i)
                bytes.set(i / 2, ((c minus 'a').toInt() shl 4).toByte())

                c = str.charAt(i + 1)
                bytes.set(i / 2, (bytes.get(i / 2) + (c minus 'a')).toByte())
            }

            return bytes
        }
    }
}
</code></pre>
",0
ByteArray,Kotlin,pattern,55416646,"<p>The easiest way is to use </p>

<pre><code>File(""aaa"").readBytes()
</code></pre>

<p>That one will read the whole file into the <code>ByteArray</code>. But you should carefully know you have enough RAM in the heap to do so</p>

<p>The ByteArray can be created via <code>ByteArray(100)</code> call, where <code>100</code> is the size of it</p>

<p>For the <code>RandomAccessFile</code>, it is probably better to use at the <code>readFully</code> function, which reads exactly the requested amount of bytes.</p>

<p>The classic approach is possible to read a file by chunks, e.g. </p>

<pre><code>    val buff = ByteArray(1230)
    File(""aaa"").inputStream().buffered().use { input -&gt;
      while(true) {
        val sz = input.read(buff)
        if (sz &lt;= 0) break

        ///at that point we have a sz bytes in the buff to process
        consumeArray(buff, 0, sz)
      }
    }
</code></pre>
",1
ByteArray,Kotlin,pattern,65669006,"<p>The equivalent is <code>toByteArray()</code> which does essentially the same thing.</p>
<p>I'm a bit confused by your question, to clarify, there's no <code>asBytes()</code> on a Kotlin <code>String</code>.</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/to-byte-array.html"" rel=""noreferrer""><code>toByteArray</code></a> returns a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer""><code>ByteArray</code></a> which (for Kotlin/JVM) is actually the same type as <code>byte[]</code>.</p>
<p>The naming difference just stems from what the Kotlin designers chose to be more idiomatic for Kotlin itself.</p>
<hr />
<p>Related documentation:</p>
<ul>
<li><a href=""https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays"" rel=""noreferrer"">https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays</a></li>
</ul>
",1
ByteArray,Kotlin,pattern,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",1
ByteArray,Kotlin,pattern,69891559,"<p>Here is an one liner that will give you a ByteArray:</p>
<pre><code>fun numberToByteArray (data: Number, size: Int = 4) : ByteArray = 
    ByteArray (size) {i -&gt; (data.toLong() shr (i*8)).toByte()}
</code></pre>
<p>Optionally setting the number of bytes (size), you can convert Shorts, Ints, Longs.</p>
<p>Just call it like this:</p>
<pre><code>var yourByteArray = numberToByteArray (yourNumberHere)
</code></pre>
",1
ByteArray,Kotlin,pattern,56185257,"<p><code>ByteArray</code> is an object (reference type), so you can create an array of it: <code>Array&lt;ByteArray&gt;</code>.</p>
",1
ByteArray,Kotlin,environment,59571483,"<p>when you write a byteArray in kotlin like this :</p>

<pre><code> val byteArray = ByteArray(1024)
 var length = byteArray.size
</code></pre>

<p>documentation says</p>

<blockquote>
  <p>An array of bytes. When targeting the JVM, instances of this class are represented as <code>byte[]</code>.
    @constructor Creates a new array of the specified [size], with all elements initialized to zero.</p>
</blockquote>

<p>to prove it, checking the byte code created is this:</p>

<pre><code> byte[] byteArray = new byte[1024];
 int test = byteArray.length;
</code></pre>

<p>therefor in your case a can code like this.</p>

<pre><code>entry.size = byteArray.size
</code></pre>

<p>but type of <code>size</code> is <code>int</code> and <code>entry.size</code> needs a <code>long</code> value, just add <code>.toLong()</code> to <code>size</code> for fixing this issue.</p>
",1
ByteArray,Kotlin,environment,70192311,"<p>In Kotlin 1.4+ you can get the least significant bit of any byte with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/take-lowest-one-bit.html"" rel=""nofollow noreferrer"">.takeLowestOneBit()</a> method.</p>
<p>It may happen that it's equal to zero, so you need to iterate byteArray until any non-zero least significant bit is met (I believe this is what was meant under &quot;least significant bit of byteArray&quot;):</p>
<pre class=""lang-kotlin prettyprint-override""><code>var lowestBit: Byte = 0
for (index in sz - 1 downTo 0) {
    val currentLowestBit = buff[index].takeLowestOneBit()
    if (currentLowestBit != 0.toByte()) {
        lowestBit = currentLowestBit
        break
    }
}
</code></pre>
<p>Note that it will print the least significant bit of your buffer, not the whole image (if it's bigger than the buffer)</p>
",0
ByteArray,Kotlin,environment,76727626,"<p>The data you want to receive is a Short value stored in two bytes at position 5 and 6. The easiest way to decode bytes to primitive in kotlin jvm is to wrap this part of the data into a ByteBuffer and decode it.</p>
<p>From one of your line</p>
<blockquote>
<p>[-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ========364gm</p>
</blockquote>
<pre class=""lang-kotlin prettyprint-override""><code>val bleByteArray = byteArrayOf(-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
val buffer = ByteBuffer.wrap(bleByteArray, 5, Short.SIZE_BYTES)
assert(buffer.getShort() == 364)
</code></pre>
<p>Here, <code>buffer</code> only contains bytes 5 and 6. So when <code>getShort</code> is called, the buffer read the first two bytes and return the corresponding short value.</p>
<p>If you want to read other parts of the ble information, you may want to <code>wrap()</code> the whole ByteArray and then read multiple parts of it with other methods of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/ByteBuffer.html"" rel=""nofollow noreferrer"">ByteBuffer</a>.</p>
",0
ByteArray,Kotlin,environment,66016215,"<p>(Disclaimer: I don't know Flutter, and haven't used JNI.)</p>
<p>There's no such class as <code>java.lang.byte</code><sup>*</sup>, nor <code>java.lang.ByteArray</code>.</p>
<p>On Kotlin/JVM, <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer"">ByteArray</a> compiles down to a simple primitive array — what would be called <code>byte[]</code> in Java.</p>
<p>And that has the JVM descriptor <code>[B</code>.  (You can see this by printing <code>ByteArray(0).toString()</code>, which starts with <code>[B</code> (before the <code>@</code> and hash code).  The gory details are in the <a href=""https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html"" rel=""noreferrer"">JVM Spec</a>.)</p>
<p>So I'd suggest trying <code>[B</code>!</p>
<hr />
<p>(* There <em>is</em> <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html"" rel=""noreferrer"">java.lang.Byte</a>, but that's the primitive wrapper class used for boxing bytes.)</p>
",1
ByteArray,Kotlin,environment,64852886,"<p>The following is an object serializable class which is helpful to convert the object to bytes array and vice versa in Kotlin.</p>
<pre><code>public class ObjectSerializer {
    companion object {
        public fun serialize(obj: Any?) : String {
            if (obj == null) {
                return &quot;&quot;
            }

            var baos = ByteArrayOutputStream()
            var oos = ObjectOutputStream(baos)
            oos.writeObject(obj)
            oos.close()

            return encodeBytes(baos.toByteArray())
        }

        public fun deserialize(str: String?) : Any? {
            if (str == null || str.length() == 0) {
                return null
            }

            var bais = ByteArrayInputStream(decodeBytes(str))
            var ois = ObjectInputStream(bais)

            return ois.readObject()
        }

        private fun encodeBytes(bytes: ByteArray) : String {
            var buffer = StringBuffer()

            for (byte in bytes) {
                buffer.append(((byte.toInt() shr 4) and 0xF plus 'a').toChar())
                buffer.append(((byte.toInt()) and 0xF plus 'a').toChar())
            }

            return buffer.toString()
        }

        private fun decodeBytes(str: String) : ByteArray {
            var bytes = ByteArray(str.length() / 2)

            for (i in 0..(str.length() - 1)) {
                var c = str.charAt(i)
                bytes.set(i / 2, ((c minus 'a').toInt() shl 4).toByte())

                c = str.charAt(i + 1)
                bytes.set(i / 2, (bytes.get(i / 2) + (c minus 'a')).toByte())
            }

            return bytes
        }
    }
}
</code></pre>
",1
ByteArray,Kotlin,environment,55416646,"<p>The easiest way is to use </p>

<pre><code>File(""aaa"").readBytes()
</code></pre>

<p>That one will read the whole file into the <code>ByteArray</code>. But you should carefully know you have enough RAM in the heap to do so</p>

<p>The ByteArray can be created via <code>ByteArray(100)</code> call, where <code>100</code> is the size of it</p>

<p>For the <code>RandomAccessFile</code>, it is probably better to use at the <code>readFully</code> function, which reads exactly the requested amount of bytes.</p>

<p>The classic approach is possible to read a file by chunks, e.g. </p>

<pre><code>    val buff = ByteArray(1230)
    File(""aaa"").inputStream().buffered().use { input -&gt;
      while(true) {
        val sz = input.read(buff)
        if (sz &lt;= 0) break

        ///at that point we have a sz bytes in the buff to process
        consumeArray(buff, 0, sz)
      }
    }
</code></pre>
",1
ByteArray,Kotlin,environment,65669006,"<p>The equivalent is <code>toByteArray()</code> which does essentially the same thing.</p>
<p>I'm a bit confused by your question, to clarify, there's no <code>asBytes()</code> on a Kotlin <code>String</code>.</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/to-byte-array.html"" rel=""noreferrer""><code>toByteArray</code></a> returns a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer""><code>ByteArray</code></a> which (for Kotlin/JVM) is actually the same type as <code>byte[]</code>.</p>
<p>The naming difference just stems from what the Kotlin designers chose to be more idiomatic for Kotlin itself.</p>
<hr />
<p>Related documentation:</p>
<ul>
<li><a href=""https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays"" rel=""noreferrer"">https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays</a></li>
</ul>
",1
ByteArray,Kotlin,environment,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",1
ByteArray,Kotlin,environment,55570269,"<p>Kotlin (since 1.3) provides the extension method <code>InputStream.readBytes()</code> for reading all bytes of an <code>InputStream</code> into a <code>ByteArray</code>.</p>
<p>In your case use:</p>
<pre><code>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
     if(requestCode == RC_SELECT_PDF &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp;
            data != null &amp;&amp; data.data != null){
            val hereUrl:Uri = data.data
            var os = ByteArrayOutputStream()
            var inputStream = this@RegistrasiPengajarActivity?.contentResolver.openInputStream(hereUrl)
            var byteArray = inputStream.readBytes()
        }
    }
</code></pre>
",1
ByteArray,Kotlin,environment,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",1
ByteArray,Kotlin,alternative,59571483,"<p>when you write a byteArray in kotlin like this :</p>

<pre><code> val byteArray = ByteArray(1024)
 var length = byteArray.size
</code></pre>

<p>documentation says</p>

<blockquote>
  <p>An array of bytes. When targeting the JVM, instances of this class are represented as <code>byte[]</code>.
    @constructor Creates a new array of the specified [size], with all elements initialized to zero.</p>
</blockquote>

<p>to prove it, checking the byte code created is this:</p>

<pre><code> byte[] byteArray = new byte[1024];
 int test = byteArray.length;
</code></pre>

<p>therefor in your case a can code like this.</p>

<pre><code>entry.size = byteArray.size
</code></pre>

<p>but type of <code>size</code> is <code>int</code> and <code>entry.size</code> needs a <code>long</code> value, just add <code>.toLong()</code> to <code>size</code> for fixing this issue.</p>
",1
ByteArray,Kotlin,alternative,66016215,"<p>(Disclaimer: I don't know Flutter, and haven't used JNI.)</p>
<p>There's no such class as <code>java.lang.byte</code><sup>*</sup>, nor <code>java.lang.ByteArray</code>.</p>
<p>On Kotlin/JVM, <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer"">ByteArray</a> compiles down to a simple primitive array — what would be called <code>byte[]</code> in Java.</p>
<p>And that has the JVM descriptor <code>[B</code>.  (You can see this by printing <code>ByteArray(0).toString()</code>, which starts with <code>[B</code> (before the <code>@</code> and hash code).  The gory details are in the <a href=""https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html"" rel=""noreferrer"">JVM Spec</a>.)</p>
<p>So I'd suggest trying <code>[B</code>!</p>
<hr />
<p>(* There <em>is</em> <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html"" rel=""noreferrer"">java.lang.Byte</a>, but that's the primitive wrapper class used for boxing bytes.)</p>
",1
ByteArray,Kotlin,alternative,70192311,"<p>In Kotlin 1.4+ you can get the least significant bit of any byte with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/take-lowest-one-bit.html"" rel=""nofollow noreferrer"">.takeLowestOneBit()</a> method.</p>
<p>It may happen that it's equal to zero, so you need to iterate byteArray until any non-zero least significant bit is met (I believe this is what was meant under &quot;least significant bit of byteArray&quot;):</p>
<pre class=""lang-kotlin prettyprint-override""><code>var lowestBit: Byte = 0
for (index in sz - 1 downTo 0) {
    val currentLowestBit = buff[index].takeLowestOneBit()
    if (currentLowestBit != 0.toByte()) {
        lowestBit = currentLowestBit
        break
    }
}
</code></pre>
<p>Note that it will print the least significant bit of your buffer, not the whole image (if it's bigger than the buffer)</p>
",0
ByteArray,Kotlin,alternative,76727626,"<p>The data you want to receive is a Short value stored in two bytes at position 5 and 6. The easiest way to decode bytes to primitive in kotlin jvm is to wrap this part of the data into a ByteBuffer and decode it.</p>
<p>From one of your line</p>
<blockquote>
<p>[-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] ========364gm</p>
</blockquote>
<pre class=""lang-kotlin prettyprint-override""><code>val bleByteArray = byteArrayOf(-6, 5, 0, 3, 0, 1, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
val buffer = ByteBuffer.wrap(bleByteArray, 5, Short.SIZE_BYTES)
assert(buffer.getShort() == 364)
</code></pre>
<p>Here, <code>buffer</code> only contains bytes 5 and 6. So when <code>getShort</code> is called, the buffer read the first two bytes and return the corresponding short value.</p>
<p>If you want to read other parts of the ble information, you may want to <code>wrap()</code> the whole ByteArray and then read multiple parts of it with other methods of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/ByteBuffer.html"" rel=""nofollow noreferrer"">ByteBuffer</a>.</p>
",0
ByteArray,Kotlin,alternative,65669006,"<p>The equivalent is <code>toByteArray()</code> which does essentially the same thing.</p>
<p>I'm a bit confused by your question, to clarify, there's no <code>asBytes()</code> on a Kotlin <code>String</code>.</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/to-byte-array.html"" rel=""noreferrer""><code>toByteArray</code></a> returns a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer""><code>ByteArray</code></a> which (for Kotlin/JVM) is actually the same type as <code>byte[]</code>.</p>
<p>The naming difference just stems from what the Kotlin designers chose to be more idiomatic for Kotlin itself.</p>
<hr />
<p>Related documentation:</p>
<ul>
<li><a href=""https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays"" rel=""noreferrer"">https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays</a></li>
</ul>
",1
ByteArray,Kotlin,alternative,64852886,"<p>The following is an object serializable class which is helpful to convert the object to bytes array and vice versa in Kotlin.</p>
<pre><code>public class ObjectSerializer {
    companion object {
        public fun serialize(obj: Any?) : String {
            if (obj == null) {
                return &quot;&quot;
            }

            var baos = ByteArrayOutputStream()
            var oos = ObjectOutputStream(baos)
            oos.writeObject(obj)
            oos.close()

            return encodeBytes(baos.toByteArray())
        }

        public fun deserialize(str: String?) : Any? {
            if (str == null || str.length() == 0) {
                return null
            }

            var bais = ByteArrayInputStream(decodeBytes(str))
            var ois = ObjectInputStream(bais)

            return ois.readObject()
        }

        private fun encodeBytes(bytes: ByteArray) : String {
            var buffer = StringBuffer()

            for (byte in bytes) {
                buffer.append(((byte.toInt() shr 4) and 0xF plus 'a').toChar())
                buffer.append(((byte.toInt()) and 0xF plus 'a').toChar())
            }

            return buffer.toString()
        }

        private fun decodeBytes(str: String) : ByteArray {
            var bytes = ByteArray(str.length() / 2)

            for (i in 0..(str.length() - 1)) {
                var c = str.charAt(i)
                bytes.set(i / 2, ((c minus 'a').toInt() shl 4).toByte())

                c = str.charAt(i + 1)
                bytes.set(i / 2, (bytes.get(i / 2) + (c minus 'a')).toByte())
            }

            return bytes
        }
    }
}
</code></pre>
",0
ByteArray,Kotlin,alternative,55416646,"<p>The easiest way is to use </p>

<pre><code>File(""aaa"").readBytes()
</code></pre>

<p>That one will read the whole file into the <code>ByteArray</code>. But you should carefully know you have enough RAM in the heap to do so</p>

<p>The ByteArray can be created via <code>ByteArray(100)</code> call, where <code>100</code> is the size of it</p>

<p>For the <code>RandomAccessFile</code>, it is probably better to use at the <code>readFully</code> function, which reads exactly the requested amount of bytes.</p>

<p>The classic approach is possible to read a file by chunks, e.g. </p>

<pre><code>    val buff = ByteArray(1230)
    File(""aaa"").inputStream().buffered().use { input -&gt;
      while(true) {
        val sz = input.read(buff)
        if (sz &lt;= 0) break

        ///at that point we have a sz bytes in the buff to process
        consumeArray(buff, 0, sz)
      }
    }
</code></pre>
",1
ByteArray,Kotlin,alternative,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",0
ByteArray,Kotlin,alternative,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",0
ByteArray,Kotlin,alternative,69891559,"<p>Here is an one liner that will give you a ByteArray:</p>
<pre><code>fun numberToByteArray (data: Number, size: Int = 4) : ByteArray = 
    ByteArray (size) {i -&gt; (data.toLong() shr (i*8)).toByte()}
</code></pre>
<p>Optionally setting the number of bytes (size), you can convert Shorts, Ints, Longs.</p>
<p>Just call it like this:</p>
<pre><code>var yourByteArray = numberToByteArray (yourNumberHere)
</code></pre>
",1
