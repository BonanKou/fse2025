api,language,knowledge_type,post_id,post,contain_knowledge
MessageDigest,Java,functionality,76013607,"<p>You can use the <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestInputStream.html"" rel=""nofollow noreferrer""><code>DigestInputStream</code></a> to calculate a hash while reading from a stream. That is, you wrap the original input stream with a <code>DigestInputStream</code> and read through the <code>DigestInputStream</code>. While reading the data, the message digest is automatically updated, and you can retrieve the digest after you read the entire stream.</p>
<p>Alternatively, you can use <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestOutputStream.html"" rel=""nofollow noreferrer""><code>DigestOutputStream</code></a> to calculate a hash while writing to a stream.  In a similar vein, you wrap the destination output stream with a <code>DigestOutputStream</code> and write through the <code>DigestOutputStream</code>.</p>
<p>A quick and dirty example:</p>
<pre class=""lang-java prettyprint-override""><code>var inputFile = Path.of(&quot;D:\\Development\\data\\testdata-csv\\customers-1000.csv&quot;);
var outputFile = Files.createTempFile(&quot;testoutput&quot;, &quot;.dat&quot;);
var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
try (var in = new DigestInputStream(Files.newInputStream(inputFile), md);
     var out = Files.newOutputStream(outputFile)) {
    in.transferTo(out);
} finally {
    Files.deleteIfExists(outputFile);
}

System.out.println(HexFormat.of().formatHex(md.digest()));
</code></pre>
<p>In terms of your existing code, you could do something like:</p>
<pre class=""lang-java prettyprint-override""><code>public String transferAndHash(InputStream in) throws IOException {
    try {
        var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
        try (var digestIn = new DigestInputStream(in, md)) {
            transferTo(digestIn);
        }
        return HexFormat.of().formatHex(md.digest());
    } catch (NoSuchAlgorithmException e) {
        // all recent Java versions are required to support SHA-256
        throw new AssertionError(&quot;Expected SHA-256 to be supported&quot;, e);
    }
}
</code></pre>
<p>(NOTE: <code>HexFormat</code> was introduced in Java 17, if you're using an earlier version, you'll need an alternative.)</p>
",0
MessageDigest,Java,functionality,77012331,"<p><code>runOnUiThread</code> post a message to your main <code>Looper</code>'s <code>MessageQueue</code>, whose message is handled one by one.</p>
<p>So it's possible that <code>MessageQueue</code> is full of other message which took long time to process, which will result in long delay before your <code>Runnable</code> executed.</p>
<p>You can verify this by replace <code>runOnUiThread</code> with below code:</p>
<pre><code>// this will insert your Runnable at the front of MessageQueue
new Handler(Looper.getMainLooper()).postAtFrontOfQueue(() -&gt; {
    long delta = new Date().getTime() - start;
    Log.e(&quot;TESTUI2&quot;, &quot;&quot; + delta);
});
</code></pre>
",0
MessageDigest,Java,functionality,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
MessageDigest,Java,functionality,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,functionality,74850838,"<p><code>HashMap.Node</code> is declared with <em>package private</em> visibility (the default visibility if <code>public</code>, <code>private</code> or <code>protected</code> is not used).</p>
<pre><code>    static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {
</code></pre>
<p>This means that the class is only visible to classes in the same package.</p>
<p>See this question for more details: <a href=""https://stackoverflow.com/questions/215497/what-is-the-difference-between-public-protected-package-private-and-private-in"">What is the difference between public, protected, package-private and private in Java?</a></p>
",0
MessageDigest,Java,functionality,77067072,"<p>You can use a <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer""><code>QueueBrowser</code></a>. You can create the browser using <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/session#createBrowser-jakarta.jms.Queue-"" rel=""nofollow noreferrer""><code>Session.createBrowser(Queue)</code></a>. As the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer"">API doc</a> states:</p>
<blockquote>
<p>A client uses a <code>QueueBrowser</code> object to look at messages on a queue without removing them.</p>
<p>The <code>getEnumeration</code> method returns a <code>java.util.Enumeration</code> that is used to scan the queue's messages. It may be an enumeration of the entire content of a queue, or it may contain only the messages matching a message selector.</p>
</blockquote>
<p>The <code>Enumeration</code> contains instances of the <code>javax.jms.Message</code> objects from the queue. Therefore you can inspect all the message's headers, properties, and body.</p>
",0
MessageDigest,Java,functionality,77314202,"<p>Some classes (<code>Pac4jProducer</code> and <code>HttpServletResponseProducer</code>) are meant to use CDI and produces pac4j beans.</p>
<p>What is your application server? Can you copy/paste the full stack trace?</p>
",0
MessageDigest,Java,functionality,72809808,"<p>Instead of doing an <code>invocationBuilder.method(&quot;GET&quot;, ...)</code>, use <code>invocationBuilder.post(entity)</code>, as described <a href=""https://docs.oracle.com/javaee/7/api/javax/ws/rs/client/SyncInvoker.html#post-javax.ws.rs.client.Entity-"" rel=""nofollow noreferrer"">here</a>. This will allow you to POST your transaction String to the endpoint.</p>
",0
MessageDigest,Java,functionality,77408737,"<p>Your current implementation is expecting a single object in the request body, but you're sending an array of objects. To process the array of JSON objects, you need to change your method signature to accept a List instead of a single DataModel. Here's how you could do it:</p>
<pre><code>@PostMapping(&quot;/addData&quot;)
public ResponseEntity addData(@RequestBody List&lt;DataModel&gt; dataModels){
    try {
        dataServicez.saveData(dataModels);
        return ResponseEntity.ok(&quot;Ok&quot;);
    } catch (Exception e){
        return ResponseEntity.badRequest().body(&quot;Ошибка&quot;);
    }
}
</code></pre>
<p>Service:</p>
<pre><code>public List&lt;DataModel&gt; saveData(List&lt;DataModel&gt; dataModels){
    List&lt;DataModel&gt; savedDataModels = new ArrayList&lt;&gt;();
    for (DataModel dataModel : dataModels) {
        DataModel _dataModel = new DataModel(dataModel.getId(), dataModel.getAmperage(), dataModel.getVoltage());
        savedDataModels.add(dataRepo.save(_dataModel));
    }
    return savedDataModels;
}
</code></pre>
",0
MessageDigest,Java,functionality,72340560,"<p>According to the JavaDoc of class <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Process.html"" rel=""nofollow noreferrer""><code>Process</code></a> some platforms have a limited buffer for the output:</p>
<blockquote>
<p>All its standard I/O (i.e. stdin, stdout, stderr) operations [..] can be accessed via [..] <code>getOutputStream()</code>, <code>getInputStream()</code>, and <code>getErrorStream()</code>.
Because some native platforms only provide <strong>limited buffer size</strong> for standard input and output streams, failure to promptly write the input stream or read the output stream of the subprocess <strong>may cause the subprocess to block</strong>, or even deadlock.</p>
</blockquote>
<p>Try the following, before you call <code>process.waitFor()</code>:</p>
<ol>
<li>get the output-streams from the process using <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Process.html#getErrorStream--"" rel=""nofollow noreferrer""><code>getErrorStream()</code></a> and <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Process.html#getOutputStream--"" rel=""nofollow noreferrer""><code>getOutputStream()</code></a> and</li>
<li>read their contents to flush the buffer</li>
</ol>
",0
MessageDigest,Java,concept,76013607,"<p>You can use the <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestInputStream.html"" rel=""nofollow noreferrer""><code>DigestInputStream</code></a> to calculate a hash while reading from a stream. That is, you wrap the original input stream with a <code>DigestInputStream</code> and read through the <code>DigestInputStream</code>. While reading the data, the message digest is automatically updated, and you can retrieve the digest after you read the entire stream.</p>
<p>Alternatively, you can use <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestOutputStream.html"" rel=""nofollow noreferrer""><code>DigestOutputStream</code></a> to calculate a hash while writing to a stream.  In a similar vein, you wrap the destination output stream with a <code>DigestOutputStream</code> and write through the <code>DigestOutputStream</code>.</p>
<p>A quick and dirty example:</p>
<pre class=""lang-java prettyprint-override""><code>var inputFile = Path.of(&quot;D:\\Development\\data\\testdata-csv\\customers-1000.csv&quot;);
var outputFile = Files.createTempFile(&quot;testoutput&quot;, &quot;.dat&quot;);
var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
try (var in = new DigestInputStream(Files.newInputStream(inputFile), md);
     var out = Files.newOutputStream(outputFile)) {
    in.transferTo(out);
} finally {
    Files.deleteIfExists(outputFile);
}

System.out.println(HexFormat.of().formatHex(md.digest()));
</code></pre>
<p>In terms of your existing code, you could do something like:</p>
<pre class=""lang-java prettyprint-override""><code>public String transferAndHash(InputStream in) throws IOException {
    try {
        var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
        try (var digestIn = new DigestInputStream(in, md)) {
            transferTo(digestIn);
        }
        return HexFormat.of().formatHex(md.digest());
    } catch (NoSuchAlgorithmException e) {
        // all recent Java versions are required to support SHA-256
        throw new AssertionError(&quot;Expected SHA-256 to be supported&quot;, e);
    }
}
</code></pre>
<p>(NOTE: <code>HexFormat</code> was introduced in Java 17, if you're using an earlier version, you'll need an alternative.)</p>
",1
MessageDigest,Java,concept,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
MessageDigest,Java,concept,77012331,"<p><code>runOnUiThread</code> post a message to your main <code>Looper</code>'s <code>MessageQueue</code>, whose message is handled one by one.</p>
<p>So it's possible that <code>MessageQueue</code> is full of other message which took long time to process, which will result in long delay before your <code>Runnable</code> executed.</p>
<p>You can verify this by replace <code>runOnUiThread</code> with below code:</p>
<pre><code>// this will insert your Runnable at the front of MessageQueue
new Handler(Looper.getMainLooper()).postAtFrontOfQueue(() -&gt; {
    long delta = new Date().getTime() - start;
    Log.e(&quot;TESTUI2&quot;, &quot;&quot; + delta);
});
</code></pre>
",0
MessageDigest,Java,concept,74850838,"<p><code>HashMap.Node</code> is declared with <em>package private</em> visibility (the default visibility if <code>public</code>, <code>private</code> or <code>protected</code> is not used).</p>
<pre><code>    static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {
</code></pre>
<p>This means that the class is only visible to classes in the same package.</p>
<p>See this question for more details: <a href=""https://stackoverflow.com/questions/215497/what-is-the-difference-between-public-protected-package-private-and-private-in"">What is the difference between public, protected, package-private and private in Java?</a></p>
",0
MessageDigest,Java,concept,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,concept,77067072,"<p>You can use a <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer""><code>QueueBrowser</code></a>. You can create the browser using <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/session#createBrowser-jakarta.jms.Queue-"" rel=""nofollow noreferrer""><code>Session.createBrowser(Queue)</code></a>. As the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer"">API doc</a> states:</p>
<blockquote>
<p>A client uses a <code>QueueBrowser</code> object to look at messages on a queue without removing them.</p>
<p>The <code>getEnumeration</code> method returns a <code>java.util.Enumeration</code> that is used to scan the queue's messages. It may be an enumeration of the entire content of a queue, or it may contain only the messages matching a message selector.</p>
</blockquote>
<p>The <code>Enumeration</code> contains instances of the <code>javax.jms.Message</code> objects from the queue. Therefore you can inspect all the message's headers, properties, and body.</p>
",0
MessageDigest,Java,concept,77314202,"<p>Some classes (<code>Pac4jProducer</code> and <code>HttpServletResponseProducer</code>) are meant to use CDI and produces pac4j beans.</p>
<p>What is your application server? Can you copy/paste the full stack trace?</p>
",0
MessageDigest,Java,concept,72809808,"<p>Instead of doing an <code>invocationBuilder.method(&quot;GET&quot;, ...)</code>, use <code>invocationBuilder.post(entity)</code>, as described <a href=""https://docs.oracle.com/javaee/7/api/javax/ws/rs/client/SyncInvoker.html#post-javax.ws.rs.client.Entity-"" rel=""nofollow noreferrer"">here</a>. This will allow you to POST your transaction String to the endpoint.</p>
",0
MessageDigest,Java,concept,77408737,"<p>Your current implementation is expecting a single object in the request body, but you're sending an array of objects. To process the array of JSON objects, you need to change your method signature to accept a List instead of a single DataModel. Here's how you could do it:</p>
<pre><code>@PostMapping(&quot;/addData&quot;)
public ResponseEntity addData(@RequestBody List&lt;DataModel&gt; dataModels){
    try {
        dataServicez.saveData(dataModels);
        return ResponseEntity.ok(&quot;Ok&quot;);
    } catch (Exception e){
        return ResponseEntity.badRequest().body(&quot;Ошибка&quot;);
    }
}
</code></pre>
<p>Service:</p>
<pre><code>public List&lt;DataModel&gt; saveData(List&lt;DataModel&gt; dataModels){
    List&lt;DataModel&gt; savedDataModels = new ArrayList&lt;&gt;();
    for (DataModel dataModel : dataModels) {
        DataModel _dataModel = new DataModel(dataModel.getId(), dataModel.getAmperage(), dataModel.getVoltage());
        savedDataModels.add(dataRepo.save(_dataModel));
    }
    return savedDataModels;
}
</code></pre>
",0
MessageDigest,Java,concept,74863740,"<p>In Java, there's a difference between primitive values and objects (instances of classes): Primitives are stored by value whereas objects are stored by reference. This means that your code would work as you expect if you were using integers. However, since you are using a class, the array merely stores the references to those objects. Hence, when you do <code>LeaderboardData[j + 1] = LeaderboardData[j];</code> you are merely copying the reference of that object. Therefore, <code>LeaderboardData[j + 1]</code>and <code>LeaderboardData[j]</code> will point to the same object.</p>
<p><strong>Sidenote:</strong> If you run your program with a debugger, you can actually see this in action:</p>
<p><a href=""https://i.sstatic.net/7lWCm.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/7lWCm.png"" alt=""enter image description here"" /></a></p>
<p>The number behind the <code>@</code> denotes the reference number and if you look closely, you can see that the objects at indices 8 and 9 both have the reference <code>@716</code>.</p>
<p><strong>To fix this,</strong> I would suggest that you use lists instead of arrays as they allow you to remove and add new entries. The standard list implementation is an <code>ArrayList</code> but in your use-case, a <code>LinkedList</code> might be more efficient.</p>
<p>Lastly, a closing notes on your code: For variable names (like <code>DateTime</code>, <code>UserName</code> or <code>LeaderboardData</code> should always start with a lowercase letter to distinguish them from classes. That way, you can avoid lots of confusion - especially because Java also has a built-in class called <code>DateTime</code>.</p>
",0
MessageDigest,Java,performance,76013607,"<p>You can use the <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestInputStream.html"" rel=""nofollow noreferrer""><code>DigestInputStream</code></a> to calculate a hash while reading from a stream. That is, you wrap the original input stream with a <code>DigestInputStream</code> and read through the <code>DigestInputStream</code>. While reading the data, the message digest is automatically updated, and you can retrieve the digest after you read the entire stream.</p>
<p>Alternatively, you can use <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestOutputStream.html"" rel=""nofollow noreferrer""><code>DigestOutputStream</code></a> to calculate a hash while writing to a stream.  In a similar vein, you wrap the destination output stream with a <code>DigestOutputStream</code> and write through the <code>DigestOutputStream</code>.</p>
<p>A quick and dirty example:</p>
<pre class=""lang-java prettyprint-override""><code>var inputFile = Path.of(&quot;D:\\Development\\data\\testdata-csv\\customers-1000.csv&quot;);
var outputFile = Files.createTempFile(&quot;testoutput&quot;, &quot;.dat&quot;);
var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
try (var in = new DigestInputStream(Files.newInputStream(inputFile), md);
     var out = Files.newOutputStream(outputFile)) {
    in.transferTo(out);
} finally {
    Files.deleteIfExists(outputFile);
}

System.out.println(HexFormat.of().formatHex(md.digest()));
</code></pre>
<p>In terms of your existing code, you could do something like:</p>
<pre class=""lang-java prettyprint-override""><code>public String transferAndHash(InputStream in) throws IOException {
    try {
        var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
        try (var digestIn = new DigestInputStream(in, md)) {
            transferTo(digestIn);
        }
        return HexFormat.of().formatHex(md.digest());
    } catch (NoSuchAlgorithmException e) {
        // all recent Java versions are required to support SHA-256
        throw new AssertionError(&quot;Expected SHA-256 to be supported&quot;, e);
    }
}
</code></pre>
<p>(NOTE: <code>HexFormat</code> was introduced in Java 17, if you're using an earlier version, you'll need an alternative.)</p>
",0
MessageDigest,Java,performance,77012331,"<p><code>runOnUiThread</code> post a message to your main <code>Looper</code>'s <code>MessageQueue</code>, whose message is handled one by one.</p>
<p>So it's possible that <code>MessageQueue</code> is full of other message which took long time to process, which will result in long delay before your <code>Runnable</code> executed.</p>
<p>You can verify this by replace <code>runOnUiThread</code> with below code:</p>
<pre><code>// this will insert your Runnable at the front of MessageQueue
new Handler(Looper.getMainLooper()).postAtFrontOfQueue(() -&gt; {
    long delta = new Date().getTime() - start;
    Log.e(&quot;TESTUI2&quot;, &quot;&quot; + delta);
});
</code></pre>
",0
MessageDigest,Java,performance,74850838,"<p><code>HashMap.Node</code> is declared with <em>package private</em> visibility (the default visibility if <code>public</code>, <code>private</code> or <code>protected</code> is not used).</p>
<pre><code>    static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {
</code></pre>
<p>This means that the class is only visible to classes in the same package.</p>
<p>See this question for more details: <a href=""https://stackoverflow.com/questions/215497/what-is-the-difference-between-public-protected-package-private-and-private-in"">What is the difference between public, protected, package-private and private in Java?</a></p>
",0
MessageDigest,Java,performance,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
MessageDigest,Java,performance,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,performance,77067072,"<p>You can use a <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer""><code>QueueBrowser</code></a>. You can create the browser using <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/session#createBrowser-jakarta.jms.Queue-"" rel=""nofollow noreferrer""><code>Session.createBrowser(Queue)</code></a>. As the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer"">API doc</a> states:</p>
<blockquote>
<p>A client uses a <code>QueueBrowser</code> object to look at messages on a queue without removing them.</p>
<p>The <code>getEnumeration</code> method returns a <code>java.util.Enumeration</code> that is used to scan the queue's messages. It may be an enumeration of the entire content of a queue, or it may contain only the messages matching a message selector.</p>
</blockquote>
<p>The <code>Enumeration</code> contains instances of the <code>javax.jms.Message</code> objects from the queue. Therefore you can inspect all the message's headers, properties, and body.</p>
",0
MessageDigest,Java,performance,77314202,"<p>Some classes (<code>Pac4jProducer</code> and <code>HttpServletResponseProducer</code>) are meant to use CDI and produces pac4j beans.</p>
<p>What is your application server? Can you copy/paste the full stack trace?</p>
",0
MessageDigest,Java,performance,77408737,"<p>Your current implementation is expecting a single object in the request body, but you're sending an array of objects. To process the array of JSON objects, you need to change your method signature to accept a List instead of a single DataModel. Here's how you could do it:</p>
<pre><code>@PostMapping(&quot;/addData&quot;)
public ResponseEntity addData(@RequestBody List&lt;DataModel&gt; dataModels){
    try {
        dataServicez.saveData(dataModels);
        return ResponseEntity.ok(&quot;Ok&quot;);
    } catch (Exception e){
        return ResponseEntity.badRequest().body(&quot;Ошибка&quot;);
    }
}
</code></pre>
<p>Service:</p>
<pre><code>public List&lt;DataModel&gt; saveData(List&lt;DataModel&gt; dataModels){
    List&lt;DataModel&gt; savedDataModels = new ArrayList&lt;&gt;();
    for (DataModel dataModel : dataModels) {
        DataModel _dataModel = new DataModel(dataModel.getId(), dataModel.getAmperage(), dataModel.getVoltage());
        savedDataModels.add(dataRepo.save(_dataModel));
    }
    return savedDataModels;
}
</code></pre>
",0
MessageDigest,Java,performance,72340560,"<p>According to the JavaDoc of class <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Process.html"" rel=""nofollow noreferrer""><code>Process</code></a> some platforms have a limited buffer for the output:</p>
<blockquote>
<p>All its standard I/O (i.e. stdin, stdout, stderr) operations [..] can be accessed via [..] <code>getOutputStream()</code>, <code>getInputStream()</code>, and <code>getErrorStream()</code>.
Because some native platforms only provide <strong>limited buffer size</strong> for standard input and output streams, failure to promptly write the input stream or read the output stream of the subprocess <strong>may cause the subprocess to block</strong>, or even deadlock.</p>
</blockquote>
<p>Try the following, before you call <code>process.waitFor()</code>:</p>
<ol>
<li>get the output-streams from the process using <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Process.html#getErrorStream--"" rel=""nofollow noreferrer""><code>getErrorStream()</code></a> and <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Process.html#getOutputStream--"" rel=""nofollow noreferrer""><code>getOutputStream()</code></a> and</li>
<li>read their contents to flush the buffer</li>
</ol>
",0
MessageDigest,Java,performance,76027749,"<p>As documented, <a href=""https://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html#flush()"" rel=""nofollow noreferrer"">OutputStream.flush()</a> does nothing. You might wrap it with a <a href=""https://docs.oracle.com/javase/7/docs/api/java/io/BufferedOutputStream.html#BufferedOutputStream(java.io.OutputStream)"" rel=""nofollow noreferrer"">BufferedOutputStream</a> to percolate your request.</p>
<p>This becomes :</p>
<pre><code>OutputStream outputStream = new BufferedOutputStream(sslSocket.getOutputStream(), 1024);
String message = &quot;This is a test message&quot;;
outputStream.write(message.getBytes());
outputStream.flush();

// Send more data to server
String additionalMessage = &quot;This is an additional message&quot;;
outputStream.write(additionalMessage.getBytes());
outputStream.flush();
</code></pre>
",0
MessageDigest,Java,directive,77012331,"<p><code>runOnUiThread</code> post a message to your main <code>Looper</code>'s <code>MessageQueue</code>, whose message is handled one by one.</p>
<p>So it's possible that <code>MessageQueue</code> is full of other message which took long time to process, which will result in long delay before your <code>Runnable</code> executed.</p>
<p>You can verify this by replace <code>runOnUiThread</code> with below code:</p>
<pre><code>// this will insert your Runnable at the front of MessageQueue
new Handler(Looper.getMainLooper()).postAtFrontOfQueue(() -&gt; {
    long delta = new Date().getTime() - start;
    Log.e(&quot;TESTUI2&quot;, &quot;&quot; + delta);
});
</code></pre>
",0
MessageDigest,Java,directive,76013607,"<p>You can use the <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestInputStream.html"" rel=""nofollow noreferrer""><code>DigestInputStream</code></a> to calculate a hash while reading from a stream. That is, you wrap the original input stream with a <code>DigestInputStream</code> and read through the <code>DigestInputStream</code>. While reading the data, the message digest is automatically updated, and you can retrieve the digest after you read the entire stream.</p>
<p>Alternatively, you can use <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestOutputStream.html"" rel=""nofollow noreferrer""><code>DigestOutputStream</code></a> to calculate a hash while writing to a stream.  In a similar vein, you wrap the destination output stream with a <code>DigestOutputStream</code> and write through the <code>DigestOutputStream</code>.</p>
<p>A quick and dirty example:</p>
<pre class=""lang-java prettyprint-override""><code>var inputFile = Path.of(&quot;D:\\Development\\data\\testdata-csv\\customers-1000.csv&quot;);
var outputFile = Files.createTempFile(&quot;testoutput&quot;, &quot;.dat&quot;);
var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
try (var in = new DigestInputStream(Files.newInputStream(inputFile), md);
     var out = Files.newOutputStream(outputFile)) {
    in.transferTo(out);
} finally {
    Files.deleteIfExists(outputFile);
}

System.out.println(HexFormat.of().formatHex(md.digest()));
</code></pre>
<p>In terms of your existing code, you could do something like:</p>
<pre class=""lang-java prettyprint-override""><code>public String transferAndHash(InputStream in) throws IOException {
    try {
        var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
        try (var digestIn = new DigestInputStream(in, md)) {
            transferTo(digestIn);
        }
        return HexFormat.of().formatHex(md.digest());
    } catch (NoSuchAlgorithmException e) {
        // all recent Java versions are required to support SHA-256
        throw new AssertionError(&quot;Expected SHA-256 to be supported&quot;, e);
    }
}
</code></pre>
<p>(NOTE: <code>HexFormat</code> was introduced in Java 17, if you're using an earlier version, you'll need an alternative.)</p>
",1
MessageDigest,Java,directive,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,directive,74850838,"<p><code>HashMap.Node</code> is declared with <em>package private</em> visibility (the default visibility if <code>public</code>, <code>private</code> or <code>protected</code> is not used).</p>
<pre><code>    static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {
</code></pre>
<p>This means that the class is only visible to classes in the same package.</p>
<p>See this question for more details: <a href=""https://stackoverflow.com/questions/215497/what-is-the-difference-between-public-protected-package-private-and-private-in"">What is the difference between public, protected, package-private and private in Java?</a></p>
",0
MessageDigest,Java,directive,77067072,"<p>You can use a <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer""><code>QueueBrowser</code></a>. You can create the browser using <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/session#createBrowser-jakarta.jms.Queue-"" rel=""nofollow noreferrer""><code>Session.createBrowser(Queue)</code></a>. As the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer"">API doc</a> states:</p>
<blockquote>
<p>A client uses a <code>QueueBrowser</code> object to look at messages on a queue without removing them.</p>
<p>The <code>getEnumeration</code> method returns a <code>java.util.Enumeration</code> that is used to scan the queue's messages. It may be an enumeration of the entire content of a queue, or it may contain only the messages matching a message selector.</p>
</blockquote>
<p>The <code>Enumeration</code> contains instances of the <code>javax.jms.Message</code> objects from the queue. Therefore you can inspect all the message's headers, properties, and body.</p>
",0
MessageDigest,Java,directive,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
MessageDigest,Java,directive,77314202,"<p>Some classes (<code>Pac4jProducer</code> and <code>HttpServletResponseProducer</code>) are meant to use CDI and produces pac4j beans.</p>
<p>What is your application server? Can you copy/paste the full stack trace?</p>
",0
MessageDigest,Java,directive,77408737,"<p>Your current implementation is expecting a single object in the request body, but you're sending an array of objects. To process the array of JSON objects, you need to change your method signature to accept a List instead of a single DataModel. Here's how you could do it:</p>
<pre><code>@PostMapping(&quot;/addData&quot;)
public ResponseEntity addData(@RequestBody List&lt;DataModel&gt; dataModels){
    try {
        dataServicez.saveData(dataModels);
        return ResponseEntity.ok(&quot;Ok&quot;);
    } catch (Exception e){
        return ResponseEntity.badRequest().body(&quot;Ошибка&quot;);
    }
}
</code></pre>
<p>Service:</p>
<pre><code>public List&lt;DataModel&gt; saveData(List&lt;DataModel&gt; dataModels){
    List&lt;DataModel&gt; savedDataModels = new ArrayList&lt;&gt;();
    for (DataModel dataModel : dataModels) {
        DataModel _dataModel = new DataModel(dataModel.getId(), dataModel.getAmperage(), dataModel.getVoltage());
        savedDataModels.add(dataRepo.save(_dataModel));
    }
    return savedDataModels;
}
</code></pre>
",0
MessageDigest,Java,directive,77175454,"<p>Okay, I figured it out (thanks to Thomas W's comment). Courtesy of Wireshark, I found out that OkHttp was sending an <code>application/json</code> content type instead of <code>multipart/form-data</code>.</p>
<p>To fix this, I used <code>MultipartBody.Builder</code> instead of <code>FormBody.Builder</code> and specified the type like this:</p>
<pre class=""lang-java prettyprint-override""><code>RequestBody body = new MultipartBody.Builder()
        .setType(MultipartBody.FORM)
        .addFormDataPart(&quot;guild_id&quot;, String.valueOf(serverId))
        .build();
</code></pre>
<hr />
<p><em>If you're curious...</em></p>
<p>Here is OkHttp's old request:
<a href=""https://i.sstatic.net/cpUhd.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/cpUhd.png"" alt=""Image showing OkHttp's request as application/json"" /></a></p>
<p>vs Postman's:
<a href=""https://i.sstatic.net/WUFoE.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/WUFoE.png"" alt=""Image showing Postman's request as multipart/form-data"" /></a></p>
",0
MessageDigest,Java,directive,76027749,"<p>As documented, <a href=""https://docs.oracle.com/javase/7/docs/api/java/io/OutputStream.html#flush()"" rel=""nofollow noreferrer"">OutputStream.flush()</a> does nothing. You might wrap it with a <a href=""https://docs.oracle.com/javase/7/docs/api/java/io/BufferedOutputStream.html#BufferedOutputStream(java.io.OutputStream)"" rel=""nofollow noreferrer"">BufferedOutputStream</a> to percolate your request.</p>
<p>This becomes :</p>
<pre><code>OutputStream outputStream = new BufferedOutputStream(sslSocket.getOutputStream(), 1024);
String message = &quot;This is a test message&quot;;
outputStream.write(message.getBytes());
outputStream.flush();

// Send more data to server
String additionalMessage = &quot;This is an additional message&quot;;
outputStream.write(additionalMessage.getBytes());
outputStream.flush();
</code></pre>
",0
MessageDigest,Java,pattern,77012331,"<p><code>runOnUiThread</code> post a message to your main <code>Looper</code>'s <code>MessageQueue</code>, whose message is handled one by one.</p>
<p>So it's possible that <code>MessageQueue</code> is full of other message which took long time to process, which will result in long delay before your <code>Runnable</code> executed.</p>
<p>You can verify this by replace <code>runOnUiThread</code> with below code:</p>
<pre><code>// this will insert your Runnable at the front of MessageQueue
new Handler(Looper.getMainLooper()).postAtFrontOfQueue(() -&gt; {
    long delta = new Date().getTime() - start;
    Log.e(&quot;TESTUI2&quot;, &quot;&quot; + delta);
});
</code></pre>
",0
MessageDigest,Java,pattern,76013607,"<p>You can use the <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestInputStream.html"" rel=""nofollow noreferrer""><code>DigestInputStream</code></a> to calculate a hash while reading from a stream. That is, you wrap the original input stream with a <code>DigestInputStream</code> and read through the <code>DigestInputStream</code>. While reading the data, the message digest is automatically updated, and you can retrieve the digest after you read the entire stream.</p>
<p>Alternatively, you can use <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestOutputStream.html"" rel=""nofollow noreferrer""><code>DigestOutputStream</code></a> to calculate a hash while writing to a stream.  In a similar vein, you wrap the destination output stream with a <code>DigestOutputStream</code> and write through the <code>DigestOutputStream</code>.</p>
<p>A quick and dirty example:</p>
<pre class=""lang-java prettyprint-override""><code>var inputFile = Path.of(&quot;D:\\Development\\data\\testdata-csv\\customers-1000.csv&quot;);
var outputFile = Files.createTempFile(&quot;testoutput&quot;, &quot;.dat&quot;);
var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
try (var in = new DigestInputStream(Files.newInputStream(inputFile), md);
     var out = Files.newOutputStream(outputFile)) {
    in.transferTo(out);
} finally {
    Files.deleteIfExists(outputFile);
}

System.out.println(HexFormat.of().formatHex(md.digest()));
</code></pre>
<p>In terms of your existing code, you could do something like:</p>
<pre class=""lang-java prettyprint-override""><code>public String transferAndHash(InputStream in) throws IOException {
    try {
        var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
        try (var digestIn = new DigestInputStream(in, md)) {
            transferTo(digestIn);
        }
        return HexFormat.of().formatHex(md.digest());
    } catch (NoSuchAlgorithmException e) {
        // all recent Java versions are required to support SHA-256
        throw new AssertionError(&quot;Expected SHA-256 to be supported&quot;, e);
    }
}
</code></pre>
<p>(NOTE: <code>HexFormat</code> was introduced in Java 17, if you're using an earlier version, you'll need an alternative.)</p>
",1
MessageDigest,Java,pattern,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
MessageDigest,Java,pattern,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,pattern,74850838,"<p><code>HashMap.Node</code> is declared with <em>package private</em> visibility (the default visibility if <code>public</code>, <code>private</code> or <code>protected</code> is not used).</p>
<pre><code>    static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {
</code></pre>
<p>This means that the class is only visible to classes in the same package.</p>
<p>See this question for more details: <a href=""https://stackoverflow.com/questions/215497/what-is-the-difference-between-public-protected-package-private-and-private-in"">What is the difference between public, protected, package-private and private in Java?</a></p>
",0
MessageDigest,Java,pattern,77067072,"<p>You can use a <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer""><code>QueueBrowser</code></a>. You can create the browser using <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/session#createBrowser-jakarta.jms.Queue-"" rel=""nofollow noreferrer""><code>Session.createBrowser(Queue)</code></a>. As the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer"">API doc</a> states:</p>
<blockquote>
<p>A client uses a <code>QueueBrowser</code> object to look at messages on a queue without removing them.</p>
<p>The <code>getEnumeration</code> method returns a <code>java.util.Enumeration</code> that is used to scan the queue's messages. It may be an enumeration of the entire content of a queue, or it may contain only the messages matching a message selector.</p>
</blockquote>
<p>The <code>Enumeration</code> contains instances of the <code>javax.jms.Message</code> objects from the queue. Therefore you can inspect all the message's headers, properties, and body.</p>
",0
MessageDigest,Java,pattern,77314202,"<p>Some classes (<code>Pac4jProducer</code> and <code>HttpServletResponseProducer</code>) are meant to use CDI and produces pac4j beans.</p>
<p>What is your application server? Can you copy/paste the full stack trace?</p>
",0
MessageDigest,Java,pattern,72809808,"<p>Instead of doing an <code>invocationBuilder.method(&quot;GET&quot;, ...)</code>, use <code>invocationBuilder.post(entity)</code>, as described <a href=""https://docs.oracle.com/javaee/7/api/javax/ws/rs/client/SyncInvoker.html#post-javax.ws.rs.client.Entity-"" rel=""nofollow noreferrer"">here</a>. This will allow you to POST your transaction String to the endpoint.</p>
",0
MessageDigest,Java,pattern,77408737,"<p>Your current implementation is expecting a single object in the request body, but you're sending an array of objects. To process the array of JSON objects, you need to change your method signature to accept a List instead of a single DataModel. Here's how you could do it:</p>
<pre><code>@PostMapping(&quot;/addData&quot;)
public ResponseEntity addData(@RequestBody List&lt;DataModel&gt; dataModels){
    try {
        dataServicez.saveData(dataModels);
        return ResponseEntity.ok(&quot;Ok&quot;);
    } catch (Exception e){
        return ResponseEntity.badRequest().body(&quot;Ошибка&quot;);
    }
}
</code></pre>
<p>Service:</p>
<pre><code>public List&lt;DataModel&gt; saveData(List&lt;DataModel&gt; dataModels){
    List&lt;DataModel&gt; savedDataModels = new ArrayList&lt;&gt;();
    for (DataModel dataModel : dataModels) {
        DataModel _dataModel = new DataModel(dataModel.getId(), dataModel.getAmperage(), dataModel.getVoltage());
        savedDataModels.add(dataRepo.save(_dataModel));
    }
    return savedDataModels;
}
</code></pre>
",0
MessageDigest,Java,pattern,77175454,"<p>Okay, I figured it out (thanks to Thomas W's comment). Courtesy of Wireshark, I found out that OkHttp was sending an <code>application/json</code> content type instead of <code>multipart/form-data</code>.</p>
<p>To fix this, I used <code>MultipartBody.Builder</code> instead of <code>FormBody.Builder</code> and specified the type like this:</p>
<pre class=""lang-java prettyprint-override""><code>RequestBody body = new MultipartBody.Builder()
        .setType(MultipartBody.FORM)
        .addFormDataPart(&quot;guild_id&quot;, String.valueOf(serverId))
        .build();
</code></pre>
<hr />
<p><em>If you're curious...</em></p>
<p>Here is OkHttp's old request:
<a href=""https://i.sstatic.net/cpUhd.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/cpUhd.png"" alt=""Image showing OkHttp's request as application/json"" /></a></p>
<p>vs Postman's:
<a href=""https://i.sstatic.net/WUFoE.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/WUFoE.png"" alt=""Image showing Postman's request as multipart/form-data"" /></a></p>
",0
MessageDigest,Java,environment,77012331,"<p><code>runOnUiThread</code> post a message to your main <code>Looper</code>'s <code>MessageQueue</code>, whose message is handled one by one.</p>
<p>So it's possible that <code>MessageQueue</code> is full of other message which took long time to process, which will result in long delay before your <code>Runnable</code> executed.</p>
<p>You can verify this by replace <code>runOnUiThread</code> with below code:</p>
<pre><code>// this will insert your Runnable at the front of MessageQueue
new Handler(Looper.getMainLooper()).postAtFrontOfQueue(() -&gt; {
    long delta = new Date().getTime() - start;
    Log.e(&quot;TESTUI2&quot;, &quot;&quot; + delta);
});
</code></pre>
",0
MessageDigest,Java,environment,76013607,"<p>You can use the <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestInputStream.html"" rel=""nofollow noreferrer""><code>DigestInputStream</code></a> to calculate a hash while reading from a stream. That is, you wrap the original input stream with a <code>DigestInputStream</code> and read through the <code>DigestInputStream</code>. While reading the data, the message digest is automatically updated, and you can retrieve the digest after you read the entire stream.</p>
<p>Alternatively, you can use <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestOutputStream.html"" rel=""nofollow noreferrer""><code>DigestOutputStream</code></a> to calculate a hash while writing to a stream.  In a similar vein, you wrap the destination output stream with a <code>DigestOutputStream</code> and write through the <code>DigestOutputStream</code>.</p>
<p>A quick and dirty example:</p>
<pre class=""lang-java prettyprint-override""><code>var inputFile = Path.of(&quot;D:\\Development\\data\\testdata-csv\\customers-1000.csv&quot;);
var outputFile = Files.createTempFile(&quot;testoutput&quot;, &quot;.dat&quot;);
var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
try (var in = new DigestInputStream(Files.newInputStream(inputFile), md);
     var out = Files.newOutputStream(outputFile)) {
    in.transferTo(out);
} finally {
    Files.deleteIfExists(outputFile);
}

System.out.println(HexFormat.of().formatHex(md.digest()));
</code></pre>
<p>In terms of your existing code, you could do something like:</p>
<pre class=""lang-java prettyprint-override""><code>public String transferAndHash(InputStream in) throws IOException {
    try {
        var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
        try (var digestIn = new DigestInputStream(in, md)) {
            transferTo(digestIn);
        }
        return HexFormat.of().formatHex(md.digest());
    } catch (NoSuchAlgorithmException e) {
        // all recent Java versions are required to support SHA-256
        throw new AssertionError(&quot;Expected SHA-256 to be supported&quot;, e);
    }
}
</code></pre>
<p>(NOTE: <code>HexFormat</code> was introduced in Java 17, if you're using an earlier version, you'll need an alternative.)</p>
",1
MessageDigest,Java,environment,77067072,"<p>You can use a <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer""><code>QueueBrowser</code></a>. You can create the browser using <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/session#createBrowser-jakarta.jms.Queue-"" rel=""nofollow noreferrer""><code>Session.createBrowser(Queue)</code></a>. As the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer"">API doc</a> states:</p>
<blockquote>
<p>A client uses a <code>QueueBrowser</code> object to look at messages on a queue without removing them.</p>
<p>The <code>getEnumeration</code> method returns a <code>java.util.Enumeration</code> that is used to scan the queue's messages. It may be an enumeration of the entire content of a queue, or it may contain only the messages matching a message selector.</p>
</blockquote>
<p>The <code>Enumeration</code> contains instances of the <code>javax.jms.Message</code> objects from the queue. Therefore you can inspect all the message's headers, properties, and body.</p>
",0
MessageDigest,Java,environment,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,environment,74850838,"<p><code>HashMap.Node</code> is declared with <em>package private</em> visibility (the default visibility if <code>public</code>, <code>private</code> or <code>protected</code> is not used).</p>
<pre><code>    static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {
</code></pre>
<p>This means that the class is only visible to classes in the same package.</p>
<p>See this question for more details: <a href=""https://stackoverflow.com/questions/215497/what-is-the-difference-between-public-protected-package-private-and-private-in"">What is the difference between public, protected, package-private and private in Java?</a></p>
",0
MessageDigest,Java,environment,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
MessageDigest,Java,environment,77314202,"<p>Some classes (<code>Pac4jProducer</code> and <code>HttpServletResponseProducer</code>) are meant to use CDI and produces pac4j beans.</p>
<p>What is your application server? Can you copy/paste the full stack trace?</p>
",0
MessageDigest,Java,environment,74359410,"<pre><code>String data = new String(getClass().getResourceAsStream(&quot;/fileC.p12&quot;).readAllBytes());
</code></pre>
<p>Your resource (which shouldn't be seen as a file as it could and probably should be packaged with your app) is at the root, so useful to start with '/' then it can be addressed from any package. Be cautious with Java &gt;= 17 as that will be decoded by default as UTF-8, so if that's not the encoding, you will have to specify what is in the <code>String</code> ctor. It might be safer to do that anyway.</p>
",0
MessageDigest,Java,environment,72809808,"<p>Instead of doing an <code>invocationBuilder.method(&quot;GET&quot;, ...)</code>, use <code>invocationBuilder.post(entity)</code>, as described <a href=""https://docs.oracle.com/javaee/7/api/javax/ws/rs/client/SyncInvoker.html#post-javax.ws.rs.client.Entity-"" rel=""nofollow noreferrer"">here</a>. This will allow you to POST your transaction String to the endpoint.</p>
",0
MessageDigest,Java,environment,72340560,"<p>According to the JavaDoc of class <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Process.html"" rel=""nofollow noreferrer""><code>Process</code></a> some platforms have a limited buffer for the output:</p>
<blockquote>
<p>All its standard I/O (i.e. stdin, stdout, stderr) operations [..] can be accessed via [..] <code>getOutputStream()</code>, <code>getInputStream()</code>, and <code>getErrorStream()</code>.
Because some native platforms only provide <strong>limited buffer size</strong> for standard input and output streams, failure to promptly write the input stream or read the output stream of the subprocess <strong>may cause the subprocess to block</strong>, or even deadlock.</p>
</blockquote>
<p>Try the following, before you call <code>process.waitFor()</code>:</p>
<ol>
<li>get the output-streams from the process using <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Process.html#getErrorStream--"" rel=""nofollow noreferrer""><code>getErrorStream()</code></a> and <a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/Process.html#getOutputStream--"" rel=""nofollow noreferrer""><code>getOutputStream()</code></a> and</li>
<li>read their contents to flush the buffer</li>
</ol>
",0
MessageDigest,Java,alternative,76013607,"<p>You can use the <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestInputStream.html"" rel=""nofollow noreferrer""><code>DigestInputStream</code></a> to calculate a hash while reading from a stream. That is, you wrap the original input stream with a <code>DigestInputStream</code> and read through the <code>DigestInputStream</code>. While reading the data, the message digest is automatically updated, and you can retrieve the digest after you read the entire stream.</p>
<p>Alternatively, you can use <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/security/DigestOutputStream.html"" rel=""nofollow noreferrer""><code>DigestOutputStream</code></a> to calculate a hash while writing to a stream.  In a similar vein, you wrap the destination output stream with a <code>DigestOutputStream</code> and write through the <code>DigestOutputStream</code>.</p>
<p>A quick and dirty example:</p>
<pre class=""lang-java prettyprint-override""><code>var inputFile = Path.of(&quot;D:\\Development\\data\\testdata-csv\\customers-1000.csv&quot;);
var outputFile = Files.createTempFile(&quot;testoutput&quot;, &quot;.dat&quot;);
var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
try (var in = new DigestInputStream(Files.newInputStream(inputFile), md);
     var out = Files.newOutputStream(outputFile)) {
    in.transferTo(out);
} finally {
    Files.deleteIfExists(outputFile);
}

System.out.println(HexFormat.of().formatHex(md.digest()));
</code></pre>
<p>In terms of your existing code, you could do something like:</p>
<pre class=""lang-java prettyprint-override""><code>public String transferAndHash(InputStream in) throws IOException {
    try {
        var md = MessageDigest.getInstance(&quot;SHA-256&quot;);
        try (var digestIn = new DigestInputStream(in, md)) {
            transferTo(digestIn);
        }
        return HexFormat.of().formatHex(md.digest());
    } catch (NoSuchAlgorithmException e) {
        // all recent Java versions are required to support SHA-256
        throw new AssertionError(&quot;Expected SHA-256 to be supported&quot;, e);
    }
}
</code></pre>
<p>(NOTE: <code>HexFormat</code> was introduced in Java 17, if you're using an earlier version, you'll need an alternative.)</p>
",1
MessageDigest,Java,alternative,77012331,"<p><code>runOnUiThread</code> post a message to your main <code>Looper</code>'s <code>MessageQueue</code>, whose message is handled one by one.</p>
<p>So it's possible that <code>MessageQueue</code> is full of other message which took long time to process, which will result in long delay before your <code>Runnable</code> executed.</p>
<p>You can verify this by replace <code>runOnUiThread</code> with below code:</p>
<pre><code>// this will insert your Runnable at the front of MessageQueue
new Handler(Looper.getMainLooper()).postAtFrontOfQueue(() -&gt; {
    long delta = new Date().getTime() - start;
    Log.e(&quot;TESTUI2&quot;, &quot;&quot; + delta);
});
</code></pre>
",0
MessageDigest,Java,alternative,74850838,"<p><code>HashMap.Node</code> is declared with <em>package private</em> visibility (the default visibility if <code>public</code>, <code>private</code> or <code>protected</code> is not used).</p>
<pre><code>    static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {
</code></pre>
<p>This means that the class is only visible to classes in the same package.</p>
<p>See this question for more details: <a href=""https://stackoverflow.com/questions/215497/what-is-the-difference-between-public-protected-package-private-and-private-in"">What is the difference between public, protected, package-private and private in Java?</a></p>
",0
MessageDigest,Java,alternative,77230698,"<p>You can use inner class for MessageSender:</p>
<p><strong>MessageSender.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessageSender {
  private MessagePublisher messagePublisher;
  public void setPublisher(MessagePublisher publisher) {
    this.messagePublisher = publisher;
  }
  public static void main(String[] args) {
    MessageSender messageSender = new MessageSender();
    messageSender.setPublisher(new MessagePublisher());
    messageSender.newMessage()
      .withDestination(&quot;DEST&quot;)
      .withMsg(&quot;message&quot;)
      .publish();
  }

  public MessageBuilder newMessage() {
    return new MessageBuilder();
  }

  class MessageBuilder {
    private Message message = new Message();

    public MessageBuilder withMsg(String msg) {
      message.setMsg(msg);
      return this;
    }

    public MessageBuilder withDestination(String destination) {
      message.setDestination(destination);
      return this;
    }

    public void publish() {
      messagePublisher.publish(message);
    }
  }
}
</code></pre>
<p><strong>MessagePublisher.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MessagePublisher {
  public void publish(Message message) {
    System.out.println(
      String.format(
        &quot;Message to be sent: Msg=%s, Dest=%s&quot;, 
        message.getMsg(),
        message.getDestination()
      )
    );
  }
}
</code></pre>
<p><strong>Message.java:</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class Message {
  private String msg;
  private String destination;

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public String getMsg() {return this.msg;}
  public String getDestination() {return this.destination;}
}
</code></pre>
",0
MessageDigest,Java,alternative,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
MessageDigest,Java,alternative,77314202,"<p>Some classes (<code>Pac4jProducer</code> and <code>HttpServletResponseProducer</code>) are meant to use CDI and produces pac4j beans.</p>
<p>What is your application server? Can you copy/paste the full stack trace?</p>
",0
MessageDigest,Java,alternative,74450252,"<p>You cannot, as <code>Nested</code> is not accessible outside of <code>SomeClass</code>. You can either make <code>Nested</code> public (or package-private if both <code>SomeClass</code> and <code>MyClass</code> are in the same package), or move <code>MyClass</code> inside of <code>SomeClass</code>.</p>
",0
MessageDigest,Java,alternative,72597668,"<p>Your <code>HashMap</code> variable <code>adjList</code> returns an <code>Object</code> when you use <code>.get(i)</code> in:</p>
<blockquote>
<pre><code>       System.out.println(adjList.get(1).size());
</code></pre>
</blockquote>
<p>As <code>Object</code> does not have a <code>size</code> method, this gives you an error. You need to cast to the class you expect this value to belong to.</p>
<p><em>Or</em> you can use Java's generics, as <a href=""https://stackoverflow.com/a/72597663/15261315"">noted</a> by @CharchitKapoor</p>
",0
MessageDigest,Java,alternative,74664479,"<p>A <code>HashMap</code> makes no guarantees about the internal ordering, other than it being consistent - i.e., if you run the same program twice with the same JDK, you'll get the same order.</p>
<p>If you want a <code>HashMap</code> that preserves the order of insertion, you could use a <a href=""https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/util/LinkedHashMap.html"" rel=""nofollow noreferrer""><code>LinkedHashMap</code></a>.</p>
",0
MessageDigest,Java,alternative,77067072,"<p>You can use a <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer""><code>QueueBrowser</code></a>. You can create the browser using <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/session#createBrowser-jakarta.jms.Queue-"" rel=""nofollow noreferrer""><code>Session.createBrowser(Queue)</code></a>. As the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer"">API doc</a> states:</p>
<blockquote>
<p>A client uses a <code>QueueBrowser</code> object to look at messages on a queue without removing them.</p>
<p>The <code>getEnumeration</code> method returns a <code>java.util.Enumeration</code> that is used to scan the queue's messages. It may be an enumeration of the entire content of a queue, or it may contain only the messages matching a message selector.</p>
</blockquote>
<p>The <code>Enumeration</code> contains instances of the <code>javax.jms.Message</code> objects from the queue. Therefore you can inspect all the message's headers, properties, and body.</p>
",0
Manifest,Android,functionality,75280615,"<p>Remove manifestPlaceholders from the defaultConfig on the build.gradle
<code>defaultConfig {  manifestPlaceholders = [API_KEY: &quot;$process.env.REACT_NATIVE_PLACES_API_KEY&quot;] }</code></p>
<p>Insert the env file <code>API_KEY=&lt;your value&gt;</code> and use it in the AndroidManifest.xml</p>
<pre><code>&lt;meta-data android:name=&quot;com.google.android.geo.API_KEY&quot; android:value=&quot;@string/API_KEY&quot; /&gt;
</code></pre>
",0
Manifest,Android,functionality,63176164,"<p><code>Application manifest</code> can refer to both the <code>build.gradle</code> declaration or a definition in an android manifest (<a href=""https://developer.android.com/studio/publish/versioning#appversioning"" rel=""nofollow noreferrer"">https://developer.android.com/studio/publish/versioning#appversioning</a>):</p>
<blockquote>
<p>Note: If your app defines the app version directly in the  element, the version values in the Gradle build file will override the settings in the manifest. Additionally, defining these settings in the Gradle build files allows you to specify different values for different versions of your app. For greater flexibility and to avoid potential overwriting when the manifest is merged, you should remove these attributes from the  element and define your version settings in the Gradle build files instead.</p>
</blockquote>
<p>It looks like ARCore can't find the metadata in your APK. It's possible that the minSdkVersion is placed in the wrong place; it's hard to tell without the entire build file.</p>
<p>You can use <a href=""https://developer.android.com/studio/build/apk-analyzer"" rel=""nofollow noreferrer"">Android Studio's APK Analyzer</a> to find out which metadata is present in your generated <code>AndroidManifest.xml</code>.</p>
",0
Manifest,Android,functionality,77701931,"<p>Use @Preview(apiLevel = 33), like below</p>
<pre><code>@Preview(apiLevel = 33)
@Composable
fun YourComposablePreview() {
    ...
}
</code></pre>
",0
Manifest,Android,functionality,71250037,"<p>You can add the <code>appAuthRedirectScheme</code> attributes to the <code>manifestPlaceholders</code> instead of replacing the whole array, by using <code>+=</code> instead of <code>=</code></p>
<p>Example :</p>
<pre><code>defaultConfig {
    ...
    manifestPlaceholders += [appAuthRedirectScheme: &quot;com.example.multi_delivery_app&quot;]
}
</code></pre>
",0
Manifest,Android,functionality,61684906,"<pre><code>path=""/trovata/update/${applicationId}/""
</code></pre>

<p><code>${applicationId}</code> only turns into your application ID in <code>AndroidManifest.xml</code>. You cannot use manifest placeholders in resource files. So, replace <code>${applicationId}</code> with your actual application ID.</p>
",1
Manifest,Android,functionality,77391378,"<p>To comply with <a href=""https://developer.android.com/training/package-visibility"" rel=""nofollow noreferrer"">package visibility rules on Android 11 and higher</a>, you will need a <code>&lt;queries&gt;</code> element as a child of the root <code>&lt;manifest&gt;</code> element, something like:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;queries&gt;
    &lt;intent&gt;
        &lt;action android:name=&quot;android.intent.action.MEDIA_BUTTON&quot; /&gt;
    &lt;/intent&gt;
&lt;/queries&gt;
</code></pre>
",1
Manifest,Android,functionality,64398304,"<p>The manifest folder is automatically created when a new project is started in Android Studio.</p>
<p>It is likely you need to change the 'view mode' in the project window. You have some options:</p>
<p>Option 1:</p>
<ol>
<li>Navigate to the Project Window. (You can press &quot;Alt + 1&quot; (win/nix) / &quot;Command + 1&quot; (mac) on your keyboard OR go to View --&gt; Tool Windows --&gt; Project.)</li>
<li>From there select the small drop down menu at the top left of the project window. It will likely say &quot;Android&quot;, &quot;Project&quot; or &quot;Packages&quot;.</li>
<li>Select &quot;Android&quot;.</li>
<li>Extend the &quot;app&quot; hierarchy. You should then see a &quot;manifests&quot; folder.</li>
</ol>
<p><a href=""https://i.sstatic.net/N88vS.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/N88vS.jpg"" alt=""Manifest Selection"" /></a></p>
<p>Option 2:</p>
<ol>
<li>Press &quot;Ctrl + Shift + N&quot; (win/nix) / &quot;Command + Shift + O&quot; (mac).</li>
<li>Type &quot;manifest&quot;.</li>
<li>You will see the manifest file listed.</li>
</ol>
<p>Also try:</p>
<p>Reset the cache to rebuild the project hierarchy. Go to: File --&gt; Invalidate Caches / Restart</p>
",0
Manifest,Android,functionality,66003061,"<p>A manifest(excluding the ones in <code>.repo/local_manifests</code>), which is <code>default.xml</code> in your case, has a <code>default</code> element.</p>
<pre><code>&lt;default revision=&quot;refs/tags/android-11.0.0_r27&quot;
           remote=&quot;aosp&quot;
           sync-j=&quot;4&quot; /&gt;
</code></pre>
<p>If a <code>project</code> element does not have its own <code>revision</code> or <code>upstream</code>, the one in the <code>default</code> element, <code>revision=&quot;refs/tags/android-11.0.0_r27&quot;</code>,  is used. It's the same for other attributes. The <code>project</code> does not have its own <code>remote</code> and <code>sync-j</code> either, so the ones in <code>default</code> are used.</p>
<p>For more details, you could read the document under <code>.repo/repo/docs</code>.</p>
",0
Manifest,Android,functionality,61624380,"<p>Your manifest is missing the activity, change it to:</p>

<p><code>AndroidManifest.xml:</code></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;manifest xmlns:android=""http://schemas.android.com/apk/res/android""
    package=""com.jonathan.vrtest3""&gt;

    &lt;application
        android:allowBackup=""true""
        android:icon=""@mipmap/ic_launcher""
        android:label=""@string/app_name""
        android:roundIcon=""@mipmap/ic_launcher_round""
        android:supportsRtl=""true""
        android:theme=""@style/AppTheme""&gt;
        &lt;activity android:name=""com.unity3d.player.UnityPlayerActivity"" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.DEFAULT"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
        &lt;activity android:name="".GameActivity""/&gt;
        &lt;activity android:name="".MainActivity""&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.MAIN"" /&gt;

                &lt;category android:name=""android.intent.category.LAUNCHER"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>

<p>and start the unity activity from another activity by chaining the intent with:</p>

<p><code>GameActivity.java:</code></p>

<pre><code>class GamesActivity extends AppCompatActivity {

    @Override
    public void onCreate(Bundle savedInstanceState, PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);

    Intent intent = new Intent(this, UnityPlayerActivity.class);
    startActivity(intent);
}
</code></pre>

<p>}</p>
",1
Manifest,Android,functionality,72892275,"<p>Solution 1:</p>
<p>Setting <code>manifestPlaceholders</code> manually in our <code>app/build.gradle</code>:</p>
<pre><code>android {
⋮
defaultConfig {
   ⋮
    // Add This line
    manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
   }
   ⋮
 }
</code></pre>
<p>Solution 2 :
Add this code in <code>app/build.gradle</code> :</p>
<pre><code>    buildTypes {
    release {
        manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
    }

    debug {
        manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
    }
    build{
        manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
    }
  }
</code></pre>
",1
Manifest,Android,concept,71250037,"<p>You can add the <code>appAuthRedirectScheme</code> attributes to the <code>manifestPlaceholders</code> instead of replacing the whole array, by using <code>+=</code> instead of <code>=</code></p>
<p>Example :</p>
<pre><code>defaultConfig {
    ...
    manifestPlaceholders += [appAuthRedirectScheme: &quot;com.example.multi_delivery_app&quot;]
}
</code></pre>
",1
Manifest,Android,concept,77701931,"<p>Use @Preview(apiLevel = 33), like below</p>
<pre><code>@Preview(apiLevel = 33)
@Composable
fun YourComposablePreview() {
    ...
}
</code></pre>
",0
Manifest,Android,concept,75280615,"<p>Remove manifestPlaceholders from the defaultConfig on the build.gradle
<code>defaultConfig {  manifestPlaceholders = [API_KEY: &quot;$process.env.REACT_NATIVE_PLACES_API_KEY&quot;] }</code></p>
<p>Insert the env file <code>API_KEY=&lt;your value&gt;</code> and use it in the AndroidManifest.xml</p>
<pre><code>&lt;meta-data android:name=&quot;com.google.android.geo.API_KEY&quot; android:value=&quot;@string/API_KEY&quot; /&gt;
</code></pre>
",1
Manifest,Android,concept,63176164,"<p><code>Application manifest</code> can refer to both the <code>build.gradle</code> declaration or a definition in an android manifest (<a href=""https://developer.android.com/studio/publish/versioning#appversioning"" rel=""nofollow noreferrer"">https://developer.android.com/studio/publish/versioning#appversioning</a>):</p>
<blockquote>
<p>Note: If your app defines the app version directly in the  element, the version values in the Gradle build file will override the settings in the manifest. Additionally, defining these settings in the Gradle build files allows you to specify different values for different versions of your app. For greater flexibility and to avoid potential overwriting when the manifest is merged, you should remove these attributes from the  element and define your version settings in the Gradle build files instead.</p>
</blockquote>
<p>It looks like ARCore can't find the metadata in your APK. It's possible that the minSdkVersion is placed in the wrong place; it's hard to tell without the entire build file.</p>
<p>You can use <a href=""https://developer.android.com/studio/build/apk-analyzer"" rel=""nofollow noreferrer"">Android Studio's APK Analyzer</a> to find out which metadata is present in your generated <code>AndroidManifest.xml</code>.</p>
",1
Manifest,Android,concept,66003061,"<p>A manifest(excluding the ones in <code>.repo/local_manifests</code>), which is <code>default.xml</code> in your case, has a <code>default</code> element.</p>
<pre><code>&lt;default revision=&quot;refs/tags/android-11.0.0_r27&quot;
           remote=&quot;aosp&quot;
           sync-j=&quot;4&quot; /&gt;
</code></pre>
<p>If a <code>project</code> element does not have its own <code>revision</code> or <code>upstream</code>, the one in the <code>default</code> element, <code>revision=&quot;refs/tags/android-11.0.0_r27&quot;</code>,  is used. It's the same for other attributes. The <code>project</code> does not have its own <code>remote</code> and <code>sync-j</code> either, so the ones in <code>default</code> are used.</p>
<p>For more details, you could read the document under <code>.repo/repo/docs</code>.</p>
",0
Manifest,Android,concept,77391378,"<p>To comply with <a href=""https://developer.android.com/training/package-visibility"" rel=""nofollow noreferrer"">package visibility rules on Android 11 and higher</a>, you will need a <code>&lt;queries&gt;</code> element as a child of the root <code>&lt;manifest&gt;</code> element, something like:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;queries&gt;
    &lt;intent&gt;
        &lt;action android:name=&quot;android.intent.action.MEDIA_BUTTON&quot; /&gt;
    &lt;/intent&gt;
&lt;/queries&gt;
</code></pre>
",1
Manifest,Android,concept,61684906,"<pre><code>path=""/trovata/update/${applicationId}/""
</code></pre>

<p><code>${applicationId}</code> only turns into your application ID in <code>AndroidManifest.xml</code>. You cannot use manifest placeholders in resource files. So, replace <code>${applicationId}</code> with your actual application ID.</p>
",1
Manifest,Android,concept,64398304,"<p>The manifest folder is automatically created when a new project is started in Android Studio.</p>
<p>It is likely you need to change the 'view mode' in the project window. You have some options:</p>
<p>Option 1:</p>
<ol>
<li>Navigate to the Project Window. (You can press &quot;Alt + 1&quot; (win/nix) / &quot;Command + 1&quot; (mac) on your keyboard OR go to View --&gt; Tool Windows --&gt; Project.)</li>
<li>From there select the small drop down menu at the top left of the project window. It will likely say &quot;Android&quot;, &quot;Project&quot; or &quot;Packages&quot;.</li>
<li>Select &quot;Android&quot;.</li>
<li>Extend the &quot;app&quot; hierarchy. You should then see a &quot;manifests&quot; folder.</li>
</ol>
<p><a href=""https://i.sstatic.net/N88vS.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/N88vS.jpg"" alt=""Manifest Selection"" /></a></p>
<p>Option 2:</p>
<ol>
<li>Press &quot;Ctrl + Shift + N&quot; (win/nix) / &quot;Command + Shift + O&quot; (mac).</li>
<li>Type &quot;manifest&quot;.</li>
<li>You will see the manifest file listed.</li>
</ol>
<p>Also try:</p>
<p>Reset the cache to rebuild the project hierarchy. Go to: File --&gt; Invalidate Caches / Restart</p>
",0
Manifest,Android,concept,61624380,"<p>Your manifest is missing the activity, change it to:</p>

<p><code>AndroidManifest.xml:</code></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;manifest xmlns:android=""http://schemas.android.com/apk/res/android""
    package=""com.jonathan.vrtest3""&gt;

    &lt;application
        android:allowBackup=""true""
        android:icon=""@mipmap/ic_launcher""
        android:label=""@string/app_name""
        android:roundIcon=""@mipmap/ic_launcher_round""
        android:supportsRtl=""true""
        android:theme=""@style/AppTheme""&gt;
        &lt;activity android:name=""com.unity3d.player.UnityPlayerActivity"" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.DEFAULT"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
        &lt;activity android:name="".GameActivity""/&gt;
        &lt;activity android:name="".MainActivity""&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.MAIN"" /&gt;

                &lt;category android:name=""android.intent.category.LAUNCHER"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>

<p>and start the unity activity from another activity by chaining the intent with:</p>

<p><code>GameActivity.java:</code></p>

<pre><code>class GamesActivity extends AppCompatActivity {

    @Override
    public void onCreate(Bundle savedInstanceState, PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);

    Intent intent = new Intent(this, UnityPlayerActivity.class);
    startActivity(intent);
}
</code></pre>

<p>}</p>
",1
Manifest,Android,concept,71978976,"<p>Like most Android SDK classes, <a href=""https://developer.android.com/reference/androidx/exifinterface/media/ExifInterface"" rel=""nofollow noreferrer""><code>ExifInterface</code> has documentation</a>. In particular, that documentation contains <a href=""https://developer.android.com/reference/androidx/exifinterface/media/ExifInterface#public-constructors"" rel=""nofollow noreferrer"">a list of public constructors</a>.</p>
<p><a href=""https://developer.android.com/reference/androidx/exifinterface/media/ExifInterface#ExifInterface(java.io.File)"" rel=""nofollow noreferrer"">The first such constructor</a> takes a <code>File</code> as its sole constructor parameter.</p>
<p>You appear to be looking to get this information from a <code>File</code>, identified by a variable named <code>path</code>.</p>
<p>So, use <code>new ExifInterface(path)</code>.</p>
",0
Manifest,Android,performance,75280615,"<p>Remove manifestPlaceholders from the defaultConfig on the build.gradle
<code>defaultConfig {  manifestPlaceholders = [API_KEY: &quot;$process.env.REACT_NATIVE_PLACES_API_KEY&quot;] }</code></p>
<p>Insert the env file <code>API_KEY=&lt;your value&gt;</code> and use it in the AndroidManifest.xml</p>
<pre><code>&lt;meta-data android:name=&quot;com.google.android.geo.API_KEY&quot; android:value=&quot;@string/API_KEY&quot; /&gt;
</code></pre>
",0
Manifest,Android,performance,77701931,"<p>Use @Preview(apiLevel = 33), like below</p>
<pre><code>@Preview(apiLevel = 33)
@Composable
fun YourComposablePreview() {
    ...
}
</code></pre>
",0
Manifest,Android,performance,63176164,"<p><code>Application manifest</code> can refer to both the <code>build.gradle</code> declaration or a definition in an android manifest (<a href=""https://developer.android.com/studio/publish/versioning#appversioning"" rel=""nofollow noreferrer"">https://developer.android.com/studio/publish/versioning#appversioning</a>):</p>
<blockquote>
<p>Note: If your app defines the app version directly in the  element, the version values in the Gradle build file will override the settings in the manifest. Additionally, defining these settings in the Gradle build files allows you to specify different values for different versions of your app. For greater flexibility and to avoid potential overwriting when the manifest is merged, you should remove these attributes from the  element and define your version settings in the Gradle build files instead.</p>
</blockquote>
<p>It looks like ARCore can't find the metadata in your APK. It's possible that the minSdkVersion is placed in the wrong place; it's hard to tell without the entire build file.</p>
<p>You can use <a href=""https://developer.android.com/studio/build/apk-analyzer"" rel=""nofollow noreferrer"">Android Studio's APK Analyzer</a> to find out which metadata is present in your generated <code>AndroidManifest.xml</code>.</p>
",0
Manifest,Android,performance,71250037,"<p>You can add the <code>appAuthRedirectScheme</code> attributes to the <code>manifestPlaceholders</code> instead of replacing the whole array, by using <code>+=</code> instead of <code>=</code></p>
<p>Example :</p>
<pre><code>defaultConfig {
    ...
    manifestPlaceholders += [appAuthRedirectScheme: &quot;com.example.multi_delivery_app&quot;]
}
</code></pre>
",0
Manifest,Android,performance,77391378,"<p>To comply with <a href=""https://developer.android.com/training/package-visibility"" rel=""nofollow noreferrer"">package visibility rules on Android 11 and higher</a>, you will need a <code>&lt;queries&gt;</code> element as a child of the root <code>&lt;manifest&gt;</code> element, something like:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;queries&gt;
    &lt;intent&gt;
        &lt;action android:name=&quot;android.intent.action.MEDIA_BUTTON&quot; /&gt;
    &lt;/intent&gt;
&lt;/queries&gt;
</code></pre>
",0
Manifest,Android,performance,72892275,"<p>Solution 1:</p>
<p>Setting <code>manifestPlaceholders</code> manually in our <code>app/build.gradle</code>:</p>
<pre><code>android {
⋮
defaultConfig {
   ⋮
    // Add This line
    manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
   }
   ⋮
 }
</code></pre>
<p>Solution 2 :
Add this code in <code>app/build.gradle</code> :</p>
<pre><code>    buildTypes {
    release {
        manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
    }

    debug {
        manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
    }
    build{
        manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
    }
  }
</code></pre>
",0
Manifest,Android,performance,75765164,"<h3>This works for me</h3>
<h5>manifest.xml</h5>
<pre><code>&lt;meta-data             
   android:name=&quot;firebase_crashlytics_collection_enabled&quot;            
   android:value=&quot;${crashlyticsCollectionEnabled}&quot; /&gt;
</code></pre>
<h5>build.gradle</h5>
<pre><code>buildTypes {
        release {
            manifestPlaceholders[&quot;crashlyticsCollectionEnabled&quot;] = true
        }
        debug {
            manifestPlaceholders[&quot;crashlyticsCollectionEnabled&quot;] = false
        }
    }
</code></pre>
<p>check from official docs:</p>
<p><strong><a href=""https://firebase.google.com/docs/crashlytics/customize-crash-reports?platform=android#enable-reporting"" rel=""nofollow noreferrer"">firebase</a></strong> and <strong><a href=""https://developer.android.com/studio/build/manage-manifests#inject_build_variables_into_the_manifest"" rel=""nofollow noreferrer"">Inject build variables into the manifest</a></strong></p>
",0
Manifest,Android,performance,63788718,"<p>Your <code>AppModule</code> can create the implementation with a specific Scope (<code>@Singleton</code> in this case) and you can have 2 provides methods which return this implementation instance.</p>
<p><strong>NOTE: Untested</strong></p>
<pre><code>@Module
object AppModule {
    @Provides
    @Singleton
    internal fun provideImplementation() : Interface1n2Implementation = 
    Interface1n2Implementation()

    @Provides
    fun provideInterface1(implementation: Interface1n2Implementation) : Interface1 = implementation

    @Provides
    fun provideInterface2(implementation: Interface1n2Implementation) : Interface2 = implementation
}
</code></pre>
",0
Manifest,Android,performance,61684906,"<pre><code>path=""/trovata/update/${applicationId}/""
</code></pre>

<p><code>${applicationId}</code> only turns into your application ID in <code>AndroidManifest.xml</code>. You cannot use manifest placeholders in resource files. So, replace <code>${applicationId}</code> with your actual application ID.</p>
",1
Manifest,Android,performance,77534889,"<p>For Android 11 (R) and above, add the permission to the app’s manifest file.</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;/&gt;
</code></pre>
<p>For Android Versions Below 11, add:</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;
</code></pre>
<p>Check For Permissions At Runtime</p>
<pre><code>public void checkStoragePermissions(){
    if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R){
        //Android is 11 (R) or above
        try {
            Intent intent = new Intent();
            intent.setAction(Settings.ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION);
            Uri uri = Uri.fromParts(&quot;package&quot;, this.getPackageName(), null);
            intent.setData(uri);
            storageActivityResultLauncher.launch(intent);
        } catch (Exception e) {
            Intent intent = new Intent();
            intent.setAction(Settings.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION);
            storageActivityResultLauncher.launch(intent);
        }
    }else {
        //Below android 11
        Dexter.withContext(MainActivity.this).withPermission(Manifest.permission.READ_EXTERNAL_STORAGE)
            .withListener(new PermissionListener() {
                @Override
                public void onPermissionGranted(PermissionGrantedResponse permissionGrantedResponse) {
                    displayPdf();
                }

                @Override
                public void onPermissionDenied(PermissionDeniedResponse permissionDeniedResponse) {
                    Toast.makeText(MainActivity.this, &quot;Permission is Required&quot;, Toast.LENGTH_SHORT).show();
                }

                @Override
                public void onPermissionRationaleShouldBeShown(PermissionRequest permissionRequest, PermissionToken permissionToken) {
                    permissionToken.continuePermissionRequest();
                }
            }).check();
    }
}

private ActivityResultLauncher&lt;Intent&gt; storageActivityResultLauncher =
        registerForActivityResult(new ActivityResultContracts.StartActivityForResult(),
                new ActivityResultCallback&lt;ActivityResult&gt;() {

                    @Override
                    public void onActivityResult(ActivityResult o) {
                        if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R) {
                            //Android is 11 (R) or above
                            if(Environment.isExternalStorageManager()) {
                                //Manage External Storage Permissions Granted
                                displayPdf();
                            } else {
                                Toast.makeText(MainActivity.this, &quot;Storage Permissions Denied&quot;, Toast.LENGTH_SHORT).show();
                            }
                        }
                    }
                });
</code></pre>
",0
Manifest,Android,directive,75280615,"<p>Remove manifestPlaceholders from the defaultConfig on the build.gradle
<code>defaultConfig {  manifestPlaceholders = [API_KEY: &quot;$process.env.REACT_NATIVE_PLACES_API_KEY&quot;] }</code></p>
<p>Insert the env file <code>API_KEY=&lt;your value&gt;</code> and use it in the AndroidManifest.xml</p>
<pre><code>&lt;meta-data android:name=&quot;com.google.android.geo.API_KEY&quot; android:value=&quot;@string/API_KEY&quot; /&gt;
</code></pre>
",0
Manifest,Android,directive,77701931,"<p>Use @Preview(apiLevel = 33), like below</p>
<pre><code>@Preview(apiLevel = 33)
@Composable
fun YourComposablePreview() {
    ...
}
</code></pre>
",0
Manifest,Android,directive,63176164,"<p><code>Application manifest</code> can refer to both the <code>build.gradle</code> declaration or a definition in an android manifest (<a href=""https://developer.android.com/studio/publish/versioning#appversioning"" rel=""nofollow noreferrer"">https://developer.android.com/studio/publish/versioning#appversioning</a>):</p>
<blockquote>
<p>Note: If your app defines the app version directly in the  element, the version values in the Gradle build file will override the settings in the manifest. Additionally, defining these settings in the Gradle build files allows you to specify different values for different versions of your app. For greater flexibility and to avoid potential overwriting when the manifest is merged, you should remove these attributes from the  element and define your version settings in the Gradle build files instead.</p>
</blockquote>
<p>It looks like ARCore can't find the metadata in your APK. It's possible that the minSdkVersion is placed in the wrong place; it's hard to tell without the entire build file.</p>
<p>You can use <a href=""https://developer.android.com/studio/build/apk-analyzer"" rel=""nofollow noreferrer"">Android Studio's APK Analyzer</a> to find out which metadata is present in your generated <code>AndroidManifest.xml</code>.</p>
",0
Manifest,Android,directive,71250037,"<p>You can add the <code>appAuthRedirectScheme</code> attributes to the <code>manifestPlaceholders</code> instead of replacing the whole array, by using <code>+=</code> instead of <code>=</code></p>
<p>Example :</p>
<pre><code>defaultConfig {
    ...
    manifestPlaceholders += [appAuthRedirectScheme: &quot;com.example.multi_delivery_app&quot;]
}
</code></pre>
",0
Manifest,Android,directive,77391378,"<p>To comply with <a href=""https://developer.android.com/training/package-visibility"" rel=""nofollow noreferrer"">package visibility rules on Android 11 and higher</a>, you will need a <code>&lt;queries&gt;</code> element as a child of the root <code>&lt;manifest&gt;</code> element, something like:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;queries&gt;
    &lt;intent&gt;
        &lt;action android:name=&quot;android.intent.action.MEDIA_BUTTON&quot; /&gt;
    &lt;/intent&gt;
&lt;/queries&gt;
</code></pre>
",1
Manifest,Android,directive,77534889,"<p>For Android 11 (R) and above, add the permission to the app’s manifest file.</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;/&gt;
</code></pre>
<p>For Android Versions Below 11, add:</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;
</code></pre>
<p>Check For Permissions At Runtime</p>
<pre><code>public void checkStoragePermissions(){
    if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R){
        //Android is 11 (R) or above
        try {
            Intent intent = new Intent();
            intent.setAction(Settings.ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION);
            Uri uri = Uri.fromParts(&quot;package&quot;, this.getPackageName(), null);
            intent.setData(uri);
            storageActivityResultLauncher.launch(intent);
        } catch (Exception e) {
            Intent intent = new Intent();
            intent.setAction(Settings.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION);
            storageActivityResultLauncher.launch(intent);
        }
    }else {
        //Below android 11
        Dexter.withContext(MainActivity.this).withPermission(Manifest.permission.READ_EXTERNAL_STORAGE)
            .withListener(new PermissionListener() {
                @Override
                public void onPermissionGranted(PermissionGrantedResponse permissionGrantedResponse) {
                    displayPdf();
                }

                @Override
                public void onPermissionDenied(PermissionDeniedResponse permissionDeniedResponse) {
                    Toast.makeText(MainActivity.this, &quot;Permission is Required&quot;, Toast.LENGTH_SHORT).show();
                }

                @Override
                public void onPermissionRationaleShouldBeShown(PermissionRequest permissionRequest, PermissionToken permissionToken) {
                    permissionToken.continuePermissionRequest();
                }
            }).check();
    }
}

private ActivityResultLauncher&lt;Intent&gt; storageActivityResultLauncher =
        registerForActivityResult(new ActivityResultContracts.StartActivityForResult(),
                new ActivityResultCallback&lt;ActivityResult&gt;() {

                    @Override
                    public void onActivityResult(ActivityResult o) {
                        if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R) {
                            //Android is 11 (R) or above
                            if(Environment.isExternalStorageManager()) {
                                //Manage External Storage Permissions Granted
                                displayPdf();
                            } else {
                                Toast.makeText(MainActivity.this, &quot;Storage Permissions Denied&quot;, Toast.LENGTH_SHORT).show();
                            }
                        }
                    }
                });
</code></pre>
",1
Manifest,Android,directive,66003061,"<p>A manifest(excluding the ones in <code>.repo/local_manifests</code>), which is <code>default.xml</code> in your case, has a <code>default</code> element.</p>
<pre><code>&lt;default revision=&quot;refs/tags/android-11.0.0_r27&quot;
           remote=&quot;aosp&quot;
           sync-j=&quot;4&quot; /&gt;
</code></pre>
<p>If a <code>project</code> element does not have its own <code>revision</code> or <code>upstream</code>, the one in the <code>default</code> element, <code>revision=&quot;refs/tags/android-11.0.0_r27&quot;</code>,  is used. It's the same for other attributes. The <code>project</code> does not have its own <code>remote</code> and <code>sync-j</code> either, so the ones in <code>default</code> are used.</p>
<p>For more details, you could read the document under <code>.repo/repo/docs</code>.</p>
",1
Manifest,Android,directive,61629833,"<p>If you target Android 10 (API level 29) or higher, set the value of <code>requestLegacyExternalStorage</code> to <code>true</code> in your app's manifest file:</p>

<p><a href=""https://developer.android.com/training/data-storage/compatibility"" rel=""noreferrer"">Documentation</a></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;manifest xmlns:android=""http://schemas.android.com/apk/res/android""
    package=""com.example.appname""
    android:installLocation=""auto""&gt;

    &lt;application
        android:allowBackup=""true""
        android:icon=""@mipmap/ic_launcher""
        android:label=""@string/app_name""
        android:requestLegacyExternalStorage=""true""
        android:roundIcon=""@mipmap/ic_launcher_round""
        android:supportsRtl=""true""
        android:theme=""@style/AppTheme.NoActionBar""&gt;

        &lt;activity android:name="".activities.MainActivity""&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.MAIN"" /&gt;

                &lt;category android:name=""android.intent.category.LAUNCHER"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;


    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,directive,72892275,"<p>Solution 1:</p>
<p>Setting <code>manifestPlaceholders</code> manually in our <code>app/build.gradle</code>:</p>
<pre><code>android {
⋮
defaultConfig {
   ⋮
    // Add This line
    manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
   }
   ⋮
 }
</code></pre>
<p>Solution 2 :
Add this code in <code>app/build.gradle</code> :</p>
<pre><code>    buildTypes {
    release {
        manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
    }

    debug {
        manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
    }
    build{
        manifestPlaceholders = [applicationName: &quot;android.app.Application&quot;]
    }
  }
</code></pre>
",1
Manifest,Android,directive,64398304,"<p>The manifest folder is automatically created when a new project is started in Android Studio.</p>
<p>It is likely you need to change the 'view mode' in the project window. You have some options:</p>
<p>Option 1:</p>
<ol>
<li>Navigate to the Project Window. (You can press &quot;Alt + 1&quot; (win/nix) / &quot;Command + 1&quot; (mac) on your keyboard OR go to View --&gt; Tool Windows --&gt; Project.)</li>
<li>From there select the small drop down menu at the top left of the project window. It will likely say &quot;Android&quot;, &quot;Project&quot; or &quot;Packages&quot;.</li>
<li>Select &quot;Android&quot;.</li>
<li>Extend the &quot;app&quot; hierarchy. You should then see a &quot;manifests&quot; folder.</li>
</ol>
<p><a href=""https://i.sstatic.net/N88vS.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/N88vS.jpg"" alt=""Manifest Selection"" /></a></p>
<p>Option 2:</p>
<ol>
<li>Press &quot;Ctrl + Shift + N&quot; (win/nix) / &quot;Command + Shift + O&quot; (mac).</li>
<li>Type &quot;manifest&quot;.</li>
<li>You will see the manifest file listed.</li>
</ol>
<p>Also try:</p>
<p>Reset the cache to rebuild the project hierarchy. Go to: File --&gt; Invalidate Caches / Restart</p>
",0
Manifest,Android,pattern,75280615,"<p>Remove manifestPlaceholders from the defaultConfig on the build.gradle
<code>defaultConfig {  manifestPlaceholders = [API_KEY: &quot;$process.env.REACT_NATIVE_PLACES_API_KEY&quot;] }</code></p>
<p>Insert the env file <code>API_KEY=&lt;your value&gt;</code> and use it in the AndroidManifest.xml</p>
<pre><code>&lt;meta-data android:name=&quot;com.google.android.geo.API_KEY&quot; android:value=&quot;@string/API_KEY&quot; /&gt;
</code></pre>
",1
Manifest,Android,pattern,63176164,"<p><code>Application manifest</code> can refer to both the <code>build.gradle</code> declaration or a definition in an android manifest (<a href=""https://developer.android.com/studio/publish/versioning#appversioning"" rel=""nofollow noreferrer"">https://developer.android.com/studio/publish/versioning#appversioning</a>):</p>
<blockquote>
<p>Note: If your app defines the app version directly in the  element, the version values in the Gradle build file will override the settings in the manifest. Additionally, defining these settings in the Gradle build files allows you to specify different values for different versions of your app. For greater flexibility and to avoid potential overwriting when the manifest is merged, you should remove these attributes from the  element and define your version settings in the Gradle build files instead.</p>
</blockquote>
<p>It looks like ARCore can't find the metadata in your APK. It's possible that the minSdkVersion is placed in the wrong place; it's hard to tell without the entire build file.</p>
<p>You can use <a href=""https://developer.android.com/studio/build/apk-analyzer"" rel=""nofollow noreferrer"">Android Studio's APK Analyzer</a> to find out which metadata is present in your generated <code>AndroidManifest.xml</code>.</p>
",1
Manifest,Android,pattern,77701931,"<p>Use @Preview(apiLevel = 33), like below</p>
<pre><code>@Preview(apiLevel = 33)
@Composable
fun YourComposablePreview() {
    ...
}
</code></pre>
",0
Manifest,Android,pattern,61684906,"<pre><code>path=""/trovata/update/${applicationId}/""
</code></pre>

<p><code>${applicationId}</code> only turns into your application ID in <code>AndroidManifest.xml</code>. You cannot use manifest placeholders in resource files. So, replace <code>${applicationId}</code> with your actual application ID.</p>
",1
Manifest,Android,pattern,61624380,"<p>Your manifest is missing the activity, change it to:</p>

<p><code>AndroidManifest.xml:</code></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;manifest xmlns:android=""http://schemas.android.com/apk/res/android""
    package=""com.jonathan.vrtest3""&gt;

    &lt;application
        android:allowBackup=""true""
        android:icon=""@mipmap/ic_launcher""
        android:label=""@string/app_name""
        android:roundIcon=""@mipmap/ic_launcher_round""
        android:supportsRtl=""true""
        android:theme=""@style/AppTheme""&gt;
        &lt;activity android:name=""com.unity3d.player.UnityPlayerActivity"" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.DEFAULT"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
        &lt;activity android:name="".GameActivity""/&gt;
        &lt;activity android:name="".MainActivity""&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.MAIN"" /&gt;

                &lt;category android:name=""android.intent.category.LAUNCHER"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>

<p>and start the unity activity from another activity by chaining the intent with:</p>

<p><code>GameActivity.java:</code></p>

<pre><code>class GamesActivity extends AppCompatActivity {

    @Override
    public void onCreate(Bundle savedInstanceState, PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);

    Intent intent = new Intent(this, UnityPlayerActivity.class);
    startActivity(intent);
}
</code></pre>

<p>}</p>
",1
Manifest,Android,pattern,71250037,"<p>You can add the <code>appAuthRedirectScheme</code> attributes to the <code>manifestPlaceholders</code> instead of replacing the whole array, by using <code>+=</code> instead of <code>=</code></p>
<p>Example :</p>
<pre><code>defaultConfig {
    ...
    manifestPlaceholders += [appAuthRedirectScheme: &quot;com.example.multi_delivery_app&quot;]
}
</code></pre>
",1
Manifest,Android,pattern,77534889,"<p>For Android 11 (R) and above, add the permission to the app’s manifest file.</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;/&gt;
</code></pre>
<p>For Android Versions Below 11, add:</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;
</code></pre>
<p>Check For Permissions At Runtime</p>
<pre><code>public void checkStoragePermissions(){
    if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R){
        //Android is 11 (R) or above
        try {
            Intent intent = new Intent();
            intent.setAction(Settings.ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION);
            Uri uri = Uri.fromParts(&quot;package&quot;, this.getPackageName(), null);
            intent.setData(uri);
            storageActivityResultLauncher.launch(intent);
        } catch (Exception e) {
            Intent intent = new Intent();
            intent.setAction(Settings.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION);
            storageActivityResultLauncher.launch(intent);
        }
    }else {
        //Below android 11
        Dexter.withContext(MainActivity.this).withPermission(Manifest.permission.READ_EXTERNAL_STORAGE)
            .withListener(new PermissionListener() {
                @Override
                public void onPermissionGranted(PermissionGrantedResponse permissionGrantedResponse) {
                    displayPdf();
                }

                @Override
                public void onPermissionDenied(PermissionDeniedResponse permissionDeniedResponse) {
                    Toast.makeText(MainActivity.this, &quot;Permission is Required&quot;, Toast.LENGTH_SHORT).show();
                }

                @Override
                public void onPermissionRationaleShouldBeShown(PermissionRequest permissionRequest, PermissionToken permissionToken) {
                    permissionToken.continuePermissionRequest();
                }
            }).check();
    }
}

private ActivityResultLauncher&lt;Intent&gt; storageActivityResultLauncher =
        registerForActivityResult(new ActivityResultContracts.StartActivityForResult(),
                new ActivityResultCallback&lt;ActivityResult&gt;() {

                    @Override
                    public void onActivityResult(ActivityResult o) {
                        if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R) {
                            //Android is 11 (R) or above
                            if(Environment.isExternalStorageManager()) {
                                //Manage External Storage Permissions Granted
                                displayPdf();
                            } else {
                                Toast.makeText(MainActivity.this, &quot;Storage Permissions Denied&quot;, Toast.LENGTH_SHORT).show();
                            }
                        }
                    }
                });
</code></pre>
",1
Manifest,Android,pattern,77391378,"<p>To comply with <a href=""https://developer.android.com/training/package-visibility"" rel=""nofollow noreferrer"">package visibility rules on Android 11 and higher</a>, you will need a <code>&lt;queries&gt;</code> element as a child of the root <code>&lt;manifest&gt;</code> element, something like:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;queries&gt;
    &lt;intent&gt;
        &lt;action android:name=&quot;android.intent.action.MEDIA_BUTTON&quot; /&gt;
    &lt;/intent&gt;
&lt;/queries&gt;
</code></pre>
",1
Manifest,Android,pattern,77498382,"<p>Remove package element from manifest and insert it into build.gradle(:app) as namespace:</p>
<p>android {
...
...
namespace 'your.package.name'
}</p>
",1
Manifest,Android,pattern,65337563,"<p>Apart from the credentials being correctly added to your AndroidManifest.xml file, you also need to ensure that the application package name matches exactly (both in the manifest and the application gradle file).</p>
<p>build.gradle (app):</p>
<pre><code>android {
    ...

    defaultConfig {
        applicationId &quot;PACKAGE NAME&quot;
    ...
    }
    ...
}
</code></pre>
<p>AndroidManifest.xml:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
              xmlns:tools=&quot;http://schemas.android.com/tools&quot;
              package=&quot;PACKAGE NAME&quot;&gt;
...
    &lt;meta-data
        android:name=&quot;com.here.android.maps.appid&quot;
        android:value=&quot;APP ID&quot; /&gt;
    &lt;meta-data
        android:name=&quot;com.here.android.maps.apptoken&quot;
        android:value=&quot;APP CODE&quot; /&gt;
    &lt;meta-data
        android:name=&quot;com.here.android.maps.license.key&quot;
        android:value=&quot;LICENSE KEY&quot; /&gt;
</code></pre>
<p><a href=""https://i.sstatic.net/I1YJJ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/I1YJJ.png"" alt=""Here SDK Credentials"" /></a></p>
",1
Manifest,Android,environment,75280615,"<p>Remove manifestPlaceholders from the defaultConfig on the build.gradle
<code>defaultConfig {  manifestPlaceholders = [API_KEY: &quot;$process.env.REACT_NATIVE_PLACES_API_KEY&quot;] }</code></p>
<p>Insert the env file <code>API_KEY=&lt;your value&gt;</code> and use it in the AndroidManifest.xml</p>
<pre><code>&lt;meta-data android:name=&quot;com.google.android.geo.API_KEY&quot; android:value=&quot;@string/API_KEY&quot; /&gt;
</code></pre>
",1
Manifest,Android,environment,63176164,"<p><code>Application manifest</code> can refer to both the <code>build.gradle</code> declaration or a definition in an android manifest (<a href=""https://developer.android.com/studio/publish/versioning#appversioning"" rel=""nofollow noreferrer"">https://developer.android.com/studio/publish/versioning#appversioning</a>):</p>
<blockquote>
<p>Note: If your app defines the app version directly in the  element, the version values in the Gradle build file will override the settings in the manifest. Additionally, defining these settings in the Gradle build files allows you to specify different values for different versions of your app. For greater flexibility and to avoid potential overwriting when the manifest is merged, you should remove these attributes from the  element and define your version settings in the Gradle build files instead.</p>
</blockquote>
<p>It looks like ARCore can't find the metadata in your APK. It's possible that the minSdkVersion is placed in the wrong place; it's hard to tell without the entire build file.</p>
<p>You can use <a href=""https://developer.android.com/studio/build/apk-analyzer"" rel=""nofollow noreferrer"">Android Studio's APK Analyzer</a> to find out which metadata is present in your generated <code>AndroidManifest.xml</code>.</p>
",1
Manifest,Android,environment,77534889,"<p>For Android 11 (R) and above, add the permission to the app’s manifest file.</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;/&gt;
</code></pre>
<p>For Android Versions Below 11, add:</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;
</code></pre>
<p>Check For Permissions At Runtime</p>
<pre><code>public void checkStoragePermissions(){
    if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R){
        //Android is 11 (R) or above
        try {
            Intent intent = new Intent();
            intent.setAction(Settings.ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION);
            Uri uri = Uri.fromParts(&quot;package&quot;, this.getPackageName(), null);
            intent.setData(uri);
            storageActivityResultLauncher.launch(intent);
        } catch (Exception e) {
            Intent intent = new Intent();
            intent.setAction(Settings.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION);
            storageActivityResultLauncher.launch(intent);
        }
    }else {
        //Below android 11
        Dexter.withContext(MainActivity.this).withPermission(Manifest.permission.READ_EXTERNAL_STORAGE)
            .withListener(new PermissionListener() {
                @Override
                public void onPermissionGranted(PermissionGrantedResponse permissionGrantedResponse) {
                    displayPdf();
                }

                @Override
                public void onPermissionDenied(PermissionDeniedResponse permissionDeniedResponse) {
                    Toast.makeText(MainActivity.this, &quot;Permission is Required&quot;, Toast.LENGTH_SHORT).show();
                }

                @Override
                public void onPermissionRationaleShouldBeShown(PermissionRequest permissionRequest, PermissionToken permissionToken) {
                    permissionToken.continuePermissionRequest();
                }
            }).check();
    }
}

private ActivityResultLauncher&lt;Intent&gt; storageActivityResultLauncher =
        registerForActivityResult(new ActivityResultContracts.StartActivityForResult(),
                new ActivityResultCallback&lt;ActivityResult&gt;() {

                    @Override
                    public void onActivityResult(ActivityResult o) {
                        if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R) {
                            //Android is 11 (R) or above
                            if(Environment.isExternalStorageManager()) {
                                //Manage External Storage Permissions Granted
                                displayPdf();
                            } else {
                                Toast.makeText(MainActivity.this, &quot;Storage Permissions Denied&quot;, Toast.LENGTH_SHORT).show();
                            }
                        }
                    }
                });
</code></pre>
",1
Manifest,Android,environment,77701931,"<p>Use @Preview(apiLevel = 33), like below</p>
<pre><code>@Preview(apiLevel = 33)
@Composable
fun YourComposablePreview() {
    ...
}
</code></pre>
",0
Manifest,Android,environment,66003061,"<p>A manifest(excluding the ones in <code>.repo/local_manifests</code>), which is <code>default.xml</code> in your case, has a <code>default</code> element.</p>
<pre><code>&lt;default revision=&quot;refs/tags/android-11.0.0_r27&quot;
           remote=&quot;aosp&quot;
           sync-j=&quot;4&quot; /&gt;
</code></pre>
<p>If a <code>project</code> element does not have its own <code>revision</code> or <code>upstream</code>, the one in the <code>default</code> element, <code>revision=&quot;refs/tags/android-11.0.0_r27&quot;</code>,  is used. It's the same for other attributes. The <code>project</code> does not have its own <code>remote</code> and <code>sync-j</code> either, so the ones in <code>default</code> are used.</p>
<p>For more details, you could read the document under <code>.repo/repo/docs</code>.</p>
",0
Manifest,Android,environment,61684906,"<pre><code>path=""/trovata/update/${applicationId}/""
</code></pre>

<p><code>${applicationId}</code> only turns into your application ID in <code>AndroidManifest.xml</code>. You cannot use manifest placeholders in resource files. So, replace <code>${applicationId}</code> with your actual application ID.</p>
",1
Manifest,Android,environment,71250037,"<p>You can add the <code>appAuthRedirectScheme</code> attributes to the <code>manifestPlaceholders</code> instead of replacing the whole array, by using <code>+=</code> instead of <code>=</code></p>
<p>Example :</p>
<pre><code>defaultConfig {
    ...
    manifestPlaceholders += [appAuthRedirectScheme: &quot;com.example.multi_delivery_app&quot;]
}
</code></pre>
",1
Manifest,Android,environment,77391378,"<p>To comply with <a href=""https://developer.android.com/training/package-visibility"" rel=""nofollow noreferrer"">package visibility rules on Android 11 and higher</a>, you will need a <code>&lt;queries&gt;</code> element as a child of the root <code>&lt;manifest&gt;</code> element, something like:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;queries&gt;
    &lt;intent&gt;
        &lt;action android:name=&quot;android.intent.action.MEDIA_BUTTON&quot; /&gt;
    &lt;/intent&gt;
&lt;/queries&gt;
</code></pre>
",1
Manifest,Android,environment,65337563,"<p>Apart from the credentials being correctly added to your AndroidManifest.xml file, you also need to ensure that the application package name matches exactly (both in the manifest and the application gradle file).</p>
<p>build.gradle (app):</p>
<pre><code>android {
    ...

    defaultConfig {
        applicationId &quot;PACKAGE NAME&quot;
    ...
    }
    ...
}
</code></pre>
<p>AndroidManifest.xml:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
              xmlns:tools=&quot;http://schemas.android.com/tools&quot;
              package=&quot;PACKAGE NAME&quot;&gt;
...
    &lt;meta-data
        android:name=&quot;com.here.android.maps.appid&quot;
        android:value=&quot;APP ID&quot; /&gt;
    &lt;meta-data
        android:name=&quot;com.here.android.maps.apptoken&quot;
        android:value=&quot;APP CODE&quot; /&gt;
    &lt;meta-data
        android:name=&quot;com.here.android.maps.license.key&quot;
        android:value=&quot;LICENSE KEY&quot; /&gt;
</code></pre>
<p><a href=""https://i.sstatic.net/I1YJJ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/I1YJJ.png"" alt=""Here SDK Credentials"" /></a></p>
",1
Manifest,Android,environment,61629833,"<p>If you target Android 10 (API level 29) or higher, set the value of <code>requestLegacyExternalStorage</code> to <code>true</code> in your app's manifest file:</p>

<p><a href=""https://developer.android.com/training/data-storage/compatibility"" rel=""noreferrer"">Documentation</a></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;manifest xmlns:android=""http://schemas.android.com/apk/res/android""
    package=""com.example.appname""
    android:installLocation=""auto""&gt;

    &lt;application
        android:allowBackup=""true""
        android:icon=""@mipmap/ic_launcher""
        android:label=""@string/app_name""
        android:requestLegacyExternalStorage=""true""
        android:roundIcon=""@mipmap/ic_launcher_round""
        android:supportsRtl=""true""
        android:theme=""@style/AppTheme.NoActionBar""&gt;

        &lt;activity android:name="".activities.MainActivity""&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.MAIN"" /&gt;

                &lt;category android:name=""android.intent.category.LAUNCHER"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;


    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>
",1
Manifest,Android,alternative,75280615,"<p>Remove manifestPlaceholders from the defaultConfig on the build.gradle
<code>defaultConfig {  manifestPlaceholders = [API_KEY: &quot;$process.env.REACT_NATIVE_PLACES_API_KEY&quot;] }</code></p>
<p>Insert the env file <code>API_KEY=&lt;your value&gt;</code> and use it in the AndroidManifest.xml</p>
<pre><code>&lt;meta-data android:name=&quot;com.google.android.geo.API_KEY&quot; android:value=&quot;@string/API_KEY&quot; /&gt;
</code></pre>
",0
Manifest,Android,alternative,77701931,"<p>Use @Preview(apiLevel = 33), like below</p>
<pre><code>@Preview(apiLevel = 33)
@Composable
fun YourComposablePreview() {
    ...
}
</code></pre>
",0
Manifest,Android,alternative,71250037,"<p>You can add the <code>appAuthRedirectScheme</code> attributes to the <code>manifestPlaceholders</code> instead of replacing the whole array, by using <code>+=</code> instead of <code>=</code></p>
<p>Example :</p>
<pre><code>defaultConfig {
    ...
    manifestPlaceholders += [appAuthRedirectScheme: &quot;com.example.multi_delivery_app&quot;]
}
</code></pre>
",1
Manifest,Android,alternative,63176164,"<p><code>Application manifest</code> can refer to both the <code>build.gradle</code> declaration or a definition in an android manifest (<a href=""https://developer.android.com/studio/publish/versioning#appversioning"" rel=""nofollow noreferrer"">https://developer.android.com/studio/publish/versioning#appversioning</a>):</p>
<blockquote>
<p>Note: If your app defines the app version directly in the  element, the version values in the Gradle build file will override the settings in the manifest. Additionally, defining these settings in the Gradle build files allows you to specify different values for different versions of your app. For greater flexibility and to avoid potential overwriting when the manifest is merged, you should remove these attributes from the  element and define your version settings in the Gradle build files instead.</p>
</blockquote>
<p>It looks like ARCore can't find the metadata in your APK. It's possible that the minSdkVersion is placed in the wrong place; it's hard to tell without the entire build file.</p>
<p>You can use <a href=""https://developer.android.com/studio/build/apk-analyzer"" rel=""nofollow noreferrer"">Android Studio's APK Analyzer</a> to find out which metadata is present in your generated <code>AndroidManifest.xml</code>.</p>
",0
Manifest,Android,alternative,77391378,"<p>To comply with <a href=""https://developer.android.com/training/package-visibility"" rel=""nofollow noreferrer"">package visibility rules on Android 11 and higher</a>, you will need a <code>&lt;queries&gt;</code> element as a child of the root <code>&lt;manifest&gt;</code> element, something like:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;queries&gt;
    &lt;intent&gt;
        &lt;action android:name=&quot;android.intent.action.MEDIA_BUTTON&quot; /&gt;
    &lt;/intent&gt;
&lt;/queries&gt;
</code></pre>
",0
Manifest,Android,alternative,61684906,"<pre><code>path=""/trovata/update/${applicationId}/""
</code></pre>

<p><code>${applicationId}</code> only turns into your application ID in <code>AndroidManifest.xml</code>. You cannot use manifest placeholders in resource files. So, replace <code>${applicationId}</code> with your actual application ID.</p>
",1
Manifest,Android,alternative,61624380,"<p>Your manifest is missing the activity, change it to:</p>

<p><code>AndroidManifest.xml:</code></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;manifest xmlns:android=""http://schemas.android.com/apk/res/android""
    package=""com.jonathan.vrtest3""&gt;

    &lt;application
        android:allowBackup=""true""
        android:icon=""@mipmap/ic_launcher""
        android:label=""@string/app_name""
        android:roundIcon=""@mipmap/ic_launcher_round""
        android:supportsRtl=""true""
        android:theme=""@style/AppTheme""&gt;
        &lt;activity android:name=""com.unity3d.player.UnityPlayerActivity"" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.DEFAULT"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
        &lt;activity android:name="".GameActivity""/&gt;
        &lt;activity android:name="".MainActivity""&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.MAIN"" /&gt;

                &lt;category android:name=""android.intent.category.LAUNCHER"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>

<p>and start the unity activity from another activity by chaining the intent with:</p>

<p><code>GameActivity.java:</code></p>

<pre><code>class GamesActivity extends AppCompatActivity {

    @Override
    public void onCreate(Bundle savedInstanceState, PersistableBundle persistentState) {
    super.onCreate(savedInstanceState, persistentState);

    Intent intent = new Intent(this, UnityPlayerActivity.class);
    startActivity(intent);
}
</code></pre>

<p>}</p>
",0
Manifest,Android,alternative,77534889,"<p>For Android 11 (R) and above, add the permission to the app’s manifest file.</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;/&gt;
</code></pre>
<p>For Android Versions Below 11, add:</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;
</code></pre>
<p>Check For Permissions At Runtime</p>
<pre><code>public void checkStoragePermissions(){
    if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R){
        //Android is 11 (R) or above
        try {
            Intent intent = new Intent();
            intent.setAction(Settings.ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION);
            Uri uri = Uri.fromParts(&quot;package&quot;, this.getPackageName(), null);
            intent.setData(uri);
            storageActivityResultLauncher.launch(intent);
        } catch (Exception e) {
            Intent intent = new Intent();
            intent.setAction(Settings.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION);
            storageActivityResultLauncher.launch(intent);
        }
    }else {
        //Below android 11
        Dexter.withContext(MainActivity.this).withPermission(Manifest.permission.READ_EXTERNAL_STORAGE)
            .withListener(new PermissionListener() {
                @Override
                public void onPermissionGranted(PermissionGrantedResponse permissionGrantedResponse) {
                    displayPdf();
                }

                @Override
                public void onPermissionDenied(PermissionDeniedResponse permissionDeniedResponse) {
                    Toast.makeText(MainActivity.this, &quot;Permission is Required&quot;, Toast.LENGTH_SHORT).show();
                }

                @Override
                public void onPermissionRationaleShouldBeShown(PermissionRequest permissionRequest, PermissionToken permissionToken) {
                    permissionToken.continuePermissionRequest();
                }
            }).check();
    }
}

private ActivityResultLauncher&lt;Intent&gt; storageActivityResultLauncher =
        registerForActivityResult(new ActivityResultContracts.StartActivityForResult(),
                new ActivityResultCallback&lt;ActivityResult&gt;() {

                    @Override
                    public void onActivityResult(ActivityResult o) {
                        if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.R) {
                            //Android is 11 (R) or above
                            if(Environment.isExternalStorageManager()) {
                                //Manage External Storage Permissions Granted
                                displayPdf();
                            } else {
                                Toast.makeText(MainActivity.this, &quot;Storage Permissions Denied&quot;, Toast.LENGTH_SHORT).show();
                            }
                        }
                    }
                });
</code></pre>
",0
Manifest,Android,alternative,70596209,"<p>Use <code>CacheDataSource.Factory()</code> instead of <code>CacheDataSourceFactory</code> and <code>StandaloneDatabaseProvider</code> instead of <code>ExoDatabaseProvider</code>.</p>
",0
Manifest,Android,alternative,77498382,"<p>Remove package element from manifest and insert it into build.gradle(:app) as namespace:</p>
<p>android {
...
...
namespace 'your.package.name'
}</p>
",1
UUID,Java,functionality,74326171,"<p>.class file is byte code to be interpreted by a Java Virtual Machine, which will „map“ it to instructions specific for the underlying operating system (OS) and CPU. Therefore, Java byte code (.class) will run on any operating system and CPU providing a JVM. That includes (but is not limited to) Windows, MacOS and Linux.</p>
<p>.exe file are specific to a single target OS and CPU, usually Windows.</p>
",0
UUID,Java,functionality,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",0
UUID,Java,functionality,77492368,"<p>The &quot;problem&quot; is that the id is auto generated, because of the annotation @GeneratedValue. When you call 'orderRepository.save(order2);' the id value you passed when building the order is ignored and a new UUID is automatically generated.</p>
<p>You should not set the id for order, since it's auto generated by the persistence layer.</p>
",0
UUID,Java,functionality,77456173,"<blockquote>
<p><em>&quot;... The classes LocalDate, LocalTime, LocalDateTime are final, objects can't be created out of it ...&quot;</em></p>
</blockquote>
<p>Your terminology is incorrect.</p>
<p>In <em>Java</em>, an <em><a href=""https://en.wikipedia.org/wiki/Object_(computer_science)"" rel=""nofollow noreferrer"">object</a></em> is a <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/index.html"" rel=""nofollow noreferrer"">class</a></em>, typically an <em><a href=""https://docs.oracle.com/javase/tutorial/reflect/member/ctorInstance.html"" rel=""nofollow noreferrer"">instance</a></em>.</p>
<p>And, when a <em>class</em> is defined with the <em><a href=""https://docs.oracle.com/javase/tutorial/java/IandI/final.html"" rel=""nofollow noreferrer"">final</a></em> keyword, it cannot be <em><a href=""https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)"" rel=""nofollow noreferrer"">encapsulated</a></em>.<br />
An <em>object</em> can be created, though.</p>
<pre class=""lang-java prettyprint-override""><code>LocalDate ld = LocalDate.of(2023, 11, 9);
LocalTime lt = LocalTime.of(12, 34);
LocalDateTime ldt = LocalDateTime.of(2023, 11, 9, 12, 34);
</code></pre>
<blockquote>
<p><em>&quot;... so static reference cannot be made to the non static method format().  ...&quot;</em></p>
</blockquote>
<p>Unlike the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#of(int,int)"" rel=""nofollow noreferrer"">of</a></em> method, the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#format(java.time.format.DateTimeFormatter)"" rel=""nofollow noreferrer"">format</a></em> method is not defined as <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html"" rel=""nofollow noreferrer"">static</a></em>, so you'll need to use an <em>instance</em> to access it.</p>
<pre class=""lang-java prettyprint-override""><code>LocalTime lt = LocalTime.of(12, 34);
lt.format(DateTimeFormatter.ISO_LOCAL_TIME);
</code></pre>
",0
UUID,Java,functionality,75940147,"<p>Actually, I did it this way:</p>
<pre><code>public class EntityClass {

   @Id
   @GeneratedValue(strategy = GenerationType.IDENTITY)
   private Long id;

   @Column(unique = true, nullable = false)
   private UUID uuid = UUID.randomUUID();
}
</code></pre>
<p>On initial save, UUID will be set, and it should be unique and not null.</p>
",1
UUID,Java,functionality,74931505,"<p><code>configurations.runtimeClasspath</code> is a generated <a href=""https://docs.gradle.org/7.6/userguide/kotlin_dsl.html#type-safe-accessors"" rel=""nofollow noreferrer"">Gradle Kotlin DSL accessor</a>, and these are only available inside <code>*.gradle.kts</code> files.</p>
<p>Instead you'll have to access the configuration by the name, using <a href=""https://docs.gradle.org/7.6/javadoc/org/gradle/api/artifacts/ConfigurationContainer.html#getByName-java.lang.String-"" rel=""nofollow noreferrer""><code>ConfigurationContainer.getByName()</code></a>.</p>
<p>Conveniently, <a href=""https://docs.gradle.org/7.6urrent/javadoc/org/gradle/api/plugins/JavaPlugin.html"" rel=""nofollow noreferrer""><code>JavaPlugin</code></a> provides the name of the <code>runtimeClasspath</code> Configuration, so it can be imported and used directly (rather than using a 'magic' string).</p>
<pre class=""lang-kotlin prettyprint-override""><code>// import JavaPlugin
import org.gradle.api.plugins.JavaPlugin

// (existing imports)
// import ...

fun Project.makeExecutableJar (name: String, main: String?, sset: SourceSet) : TaskProvider&lt;Jar&gt; {
    // access the runtimeClasspath configuration
    val runtimeClasspathConfiguration = configurations.named(JavaPlugin.RUNTIME_CLASSPATH_CONFIGURATION_NAME)
    
    return tasks.register&lt;Jar&gt;(name) {
        dependsOn(runtimeClasspathConfiguration )
        // ...
    }
}
</code></pre>
",0
UUID,Java,functionality,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
UUID,Java,functionality,73249889,"<p>If you put your files/resources inside your source folder, you can access them through ClassName.getResource() and ClassName.getResourceAsStream() methods.</p>
",0
UUID,Java,functionality,74949774,"<p>According to the <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-5.html#jls-5.4"" rel=""nofollow noreferrer"">Java Language Specification</a>:</p>
<blockquote>
<p>String contexts apply only to an operand of the binary + operator which is not a String when the other operand is a String.</p>
</blockquote>
<blockquote>
<p>The target type in these contexts is always String, and a string conversion (§5.1.11) of the non-String operand always occurs.</p>
</blockquote>
<p>Which means that when you do <code>hp + brand</code>, since <code>brand</code> is a <code>String</code> the rule above kicks in, <code>hp</code> gets converted to a <code>String</code> and concatenation occurs, resulting in a <code>String</code>.</p>
",0
UUID,Java,functionality,77672022,"<p>You can set a <code>prefix</code> in the <code>@ConfigurationProperties</code> annotation. Then, it will only pick up properties starting with that prefix:</p>
<pre class=""lang-java prettyprint-override""><code>@ConfigurationProperties(&quot;config.first&quot;)
class Config1 {
}
@ConfigurationProperties(&quot;config.second&quot;)
class Config2 {
}
</code></pre>
<p>and in your <code>application.properties</code>:</p>
<pre class=""lang-ini prettyprint-override""><code># properties for Config1
config.first.your_config_1_property = value1

# properties for Config2
config.second.your_config_2_property = value2
</code></pre>
",0
UUID,Java,concept,74326171,"<p>.class file is byte code to be interpreted by a Java Virtual Machine, which will „map“ it to instructions specific for the underlying operating system (OS) and CPU. Therefore, Java byte code (.class) will run on any operating system and CPU providing a JVM. That includes (but is not limited to) Windows, MacOS and Linux.</p>
<p>.exe file are specific to a single target OS and CPU, usually Windows.</p>
",0
UUID,Java,concept,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",1
UUID,Java,concept,77456173,"<blockquote>
<p><em>&quot;... The classes LocalDate, LocalTime, LocalDateTime are final, objects can't be created out of it ...&quot;</em></p>
</blockquote>
<p>Your terminology is incorrect.</p>
<p>In <em>Java</em>, an <em><a href=""https://en.wikipedia.org/wiki/Object_(computer_science)"" rel=""nofollow noreferrer"">object</a></em> is a <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/index.html"" rel=""nofollow noreferrer"">class</a></em>, typically an <em><a href=""https://docs.oracle.com/javase/tutorial/reflect/member/ctorInstance.html"" rel=""nofollow noreferrer"">instance</a></em>.</p>
<p>And, when a <em>class</em> is defined with the <em><a href=""https://docs.oracle.com/javase/tutorial/java/IandI/final.html"" rel=""nofollow noreferrer"">final</a></em> keyword, it cannot be <em><a href=""https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)"" rel=""nofollow noreferrer"">encapsulated</a></em>.<br />
An <em>object</em> can be created, though.</p>
<pre class=""lang-java prettyprint-override""><code>LocalDate ld = LocalDate.of(2023, 11, 9);
LocalTime lt = LocalTime.of(12, 34);
LocalDateTime ldt = LocalDateTime.of(2023, 11, 9, 12, 34);
</code></pre>
<blockquote>
<p><em>&quot;... so static reference cannot be made to the non static method format().  ...&quot;</em></p>
</blockquote>
<p>Unlike the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#of(int,int)"" rel=""nofollow noreferrer"">of</a></em> method, the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#format(java.time.format.DateTimeFormatter)"" rel=""nofollow noreferrer"">format</a></em> method is not defined as <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html"" rel=""nofollow noreferrer"">static</a></em>, so you'll need to use an <em>instance</em> to access it.</p>
<pre class=""lang-java prettyprint-override""><code>LocalTime lt = LocalTime.of(12, 34);
lt.format(DateTimeFormatter.ISO_LOCAL_TIME);
</code></pre>
",0
UUID,Java,concept,75833201,"<p>Given <a href=""https://sourceforge.net/p/ucanaccess/git-code/ci/master/tree/src/main/java/net/ucanaccess/jdbc/UcanaccessDriver.java#l71"" rel=""nofollow noreferrer"">UCanAccess passes URI verbatim to <code>File</code> constructor</a> and that <a href=""https://docs.oracle.com/javase/7/docs/api/java/io/File.html"" rel=""nofollow noreferrer""><code>java.io.File</code></a> accepts</p>
<blockquote>
<p>An optional system-dependent prefix string, such as a disk-drive specifier, &quot;/&quot; for the UNIX root directory, or &quot;\\&quot; for a Microsoft Windows UNC pathname, and (...)</p>
</blockquote>
<p>pointing to a <strong>file</strong> and given that <a href=""https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats#unc-paths"" rel=""nofollow noreferrer"">UNC on Windows specifies <code>\\server\c$</code> as a root directory</a> I would change your connection string to</p>
<pre><code>final String msAccDB= &quot;\\\\192.168.13.30\\C$\\Users\\Debabrata\\Desktop\\somefilename.mdb;memory=false&quot;;
final String url = UcanaccessDriver.URL_PREFIX + msAccDB;
</code></pre>
<p>Additional emphasis of addition of <code>somefilename.mdb</code> to URI.</p>
",0
UUID,Java,concept,77492368,"<p>The &quot;problem&quot; is that the id is auto generated, because of the annotation @GeneratedValue. When you call 'orderRepository.save(order2);' the id value you passed when building the order is ignored and a new UUID is automatically generated.</p>
<p>You should not set the id for order, since it's auto generated by the persistence layer.</p>
",0
UUID,Java,concept,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
UUID,Java,concept,75940147,"<p>Actually, I did it this way:</p>
<pre><code>public class EntityClass {

   @Id
   @GeneratedValue(strategy = GenerationType.IDENTITY)
   private Long id;

   @Column(unique = true, nullable = false)
   private UUID uuid = UUID.randomUUID();
}
</code></pre>
<p>On initial save, UUID will be set, and it should be unique and not null.</p>
",1
UUID,Java,concept,77672022,"<p>You can set a <code>prefix</code> in the <code>@ConfigurationProperties</code> annotation. Then, it will only pick up properties starting with that prefix:</p>
<pre class=""lang-java prettyprint-override""><code>@ConfigurationProperties(&quot;config.first&quot;)
class Config1 {
}
@ConfigurationProperties(&quot;config.second&quot;)
class Config2 {
}
</code></pre>
<p>and in your <code>application.properties</code>:</p>
<pre class=""lang-ini prettyprint-override""><code># properties for Config1
config.first.your_config_1_property = value1

# properties for Config2
config.second.your_config_2_property = value2
</code></pre>
",0
UUID,Java,concept,76132913,"<p>An enum value in Java is an object. An object is an instance of a type. In this case, the type is the enum, (&quot;Locale&quot;,) so the enum values are instances of that type, in other words, each enum value is of type &quot;Locale&quot;. Java guarantees that there will only be a fixed set of instances, one instance for each value declared in the enum.</p>
<p>When you declare a constructor and fields in an <code>enum</code>, these become part of each instance. So, each one of the locales you have declared will have an extra member of type <code>String</code> which you call <code>locale</code>.</p>
<p>Knowing that, and also knowing that to get all instances, we can use <code>Locale.values()</code>, your answer is:</p>
<pre><code>for( var instance : Locale.values() )
    System.out.println( instance.locale );
</code></pre>
",0
UUID,Java,concept,74949774,"<p>According to the <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-5.html#jls-5.4"" rel=""nofollow noreferrer"">Java Language Specification</a>:</p>
<blockquote>
<p>String contexts apply only to an operand of the binary + operator which is not a String when the other operand is a String.</p>
</blockquote>
<blockquote>
<p>The target type in these contexts is always String, and a string conversion (§5.1.11) of the non-String operand always occurs.</p>
</blockquote>
<p>Which means that when you do <code>hp + brand</code>, since <code>brand</code> is a <code>String</code> the rule above kicks in, <code>hp</code> gets converted to a <code>String</code> and concatenation occurs, resulting in a <code>String</code>.</p>
",0
UUID,Java,performance,74326171,"<p>.class file is byte code to be interpreted by a Java Virtual Machine, which will „map“ it to instructions specific for the underlying operating system (OS) and CPU. Therefore, Java byte code (.class) will run on any operating system and CPU providing a JVM. That includes (but is not limited to) Windows, MacOS and Linux.</p>
<p>.exe file are specific to a single target OS and CPU, usually Windows.</p>
",0
UUID,Java,performance,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",0
UUID,Java,performance,77492368,"<p>The &quot;problem&quot; is that the id is auto generated, because of the annotation @GeneratedValue. When you call 'orderRepository.save(order2);' the id value you passed when building the order is ignored and a new UUID is automatically generated.</p>
<p>You should not set the id for order, since it's auto generated by the persistence layer.</p>
",0
UUID,Java,performance,75940147,"<p>Actually, I did it this way:</p>
<pre><code>public class EntityClass {

   @Id
   @GeneratedValue(strategy = GenerationType.IDENTITY)
   private Long id;

   @Column(unique = true, nullable = false)
   private UUID uuid = UUID.randomUUID();
}
</code></pre>
<p>On initial save, UUID will be set, and it should be unique and not null.</p>
",0
UUID,Java,performance,77456173,"<blockquote>
<p><em>&quot;... The classes LocalDate, LocalTime, LocalDateTime are final, objects can't be created out of it ...&quot;</em></p>
</blockquote>
<p>Your terminology is incorrect.</p>
<p>In <em>Java</em>, an <em><a href=""https://en.wikipedia.org/wiki/Object_(computer_science)"" rel=""nofollow noreferrer"">object</a></em> is a <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/index.html"" rel=""nofollow noreferrer"">class</a></em>, typically an <em><a href=""https://docs.oracle.com/javase/tutorial/reflect/member/ctorInstance.html"" rel=""nofollow noreferrer"">instance</a></em>.</p>
<p>And, when a <em>class</em> is defined with the <em><a href=""https://docs.oracle.com/javase/tutorial/java/IandI/final.html"" rel=""nofollow noreferrer"">final</a></em> keyword, it cannot be <em><a href=""https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)"" rel=""nofollow noreferrer"">encapsulated</a></em>.<br />
An <em>object</em> can be created, though.</p>
<pre class=""lang-java prettyprint-override""><code>LocalDate ld = LocalDate.of(2023, 11, 9);
LocalTime lt = LocalTime.of(12, 34);
LocalDateTime ldt = LocalDateTime.of(2023, 11, 9, 12, 34);
</code></pre>
<blockquote>
<p><em>&quot;... so static reference cannot be made to the non static method format().  ...&quot;</em></p>
</blockquote>
<p>Unlike the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#of(int,int)"" rel=""nofollow noreferrer"">of</a></em> method, the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#format(java.time.format.DateTimeFormatter)"" rel=""nofollow noreferrer"">format</a></em> method is not defined as <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html"" rel=""nofollow noreferrer"">static</a></em>, so you'll need to use an <em>instance</em> to access it.</p>
<pre class=""lang-java prettyprint-override""><code>LocalTime lt = LocalTime.of(12, 34);
lt.format(DateTimeFormatter.ISO_LOCAL_TIME);
</code></pre>
",0
UUID,Java,performance,77672022,"<p>You can set a <code>prefix</code> in the <code>@ConfigurationProperties</code> annotation. Then, it will only pick up properties starting with that prefix:</p>
<pre class=""lang-java prettyprint-override""><code>@ConfigurationProperties(&quot;config.first&quot;)
class Config1 {
}
@ConfigurationProperties(&quot;config.second&quot;)
class Config2 {
}
</code></pre>
<p>and in your <code>application.properties</code>:</p>
<pre class=""lang-ini prettyprint-override""><code># properties for Config1
config.first.your_config_1_property = value1

# properties for Config2
config.second.your_config_2_property = value2
</code></pre>
",0
UUID,Java,performance,74949774,"<p>According to the <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-5.html#jls-5.4"" rel=""nofollow noreferrer"">Java Language Specification</a>:</p>
<blockquote>
<p>String contexts apply only to an operand of the binary + operator which is not a String when the other operand is a String.</p>
</blockquote>
<blockquote>
<p>The target type in these contexts is always String, and a string conversion (§5.1.11) of the non-String operand always occurs.</p>
</blockquote>
<p>Which means that when you do <code>hp + brand</code>, since <code>brand</code> is a <code>String</code> the rule above kicks in, <code>hp</code> gets converted to a <code>String</code> and concatenation occurs, resulting in a <code>String</code>.</p>
",0
UUID,Java,performance,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
UUID,Java,performance,74850838,"<p><code>HashMap.Node</code> is declared with <em>package private</em> visibility (the default visibility if <code>public</code>, <code>private</code> or <code>protected</code> is not used).</p>
<pre><code>    static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {
</code></pre>
<p>This means that the class is only visible to classes in the same package.</p>
<p>See this question for more details: <a href=""https://stackoverflow.com/questions/215497/what-is-the-difference-between-public-protected-package-private-and-private-in"">What is the difference between public, protected, package-private and private in Java?</a></p>
",0
UUID,Java,performance,73249889,"<p>If you put your files/resources inside your source folder, you can access them through ClassName.getResource() and ClassName.getResourceAsStream() methods.</p>
",0
UUID,Java,directive,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",0
UUID,Java,directive,75940147,"<p>Actually, I did it this way:</p>
<pre><code>public class EntityClass {

   @Id
   @GeneratedValue(strategy = GenerationType.IDENTITY)
   private Long id;

   @Column(unique = true, nullable = false)
   private UUID uuid = UUID.randomUUID();
}
</code></pre>
<p>On initial save, UUID will be set, and it should be unique and not null.</p>
",1
UUID,Java,directive,77492368,"<p>The &quot;problem&quot; is that the id is auto generated, because of the annotation @GeneratedValue. When you call 'orderRepository.save(order2);' the id value you passed when building the order is ignored and a new UUID is automatically generated.</p>
<p>You should not set the id for order, since it's auto generated by the persistence layer.</p>
",0
UUID,Java,directive,74326171,"<p>.class file is byte code to be interpreted by a Java Virtual Machine, which will „map“ it to instructions specific for the underlying operating system (OS) and CPU. Therefore, Java byte code (.class) will run on any operating system and CPU providing a JVM. That includes (but is not limited to) Windows, MacOS and Linux.</p>
<p>.exe file are specific to a single target OS and CPU, usually Windows.</p>
",0
UUID,Java,directive,75833201,"<p>Given <a href=""https://sourceforge.net/p/ucanaccess/git-code/ci/master/tree/src/main/java/net/ucanaccess/jdbc/UcanaccessDriver.java#l71"" rel=""nofollow noreferrer"">UCanAccess passes URI verbatim to <code>File</code> constructor</a> and that <a href=""https://docs.oracle.com/javase/7/docs/api/java/io/File.html"" rel=""nofollow noreferrer""><code>java.io.File</code></a> accepts</p>
<blockquote>
<p>An optional system-dependent prefix string, such as a disk-drive specifier, &quot;/&quot; for the UNIX root directory, or &quot;\\&quot; for a Microsoft Windows UNC pathname, and (...)</p>
</blockquote>
<p>pointing to a <strong>file</strong> and given that <a href=""https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats#unc-paths"" rel=""nofollow noreferrer"">UNC on Windows specifies <code>\\server\c$</code> as a root directory</a> I would change your connection string to</p>
<pre><code>final String msAccDB= &quot;\\\\192.168.13.30\\C$\\Users\\Debabrata\\Desktop\\somefilename.mdb;memory=false&quot;;
final String url = UcanaccessDriver.URL_PREFIX + msAccDB;
</code></pre>
<p>Additional emphasis of addition of <code>somefilename.mdb</code> to URI.</p>
",0
UUID,Java,directive,77672022,"<p>You can set a <code>prefix</code> in the <code>@ConfigurationProperties</code> annotation. Then, it will only pick up properties starting with that prefix:</p>
<pre class=""lang-java prettyprint-override""><code>@ConfigurationProperties(&quot;config.first&quot;)
class Config1 {
}
@ConfigurationProperties(&quot;config.second&quot;)
class Config2 {
}
</code></pre>
<p>and in your <code>application.properties</code>:</p>
<pre class=""lang-ini prettyprint-override""><code># properties for Config1
config.first.your_config_1_property = value1

# properties for Config2
config.second.your_config_2_property = value2
</code></pre>
",0
UUID,Java,directive,73349362,"<p>The annotation <code>@RequestBody</code> will serialize the object to <code>json</code> or <code>xml</code>, but <code>consumes</code> specifies the format as <code>application/x-www-form-urlencoded</code>, which causes the body in the request sent by Feign to be empty, so the microsoft server returns a <code>404 Not Found</code> response.</p>
<p>To solve this problem, the <code>@RequestBody</code> annotation should be removed:</p>
<pre class=""lang-java prettyprint-override""><code>@PostMapping(value = &quot;/common/oauth2/v2.0/devicecode&quot;, consumes = &quot;application/x-www-form-urlencoded&quot;)
Map&lt;String, Object&gt; getDeviceCode(Request dto);
</code></pre>
",0
UUID,Java,directive,77456173,"<blockquote>
<p><em>&quot;... The classes LocalDate, LocalTime, LocalDateTime are final, objects can't be created out of it ...&quot;</em></p>
</blockquote>
<p>Your terminology is incorrect.</p>
<p>In <em>Java</em>, an <em><a href=""https://en.wikipedia.org/wiki/Object_(computer_science)"" rel=""nofollow noreferrer"">object</a></em> is a <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/index.html"" rel=""nofollow noreferrer"">class</a></em>, typically an <em><a href=""https://docs.oracle.com/javase/tutorial/reflect/member/ctorInstance.html"" rel=""nofollow noreferrer"">instance</a></em>.</p>
<p>And, when a <em>class</em> is defined with the <em><a href=""https://docs.oracle.com/javase/tutorial/java/IandI/final.html"" rel=""nofollow noreferrer"">final</a></em> keyword, it cannot be <em><a href=""https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)"" rel=""nofollow noreferrer"">encapsulated</a></em>.<br />
An <em>object</em> can be created, though.</p>
<pre class=""lang-java prettyprint-override""><code>LocalDate ld = LocalDate.of(2023, 11, 9);
LocalTime lt = LocalTime.of(12, 34);
LocalDateTime ldt = LocalDateTime.of(2023, 11, 9, 12, 34);
</code></pre>
<blockquote>
<p><em>&quot;... so static reference cannot be made to the non static method format().  ...&quot;</em></p>
</blockquote>
<p>Unlike the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#of(int,int)"" rel=""nofollow noreferrer"">of</a></em> method, the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#format(java.time.format.DateTimeFormatter)"" rel=""nofollow noreferrer"">format</a></em> method is not defined as <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html"" rel=""nofollow noreferrer"">static</a></em>, so you'll need to use an <em>instance</em> to access it.</p>
<pre class=""lang-java prettyprint-override""><code>LocalTime lt = LocalTime.of(12, 34);
lt.format(DateTimeFormatter.ISO_LOCAL_TIME);
</code></pre>
",0
UUID,Java,directive,74949774,"<p>According to the <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-5.html#jls-5.4"" rel=""nofollow noreferrer"">Java Language Specification</a>:</p>
<blockquote>
<p>String contexts apply only to an operand of the binary + operator which is not a String when the other operand is a String.</p>
</blockquote>
<blockquote>
<p>The target type in these contexts is always String, and a string conversion (§5.1.11) of the non-String operand always occurs.</p>
</blockquote>
<p>Which means that when you do <code>hp + brand</code>, since <code>brand</code> is a <code>String</code> the rule above kicks in, <code>hp</code> gets converted to a <code>String</code> and concatenation occurs, resulting in a <code>String</code>.</p>
",0
UUID,Java,directive,74706744,"<p><a href=""https://docs.oracle.com/javase/7/docs/technotes/tools/windows/classpath.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/7/docs/technotes/tools/windows/classpath.html</a>
specifies:</p>
<blockquote>
<p>The default class path is the current directory. Setting the CLASSPATH variable or using the -classpath command-line option overrides that default, so if you want to include the current directory in the search path, you must include &quot;.&quot; in the new settings.</p>
</blockquote>
<p>So, to add to that default, include the CLASSPATH environment variable in your invocation:</p>
<pre><code>java -cp &quot;.;C:\Path\to\my\magical\jarfile.jar;.\some\other\directory;%CLASSPATH%&quot;
</code></pre>
",0
UUID,Java,pattern,74326171,"<p>.class file is byte code to be interpreted by a Java Virtual Machine, which will „map“ it to instructions specific for the underlying operating system (OS) and CPU. Therefore, Java byte code (.class) will run on any operating system and CPU providing a JVM. That includes (but is not limited to) Windows, MacOS and Linux.</p>
<p>.exe file are specific to a single target OS and CPU, usually Windows.</p>
",0
UUID,Java,pattern,75833201,"<p>Given <a href=""https://sourceforge.net/p/ucanaccess/git-code/ci/master/tree/src/main/java/net/ucanaccess/jdbc/UcanaccessDriver.java#l71"" rel=""nofollow noreferrer"">UCanAccess passes URI verbatim to <code>File</code> constructor</a> and that <a href=""https://docs.oracle.com/javase/7/docs/api/java/io/File.html"" rel=""nofollow noreferrer""><code>java.io.File</code></a> accepts</p>
<blockquote>
<p>An optional system-dependent prefix string, such as a disk-drive specifier, &quot;/&quot; for the UNIX root directory, or &quot;\\&quot; for a Microsoft Windows UNC pathname, and (...)</p>
</blockquote>
<p>pointing to a <strong>file</strong> and given that <a href=""https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats#unc-paths"" rel=""nofollow noreferrer"">UNC on Windows specifies <code>\\server\c$</code> as a root directory</a> I would change your connection string to</p>
<pre><code>final String msAccDB= &quot;\\\\192.168.13.30\\C$\\Users\\Debabrata\\Desktop\\somefilename.mdb;memory=false&quot;;
final String url = UcanaccessDriver.URL_PREFIX + msAccDB;
</code></pre>
<p>Additional emphasis of addition of <code>somefilename.mdb</code> to URI.</p>
",0
UUID,Java,pattern,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
UUID,Java,pattern,77456173,"<blockquote>
<p><em>&quot;... The classes LocalDate, LocalTime, LocalDateTime are final, objects can't be created out of it ...&quot;</em></p>
</blockquote>
<p>Your terminology is incorrect.</p>
<p>In <em>Java</em>, an <em><a href=""https://en.wikipedia.org/wiki/Object_(computer_science)"" rel=""nofollow noreferrer"">object</a></em> is a <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/index.html"" rel=""nofollow noreferrer"">class</a></em>, typically an <em><a href=""https://docs.oracle.com/javase/tutorial/reflect/member/ctorInstance.html"" rel=""nofollow noreferrer"">instance</a></em>.</p>
<p>And, when a <em>class</em> is defined with the <em><a href=""https://docs.oracle.com/javase/tutorial/java/IandI/final.html"" rel=""nofollow noreferrer"">final</a></em> keyword, it cannot be <em><a href=""https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)"" rel=""nofollow noreferrer"">encapsulated</a></em>.<br />
An <em>object</em> can be created, though.</p>
<pre class=""lang-java prettyprint-override""><code>LocalDate ld = LocalDate.of(2023, 11, 9);
LocalTime lt = LocalTime.of(12, 34);
LocalDateTime ldt = LocalDateTime.of(2023, 11, 9, 12, 34);
</code></pre>
<blockquote>
<p><em>&quot;... so static reference cannot be made to the non static method format().  ...&quot;</em></p>
</blockquote>
<p>Unlike the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#of(int,int)"" rel=""nofollow noreferrer"">of</a></em> method, the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#format(java.time.format.DateTimeFormatter)"" rel=""nofollow noreferrer"">format</a></em> method is not defined as <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html"" rel=""nofollow noreferrer"">static</a></em>, so you'll need to use an <em>instance</em> to access it.</p>
<pre class=""lang-java prettyprint-override""><code>LocalTime lt = LocalTime.of(12, 34);
lt.format(DateTimeFormatter.ISO_LOCAL_TIME);
</code></pre>
",0
UUID,Java,pattern,77492368,"<p>The &quot;problem&quot; is that the id is auto generated, because of the annotation @GeneratedValue. When you call 'orderRepository.save(order2);' the id value you passed when building the order is ignored and a new UUID is automatically generated.</p>
<p>You should not set the id for order, since it's auto generated by the persistence layer.</p>
",0
UUID,Java,pattern,74949774,"<p>According to the <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-5.html#jls-5.4"" rel=""nofollow noreferrer"">Java Language Specification</a>:</p>
<blockquote>
<p>String contexts apply only to an operand of the binary + operator which is not a String when the other operand is a String.</p>
</blockquote>
<blockquote>
<p>The target type in these contexts is always String, and a string conversion (§5.1.11) of the non-String operand always occurs.</p>
</blockquote>
<p>Which means that when you do <code>hp + brand</code>, since <code>brand</code> is a <code>String</code> the rule above kicks in, <code>hp</code> gets converted to a <code>String</code> and concatenation occurs, resulting in a <code>String</code>.</p>
",0
UUID,Java,pattern,77287490,"<p>@Where(clause = &quot;id IN (SELECT a.id FROM A a WHERE a.id = id AND a.shared_field = 'something')&quot;)</p>
",0
UUID,Java,pattern,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",1
UUID,Java,pattern,75940147,"<p>Actually, I did it this way:</p>
<pre><code>public class EntityClass {

   @Id
   @GeneratedValue(strategy = GenerationType.IDENTITY)
   private Long id;

   @Column(unique = true, nullable = false)
   private UUID uuid = UUID.randomUUID();
}
</code></pre>
<p>On initial save, UUID will be set, and it should be unique and not null.</p>
",1
UUID,Java,pattern,74931505,"<p><code>configurations.runtimeClasspath</code> is a generated <a href=""https://docs.gradle.org/7.6/userguide/kotlin_dsl.html#type-safe-accessors"" rel=""nofollow noreferrer"">Gradle Kotlin DSL accessor</a>, and these are only available inside <code>*.gradle.kts</code> files.</p>
<p>Instead you'll have to access the configuration by the name, using <a href=""https://docs.gradle.org/7.6/javadoc/org/gradle/api/artifacts/ConfigurationContainer.html#getByName-java.lang.String-"" rel=""nofollow noreferrer""><code>ConfigurationContainer.getByName()</code></a>.</p>
<p>Conveniently, <a href=""https://docs.gradle.org/7.6urrent/javadoc/org/gradle/api/plugins/JavaPlugin.html"" rel=""nofollow noreferrer""><code>JavaPlugin</code></a> provides the name of the <code>runtimeClasspath</code> Configuration, so it can be imported and used directly (rather than using a 'magic' string).</p>
<pre class=""lang-kotlin prettyprint-override""><code>// import JavaPlugin
import org.gradle.api.plugins.JavaPlugin

// (existing imports)
// import ...

fun Project.makeExecutableJar (name: String, main: String?, sset: SourceSet) : TaskProvider&lt;Jar&gt; {
    // access the runtimeClasspath configuration
    val runtimeClasspathConfiguration = configurations.named(JavaPlugin.RUNTIME_CLASSPATH_CONFIGURATION_NAME)
    
    return tasks.register&lt;Jar&gt;(name) {
        dependsOn(runtimeClasspathConfiguration )
        // ...
    }
}
</code></pre>
",0
UUID,Java,environment,74326171,"<p>.class file is byte code to be interpreted by a Java Virtual Machine, which will „map“ it to instructions specific for the underlying operating system (OS) and CPU. Therefore, Java byte code (.class) will run on any operating system and CPU providing a JVM. That includes (but is not limited to) Windows, MacOS and Linux.</p>
<p>.exe file are specific to a single target OS and CPU, usually Windows.</p>
",0
UUID,Java,environment,74931505,"<p><code>configurations.runtimeClasspath</code> is a generated <a href=""https://docs.gradle.org/7.6/userguide/kotlin_dsl.html#type-safe-accessors"" rel=""nofollow noreferrer"">Gradle Kotlin DSL accessor</a>, and these are only available inside <code>*.gradle.kts</code> files.</p>
<p>Instead you'll have to access the configuration by the name, using <a href=""https://docs.gradle.org/7.6/javadoc/org/gradle/api/artifacts/ConfigurationContainer.html#getByName-java.lang.String-"" rel=""nofollow noreferrer""><code>ConfigurationContainer.getByName()</code></a>.</p>
<p>Conveniently, <a href=""https://docs.gradle.org/7.6urrent/javadoc/org/gradle/api/plugins/JavaPlugin.html"" rel=""nofollow noreferrer""><code>JavaPlugin</code></a> provides the name of the <code>runtimeClasspath</code> Configuration, so it can be imported and used directly (rather than using a 'magic' string).</p>
<pre class=""lang-kotlin prettyprint-override""><code>// import JavaPlugin
import org.gradle.api.plugins.JavaPlugin

// (existing imports)
// import ...

fun Project.makeExecutableJar (name: String, main: String?, sset: SourceSet) : TaskProvider&lt;Jar&gt; {
    // access the runtimeClasspath configuration
    val runtimeClasspathConfiguration = configurations.named(JavaPlugin.RUNTIME_CLASSPATH_CONFIGURATION_NAME)
    
    return tasks.register&lt;Jar&gt;(name) {
        dependsOn(runtimeClasspathConfiguration )
        // ...
    }
}
</code></pre>
",0
UUID,Java,environment,74706744,"<p><a href=""https://docs.oracle.com/javase/7/docs/technotes/tools/windows/classpath.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/7/docs/technotes/tools/windows/classpath.html</a>
specifies:</p>
<blockquote>
<p>The default class path is the current directory. Setting the CLASSPATH variable or using the -classpath command-line option overrides that default, so if you want to include the current directory in the search path, you must include &quot;.&quot; in the new settings.</p>
</blockquote>
<p>So, to add to that default, include the CLASSPATH environment variable in your invocation:</p>
<pre><code>java -cp &quot;.;C:\Path\to\my\magical\jarfile.jar;.\some\other\directory;%CLASSPATH%&quot;
</code></pre>
",0
UUID,Java,environment,75833201,"<p>Given <a href=""https://sourceforge.net/p/ucanaccess/git-code/ci/master/tree/src/main/java/net/ucanaccess/jdbc/UcanaccessDriver.java#l71"" rel=""nofollow noreferrer"">UCanAccess passes URI verbatim to <code>File</code> constructor</a> and that <a href=""https://docs.oracle.com/javase/7/docs/api/java/io/File.html"" rel=""nofollow noreferrer""><code>java.io.File</code></a> accepts</p>
<blockquote>
<p>An optional system-dependent prefix string, such as a disk-drive specifier, &quot;/&quot; for the UNIX root directory, or &quot;\\&quot; for a Microsoft Windows UNC pathname, and (...)</p>
</blockquote>
<p>pointing to a <strong>file</strong> and given that <a href=""https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats#unc-paths"" rel=""nofollow noreferrer"">UNC on Windows specifies <code>\\server\c$</code> as a root directory</a> I would change your connection string to</p>
<pre><code>final String msAccDB= &quot;\\\\192.168.13.30\\C$\\Users\\Debabrata\\Desktop\\somefilename.mdb;memory=false&quot;;
final String url = UcanaccessDriver.URL_PREFIX + msAccDB;
</code></pre>
<p>Additional emphasis of addition of <code>somefilename.mdb</code> to URI.</p>
",0
UUID,Java,environment,77672022,"<p>You can set a <code>prefix</code> in the <code>@ConfigurationProperties</code> annotation. Then, it will only pick up properties starting with that prefix:</p>
<pre class=""lang-java prettyprint-override""><code>@ConfigurationProperties(&quot;config.first&quot;)
class Config1 {
}
@ConfigurationProperties(&quot;config.second&quot;)
class Config2 {
}
</code></pre>
<p>and in your <code>application.properties</code>:</p>
<pre class=""lang-ini prettyprint-override""><code># properties for Config1
config.first.your_config_1_property = value1

# properties for Config2
config.second.your_config_2_property = value2
</code></pre>
",0
UUID,Java,environment,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",1
UUID,Java,environment,74243528,"<p>The <code>_id</code> field is present in all documents in the collection - it is mandatory.</p>
<p>If the <code>_id</code> is not supplied by the application / user, <code>MongoDB</code> will create it when the document is inserted (and it will be of <code>type ObjectId</code>).</p>
<p>The <code>_id</code> value has a <strong>default unique index</strong> on it - this is automatically created by <code>MongoDB</code>. So, a collection can have <strong>only one document</strong> with a specific <code>_id</code>. Also, the <code>_id</code> value <strong>cannot be modified</strong> for a document, and the unique index on this field cannot be deleted (or modified).</p>
",0
UUID,Java,environment,77456173,"<blockquote>
<p><em>&quot;... The classes LocalDate, LocalTime, LocalDateTime are final, objects can't be created out of it ...&quot;</em></p>
</blockquote>
<p>Your terminology is incorrect.</p>
<p>In <em>Java</em>, an <em><a href=""https://en.wikipedia.org/wiki/Object_(computer_science)"" rel=""nofollow noreferrer"">object</a></em> is a <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/index.html"" rel=""nofollow noreferrer"">class</a></em>, typically an <em><a href=""https://docs.oracle.com/javase/tutorial/reflect/member/ctorInstance.html"" rel=""nofollow noreferrer"">instance</a></em>.</p>
<p>And, when a <em>class</em> is defined with the <em><a href=""https://docs.oracle.com/javase/tutorial/java/IandI/final.html"" rel=""nofollow noreferrer"">final</a></em> keyword, it cannot be <em><a href=""https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)"" rel=""nofollow noreferrer"">encapsulated</a></em>.<br />
An <em>object</em> can be created, though.</p>
<pre class=""lang-java prettyprint-override""><code>LocalDate ld = LocalDate.of(2023, 11, 9);
LocalTime lt = LocalTime.of(12, 34);
LocalDateTime ldt = LocalDateTime.of(2023, 11, 9, 12, 34);
</code></pre>
<blockquote>
<p><em>&quot;... so static reference cannot be made to the non static method format().  ...&quot;</em></p>
</blockquote>
<p>Unlike the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#of(int,int)"" rel=""nofollow noreferrer"">of</a></em> method, the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#format(java.time.format.DateTimeFormatter)"" rel=""nofollow noreferrer"">format</a></em> method is not defined as <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html"" rel=""nofollow noreferrer"">static</a></em>, so you'll need to use an <em>instance</em> to access it.</p>
<pre class=""lang-java prettyprint-override""><code>LocalTime lt = LocalTime.of(12, 34);
lt.format(DateTimeFormatter.ISO_LOCAL_TIME);
</code></pre>
",0
UUID,Java,environment,75940147,"<p>Actually, I did it this way:</p>
<pre><code>public class EntityClass {

   @Id
   @GeneratedValue(strategy = GenerationType.IDENTITY)
   private Long id;

   @Column(unique = true, nullable = false)
   private UUID uuid = UUID.randomUUID();
}
</code></pre>
<p>On initial save, UUID will be set, and it should be unique and not null.</p>
",1
UUID,Java,environment,77492368,"<p>The &quot;problem&quot; is that the id is auto generated, because of the annotation @GeneratedValue. When you call 'orderRepository.save(order2);' the id value you passed when building the order is ignored and a new UUID is automatically generated.</p>
<p>You should not set the id for order, since it's auto generated by the persistence layer.</p>
",1
UUID,Java,alternative,74326171,"<p>.class file is byte code to be interpreted by a Java Virtual Machine, which will „map“ it to instructions specific for the underlying operating system (OS) and CPU. Therefore, Java byte code (.class) will run on any operating system and CPU providing a JVM. That includes (but is not limited to) Windows, MacOS and Linux.</p>
<p>.exe file are specific to a single target OS and CPU, usually Windows.</p>
",0
UUID,Java,alternative,77456173,"<blockquote>
<p><em>&quot;... The classes LocalDate, LocalTime, LocalDateTime are final, objects can't be created out of it ...&quot;</em></p>
</blockquote>
<p>Your terminology is incorrect.</p>
<p>In <em>Java</em>, an <em><a href=""https://en.wikipedia.org/wiki/Object_(computer_science)"" rel=""nofollow noreferrer"">object</a></em> is a <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/index.html"" rel=""nofollow noreferrer"">class</a></em>, typically an <em><a href=""https://docs.oracle.com/javase/tutorial/reflect/member/ctorInstance.html"" rel=""nofollow noreferrer"">instance</a></em>.</p>
<p>And, when a <em>class</em> is defined with the <em><a href=""https://docs.oracle.com/javase/tutorial/java/IandI/final.html"" rel=""nofollow noreferrer"">final</a></em> keyword, it cannot be <em><a href=""https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)"" rel=""nofollow noreferrer"">encapsulated</a></em>.<br />
An <em>object</em> can be created, though.</p>
<pre class=""lang-java prettyprint-override""><code>LocalDate ld = LocalDate.of(2023, 11, 9);
LocalTime lt = LocalTime.of(12, 34);
LocalDateTime ldt = LocalDateTime.of(2023, 11, 9, 12, 34);
</code></pre>
<blockquote>
<p><em>&quot;... so static reference cannot be made to the non static method format().  ...&quot;</em></p>
</blockquote>
<p>Unlike the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#of(int,int)"" rel=""nofollow noreferrer"">of</a></em> method, the <em><a href=""https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/LocalTime.html#format(java.time.format.DateTimeFormatter)"" rel=""nofollow noreferrer"">format</a></em> method is not defined as <em><a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html"" rel=""nofollow noreferrer"">static</a></em>, so you'll need to use an <em>instance</em> to access it.</p>
<pre class=""lang-java prettyprint-override""><code>LocalTime lt = LocalTime.of(12, 34);
lt.format(DateTimeFormatter.ISO_LOCAL_TIME);
</code></pre>
",0
UUID,Java,alternative,77492368,"<p>The &quot;problem&quot; is that the id is auto generated, because of the annotation @GeneratedValue. When you call 'orderRepository.save(order2);' the id value you passed when building the order is ignored and a new UUID is automatically generated.</p>
<p>You should not set the id for order, since it's auto generated by the persistence layer.</p>
",0
UUID,Java,alternative,73144845,"<p>The point of UUIDs is that it doesn't matter who generates them and there is no state you need to worry about (i.e. the chance that 2 separate systems both generating random UUIDs happen to generate identical UUIDs, rounds down to zero). Hence, let MySQL generate it. Or let java generate it. Whatever is more convenient. There is no inherent drawback to either form.</p>
",0
UUID,Java,alternative,73349362,"<p>The annotation <code>@RequestBody</code> will serialize the object to <code>json</code> or <code>xml</code>, but <code>consumes</code> specifies the format as <code>application/x-www-form-urlencoded</code>, which causes the body in the request sent by Feign to be empty, so the microsoft server returns a <code>404 Not Found</code> response.</p>
<p>To solve this problem, the <code>@RequestBody</code> annotation should be removed:</p>
<pre class=""lang-java prettyprint-override""><code>@PostMapping(value = &quot;/common/oauth2/v2.0/devicecode&quot;, consumes = &quot;application/x-www-form-urlencoded&quot;)
Map&lt;String, Object&gt; getDeviceCode(Request dto);
</code></pre>
",0
UUID,Java,alternative,75833201,"<p>Given <a href=""https://sourceforge.net/p/ucanaccess/git-code/ci/master/tree/src/main/java/net/ucanaccess/jdbc/UcanaccessDriver.java#l71"" rel=""nofollow noreferrer"">UCanAccess passes URI verbatim to <code>File</code> constructor</a> and that <a href=""https://docs.oracle.com/javase/7/docs/api/java/io/File.html"" rel=""nofollow noreferrer""><code>java.io.File</code></a> accepts</p>
<blockquote>
<p>An optional system-dependent prefix string, such as a disk-drive specifier, &quot;/&quot; for the UNIX root directory, or &quot;\\&quot; for a Microsoft Windows UNC pathname, and (...)</p>
</blockquote>
<p>pointing to a <strong>file</strong> and given that <a href=""https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats#unc-paths"" rel=""nofollow noreferrer"">UNC on Windows specifies <code>\\server\c$</code> as a root directory</a> I would change your connection string to</p>
<pre><code>final String msAccDB= &quot;\\\\192.168.13.30\\C$\\Users\\Debabrata\\Desktop\\somefilename.mdb;memory=false&quot;;
final String url = UcanaccessDriver.URL_PREFIX + msAccDB;
</code></pre>
<p>Additional emphasis of addition of <code>somefilename.mdb</code> to URI.</p>
",0
UUID,Java,alternative,76798793,"<p>In Java, primitive types, including <code>boolean</code>, are passed by value, meaning they cannot be modified by other methods. Class types, including <code>List</code>, are passed by reference, which means that they can be modified by other methods. (As pointed out by @WJS, the list cannot be modified directly, only its contents, so this is sometimes called &quot;call by sharing&quot;, but it is very similar)</p>
",0
UUID,Java,alternative,77672022,"<p>You can set a <code>prefix</code> in the <code>@ConfigurationProperties</code> annotation. Then, it will only pick up properties starting with that prefix:</p>
<pre class=""lang-java prettyprint-override""><code>@ConfigurationProperties(&quot;config.first&quot;)
class Config1 {
}
@ConfigurationProperties(&quot;config.second&quot;)
class Config2 {
}
</code></pre>
<p>and in your <code>application.properties</code>:</p>
<pre class=""lang-ini prettyprint-override""><code># properties for Config1
config.first.your_config_1_property = value1

# properties for Config2
config.second.your_config_2_property = value2
</code></pre>
",0
UUID,Java,alternative,74949774,"<p>According to the <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-5.html#jls-5.4"" rel=""nofollow noreferrer"">Java Language Specification</a>:</p>
<blockquote>
<p>String contexts apply only to an operand of the binary + operator which is not a String when the other operand is a String.</p>
</blockquote>
<blockquote>
<p>The target type in these contexts is always String, and a string conversion (§5.1.11) of the non-String operand always occurs.</p>
</blockquote>
<p>Which means that when you do <code>hp + brand</code>, since <code>brand</code> is a <code>String</code> the rule above kicks in, <code>hp</code> gets converted to a <code>String</code> and concatenation occurs, resulting in a <code>String</code>.</p>
",0
UUID,Java,alternative,74931505,"<p><code>configurations.runtimeClasspath</code> is a generated <a href=""https://docs.gradle.org/7.6/userguide/kotlin_dsl.html#type-safe-accessors"" rel=""nofollow noreferrer"">Gradle Kotlin DSL accessor</a>, and these are only available inside <code>*.gradle.kts</code> files.</p>
<p>Instead you'll have to access the configuration by the name, using <a href=""https://docs.gradle.org/7.6/javadoc/org/gradle/api/artifacts/ConfigurationContainer.html#getByName-java.lang.String-"" rel=""nofollow noreferrer""><code>ConfigurationContainer.getByName()</code></a>.</p>
<p>Conveniently, <a href=""https://docs.gradle.org/7.6urrent/javadoc/org/gradle/api/plugins/JavaPlugin.html"" rel=""nofollow noreferrer""><code>JavaPlugin</code></a> provides the name of the <code>runtimeClasspath</code> Configuration, so it can be imported and used directly (rather than using a 'magic' string).</p>
<pre class=""lang-kotlin prettyprint-override""><code>// import JavaPlugin
import org.gradle.api.plugins.JavaPlugin

// (existing imports)
// import ...

fun Project.makeExecutableJar (name: String, main: String?, sset: SourceSet) : TaskProvider&lt;Jar&gt; {
    // access the runtimeClasspath configuration
    val runtimeClasspathConfiguration = configurations.named(JavaPlugin.RUNTIME_CLASSPATH_CONFIGURATION_NAME)
    
    return tasks.register&lt;Jar&gt;(name) {
        dependsOn(runtimeClasspathConfiguration )
        // ...
    }
}
</code></pre>
",0
ActionBar,Android,functionality,76618463,"<p>In Android, the BottomNavigationView's selected item is automatically updated when an item is clicked. This is the default behavior and it's not straightforward to change it. However, you can use a workaround to achieve your desired behavior.</p>
<pre><code>var previousMenuItem: MenuItem? = null

binding.bottomNavigation.setOnNavigationItemSelectedListener { menuItem -&gt;
    when (menuItem.itemId) {
        R.id.referral_bottom_nav -&gt; {
            // Show your popup here

            // If the previousMenuItem is not null, reselect it
            previousMenuItem?.let { binding.bottomNavigation.selectedItemId = it.itemId }

            false // Return false to not update the selection
        }
        else -&gt; {
            // Update the previousMenuItem
            previousMenuItem = menuItem

            // Navigate to the selected screen

            true // Return true to update the selection
        }
    }
}
</code></pre>
<p>In this code, we're storing the previously selected menu item in previousMenuItem. When an item is clicked, we check its id. If it's the id of the item that should show a popup and not update the selection, we reselect the previously selected item (if it's not null) and return false to not update the selection. If it's another item, we update previousMenuItem and navigate to the selected screen, then return true to update the selection.</p>
<p>Please replace R.id.referral_bottom_nav with the actual id of the menu item that should show the popup and not update the selection.</p>
",0
ActionBar,Android,functionality,75018280,"<p>ACTION_OPEN_DOCUMENT gives you an uri.</p>
<p>You can open an inputstream for this uri using getContentResolver().openInputStream(uri).</p>
<p>Then read from the stream.</p>
<p>And you do not need any permission to do so.</p>
<p>And this works from Android 4 KitKat to today.</p>
",0
ActionBar,Android,functionality,77450458,"<p>You want the VIEW action, not OPEN_DOCUMENT.  You may also need to set the Activity to exported=true, but I'm not certain that's required.</p>
<p>OPEN_DOCUMENT is used when you want the user to select a file, not when you want your app to be used to open it.</p>
",0
ActionBar,Android,functionality,62606723,"<p>Use one of the <code>.NoActionBar</code> theme and set the <code>windowActionBar</code> attribute to <code>false</code>.</p>
<p>Beginning with the API level 21 action bar may be represented with any toolbar widget, within the application layout. An application may choose to designate a Toolbar as the action bar for an Activity using the <code>setSupportActionBar()</code> method.</p>
",1
ActionBar,Android,functionality,61457824,"<p>You can try with <strong><code>runOnUiThread</code></strong>.</p>

<blockquote>
  <p><a href=""https://developer.android.com/reference/android/app/Activity#runOnUiThread(java.lang.Runnable)"" rel=""nofollow noreferrer""><strong><code>runOnUiThread</code></strong></a> runs the specified action on the UI thread. If the
  current thread is the UI thread, then the action is executed
  immediately. If the current thread is not the UI thread, the action is
  posted to the event queue of the UI thread.</p>
</blockquote>

<pre><code>context?.runOnUiThread(Runnable {
    // Your Logic
  if (list.size==0) {
       no_list_layout.visibility= View.VISIBLE
  } else {
       // Your work
  }
})
</code></pre>
",0
ActionBar,Android,functionality,68249440,"<p>You can include <code>android:imeOptions=&quot;actionNone&quot;</code> on your <code>&lt;EditText&gt;</code> element in the manifest to say that you do not need an action button. There are other possibilities for <a href=""https://developer.android.com/reference/kotlin/android/widget/TextView#android:imeoptions"" rel=""nofollow noreferrer""><code>android:imeOptions</code></a> that might suit your needs better.</p>
<p>Bear in mind that there are hundreds of input method editors (soft keyboards) available for Android. Requests like <code>android:imeOptions=&quot;actionNone&quot;</code> are hints, not demands. Whether the user's keyboard pays attention to <code>actionNone</code> is up to the developers of the keyboard.</p>
",0
ActionBar,Android,functionality,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,functionality,64405682,"<p><code>setActionBar()</code> requires a <strong>framework</strong> <code>Toolbar</code>. <code>MaterialToolbar</code> correctly extends the AndroidX <code>Toolbar</code>, which means you must use <code>AppCompatActivity</code> and <code>setSupportActionBar()</code> and not <code>Activity</code> and <code>setActionBar()</code>.</p>
<pre class=""lang-kotlin prettyprint-override""><code>class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.collapsingtoolbar_and_recyclerview)

        //[...]
        val toolbar = findViewById&lt;MaterialToolbar&gt;(R.id.myToolbar)
        setSupportActionBar(toolbar)

        // ...Do other stuff here
        supportActionBar.title = &quot;My MainActivity&quot;
        supportActionBar.setDisplayHomeAsUpEnabled(true)
    }
}
</code></pre>
",0
ActionBar,Android,functionality,68890706,"<p><a href=""https://developer.android.com/topic/libraries/view-binding"" rel=""nofollow noreferrer"">View Binding</a> converts underscores to camelCase, the correct syntax is <code>binding.progressBar</code></p>
<pre><code>&lt;ProgressBar
        android:id=&quot;@+id/progress_bar&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;match_parent&quot;
        android:layout_gravity=&quot;center&quot;
        android:visibility=&quot;gone&quot;/&gt;
</code></pre>
<pre class=""lang-kotlin prettyprint-override""><code>binding.progressBar.setVisibility(if (it == NetworkState.LOADING) View.VISIBLE else View.GONE)
</code></pre>
",0
ActionBar,Android,functionality,62544180,"<p>With an <code>ActionBar</code> you can use:</p>
<pre><code>    getSupportActionBar().setDisplayHomeAsUpEnabled(true);
    getSupportActionBar().setDisplayUseLogoEnabled(true);
    getSupportActionBar().setLogo(R.drawable.xxxx);
</code></pre>
<p><a href=""https://i.sstatic.net/llBoj.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/llBoj.png"" alt=""enter image description here"" /></a></p>
<p>With a <code>Toolbar</code>:</p>
<pre><code>    Toolbar toolbar = findViewById(R.id.toolbar);
    toolbar.setLogo(R.drawable.xxxxx);
    setSupportActionBar(toolbar);
    getSupportActionBar().setDisplayHomeAsUpEnabled(true);
</code></pre>
<p><a href=""https://i.sstatic.net/VQlJh.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/VQlJh.png"" alt=""enter image description here"" /></a></p>
",1
ActionBar,Android,concept,61308648,"<p>In general, what you are looking for is called an <a href=""https://developers.google.com/assistant/app"" rel=""nofollow noreferrer"">app action</a>.</p>

<p>However, app actions are only defined for specific types of apps and Intents, and only particular trigger phrases. You can't define your own phrases at this time.</p>
",0
ActionBar,Android,concept,76618463,"<p>In Android, the BottomNavigationView's selected item is automatically updated when an item is clicked. This is the default behavior and it's not straightforward to change it. However, you can use a workaround to achieve your desired behavior.</p>
<pre><code>var previousMenuItem: MenuItem? = null

binding.bottomNavigation.setOnNavigationItemSelectedListener { menuItem -&gt;
    when (menuItem.itemId) {
        R.id.referral_bottom_nav -&gt; {
            // Show your popup here

            // If the previousMenuItem is not null, reselect it
            previousMenuItem?.let { binding.bottomNavigation.selectedItemId = it.itemId }

            false // Return false to not update the selection
        }
        else -&gt; {
            // Update the previousMenuItem
            previousMenuItem = menuItem

            // Navigate to the selected screen

            true // Return true to update the selection
        }
    }
}
</code></pre>
<p>In this code, we're storing the previously selected menu item in previousMenuItem. When an item is clicked, we check its id. If it's the id of the item that should show a popup and not update the selection, we reselect the previously selected item (if it's not null) and return false to not update the selection. If it's another item, we update previousMenuItem and navigate to the selected screen, then return true to update the selection.</p>
<p>Please replace R.id.referral_bottom_nav with the actual id of the menu item that should show the popup and not update the selection.</p>
",0
ActionBar,Android,concept,74605478,"<p>You need either to cast the context to Activity, or to pass the onClickListener to the adapter as following</p>
<ol>
<li><p>Create the clickListener</p>
<pre><code>public interface MyClickListener {
    void onItemClick(MyModel model);
}
</code></pre>
</li>
<li><p>In your adapter class:</p>
<pre><code>public class MyAdapter extends RecyclerView.Adapter&lt;ViewHolder&gt; {
  private MyClickListener onClickListener;
  public MyAdapter(MyClickListener onClickListener) {
      this.onClickListener = onClickListener;
  }
  ...
}
</code></pre>
</li>
<li><p>In your method:</p>
<pre><code> holder.itemView.setOnClickListener(new View.OnClickListener() {

     @Override
     public void onClick(View view) {
         onClickListener.onItemClick(myModel);
     }
 });
</code></pre>
</li>
<li><p>In your activity:</p>
<pre><code>MyAdapter adapter = new MyAdapter(new MyClickListener() {
     public void onItemClick(MyModel model) {
            /// here you can call startActivityForResult
     }
});
</code></pre>
</li>
</ol>
",0
ActionBar,Android,concept,62850013,"<blockquote>
<p>Why does a “TextView” object need a reference to an activity as an argument?</p>
</blockquote>
<p>If you look at the <a href=""https://android.googlesource.com/platform/frameworks/base/+/a175a5b/core/java/android/view/View.java"" rel=""nofollow noreferrer"">Source Code of Android's View</a>, the constructor takes and stores it in a variable named <code>mContext</code>:</p>
<pre class=""lang-java prettyprint-override""><code>/**
 * The application environment this view lives in.
 * This field should be made private, so it is hidden from the SDK.
 * {@hide}
 */
protected Context mContext;
// ...
public View(Context context) {
    mContext = context;
    // ...
}
</code></pre>
<p>That variable is useful for maintenance of its lifecycle, and used in many methods in the View class. As for example, <a href=""https://android.googlesource.com/platform/frameworks/base/+/a175a5b/core/java/android/view/View.java#3340"" rel=""nofollow noreferrer"">initScrollCache</a>, <a href=""https://android.googlesource.com/platform/frameworks/base/+/a175a5b/core/java/android/view/View.java#3932"" rel=""nofollow noreferrer"">sendAccessibilityEventInternal</a>, <a href=""https://android.googlesource.com/platform/frameworks/base/+/a175a5b/core/java/android/view/View.java#6891"" rel=""nofollow noreferrer"">onScrollChanged</a> and many more methods do use them.</p>
",0
ActionBar,Android,concept,62606723,"<p>Use one of the <code>.NoActionBar</code> theme and set the <code>windowActionBar</code> attribute to <code>false</code>.</p>
<p>Beginning with the API level 21 action bar may be represented with any toolbar widget, within the application layout. An application may choose to designate a Toolbar as the action bar for an Activity using the <code>setSupportActionBar()</code> method.</p>
",1
ActionBar,Android,concept,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,concept,73050509,"<p>First, add attributes <code>app:popUpTo='your_nav_graph_id'</code> and <code>app:popUpToInclusive=&quot;true&quot;</code> to the action tag.</p>
<pre><code>&lt;fragment
android:id=&quot;@+id/signInFragment&quot;
android:name=&quot;com.glee.incog2.android.fragment.SignInFragment&quot;
android:label=&quot;fragment_sign_in&quot;
tools:layout=&quot;@layout/fragment_sign_in&quot; &gt;
&lt;action
    android:id=&quot;@+id/action_signInFragment_to_usersFragment&quot;
    app:destination=&quot;@id/usersFragment&quot;
    app:launchSingleTop=&quot;true&quot;
    app:popUpTo=&quot;@+id/main_nav_graph&quot;
    app:popUpToInclusive=&quot;true&quot; /&gt;
</code></pre>

<p>Second, navigate to the destination, using above action as parameter.</p>
<pre><code>findNavController(fragment).navigate(
 SignInFragmentDirections.actionSignInFragmentToUserNameFragment())
</code></pre>
",0
ActionBar,Android,concept,68249440,"<p>You can include <code>android:imeOptions=&quot;actionNone&quot;</code> on your <code>&lt;EditText&gt;</code> element in the manifest to say that you do not need an action button. There are other possibilities for <a href=""https://developer.android.com/reference/kotlin/android/widget/TextView#android:imeoptions"" rel=""nofollow noreferrer""><code>android:imeOptions</code></a> that might suit your needs better.</p>
<p>Bear in mind that there are hundreds of input method editors (soft keyboards) available for Android. Requests like <code>android:imeOptions=&quot;actionNone&quot;</code> are hints, not demands. Whether the user's keyboard pays attention to <code>actionNone</code> is up to the developers of the keyboard.</p>
",0
ActionBar,Android,concept,68877453,"<p>You are not navigating to an action. You're navigating to a destination with the help of an action. The actions represent all the possible navigation paths in your app. They also allow you to specify any arguments you wish to pass, how you wish to animate the transition, and how you want to handle the backstack while navigating.</p>
",0
ActionBar,Android,concept,62544180,"<p>With an <code>ActionBar</code> you can use:</p>
<pre><code>    getSupportActionBar().setDisplayHomeAsUpEnabled(true);
    getSupportActionBar().setDisplayUseLogoEnabled(true);
    getSupportActionBar().setLogo(R.drawable.xxxx);
</code></pre>
<p><a href=""https://i.sstatic.net/llBoj.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/llBoj.png"" alt=""enter image description here"" /></a></p>
<p>With a <code>Toolbar</code>:</p>
<pre><code>    Toolbar toolbar = findViewById(R.id.toolbar);
    toolbar.setLogo(R.drawable.xxxxx);
    setSupportActionBar(toolbar);
    getSupportActionBar().setDisplayHomeAsUpEnabled(true);
</code></pre>
<p><a href=""https://i.sstatic.net/VQlJh.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/VQlJh.png"" alt=""enter image description here"" /></a></p>
",1
ActionBar,Android,performance,76618463,"<p>In Android, the BottomNavigationView's selected item is automatically updated when an item is clicked. This is the default behavior and it's not straightforward to change it. However, you can use a workaround to achieve your desired behavior.</p>
<pre><code>var previousMenuItem: MenuItem? = null

binding.bottomNavigation.setOnNavigationItemSelectedListener { menuItem -&gt;
    when (menuItem.itemId) {
        R.id.referral_bottom_nav -&gt; {
            // Show your popup here

            // If the previousMenuItem is not null, reselect it
            previousMenuItem?.let { binding.bottomNavigation.selectedItemId = it.itemId }

            false // Return false to not update the selection
        }
        else -&gt; {
            // Update the previousMenuItem
            previousMenuItem = menuItem

            // Navigate to the selected screen

            true // Return true to update the selection
        }
    }
}
</code></pre>
<p>In this code, we're storing the previously selected menu item in previousMenuItem. When an item is clicked, we check its id. If it's the id of the item that should show a popup and not update the selection, we reselect the previously selected item (if it's not null) and return false to not update the selection. If it's another item, we update previousMenuItem and navigate to the selected screen, then return true to update the selection.</p>
<p>Please replace R.id.referral_bottom_nav with the actual id of the menu item that should show the popup and not update the selection.</p>
",0
ActionBar,Android,performance,75018280,"<p>ACTION_OPEN_DOCUMENT gives you an uri.</p>
<p>You can open an inputstream for this uri using getContentResolver().openInputStream(uri).</p>
<p>Then read from the stream.</p>
<p>And you do not need any permission to do so.</p>
<p>And this works from Android 4 KitKat to today.</p>
",0
ActionBar,Android,performance,77450458,"<p>You want the VIEW action, not OPEN_DOCUMENT.  You may also need to set the Activity to exported=true, but I'm not certain that's required.</p>
<p>OPEN_DOCUMENT is used when you want the user to select a file, not when you want your app to be used to open it.</p>
",0
ActionBar,Android,performance,64405682,"<p><code>setActionBar()</code> requires a <strong>framework</strong> <code>Toolbar</code>. <code>MaterialToolbar</code> correctly extends the AndroidX <code>Toolbar</code>, which means you must use <code>AppCompatActivity</code> and <code>setSupportActionBar()</code> and not <code>Activity</code> and <code>setActionBar()</code>.</p>
<pre class=""lang-kotlin prettyprint-override""><code>class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.collapsingtoolbar_and_recyclerview)

        //[...]
        val toolbar = findViewById&lt;MaterialToolbar&gt;(R.id.myToolbar)
        setSupportActionBar(toolbar)

        // ...Do other stuff here
        supportActionBar.title = &quot;My MainActivity&quot;
        supportActionBar.setDisplayHomeAsUpEnabled(true)
    }
}
</code></pre>
",0
ActionBar,Android,performance,73050509,"<p>First, add attributes <code>app:popUpTo='your_nav_graph_id'</code> and <code>app:popUpToInclusive=&quot;true&quot;</code> to the action tag.</p>
<pre><code>&lt;fragment
android:id=&quot;@+id/signInFragment&quot;
android:name=&quot;com.glee.incog2.android.fragment.SignInFragment&quot;
android:label=&quot;fragment_sign_in&quot;
tools:layout=&quot;@layout/fragment_sign_in&quot; &gt;
&lt;action
    android:id=&quot;@+id/action_signInFragment_to_usersFragment&quot;
    app:destination=&quot;@id/usersFragment&quot;
    app:launchSingleTop=&quot;true&quot;
    app:popUpTo=&quot;@+id/main_nav_graph&quot;
    app:popUpToInclusive=&quot;true&quot; /&gt;
</code></pre>

<p>Second, navigate to the destination, using above action as parameter.</p>
<pre><code>findNavController(fragment).navigate(
 SignInFragmentDirections.actionSignInFragmentToUserNameFragment())
</code></pre>
",0
ActionBar,Android,performance,68249440,"<p>You can include <code>android:imeOptions=&quot;actionNone&quot;</code> on your <code>&lt;EditText&gt;</code> element in the manifest to say that you do not need an action button. There are other possibilities for <a href=""https://developer.android.com/reference/kotlin/android/widget/TextView#android:imeoptions"" rel=""nofollow noreferrer""><code>android:imeOptions</code></a> that might suit your needs better.</p>
<p>Bear in mind that there are hundreds of input method editors (soft keyboards) available for Android. Requests like <code>android:imeOptions=&quot;actionNone&quot;</code> are hints, not demands. Whether the user's keyboard pays attention to <code>actionNone</code> is up to the developers of the keyboard.</p>
",0
ActionBar,Android,performance,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,performance,68890706,"<p><a href=""https://developer.android.com/topic/libraries/view-binding"" rel=""nofollow noreferrer"">View Binding</a> converts underscores to camelCase, the correct syntax is <code>binding.progressBar</code></p>
<pre><code>&lt;ProgressBar
        android:id=&quot;@+id/progress_bar&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;match_parent&quot;
        android:layout_gravity=&quot;center&quot;
        android:visibility=&quot;gone&quot;/&gt;
</code></pre>
<pre class=""lang-kotlin prettyprint-override""><code>binding.progressBar.setVisibility(if (it == NetworkState.LOADING) View.VISIBLE else View.GONE)
</code></pre>
",0
ActionBar,Android,performance,62606723,"<p>Use one of the <code>.NoActionBar</code> theme and set the <code>windowActionBar</code> attribute to <code>false</code>.</p>
<p>Beginning with the API level 21 action bar may be represented with any toolbar widget, within the application layout. An application may choose to designate a Toolbar as the action bar for an Activity using the <code>setSupportActionBar()</code> method.</p>
",1
ActionBar,Android,performance,65711768,"<p>Try to set it in <code>onBindViewHolder</code> instead of the <code>ViewHolder</code> constructor</p>
<pre><code>@Override
public void onBindViewHolder(@NonNull final ViewHolder holder, final int position) {
    
    // ...
    holder.itemView.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {

            if (listener != null) {
               listener.onItemClick(getSnapshots().getSnapshot(position), position);
            }
        }
    });
    
}
</code></pre>
<p>And remove it from the <code>ViewHolder</code></p>
<pre><code>class ToDoHolder extends RecyclerView.ViewHolder {

    TextView title, description, dateAdded;


    public ToDoHolder(@NonNull View itemView) {
        super(itemView);
        title = itemView.findViewById(R.id.todoTitle);
        description = itemView.findViewById(R.id.todoDesc);
        dateAdded = itemView.findViewById(R.id.dateAdded);
    }

}
</code></pre>
<p>Applying that to the adapter:</p>
<pre><code>
public class ToDoAdapter extends FirestoreRecyclerAdapter&lt;ToDoItem, ToDoAdapter.ToDoHolder&gt; {

    private OnItemClickListener listener;

    /**
     * Create a new RecyclerView adapter that listens to a Firestore Query.  See {@link
     * FirestoreRecyclerOptions} for configuration options.
     *
     * @param options
     */
    public ToDoAdapter(@NonNull FirestoreRecyclerOptions&lt;ToDoItem&gt; options) {
        super(options);
    }

    @Override
    protected void onBindViewHolder(@NonNull ToDoHolder holder, final int position, @NonNull ToDoItem model) {

        holder.title.setText(model.getTitle());
        holder.description.setText(model.getDesc());

        String timeAgo = (String) DateUtils.getRelativeTimeSpanString(model.getTimeAdded().getSeconds()/1000);
        holder.dateAdded.setText(timeAgo);

        
        holder.itemView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (listener != null) {
                    listener.onItemClick(getSnapshots().getSnapshot(position), position);
                }
            }
        });


    }

    @NonNull
    @Override
    public ToDoHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.activity_to_do_item, parent,false);

        return new ToDoHolder(v);
    }

    public void deleteitem(int position)
    {
        getSnapshots().getSnapshot(position).getReference().delete();
    }



    class ToDoHolder extends RecyclerView.ViewHolder {

        TextView title, description, dateAdded;


        public ToDoHolder(@NonNull View itemView) {
            super(itemView);
            title = itemView.findViewById(R.id.todoTitle);
            description = itemView.findViewById(R.id.todoDesc);
            dateAdded = itemView.findViewById(R.id.dateAdded);

        }


    }

    public interface OnItemClickListener {
        void onItemClick(DocumentSnapshot documentSnapshot, int position);
    }
    public void setOnItemClickListener(OnItemClickListener listener) {
        this.listener = listener;
    }

}
</code></pre>
<p>UPDATE:</p>
<p>add <code>android:clickable=&quot;true&quot;</code> &amp; <code>android:focusable=&quot;true&quot;</code> to the root element of the row item layout..</p>
<p>So update <code>activity_to_do_item</code> layout with:</p>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;wrap_content&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    android:layout_marginTop=&quot;8dp&quot;
    android:layout_marginStart=&quot;8dp&quot;
    android:layout_marginLeft=&quot;8dp&quot;
    android:clickable=&quot;true&quot;
    android:focusable=&quot;true&quot;
    android:layout_marginEnd=&quot;8dp&quot;
    app:cardBackgroundColor=&quot;#FFFE&quot;&gt;

    &lt;RelativeLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        android:padding=&quot;8dp&quot;&gt;

        &lt;TextView
            android:id=&quot;@+id/todoTitle&quot;
            android:layout_width=&quot;wrap_content&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:text=&quot;First Line&quot;
            android:layout_toStartOf=&quot;@id/todoTitle&quot;
            android:layout_toLeftOf=&quot;@id/todoTitle&quot;
            android:layout_alignParentStart=&quot;true&quot;
            android:maxLines=&quot;1&quot;
            android:ellipsize=&quot;end&quot;
            android:textAppearance=&quot;@style/TextAppearance.AppCompat.Large&quot;
            android:layout_alignParentLeft=&quot;true&quot; /&gt;


        &lt;TextView
            android:id=&quot;@+id/todoDesc&quot;
            android:layout_width=&quot;wrap_content&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:layout_alignParentStart=&quot;true&quot;
            android:text=&quot;Second Line&quot;
            android:layout_below=&quot;@id/todoTitle&quot;
            android:layout_alignParentLeft=&quot;true&quot;
            /&gt;
&lt;TextView
            android:id=&quot;@+id/dateAdded&quot;
            android:layout_width=&quot;wrap_content&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:layout_alignParentStart=&quot;true&quot;
            android:text=&quot;Thirtd Line&quot;
            android:layout_alignParentLeft=&quot;true&quot;
            android:layout_below=&quot;@id/todoDesc&quot; /&gt;
    &lt;/RelativeLayout&gt;
&lt;/androidx.cardview.widget.CardView&gt;
</code></pre>
",0
ActionBar,Android,directive,75018280,"<p>ACTION_OPEN_DOCUMENT gives you an uri.</p>
<p>You can open an inputstream for this uri using getContentResolver().openInputStream(uri).</p>
<p>Then read from the stream.</p>
<p>And you do not need any permission to do so.</p>
<p>And this works from Android 4 KitKat to today.</p>
",0
ActionBar,Android,directive,77450458,"<p>You want the VIEW action, not OPEN_DOCUMENT.  You may also need to set the Activity to exported=true, but I'm not certain that's required.</p>
<p>OPEN_DOCUMENT is used when you want the user to select a file, not when you want your app to be used to open it.</p>
",0
ActionBar,Android,directive,76618463,"<p>In Android, the BottomNavigationView's selected item is automatically updated when an item is clicked. This is the default behavior and it's not straightforward to change it. However, you can use a workaround to achieve your desired behavior.</p>
<pre><code>var previousMenuItem: MenuItem? = null

binding.bottomNavigation.setOnNavigationItemSelectedListener { menuItem -&gt;
    when (menuItem.itemId) {
        R.id.referral_bottom_nav -&gt; {
            // Show your popup here

            // If the previousMenuItem is not null, reselect it
            previousMenuItem?.let { binding.bottomNavigation.selectedItemId = it.itemId }

            false // Return false to not update the selection
        }
        else -&gt; {
            // Update the previousMenuItem
            previousMenuItem = menuItem

            // Navigate to the selected screen

            true // Return true to update the selection
        }
    }
}
</code></pre>
<p>In this code, we're storing the previously selected menu item in previousMenuItem. When an item is clicked, we check its id. If it's the id of the item that should show a popup and not update the selection, we reselect the previously selected item (if it's not null) and return false to not update the selection. If it's another item, we update previousMenuItem and navigate to the selected screen, then return true to update the selection.</p>
<p>Please replace R.id.referral_bottom_nav with the actual id of the menu item that should show the popup and not update the selection.</p>
",0
ActionBar,Android,directive,62606723,"<p>Use one of the <code>.NoActionBar</code> theme and set the <code>windowActionBar</code> attribute to <code>false</code>.</p>
<p>Beginning with the API level 21 action bar may be represented with any toolbar widget, within the application layout. An application may choose to designate a Toolbar as the action bar for an Activity using the <code>setSupportActionBar()</code> method.</p>
",1
ActionBar,Android,directive,68249440,"<p>You can include <code>android:imeOptions=&quot;actionNone&quot;</code> on your <code>&lt;EditText&gt;</code> element in the manifest to say that you do not need an action button. There are other possibilities for <a href=""https://developer.android.com/reference/kotlin/android/widget/TextView#android:imeoptions"" rel=""nofollow noreferrer""><code>android:imeOptions</code></a> that might suit your needs better.</p>
<p>Bear in mind that there are hundreds of input method editors (soft keyboards) available for Android. Requests like <code>android:imeOptions=&quot;actionNone&quot;</code> are hints, not demands. Whether the user's keyboard pays attention to <code>actionNone</code> is up to the developers of the keyboard.</p>
",0
ActionBar,Android,directive,68890706,"<p><a href=""https://developer.android.com/topic/libraries/view-binding"" rel=""nofollow noreferrer"">View Binding</a> converts underscores to camelCase, the correct syntax is <code>binding.progressBar</code></p>
<pre><code>&lt;ProgressBar
        android:id=&quot;@+id/progress_bar&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;match_parent&quot;
        android:layout_gravity=&quot;center&quot;
        android:visibility=&quot;gone&quot;/&gt;
</code></pre>
<pre class=""lang-kotlin prettyprint-override""><code>binding.progressBar.setVisibility(if (it == NetworkState.LOADING) View.VISIBLE else View.GONE)
</code></pre>
",0
ActionBar,Android,directive,67773529,"<p>Make sure, the follow property is set to true. It depicts the default state of the SearchView. If true, it will be iconified when not in use and expanded when clicked.</p>
<pre><code>app:iconifiedByDefault=&quot;true&quot;
</code></pre>
",0
ActionBar,Android,directive,61457824,"<p>You can try with <strong><code>runOnUiThread</code></strong>.</p>

<blockquote>
  <p><a href=""https://developer.android.com/reference/android/app/Activity#runOnUiThread(java.lang.Runnable)"" rel=""nofollow noreferrer""><strong><code>runOnUiThread</code></strong></a> runs the specified action on the UI thread. If the
  current thread is the UI thread, then the action is executed
  immediately. If the current thread is not the UI thread, the action is
  posted to the event queue of the UI thread.</p>
</blockquote>

<pre><code>context?.runOnUiThread(Runnable {
    // Your Logic
  if (list.size==0) {
       no_list_layout.visibility= View.VISIBLE
  } else {
       // Your work
  }
})
</code></pre>
",0
ActionBar,Android,directive,74483059,"<p>The <a href=""https://github.com/google/accompanist/tree/main/swiperefresh"" rel=""noreferrer"">Google's Accompanist</a> is now <strong>deprecated</strong>. Official support is now available in Compose Material from versin 1.3.0 use following code:</p>
<p>The lines I marked with <strong>1</strong>, <strong>2</strong>, <strong>3</strong> does the job:</p>
<pre><code>val ptrState= 
   rememberPullRefreshState(viewState.isRefreshing, {viewModel.pullToRefresh()}) // 1

Box(modifier = Modifier
    .fillMaxSize()
    .pullRefresh(ptrState)) { // 2
    LazyColumn(state = rememberLazyListState()) {
        items(
            items = viewState.YOUR_LIST_ITEMS,
            key = { item -&gt; item.id },
            itemContent = {
                YourItemCompose(it)
            })
    }
    PullRefreshIndicator
          (viewState.isRefreshing, ptrState, Modifier.align(Alignment.TopCenter)) // 3
}
</code></pre>
<p><code>viewState.isRefreshing</code> is a boolean holding your refresh state and <code>viewModel.pullToRefresh()</code> is the method to do the actual work for refreshing the data (e.g. calling the API again)</p>
<p>in case you don't know the dependency:</p>
<pre><code>    implementation 'androidx.compose.material:material:1.4.0-alpha02' 
</code></pre>
",0
ActionBar,Android,directive,76355407,"<p>I set default <code>ActionBar</code> with DarkActionBar then add <code>supportActionBar?.hide()</code> in Activity's onCreate method.
I will update answer If I find a better sulotion.</p>
<pre><code>&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;
    &lt;!-- Base application theme. --&gt;
    &lt;style name=&quot;Theme.CitiesDistance&quot; parent=&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;&gt;
        .
        .
        .
    &lt;/style&gt;
&lt;/resources&gt;


override fun onCreate(savedInstanceState: Bundle?) {
    super.onCreate(savedInstanceState)
    setContentView(R.layout.activity_main)
    supportActionBar?.hide()
}
</code></pre>
",1
ActionBar,Android,pattern,76618463,"<p>In Android, the BottomNavigationView's selected item is automatically updated when an item is clicked. This is the default behavior and it's not straightforward to change it. However, you can use a workaround to achieve your desired behavior.</p>
<pre><code>var previousMenuItem: MenuItem? = null

binding.bottomNavigation.setOnNavigationItemSelectedListener { menuItem -&gt;
    when (menuItem.itemId) {
        R.id.referral_bottom_nav -&gt; {
            // Show your popup here

            // If the previousMenuItem is not null, reselect it
            previousMenuItem?.let { binding.bottomNavigation.selectedItemId = it.itemId }

            false // Return false to not update the selection
        }
        else -&gt; {
            // Update the previousMenuItem
            previousMenuItem = menuItem

            // Navigate to the selected screen

            true // Return true to update the selection
        }
    }
}
</code></pre>
<p>In this code, we're storing the previously selected menu item in previousMenuItem. When an item is clicked, we check its id. If it's the id of the item that should show a popup and not update the selection, we reselect the previously selected item (if it's not null) and return false to not update the selection. If it's another item, we update previousMenuItem and navigate to the selected screen, then return true to update the selection.</p>
<p>Please replace R.id.referral_bottom_nav with the actual id of the menu item that should show the popup and not update the selection.</p>
",0
ActionBar,Android,pattern,75018280,"<p>ACTION_OPEN_DOCUMENT gives you an uri.</p>
<p>You can open an inputstream for this uri using getContentResolver().openInputStream(uri).</p>
<p>Then read from the stream.</p>
<p>And you do not need any permission to do so.</p>
<p>And this works from Android 4 KitKat to today.</p>
",0
ActionBar,Android,pattern,77450458,"<p>You want the VIEW action, not OPEN_DOCUMENT.  You may also need to set the Activity to exported=true, but I'm not certain that's required.</p>
<p>OPEN_DOCUMENT is used when you want the user to select a file, not when you want your app to be used to open it.</p>
",0
ActionBar,Android,pattern,68890706,"<p><a href=""https://developer.android.com/topic/libraries/view-binding"" rel=""nofollow noreferrer"">View Binding</a> converts underscores to camelCase, the correct syntax is <code>binding.progressBar</code></p>
<pre><code>&lt;ProgressBar
        android:id=&quot;@+id/progress_bar&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;match_parent&quot;
        android:layout_gravity=&quot;center&quot;
        android:visibility=&quot;gone&quot;/&gt;
</code></pre>
<pre class=""lang-kotlin prettyprint-override""><code>binding.progressBar.setVisibility(if (it == NetworkState.LOADING) View.VISIBLE else View.GONE)
</code></pre>
",0
ActionBar,Android,pattern,68249440,"<p>You can include <code>android:imeOptions=&quot;actionNone&quot;</code> on your <code>&lt;EditText&gt;</code> element in the manifest to say that you do not need an action button. There are other possibilities for <a href=""https://developer.android.com/reference/kotlin/android/widget/TextView#android:imeoptions"" rel=""nofollow noreferrer""><code>android:imeOptions</code></a> that might suit your needs better.</p>
<p>Bear in mind that there are hundreds of input method editors (soft keyboards) available for Android. Requests like <code>android:imeOptions=&quot;actionNone&quot;</code> are hints, not demands. Whether the user's keyboard pays attention to <code>actionNone</code> is up to the developers of the keyboard.</p>
",0
ActionBar,Android,pattern,77681888,"<p>You're getting this error because all Android UI operations must be performed on the main thread. To overcome this issue, you should post your action to the main thread using a <code>Handler</code> bound to the main <code>Looper</code>:</p>
<pre><code>public class WebAppInterface {

    private Handler handler = new Handler(Looper.getMainLooper()); // Create a handler

    @android.webkit.JavascriptInterface
    public void triggerAdvert() {
        handler.post(new Runnable() { // post this runnable to handler
            @Override
            public void run() {
                MainActivity act = (MainActivity) m_Context;
                if (act != null) act.ShowAd();
            }
        });
    }
}
</code></pre>
",0
ActionBar,Android,pattern,70997040,"<p>You are asking to 'ACTION_VIEW' the file, hence the app honoring your intent will consider it can only read it.</p>
<p>Technically this means the <a href=""https://developer.android.com/reference/androidx/core/content/FileProvider#openFile(android.net.Uri,java.lang.String)"" rel=""nofollow noreferrer"">FileProvider.openFile(android.net.Uri,java.lang.String)</a> method will be called just once with &quot;r&quot; mode.</p>
<p>The solution is to use Intent.ACTION_EDIT</p>
<pre><code>Intent intent = new Intent(Intent.ACTION_EDIT);
</code></pre>
<p>And so, when the 'editor app' has finish its job, you will see <em>a second call</em> to FileProvider.openFile with mode &quot;rw&quot;:<BR/>-&gt; <em>your own/local app file</em> will be saved  ;-)</p>
",0
ActionBar,Android,pattern,64663569,"<p>You can use the <code>app:icon</code> attribute to define the icon and the <strong><code>iconGravity</code></strong> attribute to define the position.</p>
<p>The default value <code>app:iconGravity=&quot;start&quot;</code></p>
<pre><code>        &lt;com.google.android.material.button.MaterialButton
            app:iconGravity=&quot;start&quot;
            android:text=&quot;BUTTON&quot;
            app:icon=&quot;@drawable/ic_add_24px&quot;/&gt;
</code></pre>
<p>or <code>app:iconGravity=&quot;textStart&quot;</code></p>
<pre><code>        &lt;com.google.android.material.button.MaterialButton
            app:iconGravity=&quot;textStart&quot;
            android:text=&quot;BUTTON&quot;
            app:icon=&quot;@drawable/ic_add_24px&quot;/&gt;
</code></pre>
<p><a href=""https://i.sstatic.net/UFNG2.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/UFNG2.png"" alt=""enter image description here"" /></a></p>
",0
ActionBar,Android,pattern,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,pattern,74483059,"<p>The <a href=""https://github.com/google/accompanist/tree/main/swiperefresh"" rel=""noreferrer"">Google's Accompanist</a> is now <strong>deprecated</strong>. Official support is now available in Compose Material from versin 1.3.0 use following code:</p>
<p>The lines I marked with <strong>1</strong>, <strong>2</strong>, <strong>3</strong> does the job:</p>
<pre><code>val ptrState= 
   rememberPullRefreshState(viewState.isRefreshing, {viewModel.pullToRefresh()}) // 1

Box(modifier = Modifier
    .fillMaxSize()
    .pullRefresh(ptrState)) { // 2
    LazyColumn(state = rememberLazyListState()) {
        items(
            items = viewState.YOUR_LIST_ITEMS,
            key = { item -&gt; item.id },
            itemContent = {
                YourItemCompose(it)
            })
    }
    PullRefreshIndicator
          (viewState.isRefreshing, ptrState, Modifier.align(Alignment.TopCenter)) // 3
}
</code></pre>
<p><code>viewState.isRefreshing</code> is a boolean holding your refresh state and <code>viewModel.pullToRefresh()</code> is the method to do the actual work for refreshing the data (e.g. calling the API again)</p>
<p>in case you don't know the dependency:</p>
<pre><code>    implementation 'androidx.compose.material:material:1.4.0-alpha02' 
</code></pre>
",0
ActionBar,Android,environment,76618463,"<p>In Android, the BottomNavigationView's selected item is automatically updated when an item is clicked. This is the default behavior and it's not straightforward to change it. However, you can use a workaround to achieve your desired behavior.</p>
<pre><code>var previousMenuItem: MenuItem? = null

binding.bottomNavigation.setOnNavigationItemSelectedListener { menuItem -&gt;
    when (menuItem.itemId) {
        R.id.referral_bottom_nav -&gt; {
            // Show your popup here

            // If the previousMenuItem is not null, reselect it
            previousMenuItem?.let { binding.bottomNavigation.selectedItemId = it.itemId }

            false // Return false to not update the selection
        }
        else -&gt; {
            // Update the previousMenuItem
            previousMenuItem = menuItem

            // Navigate to the selected screen

            true // Return true to update the selection
        }
    }
}
</code></pre>
<p>In this code, we're storing the previously selected menu item in previousMenuItem. When an item is clicked, we check its id. If it's the id of the item that should show a popup and not update the selection, we reselect the previously selected item (if it's not null) and return false to not update the selection. If it's another item, we update previousMenuItem and navigate to the selected screen, then return true to update the selection.</p>
<p>Please replace R.id.referral_bottom_nav with the actual id of the menu item that should show the popup and not update the selection.</p>
",0
ActionBar,Android,environment,62606723,"<p>Use one of the <code>.NoActionBar</code> theme and set the <code>windowActionBar</code> attribute to <code>false</code>.</p>
<p>Beginning with the API level 21 action bar may be represented with any toolbar widget, within the application layout. An application may choose to designate a Toolbar as the action bar for an Activity using the <code>setSupportActionBar()</code> method.</p>
",1
ActionBar,Android,environment,68249440,"<p>You can include <code>android:imeOptions=&quot;actionNone&quot;</code> on your <code>&lt;EditText&gt;</code> element in the manifest to say that you do not need an action button. There are other possibilities for <a href=""https://developer.android.com/reference/kotlin/android/widget/TextView#android:imeoptions"" rel=""nofollow noreferrer""><code>android:imeOptions</code></a> that might suit your needs better.</p>
<p>Bear in mind that there are hundreds of input method editors (soft keyboards) available for Android. Requests like <code>android:imeOptions=&quot;actionNone&quot;</code> are hints, not demands. Whether the user's keyboard pays attention to <code>actionNone</code> is up to the developers of the keyboard.</p>
",0
ActionBar,Android,environment,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,environment,64405682,"<p><code>setActionBar()</code> requires a <strong>framework</strong> <code>Toolbar</code>. <code>MaterialToolbar</code> correctly extends the AndroidX <code>Toolbar</code>, which means you must use <code>AppCompatActivity</code> and <code>setSupportActionBar()</code> and not <code>Activity</code> and <code>setActionBar()</code>.</p>
<pre class=""lang-kotlin prettyprint-override""><code>class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.collapsingtoolbar_and_recyclerview)

        //[...]
        val toolbar = findViewById&lt;MaterialToolbar&gt;(R.id.myToolbar)
        setSupportActionBar(toolbar)

        // ...Do other stuff here
        supportActionBar.title = &quot;My MainActivity&quot;
        supportActionBar.setDisplayHomeAsUpEnabled(true)
    }
}
</code></pre>
",1
ActionBar,Android,environment,61308648,"<p>In general, what you are looking for is called an <a href=""https://developers.google.com/assistant/app"" rel=""nofollow noreferrer"">app action</a>.</p>

<p>However, app actions are only defined for specific types of apps and Intents, and only particular trigger phrases. You can't define your own phrases at this time.</p>
",0
ActionBar,Android,environment,70997040,"<p>You are asking to 'ACTION_VIEW' the file, hence the app honoring your intent will consider it can only read it.</p>
<p>Technically this means the <a href=""https://developer.android.com/reference/androidx/core/content/FileProvider#openFile(android.net.Uri,java.lang.String)"" rel=""nofollow noreferrer"">FileProvider.openFile(android.net.Uri,java.lang.String)</a> method will be called just once with &quot;r&quot; mode.</p>
<p>The solution is to use Intent.ACTION_EDIT</p>
<pre><code>Intent intent = new Intent(Intent.ACTION_EDIT);
</code></pre>
<p>And so, when the 'editor app' has finish its job, you will see <em>a second call</em> to FileProvider.openFile with mode &quot;rw&quot;:<BR/>-&gt; <em>your own/local app file</em> will be saved  ;-)</p>
",0
ActionBar,Android,environment,67767917,"<p>pass the activity context in your adapter.</p>
<pre><code>Adapter adapter = new Adapter(activity);
</code></pre>
<p>Adapter Class::</p>
<pre><code>Context context;
public Adapter(Context c){
      this.context = c;
}
</code></pre>
<p>Now use context to set ActionBar like:</p>
<pre><code>(Activity) context.getSupportActionBar(toolbar);
</code></pre>
",1
ActionBar,Android,environment,71875292,"<p>Use the Intent action &quot;com.google.android.gms.SHARE_NEARBY&quot; and the package &quot;com.google.android.gms&quot; to directly launch Nearby Share.</p>
<p>Yes, the system launches the package with the action &quot;android.intent.action.VIEW&quot; and the intent extras from the received data.</p>
",0
ActionBar,Android,environment,61457824,"<p>You can try with <strong><code>runOnUiThread</code></strong>.</p>

<blockquote>
  <p><a href=""https://developer.android.com/reference/android/app/Activity#runOnUiThread(java.lang.Runnable)"" rel=""nofollow noreferrer""><strong><code>runOnUiThread</code></strong></a> runs the specified action on the UI thread. If the
  current thread is the UI thread, then the action is executed
  immediately. If the current thread is not the UI thread, the action is
  posted to the event queue of the UI thread.</p>
</blockquote>

<pre><code>context?.runOnUiThread(Runnable {
    // Your Logic
  if (list.size==0) {
       no_list_layout.visibility= View.VISIBLE
  } else {
       // Your work
  }
})
</code></pre>
",0
ActionBar,Android,alternative,76618463,"<p>In Android, the BottomNavigationView's selected item is automatically updated when an item is clicked. This is the default behavior and it's not straightforward to change it. However, you can use a workaround to achieve your desired behavior.</p>
<pre><code>var previousMenuItem: MenuItem? = null

binding.bottomNavigation.setOnNavigationItemSelectedListener { menuItem -&gt;
    when (menuItem.itemId) {
        R.id.referral_bottom_nav -&gt; {
            // Show your popup here

            // If the previousMenuItem is not null, reselect it
            previousMenuItem?.let { binding.bottomNavigation.selectedItemId = it.itemId }

            false // Return false to not update the selection
        }
        else -&gt; {
            // Update the previousMenuItem
            previousMenuItem = menuItem

            // Navigate to the selected screen

            true // Return true to update the selection
        }
    }
}
</code></pre>
<p>In this code, we're storing the previously selected menu item in previousMenuItem. When an item is clicked, we check its id. If it's the id of the item that should show a popup and not update the selection, we reselect the previously selected item (if it's not null) and return false to not update the selection. If it's another item, we update previousMenuItem and navigate to the selected screen, then return true to update the selection.</p>
<p>Please replace R.id.referral_bottom_nav with the actual id of the menu item that should show the popup and not update the selection.</p>
",0
ActionBar,Android,alternative,68249440,"<p>You can include <code>android:imeOptions=&quot;actionNone&quot;</code> on your <code>&lt;EditText&gt;</code> element in the manifest to say that you do not need an action button. There are other possibilities for <a href=""https://developer.android.com/reference/kotlin/android/widget/TextView#android:imeoptions"" rel=""nofollow noreferrer""><code>android:imeOptions</code></a> that might suit your needs better.</p>
<p>Bear in mind that there are hundreds of input method editors (soft keyboards) available for Android. Requests like <code>android:imeOptions=&quot;actionNone&quot;</code> are hints, not demands. Whether the user's keyboard pays attention to <code>actionNone</code> is up to the developers of the keyboard.</p>
",0
ActionBar,Android,alternative,68890706,"<p><a href=""https://developer.android.com/topic/libraries/view-binding"" rel=""nofollow noreferrer"">View Binding</a> converts underscores to camelCase, the correct syntax is <code>binding.progressBar</code></p>
<pre><code>&lt;ProgressBar
        android:id=&quot;@+id/progress_bar&quot;
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;match_parent&quot;
        android:layout_gravity=&quot;center&quot;
        android:visibility=&quot;gone&quot;/&gt;
</code></pre>
<pre class=""lang-kotlin prettyprint-override""><code>binding.progressBar.setVisibility(if (it == NetworkState.LOADING) View.VISIBLE else View.GONE)
</code></pre>
",0
ActionBar,Android,alternative,68425941,"<p><strong>The navigation drawer is the most common feature offered by android and the navigation drawer is a UI panel that shows your app’s main navigation menu. It is also one of the important UI elements, which provides actions preferable to the users like example changing user profile, changing settings of the application, etc. In this article, it has been discussed step by step to implement the navigation drawer in android</strong></p>
<blockquote>
<p>activity_main.xml</p>
</blockquote>
<pre><code> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;androidx.coordinatorlayout.widget.CoordinatorLayout 
    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:background=&quot;@color/bgColor&quot;
    android:layout_height=&quot;match_parent&quot;
    tools:context=&quot;.activities.MainActivity&quot;&gt;

    &lt;com.google.android.material.appbar.AppBarLayout
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        app:elevation=&quot;0dp&quot;&gt;

        &lt;LinearLayout
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;?attr/actionBarSize&quot;
            android:gravity=&quot;center_vertical&quot;
            android:background=&quot;@color/bgColor&quot;
            android:paddingStart=&quot;20dp&quot;
            android:paddingEnd=&quot;20dp&quot;
            android:orientation=&quot;horizontal&quot;&gt;

        &lt;/LinearLayout&gt;
    &lt;/com.google.android.material.appbar.AppBarLayout&gt;

    &lt;androidx.viewpager2.widget.ViewPager2
        android:id=&quot;@+id/vp_horizontal_ntb&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;
        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;/&gt;

    &lt;com.google.android.material.bottomnavigation.BottomNavigationView
        android:id=&quot;@+id/navigation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_gravity=&quot;bottom&quot;
        android:background=&quot;?android:attr/windowBackground&quot;
        android:foreground=&quot;?attr/selectableItemBackground&quot;
        app:menu=&quot;@menu/bottom_navigation&quot;
        app:elevation=&quot;10dp&quot;
        app:labelVisibilityMode=&quot;labeled&quot;
        app:itemIconTint=&quot;@color/bottom_navigation_color&quot;
        app:itemTextColor=&quot;@color/bottom_navigation_color&quot;
        app:itemBackground=&quot;@color/bottomNavigationBackground&quot;/&gt;
&lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
</code></pre>
<blockquote>
<p>menu.xml</p>
</blockquote>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/navigationMenu&quot;
        android:icon=&quot;@android:drawable/ic_menu_sort_by_size&quot;
        android:title=&quot;Menu&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyCourses&quot;
        android:icon=&quot;@drawable/ic_email&quot;
        android:title=&quot;Courses&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationHome&quot;
        android:icon=&quot;@drawable/ic_home&quot;
        android:title=&quot;Home&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/m_refer&quot;
        android:icon=&quot;@android:drawable/ic_menu_share&quot;
        android:title=&quot;Refer&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/navigationMyProfile&quot;
        android:icon=&quot;@drawable/ic_back&quot;
        android:title=&quot;User&quot; /&gt;
&lt;/menu&gt;
</code></pre>
<blockquote>
<p>ViewPagerAdapter.java</p>
</blockquote>
<pre><code>    public class ViewPagerAdapter extends FragmentStateAdapter {

    public ViewPagerAdapter(@NonNull @NotNull FragmentActivity fragmentActivity) {
        super(fragmentActivity);
    }

    @NonNull
    @NotNull
    @Override
    public Fragment createFragment(int p) {

        switch (p) {

            case 0:
                return new ProfileFragment();
            case 1:
                return new LeaderBoardFragment();
            case 2:
                return new HomeFragment();
            case 3:
                return new ReferFragment();
            case 4:
                return new ProfileFragment();
            default:
                return new HomeFragment();

        }
    }

    @Override
    public int getItemCount() {
        return 5;
    }
}
</code></pre>
<blockquote>
<p>MainActivity.java</p>
</blockquote>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initView();
  }

    private void initView() {
        this.viewPager2 = findViewById(R.id.vp_horizontal_ntb);
        viewPager2.setOffscreenPageLimit(100);
        this.bottomNavigationView = findViewById(R.id.navigation);
        adapter = new ViewPagerAdapter(this);
        viewPager2.setAdapter(adapter);

        viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
            @Override
            public void onPageSelected(int position) {
                super.onPageSelected(position);

                switch (position) {
                    case 0:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMenu).setChecked(true);
                        break;

                    case 1:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyCourses).setChecked(true);
                        break;

                    case 2:
                        bottomNavigationView.getMenu().findItem(R.id.navigationHome).setChecked(true);
                        break;

                    case 3:
                        bottomNavigationView.getMenu().findItem(R.id.m_refer).setChecked(true);
                        break;

                    case 4:
                        bottomNavigationView.getMenu().findItem(R.id.navigationMyProfile).setChecked(true);
                        break;

                }
            }
        });


        bottomNavigationView.setOnItemSelectedListener(new NavigationBarView.OnItemSelectedListener() {
            @SuppressLint(&quot;NonConstantResourceId&quot;)
            @Override
            public boolean onNavigationItemSelected(@NonNull @NotNull MenuItem item) {

                switch (item.getItemId()) {
                    case R.id.navigationHome:
                        viewPager2.setCurrentItem(2);
                        break;
                    case R.id.navigationMyProfile:
                        viewPager2.setCurrentItem(4);
                        break;
                    case R.id.m_refer:
                        viewPager2.setCurrentItem(3);
                        break;
                    case R.id.navigationMyCourses:
                        viewPager2.setCurrentItem(1);
                        break;
                    case R.id.navigationMenu:
                        viewPager2.setCurrentItem(0);
                        break;
                }
                return false;
            }
        });

        CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) bottomNavigationView.getLayoutParams();
        layoutParams.setBehavior(new BottomNavigationBehavior());
        bottomNavigationView.setSelectedItemId(R.id.navigationMenu);
    }
}
</code></pre>
<p><em>Happy Coding</em></p>
",0
ActionBar,Android,alternative,70997040,"<p>You are asking to 'ACTION_VIEW' the file, hence the app honoring your intent will consider it can only read it.</p>
<p>Technically this means the <a href=""https://developer.android.com/reference/androidx/core/content/FileProvider#openFile(android.net.Uri,java.lang.String)"" rel=""nofollow noreferrer"">FileProvider.openFile(android.net.Uri,java.lang.String)</a> method will be called just once with &quot;r&quot; mode.</p>
<p>The solution is to use Intent.ACTION_EDIT</p>
<pre><code>Intent intent = new Intent(Intent.ACTION_EDIT);
</code></pre>
<p>And so, when the 'editor app' has finish its job, you will see <em>a second call</em> to FileProvider.openFile with mode &quot;rw&quot;:<BR/>-&gt; <em>your own/local app file</em> will be saved  ;-)</p>
",0
ActionBar,Android,alternative,76355407,"<p>I set default <code>ActionBar</code> with DarkActionBar then add <code>supportActionBar?.hide()</code> in Activity's onCreate method.
I will update answer If I find a better sulotion.</p>
<pre><code>&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;
    &lt;!-- Base application theme. --&gt;
    &lt;style name=&quot;Theme.CitiesDistance&quot; parent=&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;&gt;
        .
        .
        .
    &lt;/style&gt;
&lt;/resources&gt;


override fun onCreate(savedInstanceState: Bundle?) {
    super.onCreate(savedInstanceState)
    setContentView(R.layout.activity_main)
    supportActionBar?.hide()
}
</code></pre>
",0
ActionBar,Android,alternative,64405682,"<p><code>setActionBar()</code> requires a <strong>framework</strong> <code>Toolbar</code>. <code>MaterialToolbar</code> correctly extends the AndroidX <code>Toolbar</code>, which means you must use <code>AppCompatActivity</code> and <code>setSupportActionBar()</code> and not <code>Activity</code> and <code>setActionBar()</code>.</p>
<pre class=""lang-kotlin prettyprint-override""><code>class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.collapsingtoolbar_and_recyclerview)

        //[...]
        val toolbar = findViewById&lt;MaterialToolbar&gt;(R.id.myToolbar)
        setSupportActionBar(toolbar)

        // ...Do other stuff here
        supportActionBar.title = &quot;My MainActivity&quot;
        supportActionBar.setDisplayHomeAsUpEnabled(true)
    }
}
</code></pre>
",1
ActionBar,Android,alternative,61657339,"<p>Use <code>ACTION_VIEW</code> instead of <code>ACTION_WEB_SEARCH</code>.</p>

<pre><code>Uri uri = Uri.parse(String.valueOf(buildURI));
        Intent intent = new Intent(Intent.ACTION_VIEW, uri);
        startActivity(intent);
</code></pre>

<p>For more information <a href=""https://developer.android.com/reference/android/content/Intent#ACTION_WEB_SEARCH"" rel=""nofollow noreferrer"">https://developer.android.com/reference/android/content/Intent#ACTION_WEB_SEARCH</a></p>
",0
ActionBar,Android,alternative,74483059,"<p>The <a href=""https://github.com/google/accompanist/tree/main/swiperefresh"" rel=""noreferrer"">Google's Accompanist</a> is now <strong>deprecated</strong>. Official support is now available in Compose Material from versin 1.3.0 use following code:</p>
<p>The lines I marked with <strong>1</strong>, <strong>2</strong>, <strong>3</strong> does the job:</p>
<pre><code>val ptrState= 
   rememberPullRefreshState(viewState.isRefreshing, {viewModel.pullToRefresh()}) // 1

Box(modifier = Modifier
    .fillMaxSize()
    .pullRefresh(ptrState)) { // 2
    LazyColumn(state = rememberLazyListState()) {
        items(
            items = viewState.YOUR_LIST_ITEMS,
            key = { item -&gt; item.id },
            itemContent = {
                YourItemCompose(it)
            })
    }
    PullRefreshIndicator
          (viewState.isRefreshing, ptrState, Modifier.align(Alignment.TopCenter)) // 3
}
</code></pre>
<p><code>viewState.isRefreshing</code> is a boolean holding your refresh state and <code>viewModel.pullToRefresh()</code> is the method to do the actual work for refreshing the data (e.g. calling the API again)</p>
<p>in case you don't know the dependency:</p>
<pre><code>    implementation 'androidx.compose.material:material:1.4.0-alpha02' 
</code></pre>
",0
ActionBar,Android,alternative,63703753,"<p>There are two mistakes in your menu.xml:</p>
<pre><code>            &lt;item
            android:id=&quot;@id/profile&quot;
            android:icon=&quot;@drawable/profile&quot;
            android:title=&quot;@string/profile&quot;
            android:actionLayout=&quot;@layout/profile_image_layout&quot;
            app:actionViewClass=&quot;android.widget.FrameLayout&quot;
            app:showAsAction=&quot;always|withText&quot; /&gt;
</code></pre>
<ol>
<li>android:actionLayout=&quot;@layout/profile_image_layout&quot;. should be app:actionLayout=&quot;@layout/profile_image_layout&quot;。</li>
<li>You should use only one of ‘actionLayout’ &amp; ’actionViewClass‘, or  'actionViewClass' will be chosen. After 'app:actionViewClass' deleted, it works.</li>
</ol>
",1
VariableSynchronization,TensorFlow,functionality,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
VariableSynchronization,TensorFlow,functionality,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",0
VariableSynchronization,TensorFlow,functionality,63893647,"<p>TensorFlow can unroll iterations of while loops to execute in parallel, when some parts of the data flow (I.e. iteration condition) can be computed faster than other parts. If you don't have a special preference (i.e. reproducibility with legacy stateful samplers), leave it at default.</p>
",0
VariableSynchronization,TensorFlow,functionality,58608645,"<p>Tensorflow does not record the order in which operations are created as in a normal python program but only keeps track of their dependencies thus only guaranteeing that all dependencies of an <code>operation/op</code> are executed before the <code>op</code>executes.<br/></p>

<p>So in some instances, <code>out_</code> may be updated either after updating the value of <code>y</code> and in other cases it executes before updating the  <code>y</code> since <code>out_</code> only has a transitive dependency to <code>y</code>.i.e. it depends on <code>y</code> through the <code>out</code> variable.</p>
",0
VariableSynchronization,TensorFlow,functionality,70843936,"<p>Tensorflow has no attribute called defun.</p>
<p>If you are using tf 1.x, use</p>
<pre><code>tf.contrib.eager.defun
</code></pre>
",0
VariableSynchronization,TensorFlow,functionality,65070353,"<p><a href=""https://www.tensorflow.org/guide/autodiff#3_took_gradients_through_an_integer_or_string"" rel=""nofollow noreferrer"">Tensorflow does not differentiate through integers</a>. Cast your int to float instead.</p>
<pre><code>import tensorflow as tf
tf.compat.v1.disable_eager_execution()

A  = tf.constant([[1,7,3]],dtype=tf.float32)
B = tf.zeros_like([[1,0,0],[0,1,0]])
C = A+tf.cast(B,tf.float32)

f = tf.gradients(C,A)
with tf.compat.v1.Session() as sess:
    print(sess.run(f))
</code></pre>
<p>Results in :</p>
<pre><code>[array([[2., 2., 2.]], dtype=float32)]
</code></pre>
",0
VariableSynchronization,TensorFlow,functionality,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",0
VariableSynchronization,TensorFlow,functionality,66069002,"<p>Tensorflow automatically converts some <code>if</code> statements into <a href=""https://www.tensorflow.org/api_docs/python/tf/cond"" rel=""nofollow noreferrer""><code>tf.cond</code></a> nodes in <code>tf.function</code>. This is called <a href=""https://www.tensorflow.org/guide/function#conditionals"" rel=""nofollow noreferrer"">Autograph</a>.</p>
<p>Since that is not working here, we can do that ourselves:</p>
<pre class=""lang-py prettyprint-override""><code>class ComplicatedStuff:
    def __init__(self):
        self.result = None

    def fun(self, val):
        self.result = val

@tf.function
def no_fun(x, blabla):
    s = ComplicatedStuff()  
    # s.do_this(blabla)
    # s.do_that(blabla)

    x_tmp = tf.cond(x &gt; .5, lambda: 2*x, lambda: x)
    s.fun(x_tmp)
    return s.result
    
no_fun(tf.constant(1.), ...)
&gt;&gt;&gt; &lt;tf.Tensor: shape=(), dtype=float32, numpy=2.0&gt;

no_fun(tf.constant(0.23), ...)
&gt;&gt;&gt; &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.23&gt;
</code></pre>
<p>As mentioned in the docs:</p>
<blockquote>
<p><a href=""https://www.tensorflow.org/api_docs/python/tf/cond"" rel=""nofollow noreferrer"">tf.cond</a> traces and adds both branches of the conditional to the graph,
dynamically selecting a branch at execution time.</p>
</blockquote>
",0
VariableSynchronization,TensorFlow,functionality,58227549,"<p>In tensorflow 2.0, you need use the <code>tf.GradientTape</code> context to calculate the gradients, and then apply gradients on your model's variables. </p>

<pre class=""lang-py prettyprint-override""><code>with tf.GradientTape() as t:
    # do prediction and define loss
    predictions = model(x_train)
    loss = tf.keras.losses.mse(predictions, y_train)
    grad = t.gradient(loss, model.trainable_variables)
    optimizer = tf.keras.optimizers.Adam()
    optimizer.apply_gradients(zip(grad, model.trainable_variables))
</code></pre>
",0
VariableSynchronization,TensorFlow,functionality,57466773,"<p>In TensorFlow, you can use <a href=""https://www.tensorflow.org/api_docs/python/tf/math/greater"" rel=""nofollow noreferrer""><code>tf.greater</code></a>, <a href=""https://www.tensorflow.org/api_docs/python/tf/math/less"" rel=""nofollow noreferrer""><code>tf.less</code></a> and <a href=""https://www.tensorflow.org/api_docs/python/tf/where"" rel=""nofollow noreferrer""><code>tf.where</code></a>.  </p>

<p>Simple demo codes are below.  </p>

<pre><code># TensorFlow 1.14
import tensorflow as tf  

x = [[254, 255, 256],
     [257, 258, 259],
     [252, 253, 254]]

condition = tf.math.greater(x, 255)

result_x = tf.where_v2(condition, 255, x) # tf.where is deprecated in 1.14

sess = tf.Session()
sess.run(tf.global_variables_initializer())
result = sess.run(result_x)
print(result)
</code></pre>

<pre><code>[[254 255 255]
 [255 255 255]
 [252 253 254]]
</code></pre>

<hr>

<p>And additionally, you can use <a href=""https://www.tensorflow.org/api_docs/python/tf/ones_like"" rel=""nofollow noreferrer""><code>tf.ones_like</code></a> instead of <code>tf.ones(tf.shape(x), tf.float32)</code>.  </p>

<pre><code>tf.ones_like(x)
</code></pre>
",0
VariableSynchronization,TensorFlow,concept,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",0
VariableSynchronization,TensorFlow,concept,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
VariableSynchronization,TensorFlow,concept,63893647,"<p>TensorFlow can unroll iterations of while loops to execute in parallel, when some parts of the data flow (I.e. iteration condition) can be computed faster than other parts. If you don't have a special preference (i.e. reproducibility with legacy stateful samplers), leave it at default.</p>
",0
VariableSynchronization,TensorFlow,concept,58608645,"<p>Tensorflow does not record the order in which operations are created as in a normal python program but only keeps track of their dependencies thus only guaranteeing that all dependencies of an <code>operation/op</code> are executed before the <code>op</code>executes.<br/></p>

<p>So in some instances, <code>out_</code> may be updated either after updating the value of <code>y</code> and in other cases it executes before updating the  <code>y</code> since <code>out_</code> only has a transitive dependency to <code>y</code>.i.e. it depends on <code>y</code> through the <code>out</code> variable.</p>
",0
VariableSynchronization,TensorFlow,concept,70843936,"<p>Tensorflow has no attribute called defun.</p>
<p>If you are using tf 1.x, use</p>
<pre><code>tf.contrib.eager.defun
</code></pre>
",0
VariableSynchronization,TensorFlow,concept,65070353,"<p><a href=""https://www.tensorflow.org/guide/autodiff#3_took_gradients_through_an_integer_or_string"" rel=""nofollow noreferrer"">Tensorflow does not differentiate through integers</a>. Cast your int to float instead.</p>
<pre><code>import tensorflow as tf
tf.compat.v1.disable_eager_execution()

A  = tf.constant([[1,7,3]],dtype=tf.float32)
B = tf.zeros_like([[1,0,0],[0,1,0]])
C = A+tf.cast(B,tf.float32)

f = tf.gradients(C,A)
with tf.compat.v1.Session() as sess:
    print(sess.run(f))
</code></pre>
<p>Results in :</p>
<pre><code>[array([[2., 2., 2.]], dtype=float32)]
</code></pre>
",0
VariableSynchronization,TensorFlow,concept,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",0
VariableSynchronization,TensorFlow,concept,55750078,"<p>Select your Device using <code>tf.device()</code></p>

<pre><code>with tf.device('/cpu:0'):
    #enter code here of tf data
</code></pre>

<p>On a typical system, there are multiple computing devices. In TensorFlow, the supported device types are CPU and GPU. They are represented as strings. For example:</p>

<pre><code>""/cpu:0"": The CPU of your machine.
""/device:GPU:0"": The GPU of your machine, if you have one.
""/device:GPU:1"": The second GPU of your machine, etc.
</code></pre>

<p><strong>GPU:</strong></p>

<pre><code>with tf.device('/device:GPU:0'):
  #code here: tf data and model
</code></pre>

<p>Reference: <a href=""https://www.tensorflow.org/guide/using_gpu"" rel=""noreferrer"">Link</a></p>
",0
VariableSynchronization,TensorFlow,concept,66069002,"<p>Tensorflow automatically converts some <code>if</code> statements into <a href=""https://www.tensorflow.org/api_docs/python/tf/cond"" rel=""nofollow noreferrer""><code>tf.cond</code></a> nodes in <code>tf.function</code>. This is called <a href=""https://www.tensorflow.org/guide/function#conditionals"" rel=""nofollow noreferrer"">Autograph</a>.</p>
<p>Since that is not working here, we can do that ourselves:</p>
<pre class=""lang-py prettyprint-override""><code>class ComplicatedStuff:
    def __init__(self):
        self.result = None

    def fun(self, val):
        self.result = val

@tf.function
def no_fun(x, blabla):
    s = ComplicatedStuff()  
    # s.do_this(blabla)
    # s.do_that(blabla)

    x_tmp = tf.cond(x &gt; .5, lambda: 2*x, lambda: x)
    s.fun(x_tmp)
    return s.result
    
no_fun(tf.constant(1.), ...)
&gt;&gt;&gt; &lt;tf.Tensor: shape=(), dtype=float32, numpy=2.0&gt;

no_fun(tf.constant(0.23), ...)
&gt;&gt;&gt; &lt;tf.Tensor: shape=(), dtype=float32, numpy=0.23&gt;
</code></pre>
<p>As mentioned in the docs:</p>
<blockquote>
<p><a href=""https://www.tensorflow.org/api_docs/python/tf/cond"" rel=""nofollow noreferrer"">tf.cond</a> traces and adds both branches of the conditional to the graph,
dynamically selecting a branch at execution time.</p>
</blockquote>
",0
VariableSynchronization,TensorFlow,concept,71311033,"<p>In tensorflow, the first dimension of a data tensor (for example <code>x_train</code>, <code>y_target</code>) shoud be the number of samples, because the data is passed to the model as batches.
In your case, if you are only using one sample, you need to reshape x:</p>
<pre><code>x_train = tf.reshape(x_train, [1,8,10])
</code></pre>
",0
VariableSynchronization,TensorFlow,performance,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
VariableSynchronization,TensorFlow,performance,63893647,"<p>TensorFlow can unroll iterations of while loops to execute in parallel, when some parts of the data flow (I.e. iteration condition) can be computed faster than other parts. If you don't have a special preference (i.e. reproducibility with legacy stateful samplers), leave it at default.</p>
",0
VariableSynchronization,TensorFlow,performance,58608645,"<p>Tensorflow does not record the order in which operations are created as in a normal python program but only keeps track of their dependencies thus only guaranteeing that all dependencies of an <code>operation/op</code> are executed before the <code>op</code>executes.<br/></p>

<p>So in some instances, <code>out_</code> may be updated either after updating the value of <code>y</code> and in other cases it executes before updating the  <code>y</code> since <code>out_</code> only has a transitive dependency to <code>y</code>.i.e. it depends on <code>y</code> through the <code>out</code> variable.</p>
",0
VariableSynchronization,TensorFlow,performance,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",0
VariableSynchronization,TensorFlow,performance,70843936,"<p>Tensorflow has no attribute called defun.</p>
<p>If you are using tf 1.x, use</p>
<pre><code>tf.contrib.eager.defun
</code></pre>
",0
VariableSynchronization,TensorFlow,performance,58227549,"<p>In tensorflow 2.0, you need use the <code>tf.GradientTape</code> context to calculate the gradients, and then apply gradients on your model's variables. </p>

<pre class=""lang-py prettyprint-override""><code>with tf.GradientTape() as t:
    # do prediction and define loss
    predictions = model(x_train)
    loss = tf.keras.losses.mse(predictions, y_train)
    grad = t.gradient(loss, model.trainable_variables)
    optimizer = tf.keras.optimizers.Adam()
    optimizer.apply_gradients(zip(grad, model.trainable_variables))
</code></pre>
",0
VariableSynchronization,TensorFlow,performance,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",0
VariableSynchronization,TensorFlow,performance,65070353,"<p><a href=""https://www.tensorflow.org/guide/autodiff#3_took_gradients_through_an_integer_or_string"" rel=""nofollow noreferrer"">Tensorflow does not differentiate through integers</a>. Cast your int to float instead.</p>
<pre><code>import tensorflow as tf
tf.compat.v1.disable_eager_execution()

A  = tf.constant([[1,7,3]],dtype=tf.float32)
B = tf.zeros_like([[1,0,0],[0,1,0]])
C = A+tf.cast(B,tf.float32)

f = tf.gradients(C,A)
with tf.compat.v1.Session() as sess:
    print(sess.run(f))
</code></pre>
<p>Results in :</p>
<pre><code>[array([[2., 2., 2.]], dtype=float32)]
</code></pre>
",0
VariableSynchronization,TensorFlow,performance,57755243,"<p>Tensorflow serving prediction api should have a key ""instances"" or ""inputs"" to modify your input. Your request body should be like this</p>

<pre><code>{
    ""instances"": [{
        ""input_image"": DATA1,
        ""input_image_meta"": DATA2,
        ""input_anchors"": DATA3}]
}
</code></pre>

<p>More <a href=""https://tensorflow.google.cn/tfx/serving/api_rest"" rel=""nofollow noreferrer"">information</a></p>
",0
VariableSynchronization,TensorFlow,performance,61339044,"<p>Tensorflow variables support constraints, and this includes variables created via <code>add_weight</code>. See the docs <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer#add_weight"" rel=""nofollow noreferrer"">here</a>.</p>

<p>For example, if you want to force a variable to have values 0 &lt; x &lt; 1:</p>

<pre><code>self.add_weight(shape=some_shape, constraint=lambda x: tf.clip_by_value(x, 0, 1))
</code></pre>

<p>In general, <code>constraint</code> should be a function; this function will take the variable as input and returns a new value for the variable. In this case, clipped at 0 and 1. </p>

<p>Note that the way this is implemented is that this function is simply called on the variable after the optimizer does its gradient step. This means that values that ""want"" to be outside the range will be clipped to hard 0s and 1s, and you might end up with lots of values precisely at this boundary. So as @y.selivonchyk notes, this is not ""mathematically sound"", i.e. the gradients don't know about the constraint. You might want to combine the constraint with the regularization they propose for the best effect.</p>
",0
VariableSynchronization,TensorFlow,directive,63893647,"<p>TensorFlow can unroll iterations of while loops to execute in parallel, when some parts of the data flow (I.e. iteration condition) can be computed faster than other parts. If you don't have a special preference (i.e. reproducibility with legacy stateful samplers), leave it at default.</p>
",0
VariableSynchronization,TensorFlow,directive,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",0
VariableSynchronization,TensorFlow,directive,58608645,"<p>Tensorflow does not record the order in which operations are created as in a normal python program but only keeps track of their dependencies thus only guaranteeing that all dependencies of an <code>operation/op</code> are executed before the <code>op</code>executes.<br/></p>

<p>So in some instances, <code>out_</code> may be updated either after updating the value of <code>y</code> and in other cases it executes before updating the  <code>y</code> since <code>out_</code> only has a transitive dependency to <code>y</code>.i.e. it depends on <code>y</code> through the <code>out</code> variable.</p>
",0
VariableSynchronization,TensorFlow,directive,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
VariableSynchronization,TensorFlow,directive,70843936,"<p>Tensorflow has no attribute called defun.</p>
<p>If you are using tf 1.x, use</p>
<pre><code>tf.contrib.eager.defun
</code></pre>
",0
VariableSynchronization,TensorFlow,directive,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",0
VariableSynchronization,TensorFlow,directive,61339044,"<p>Tensorflow variables support constraints, and this includes variables created via <code>add_weight</code>. See the docs <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer#add_weight"" rel=""nofollow noreferrer"">here</a>.</p>

<p>For example, if you want to force a variable to have values 0 &lt; x &lt; 1:</p>

<pre><code>self.add_weight(shape=some_shape, constraint=lambda x: tf.clip_by_value(x, 0, 1))
</code></pre>

<p>In general, <code>constraint</code> should be a function; this function will take the variable as input and returns a new value for the variable. In this case, clipped at 0 and 1. </p>

<p>Note that the way this is implemented is that this function is simply called on the variable after the optimizer does its gradient step. This means that values that ""want"" to be outside the range will be clipped to hard 0s and 1s, and you might end up with lots of values precisely at this boundary. So as @y.selivonchyk notes, this is not ""mathematically sound"", i.e. the gradients don't know about the constraint. You might want to combine the constraint with the regularization they propose for the best effect.</p>
",0
VariableSynchronization,TensorFlow,directive,72393925,"<p>This might have been caused due to GPU memory. If a TensorFlow operation has both CPU and GPU implementations, by default, the GPU device is prioritized when the operation is assigned.</p>
<p>For example, <code>tf.matmul</code> has both CPU and GPU kernels and on a system with devices CPU:0 and GPU:0, the GPU:0 device is selected to run <code>tf.matmul</code>. By default, Tensorflow allocates the full amount of available GPU memory when it is launched.</p>
<p>Adding the following code before your program, after importing dependencies will allocate only as much GPU memory as needed for the runtime allocations: it starts out allocating very little memory, and as the program gets run and more GPU memory is needed the GPU memory is extended for the TensorFlow process.</p>
<pre><code>physical_devices = tf.config.list_physical_devices('GPU')
try:
  tf.config.experimental.set_memory_growth(physical_devices[0], True)
except:
  # Invalid device or cannot modify virtual devices once initialized.
  pass
</code></pre>
",0
VariableSynchronization,TensorFlow,directive,58064287,"<p>Tensorflow constructs singletons as side effects during import. Importing twice results in the singletons being created again, which is not supported. Please never import twice.</p>
",0
VariableSynchronization,TensorFlow,directive,65070353,"<p><a href=""https://www.tensorflow.org/guide/autodiff#3_took_gradients_through_an_integer_or_string"" rel=""nofollow noreferrer"">Tensorflow does not differentiate through integers</a>. Cast your int to float instead.</p>
<pre><code>import tensorflow as tf
tf.compat.v1.disable_eager_execution()

A  = tf.constant([[1,7,3]],dtype=tf.float32)
B = tf.zeros_like([[1,0,0],[0,1,0]])
C = A+tf.cast(B,tf.float32)

f = tf.gradients(C,A)
with tf.compat.v1.Session() as sess:
    print(sess.run(f))
</code></pre>
<p>Results in :</p>
<pre><code>[array([[2., 2., 2.]], dtype=float32)]
</code></pre>
",0
VariableSynchronization,TensorFlow,pattern,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",0
VariableSynchronization,TensorFlow,pattern,58608645,"<p>Tensorflow does not record the order in which operations are created as in a normal python program but only keeps track of their dependencies thus only guaranteeing that all dependencies of an <code>operation/op</code> are executed before the <code>op</code>executes.<br/></p>

<p>So in some instances, <code>out_</code> may be updated either after updating the value of <code>y</code> and in other cases it executes before updating the  <code>y</code> since <code>out_</code> only has a transitive dependency to <code>y</code>.i.e. it depends on <code>y</code> through the <code>out</code> variable.</p>
",0
VariableSynchronization,TensorFlow,pattern,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
VariableSynchronization,TensorFlow,pattern,63893647,"<p>TensorFlow can unroll iterations of while loops to execute in parallel, when some parts of the data flow (I.e. iteration condition) can be computed faster than other parts. If you don't have a special preference (i.e. reproducibility with legacy stateful samplers), leave it at default.</p>
",0
VariableSynchronization,TensorFlow,pattern,70843936,"<p>Tensorflow has no attribute called defun.</p>
<p>If you are using tf 1.x, use</p>
<pre><code>tf.contrib.eager.defun
</code></pre>
",0
VariableSynchronization,TensorFlow,pattern,58064287,"<p>Tensorflow constructs singletons as side effects during import. Importing twice results in the singletons being created again, which is not supported. Please never import twice.</p>
",0
VariableSynchronization,TensorFlow,pattern,65070353,"<p><a href=""https://www.tensorflow.org/guide/autodiff#3_took_gradients_through_an_integer_or_string"" rel=""nofollow noreferrer"">Tensorflow does not differentiate through integers</a>. Cast your int to float instead.</p>
<pre><code>import tensorflow as tf
tf.compat.v1.disable_eager_execution()

A  = tf.constant([[1,7,3]],dtype=tf.float32)
B = tf.zeros_like([[1,0,0],[0,1,0]])
C = A+tf.cast(B,tf.float32)

f = tf.gradients(C,A)
with tf.compat.v1.Session() as sess:
    print(sess.run(f))
</code></pre>
<p>Results in :</p>
<pre><code>[array([[2., 2., 2.]], dtype=float32)]
</code></pre>
",0
VariableSynchronization,TensorFlow,pattern,57466773,"<p>In TensorFlow, you can use <a href=""https://www.tensorflow.org/api_docs/python/tf/math/greater"" rel=""nofollow noreferrer""><code>tf.greater</code></a>, <a href=""https://www.tensorflow.org/api_docs/python/tf/math/less"" rel=""nofollow noreferrer""><code>tf.less</code></a> and <a href=""https://www.tensorflow.org/api_docs/python/tf/where"" rel=""nofollow noreferrer""><code>tf.where</code></a>.  </p>

<p>Simple demo codes are below.  </p>

<pre><code># TensorFlow 1.14
import tensorflow as tf  

x = [[254, 255, 256],
     [257, 258, 259],
     [252, 253, 254]]

condition = tf.math.greater(x, 255)

result_x = tf.where_v2(condition, 255, x) # tf.where is deprecated in 1.14

sess = tf.Session()
sess.run(tf.global_variables_initializer())
result = sess.run(result_x)
print(result)
</code></pre>

<pre><code>[[254 255 255]
 [255 255 255]
 [252 253 254]]
</code></pre>

<hr>

<p>And additionally, you can use <a href=""https://www.tensorflow.org/api_docs/python/tf/ones_like"" rel=""nofollow noreferrer""><code>tf.ones_like</code></a> instead of <code>tf.ones(tf.shape(x), tf.float32)</code>.  </p>

<pre><code>tf.ones_like(x)
</code></pre>
",0
VariableSynchronization,TensorFlow,pattern,64295847,"<p>By default, Tensorflow uses float32.You have to convert your data to tf.float32.</p>
<pre><code>X = tf.cast(yourDATA, tf.float32) 
</code></pre>
",0
VariableSynchronization,TensorFlow,pattern,72393925,"<p>This might have been caused due to GPU memory. If a TensorFlow operation has both CPU and GPU implementations, by default, the GPU device is prioritized when the operation is assigned.</p>
<p>For example, <code>tf.matmul</code> has both CPU and GPU kernels and on a system with devices CPU:0 and GPU:0, the GPU:0 device is selected to run <code>tf.matmul</code>. By default, Tensorflow allocates the full amount of available GPU memory when it is launched.</p>
<p>Adding the following code before your program, after importing dependencies will allocate only as much GPU memory as needed for the runtime allocations: it starts out allocating very little memory, and as the program gets run and more GPU memory is needed the GPU memory is extended for the TensorFlow process.</p>
<pre><code>physical_devices = tf.config.list_physical_devices('GPU')
try:
  tf.config.experimental.set_memory_growth(physical_devices[0], True)
except:
  # Invalid device or cannot modify virtual devices once initialized.
  pass
</code></pre>
",0
VariableSynchronization,TensorFlow,environment,58608645,"<p>Tensorflow does not record the order in which operations are created as in a normal python program but only keeps track of their dependencies thus only guaranteeing that all dependencies of an <code>operation/op</code> are executed before the <code>op</code>executes.<br/></p>

<p>So in some instances, <code>out_</code> may be updated either after updating the value of <code>y</code> and in other cases it executes before updating the  <code>y</code> since <code>out_</code> only has a transitive dependency to <code>y</code>.i.e. it depends on <code>y</code> through the <code>out</code> variable.</p>
",0
VariableSynchronization,TensorFlow,environment,63893647,"<p>TensorFlow can unroll iterations of while loops to execute in parallel, when some parts of the data flow (I.e. iteration condition) can be computed faster than other parts. If you don't have a special preference (i.e. reproducibility with legacy stateful samplers), leave it at default.</p>
",0
VariableSynchronization,TensorFlow,environment,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",0
VariableSynchronization,TensorFlow,environment,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
VariableSynchronization,TensorFlow,environment,70843936,"<p>Tensorflow has no attribute called defun.</p>
<p>If you are using tf 1.x, use</p>
<pre><code>tf.contrib.eager.defun
</code></pre>
",0
VariableSynchronization,TensorFlow,environment,72393925,"<p>This might have been caused due to GPU memory. If a TensorFlow operation has both CPU and GPU implementations, by default, the GPU device is prioritized when the operation is assigned.</p>
<p>For example, <code>tf.matmul</code> has both CPU and GPU kernels and on a system with devices CPU:0 and GPU:0, the GPU:0 device is selected to run <code>tf.matmul</code>. By default, Tensorflow allocates the full amount of available GPU memory when it is launched.</p>
<p>Adding the following code before your program, after importing dependencies will allocate only as much GPU memory as needed for the runtime allocations: it starts out allocating very little memory, and as the program gets run and more GPU memory is needed the GPU memory is extended for the TensorFlow process.</p>
<pre><code>physical_devices = tf.config.list_physical_devices('GPU')
try:
  tf.config.experimental.set_memory_growth(physical_devices[0], True)
except:
  # Invalid device or cannot modify virtual devices once initialized.
  pass
</code></pre>
",0
VariableSynchronization,TensorFlow,environment,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",0
VariableSynchronization,TensorFlow,environment,55750078,"<p>Select your Device using <code>tf.device()</code></p>

<pre><code>with tf.device('/cpu:0'):
    #enter code here of tf data
</code></pre>

<p>On a typical system, there are multiple computing devices. In TensorFlow, the supported device types are CPU and GPU. They are represented as strings. For example:</p>

<pre><code>""/cpu:0"": The CPU of your machine.
""/device:GPU:0"": The GPU of your machine, if you have one.
""/device:GPU:1"": The second GPU of your machine, etc.
</code></pre>

<p><strong>GPU:</strong></p>

<pre><code>with tf.device('/device:GPU:0'):
  #code here: tf data and model
</code></pre>

<p>Reference: <a href=""https://www.tensorflow.org/guide/using_gpu"" rel=""noreferrer"">Link</a></p>
",0
VariableSynchronization,TensorFlow,environment,58064287,"<p>Tensorflow constructs singletons as side effects during import. Importing twice results in the singletons being created again, which is not supported. Please never import twice.</p>
",0
VariableSynchronization,TensorFlow,environment,61339044,"<p>Tensorflow variables support constraints, and this includes variables created via <code>add_weight</code>. See the docs <a href=""https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer#add_weight"" rel=""nofollow noreferrer"">here</a>.</p>

<p>For example, if you want to force a variable to have values 0 &lt; x &lt; 1:</p>

<pre><code>self.add_weight(shape=some_shape, constraint=lambda x: tf.clip_by_value(x, 0, 1))
</code></pre>

<p>In general, <code>constraint</code> should be a function; this function will take the variable as input and returns a new value for the variable. In this case, clipped at 0 and 1. </p>

<p>Note that the way this is implemented is that this function is simply called on the variable after the optimizer does its gradient step. This means that values that ""want"" to be outside the range will be clipped to hard 0s and 1s, and you might end up with lots of values precisely at this boundary. So as @y.selivonchyk notes, this is not ""mathematically sound"", i.e. the gradients don't know about the constraint. You might want to combine the constraint with the regularization they propose for the best effect.</p>
",0
VariableSynchronization,TensorFlow,alternative,63893647,"<p>TensorFlow can unroll iterations of while loops to execute in parallel, when some parts of the data flow (I.e. iteration condition) can be computed faster than other parts. If you don't have a special preference (i.e. reproducibility with legacy stateful samplers), leave it at default.</p>
",0
VariableSynchronization,TensorFlow,alternative,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",0
VariableSynchronization,TensorFlow,alternative,58608645,"<p>Tensorflow does not record the order in which operations are created as in a normal python program but only keeps track of their dependencies thus only guaranteeing that all dependencies of an <code>operation/op</code> are executed before the <code>op</code>executes.<br/></p>

<p>So in some instances, <code>out_</code> may be updated either after updating the value of <code>y</code> and in other cases it executes before updating the  <code>y</code> since <code>out_</code> only has a transitive dependency to <code>y</code>.i.e. it depends on <code>y</code> through the <code>out</code> variable.</p>
",0
VariableSynchronization,TensorFlow,alternative,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
VariableSynchronization,TensorFlow,alternative,70843936,"<p>Tensorflow has no attribute called defun.</p>
<p>If you are using tf 1.x, use</p>
<pre><code>tf.contrib.eager.defun
</code></pre>
",0
VariableSynchronization,TensorFlow,alternative,58064287,"<p>Tensorflow constructs singletons as side effects during import. Importing twice results in the singletons being created again, which is not supported. Please never import twice.</p>
",0
VariableSynchronization,TensorFlow,alternative,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",0
VariableSynchronization,TensorFlow,alternative,72393925,"<p>This might have been caused due to GPU memory. If a TensorFlow operation has both CPU and GPU implementations, by default, the GPU device is prioritized when the operation is assigned.</p>
<p>For example, <code>tf.matmul</code> has both CPU and GPU kernels and on a system with devices CPU:0 and GPU:0, the GPU:0 device is selected to run <code>tf.matmul</code>. By default, Tensorflow allocates the full amount of available GPU memory when it is launched.</p>
<p>Adding the following code before your program, after importing dependencies will allocate only as much GPU memory as needed for the runtime allocations: it starts out allocating very little memory, and as the program gets run and more GPU memory is needed the GPU memory is extended for the TensorFlow process.</p>
<pre><code>physical_devices = tf.config.list_physical_devices('GPU')
try:
  tf.config.experimental.set_memory_growth(physical_devices[0], True)
except:
  # Invalid device or cannot modify virtual devices once initialized.
  pass
</code></pre>
",0
VariableSynchronization,TensorFlow,alternative,57466773,"<p>In TensorFlow, you can use <a href=""https://www.tensorflow.org/api_docs/python/tf/math/greater"" rel=""nofollow noreferrer""><code>tf.greater</code></a>, <a href=""https://www.tensorflow.org/api_docs/python/tf/math/less"" rel=""nofollow noreferrer""><code>tf.less</code></a> and <a href=""https://www.tensorflow.org/api_docs/python/tf/where"" rel=""nofollow noreferrer""><code>tf.where</code></a>.  </p>

<p>Simple demo codes are below.  </p>

<pre><code># TensorFlow 1.14
import tensorflow as tf  

x = [[254, 255, 256],
     [257, 258, 259],
     [252, 253, 254]]

condition = tf.math.greater(x, 255)

result_x = tf.where_v2(condition, 255, x) # tf.where is deprecated in 1.14

sess = tf.Session()
sess.run(tf.global_variables_initializer())
result = sess.run(result_x)
print(result)
</code></pre>

<pre><code>[[254 255 255]
 [255 255 255]
 [252 253 254]]
</code></pre>

<hr>

<p>And additionally, you can use <a href=""https://www.tensorflow.org/api_docs/python/tf/ones_like"" rel=""nofollow noreferrer""><code>tf.ones_like</code></a> instead of <code>tf.ones(tf.shape(x), tf.float32)</code>.  </p>

<pre><code>tf.ones_like(x)
</code></pre>
",0
VariableSynchronization,TensorFlow,alternative,64295847,"<p>By default, Tensorflow uses float32.You have to convert your data to tf.float32.</p>
<pre><code>X = tf.cast(yourDATA, tf.float32) 
</code></pre>
",0
GradientTape,TensorFlow,functionality,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,functionality,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,functionality,58227549,"<p>In tensorflow 2.0, you need use the <code>tf.GradientTape</code> context to calculate the gradients, and then apply gradients on your model's variables. </p>

<pre class=""lang-py prettyprint-override""><code>with tf.GradientTape() as t:
    # do prediction and define loss
    predictions = model(x_train)
    loss = tf.keras.losses.mse(predictions, y_train)
    grad = t.gradient(loss, model.trainable_variables)
    optimizer = tf.keras.optimizers.Adam()
    optimizer.apply_gradients(zip(grad, model.trainable_variables))
</code></pre>
",1
GradientTape,TensorFlow,functionality,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",1
GradientTape,TensorFlow,functionality,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",1
GradientTape,TensorFlow,functionality,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",1
GradientTape,TensorFlow,functionality,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,functionality,65125515,"<p>In TensorFlow 2, you can use <code>GradientTape</code> with <code>batch_jacobian</code>. From the <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape#batch_jacobian"" rel=""nofollow noreferrer"">official website</a>:</p>
<pre><code>with tf.GradientTape() as g:
  x = tf.constant([[1., 2.], [3., 4.]], dtype=tf.float32)
  g.watch(x)
  y = x * x
batch_jacobian = g.batch_jacobian(y, x)
</code></pre>
",1
GradientTape,TensorFlow,functionality,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
GradientTape,TensorFlow,functionality,74049381,"<p>In the <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">TensorFlow document</a>: Unless you set persistent=True a GradientTape can only be used to compute one set of gradients.</p>
<p>To calculate multiple losses, you need multiple tapes. Something like:</p>
<pre><code>with tf.GradientTape() as t1:
    loss1_result= loss1(true, pred)
grads1 = t1.gradient(loss1_result, var_list1)
with tf.GradientTape() as t2:
    loss2_result= loss2(true, pred)
grads2 = t2.gradient(loss2_result, var_list2)
</code></pre>
<p>Then apply it.</p>
<pre><code>opt1.apply_gradients(zip(grads1, var_list1))
opt2.apply_gradients(zip(grads2, var_list2))
</code></pre>
",1
GradientTape,TensorFlow,concept,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,concept,58227549,"<p>In tensorflow 2.0, you need use the <code>tf.GradientTape</code> context to calculate the gradients, and then apply gradients on your model's variables. </p>

<pre class=""lang-py prettyprint-override""><code>with tf.GradientTape() as t:
    # do prediction and define loss
    predictions = model(x_train)
    loss = tf.keras.losses.mse(predictions, y_train)
    grad = t.gradient(loss, model.trainable_variables)
    optimizer = tf.keras.optimizers.Adam()
    optimizer.apply_gradients(zip(grad, model.trainable_variables))
</code></pre>
",1
GradientTape,TensorFlow,concept,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",1
GradientTape,TensorFlow,concept,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",1
GradientTape,TensorFlow,concept,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,concept,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",1
GradientTape,TensorFlow,concept,65125515,"<p>In TensorFlow 2, you can use <code>GradientTape</code> with <code>batch_jacobian</code>. From the <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape#batch_jacobian"" rel=""nofollow noreferrer"">official website</a>:</p>
<pre><code>with tf.GradientTape() as g:
  x = tf.constant([[1., 2.], [3., 4.]], dtype=tf.float32)
  g.watch(x)
  y = x * x
batch_jacobian = g.batch_jacobian(y, x)
</code></pre>
",1
GradientTape,TensorFlow,concept,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,concept,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
GradientTape,TensorFlow,concept,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",1
GradientTape,TensorFlow,performance,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,performance,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,performance,58227549,"<p>In tensorflow 2.0, you need use the <code>tf.GradientTape</code> context to calculate the gradients, and then apply gradients on your model's variables. </p>

<pre class=""lang-py prettyprint-override""><code>with tf.GradientTape() as t:
    # do prediction and define loss
    predictions = model(x_train)
    loss = tf.keras.losses.mse(predictions, y_train)
    grad = t.gradient(loss, model.trainable_variables)
    optimizer = tf.keras.optimizers.Adam()
    optimizer.apply_gradients(zip(grad, model.trainable_variables))
</code></pre>
",0
GradientTape,TensorFlow,performance,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",0
GradientTape,TensorFlow,performance,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",1
GradientTape,TensorFlow,performance,65125515,"<p>In TensorFlow 2, you can use <code>GradientTape</code> with <code>batch_jacobian</code>. From the <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape#batch_jacobian"" rel=""nofollow noreferrer"">official website</a>:</p>
<pre><code>with tf.GradientTape() as g:
  x = tf.constant([[1., 2.], [3., 4.]], dtype=tf.float32)
  g.watch(x)
  y = x * x
batch_jacobian = g.batch_jacobian(y, x)
</code></pre>
",0
GradientTape,TensorFlow,performance,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",0
GradientTape,TensorFlow,performance,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,performance,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
GradientTape,TensorFlow,performance,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",1
GradientTape,TensorFlow,directive,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,directive,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,directive,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",1
GradientTape,TensorFlow,directive,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",1
GradientTape,TensorFlow,directive,58227549,"<p>In tensorflow 2.0, you need use the <code>tf.GradientTape</code> context to calculate the gradients, and then apply gradients on your model's variables. </p>

<pre class=""lang-py prettyprint-override""><code>with tf.GradientTape() as t:
    # do prediction and define loss
    predictions = model(x_train)
    loss = tf.keras.losses.mse(predictions, y_train)
    grad = t.gradient(loss, model.trainable_variables)
    optimizer = tf.keras.optimizers.Adam()
    optimizer.apply_gradients(zip(grad, model.trainable_variables))
</code></pre>
",1
GradientTape,TensorFlow,directive,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",1
GradientTape,TensorFlow,directive,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,directive,55799378,"<p>There is no built-in mechanism in TensorFlow 2.0 to override all gradients for a built-in operator within a scope. However, if you are able to modify the call-site for each call to the built-in operator, you can use the <code>tf.custom_gradient</code> decorator as follows:</p>

<pre><code>@tf.custom_gradient
def custom_square(x):
  def grad(dy):
    return tf.constant(0.0)
  return tf.square(x), grad

with tf.Graph().as_default() as g:
  x = tf.Variable(5.0)
  with tf.GradientTape() as tape:
    s_2 = custom_square(x)

  with tf.compat.v1.Session() as sess:
    sess.run(tf.compat.v1.global_variables_initializer())            
    print(sess.run(tape.gradient(s_2, x)))
</code></pre>
",0
GradientTape,TensorFlow,directive,74049381,"<p>In the <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">TensorFlow document</a>: Unless you set persistent=True a GradientTape can only be used to compute one set of gradients.</p>
<p>To calculate multiple losses, you need multiple tapes. Something like:</p>
<pre><code>with tf.GradientTape() as t1:
    loss1_result= loss1(true, pred)
grads1 = t1.gradient(loss1_result, var_list1)
with tf.GradientTape() as t2:
    loss2_result= loss2(true, pred)
grads2 = t2.gradient(loss2_result, var_list2)
</code></pre>
<p>Then apply it.</p>
<pre><code>opt1.apply_gradients(zip(grads1, var_list1))
opt2.apply_gradients(zip(grads2, var_list2))
</code></pre>
",1
GradientTape,TensorFlow,directive,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",1
GradientTape,TensorFlow,pattern,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,pattern,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,pattern,58227549,"<p>In tensorflow 2.0, you need use the <code>tf.GradientTape</code> context to calculate the gradients, and then apply gradients on your model's variables. </p>

<pre class=""lang-py prettyprint-override""><code>with tf.GradientTape() as t:
    # do prediction and define loss
    predictions = model(x_train)
    loss = tf.keras.losses.mse(predictions, y_train)
    grad = t.gradient(loss, model.trainable_variables)
    optimizer = tf.keras.optimizers.Adam()
    optimizer.apply_gradients(zip(grad, model.trainable_variables))
</code></pre>
",1
GradientTape,TensorFlow,pattern,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",1
GradientTape,TensorFlow,pattern,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",1
GradientTape,TensorFlow,pattern,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",1
GradientTape,TensorFlow,pattern,65125515,"<p>In TensorFlow 2, you can use <code>GradientTape</code> with <code>batch_jacobian</code>. From the <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape#batch_jacobian"" rel=""nofollow noreferrer"">official website</a>:</p>
<pre><code>with tf.GradientTape() as g:
  x = tf.constant([[1., 2.], [3., 4.]], dtype=tf.float32)
  g.watch(x)
  y = x * x
batch_jacobian = g.batch_jacobian(y, x)
</code></pre>
",1
GradientTape,TensorFlow,pattern,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",1
GradientTape,TensorFlow,pattern,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",0
GradientTape,TensorFlow,pattern,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,environment,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,environment,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,environment,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",1
GradientTape,TensorFlow,environment,58227549,"<p>In tensorflow 2.0, you need use the <code>tf.GradientTape</code> context to calculate the gradients, and then apply gradients on your model's variables. </p>

<pre class=""lang-py prettyprint-override""><code>with tf.GradientTape() as t:
    # do prediction and define loss
    predictions = model(x_train)
    loss = tf.keras.losses.mse(predictions, y_train)
    grad = t.gradient(loss, model.trainable_variables)
    optimizer = tf.keras.optimizers.Adam()
    optimizer.apply_gradients(zip(grad, model.trainable_variables))
</code></pre>
",1
GradientTape,TensorFlow,environment,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",1
GradientTape,TensorFlow,environment,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",1
GradientTape,TensorFlow,environment,65125515,"<p>In TensorFlow 2, you can use <code>GradientTape</code> with <code>batch_jacobian</code>. From the <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape#batch_jacobian"" rel=""nofollow noreferrer"">official website</a>:</p>
<pre><code>with tf.GradientTape() as g:
  x = tf.constant([[1., 2.], [3., 4.]], dtype=tf.float32)
  g.watch(x)
  y = x * x
batch_jacobian = g.batch_jacobian(y, x)
</code></pre>
",1
GradientTape,TensorFlow,environment,55799378,"<p>There is no built-in mechanism in TensorFlow 2.0 to override all gradients for a built-in operator within a scope. However, if you are able to modify the call-site for each call to the built-in operator, you can use the <code>tf.custom_gradient</code> decorator as follows:</p>

<pre><code>@tf.custom_gradient
def custom_square(x):
  def grad(dy):
    return tf.constant(0.0)
  return tf.square(x), grad

with tf.Graph().as_default() as g:
  x = tf.Variable(5.0)
  with tf.GradientTape() as tape:
    s_2 = custom_square(x)

  with tf.compat.v1.Session() as sess:
    sess.run(tf.compat.v1.global_variables_initializer())            
    print(sess.run(tape.gradient(s_2, x)))
</code></pre>
",0
GradientTape,TensorFlow,environment,71240068,"<p>According to <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a>:</p>
<blockquote>
<p>By default, the resources held by a GradientTape are released as soon
as GradientTape.gradient() method is called. To compute multiple
gradients over the same computation, create a persistent gradient
tape. This allows multiple calls to the gradient() method as resources
are released when the tape object is garbage collected.</p>
</blockquote>
<p>After train step, as long as no other object has a reference to that tape, the garbage collector will collect it.</p>
",1
GradientTape,TensorFlow,environment,61297910,"<p>You need to call g.watch for each of these variables:
Refer: <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">https://www.tensorflow.org/api_docs/python/tf/GradientTape</a></p>

<pre><code>input_images_tensor = tf.constant(input_images_numpy)
with tf.GradientTape() as g:
    g.watch(input_images_tensor)
    output_tensor = model(input_images_tensor)

gradients = g.gradient(output_tensor, input_images_tensor)
</code></pre>
",1
GradientTape,TensorFlow,alternative,61748035,"<p><code>loss.backward()</code> equivalent in tensorflow is <code>tf.GradientTape()</code>. TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation - computing the gradient of computation with respect to its input variables. Tensorflow &quot;records&quot; all operations executed inside the context of a <code>tf.GradientTape</code> onto a &quot;tape&quot;. Tensorflow then uses that tape and the gradients associated with each recorded operation to compute the gradients of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
<p><code>optimizer.step()</code> equivalent in tensorflow is <code>minimize()</code>. Minimizes the loss by updating the variable list. Calling <code>minimize()</code> takes care of both computing the gradients and applying them to the variables.</p>
<p>If you want to process the gradients before applying them you can instead use the optimizer in three steps:</p>
<ol>
<li>Compute the gradients with <code>tf.GradientTape</code>.</li>
<li>Process the gradients as you wish.</li>
<li>Apply the processed gradients with <code>apply_gradients()</code>.</li>
</ol>
<p>Hope this answers your question. Happy Learning.</p>
",1
GradientTape,TensorFlow,alternative,70983654,"<p><strong>TF.gradients</strong></p>
<p><code>tf.gradients</code> is only valid in a graph context. In particular, it is valid in the context of a <code>tf.function</code> wrapper, where code is executing as a graph.</p>
<pre><code>@tf.function
def example():
  a = tf.constant(0.)
  b = 2 * a
  return tf.gradients(a + b, [a, b], stop_gradients=[a, b])
example()
</code></pre>
<p><strong>tf.GradientTape</strong></p>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic differentiation. TensorFlow <code>&quot;records&quot;</code> relevant operations executed inside the context of a <code>tf.GradientTape</code> onto a <code>&quot;tape&quot;</code>. TensorFlow then uses that tape to compute the gradients of a &quot;recorded&quot; computation using <strong>reverse mode differentiation</strong>. <code>tf.GradientTape</code> not really required <code>tf.function</code> wrapper. It automatically runs in Graph mode.</p>
<pre><code>x = tf.constant(3.0)
with tf.GradientTape() as g:
  g.watch(x)
  y = x * x
dy_dx = g.gradient(y, x)
print(dy_dx)
</code></pre>
",1
GradientTape,TensorFlow,alternative,58227549,"<p>In tensorflow 2.0, you need use the <code>tf.GradientTape</code> context to calculate the gradients, and then apply gradients on your model's variables. </p>

<pre class=""lang-py prettyprint-override""><code>with tf.GradientTape() as t:
    # do prediction and define loss
    predictions = model(x_train)
    loss = tf.keras.losses.mse(predictions, y_train)
    grad = t.gradient(loss, model.trainable_variables)
    optimizer = tf.keras.optimizers.Adam()
    optimizer.apply_gradients(zip(grad, model.trainable_variables))
</code></pre>
",0
GradientTape,TensorFlow,alternative,70688388,"<p>in tensorflow, there is no need to explicitly lock the weights.
You do the following as shown in the code:</p>
<ol>
<li><p>Within the GradientTape you propagate your data through the generator,
pass a real image and a generated image to the discriminator and finally calculate the loss</p>
</li>
<li><p>get the gradients with respect to the loss. Here you pass only the trainable weights of your respective model.</p>
</li>
<li><p>Finally, apply the gradients you calculated to the respective model.</p>
<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:
  generated_images = self.generator(noise, training=True)

  real_output = self.discriminator(batch, training=True)
  fake_output = self.discriminator(generated_images, training=True)

  gen_loss = self.generator_loss(fake_output)
  disc_loss = self.discriminator_loss(real_output, fake_output)

gradients_of_generator = gen_tape.gradient(gen_loss, self.generator.trainable_variables)
gradients_of_discriminator = disc_tape.gradient(disc_loss, self.discriminator.trainable_variables)

self.generator_optimizer.apply_gradients(zip(gradients_of_generator, self.generator.trainable_variables))
self.discriminator_optimizer.apply_gradients(zip(gradients_of_discriminator, self.discriminator.trainable_variables))
return [gen_loss, disc_loss]
</code></pre>
</li>
</ol>
<p>In this example, two gradient tapes are used within the scope of <code>with tf.GradientTape</code>. The reason is, that memory of a tape is released as soon as the values are retrived with <code>tape.gradient()</code>. You could also use a single tape by using <code>with tf.GradientTape(persistent=True) as gradient_tape:</code></p>
",1
GradientTape,TensorFlow,alternative,69000523,"<p>You need to understand how the GradientTape operates. For that, you can follow the guide: <a href=""https://www.tensorflow.org/guide/autodiff"" rel=""nofollow noreferrer"">Introduction to gradients and automatic differentiation</a>. Here is an excerpt:</p>
<blockquote>
<p>TensorFlow provides the <code>tf.GradientTape</code> API for automatic
differentiation; that is, computing the gradient of a computation with
respect to some inputs, usually <code>tf.Variables</code>. TensorFlow &quot;records&quot;
relevant operations executed inside the context of a <code>tf.GradientTape</code>
onto a &quot;tape&quot;. TensorFlow then uses that tape to compute the gradients
of a &quot;recorded&quot; computation using reverse mode differentiation.</p>
</blockquote>
<p>To compute a gradient (or a jacobian), the tape needs to record the operations that are executed in its context. Then, outside its context, once the <em>forward pass</em> has been executed, its possible to use the tape to compute the gradient/jacobian.</p>
<p>You could use something like that:</p>
<pre><code>if epoch % 50 == 0:
  with tf.GradientTape() as tape:
    out = model(x)
  jacobian = tape.jacobian(out, model.weights)  
</code></pre>
",0
GradientTape,TensorFlow,alternative,65125515,"<p>In TensorFlow 2, you can use <code>GradientTape</code> with <code>batch_jacobian</code>. From the <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape#batch_jacobian"" rel=""nofollow noreferrer"">official website</a>:</p>
<pre><code>with tf.GradientTape() as g:
  x = tf.constant([[1., 2.], [3., 4.]], dtype=tf.float32)
  g.watch(x)
  y = x * x
batch_jacobian = g.batch_jacobian(y, x)
</code></pre>
",0
GradientTape,TensorFlow,alternative,77890382,"<p>To calculate gradients with respect to multiple variables in TensorFlow 2, especially when these variables have different shapes, you don't need to concatenate them. TensorFlow's <code>tf.GradientTape()</code> can handle lists of variables and compute gradients for each variable separately, even when they have different shapes.</p>
<p>The <code>tf.GradientTape()</code> keeps track of operations for automatic differentiation. When you pass a list of variables to the <code>tape.gradient()</code> method, TensorFlow calculates the gradient of the loss with respect to each of the variables in the list, without the need for concatenating them.</p>
<p>Here's a minimal example to illustrate this:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

# Define the model variables
w1 = tf.Variable(tf.random.normal([3, 2]), name='w1')
w2 = tf.Variable(tf.random.normal([2, 1]), name='w2')

# Define a simple loss function
def f(w1, w2):
    return tf.reduce_sum(w1 ** 2) + tf.reduce_sum(w2 ** 3)

# Using GradientTape for automatic differentiation
with tf.GradientTape() as tape:
    loss = f(w1, w2)

# Compute gradients with respect to each variable
grads = tape.gradient(loss, [w1, w2])

# grads is a list of tensors corresponding to the gradients of the loss
# with respect to each of w1 and w2, regardless of their shape
print(&quot;Gradient w.r.t w1:&quot;, grads[0])
print(&quot;Gradient w.r.t w2:&quot;, grads[1])
</code></pre>
<p>In this example, <code>grads</code> will be a list containing the gradients of <code>loss</code> with respect to <code>w1</code> and <code>w2</code>, computed separately. There is no need to concatenate <code>w1</code> and <code>w2</code> because TensorFlow's gradient computation is capable of handling lists of tensors with differing shapes.</p>
<p>The same goes with the training of two different models:</p>
<pre class=""lang-py prettyprint-override""><code>import tensorflow as tf

def train_step(model1, model2, X, loss_fn, optimizer):
    &quot;&quot;&quot;
    Perform a training step for two models.

    Args:
    model1 (tf.keras.Model): First model to be trained.
    model2 (tf.keras.Model): Second model to be trained.
    X (Tensor): Input data.
    loss_fn (function): A function to compute the loss.
    optimizer (tf.keras.optimizers.Optimizer): Optimizer to apply gradients.

    Returns:
    Tensor: The computed loss.
    &quot;&quot;&quot;
    with tf.GradientTape() as tape:
        # Forward pass for both models
        output1 = model1(X)
        output2 = model2(X)

        # Compute the loss
        loss = loss_fn(output1, output2)

    # Get trainable variables from both models
    trainable_variables = model1.trainable_variables + model2.trainable_variables

    # Compute gradients
    gradients = tape.gradient(loss, trainable_variables)

    # Update the weights
    optimizer.apply_gradients(zip(gradients, trainable_variables))

    return loss
</code></pre>
",1
GradientTape,TensorFlow,alternative,63893647,"<p>TensorFlow can unroll iterations of while loops to execute in parallel, when some parts of the data flow (I.e. iteration condition) can be computed faster than other parts. If you don't have a special preference (i.e. reproducibility with legacy stateful samplers), leave it at default.</p>
",0
GradientTape,TensorFlow,alternative,61262458,"<p>As far as I understood from my previous experience, Tensorflow needs to use <code>GradientTape</code> in order to record the activity of a certain variable and so to compute its gradients. In your case should be something like that:</p>

<pre><code>x = np.random.rand(10) #your input variable
x = tf.Variable(x) #to be evaluated by GradientTape the input should be a tensor
with tf.GradientTape() as tape:
    tape.watch(x) #with this method you can observe your variable
    proba = model(x) #get the prediction of the input
    loss = your_loss_function(y_true, proba) #compute the loss

gradient = tape.gradient(loss, x) #compute the gradients, this must be done outside the recording
</code></pre>
",0
GradientTape,TensorFlow,alternative,74049381,"<p>In the <a href=""https://www.tensorflow.org/api_docs/python/tf/GradientTape"" rel=""nofollow noreferrer"">TensorFlow document</a>: Unless you set persistent=True a GradientTape can only be used to compute one set of gradients.</p>
<p>To calculate multiple losses, you need multiple tapes. Something like:</p>
<pre><code>with tf.GradientTape() as t1:
    loss1_result= loss1(true, pred)
grads1 = t1.gradient(loss1_result, var_list1)
with tf.GradientTape() as t2:
    loss2_result= loss2(true, pred)
grads2 = t2.gradient(loss2_result, var_list2)
</code></pre>
<p>Then apply it.</p>
<pre><code>opt1.apply_gradients(zip(grads1, var_list1))
opt2.apply_gradients(zip(grads2, var_list2))
</code></pre>
",1
IllegalArgumentException,Kotlin,functionality,68521571,"<p>It is a semantic difference and hence it throws different exceptions. RequireNotNull is used to check input values, typically at the beginning of a method, while checkNotNull is used anywhere to check the current state.</p>
",0
IllegalArgumentException,Kotlin,functionality,60402858,"<p>You would want to throw a NullPointerException whenever a <code>null</code> value would indicate that the code itself is incorrect. Just as you might explicitly throw an IllegalArgumentException if an invalid argument indicates that the caller's code is incorrect.</p>

<p>So, the use-case for <code>!!</code> is quite similar to the use-case for <code>if(...) { throw ...; }</code>, but <code>!!</code> is shorter.</p>

<p>If the code is incorrect them you <em>want</em> to know about it, and stopping the program immediately with a stack-trace is a good way to (1) inform the programmer about the problem, and (2) provide as much useful information as possible for debugging purposes.</p>
",0
IllegalArgumentException,Kotlin,functionality,60282683,"<p>This is used to convert an expression to non-null and throw a <code>KotlinNullPointerException</code> if the result is null. So in this usage, it will only save the response's body was not null, otherwise an exception will be thrown.</p>

<p>See <a href=""https://kotlinlang.org/docs/reference/null-safety.html#the--operator"" rel=""nofollow noreferrer"">here</a> for more information.</p>
",0
IllegalArgumentException,Kotlin,functionality,68522300,"<p>The exception types are the only <em>practical</em> difference, as far as the compiler is concerned — but <strong>there's a big difference in <em>intent</em></strong>, for anyone reading the code:</p>
<p>• <strong><code>require…()</code> functions</strong> are for checking parameters, to <strong>confirm that a function's input fulfils its contract</strong>. So you'd normally call them first thing in a function. (Of course, Kotlin's non-nullable types mean that you wouldn't need to call <code>requireNotNull()</code> for a single parameter; but you might need to check a more complex condition on a combination of parameters or their sub-objects.) That's why they throw <code>IllegalArgumentException</code>: it's checking that the arguments are legal.</p>
<p>• <strong><code>check…()</code> functions</strong> are for checking the relevant properties, to <strong>confirm that the object or whatever is in a valid state for this function to be called now</strong>. (Again, any properties that were <em>never</em> null would be typed accordingly, so <code>checkNotNull()</code> is more appropriate for cases where a property, combination, and/or sub-property can be null, but this function mustn't be called when they are.) So they throw <code>IllegalStateException</code>: they're checking that the object's current state allows the function to be called.</p>
<p>In both cases, you could of course write a standard <code>if</code> check (as you would in Java). Or you could use the Elvis operator <code>?:</code> to do the check the first time the possibly-null value is used. But these functions give you an alternative that's in a more declarative form: you'd normally put them at the top of the function, where they spell out what the function's contract is, in a way that's obvious to anyone glancing at the code.</p>
<p>As a linked answer points out, there are also <strong><code>assert…()</code> functions</strong>, which again have more of a semantic difference than a practical one. Those <strong>are for detecting programming errors <em>away</em> from the boundary of a function call</strong>: for confirming invariants and other conditions, and for all the checks in unit tests and other automated tests.</p>
<p>(Assertions have another important difference: they can be enabled and disabled from the command-line. Though in my experience, that's  not a very good thing. If a check is important, it should <em>always</em> be run: be mandatory; if not, then it should be removed, or at least moved to automated tests, once the code is debugged.)</p>
",1
IllegalArgumentException,Kotlin,functionality,58343222,"<p>Do <code>?: throw IllegalStateException(""Item not found"")</code> instead of doublebang. The type of <code>T? ?: throw ...</code> will be non-nullable <code>T</code>.</p>
",0
IllegalArgumentException,Kotlin,functionality,67493716,"<p>In Kotlin, throwing an Exception evaluates as an expression that returns <code>Nothing</code>. Nothing is treated like a sub-type of anything else, so that first line of code is basically an expression of type <code>Boolean || Nothing</code>, which can be simplified to just <code>Boolean</code>. Kotlin also allows a line of code to simply be an expression (many other languages like Java do not), so you can simply put this line of code to evaluate the two parts of the expression sequentially, and the throw will be skipped (short-circuited) if the first part of the expression is true.</p>
<p>While writing code like this in Kotlin is <em>possible</em>, it is certainly not idiomatic. In my opinion, it is unclear for readability. The equivalent behavior can be achieved with code that very clearly shows its intent:</p>
<pre><code>if (screens.containsKey(type)) {
    throw GdxRuntimeException(&quot;Screen already registered to type: $type.&quot;)
}
</code></pre>
",0
IllegalArgumentException,Kotlin,functionality,59946593,"<p>Use invalidateOptionsMenu() to trigger onPrepareOptionMenu()</p>

<pre><code>var menu: Menu? = null

override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
...
viewModel.isGuest.observe(viewLifecycleOwner, Observer {
            activity?.invalidateOptionsMenu()//This will trigger onPrepareOptionsMenu
})
}

override fun onPrepareOptionsMenu(menu: Menu) {
this.menu = menu
menu.findItem(R.id.action_logout)?.isVisible = !isGuest
super.onPrepareOptionsMenu(menu)
}
</code></pre>
",0
IllegalArgumentException,Kotlin,functionality,69856343,"<p>You can replace <code> assert(password != null)</code> with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/check-not-null.html"" rel=""nofollow noreferrer""><code>checkNotNull(password)</code></a>. It's built-in inline function and compile will smart cast <code>password</code> as not null after that.</p>
<p>On the other hand, error will throw <code>IllegalStateException</code> and not <code>AssertionException</code> in case if <code>passord</code> if null.</p>
",0
IllegalArgumentException,Kotlin,functionality,67022128,"<p>In general, <code>Obj[XXX]++</code> idiom is not prohibited in Kotlin.
The problem here is that result of <code>sockets[socket]</code> call has nullable type (<code>Int?</code>) and postfix increment expression works only for non-nullable types (because under the hood it makes <code>.inc()</code> call).</p>
<p>Look at this hypothetical example:</p>
<pre class=""lang-kotlin prettyprint-override""><code>class HashMapWithNonNullableGet&lt;K, V&gt; : HashMap&lt;K, V&gt;() {
    override fun get(key: K) : V = super.get(key)!!
}

fun sockMerchant(n: Int, ar: Array&lt;Int&gt;) {
    val sockets = HashMapWithNonNullableGet&lt;Int, Int&gt;()
    for (socket in ar) {
        if (sockets.containsKey(socket)) {
            sockets[socket]++ // sockets[socket] returns Int, so no errors here
        }
    }
    println(sockets)
}
</code></pre>
<p>In your case, it's better to refactor loop body to:</p>
<pre><code>for (socket in ar) {
    sockets.computeIfPresent(socket) { _, v -&gt; v + 1 }
}
</code></pre>
",0
IllegalArgumentException,Kotlin,functionality,63872639,"<p>The issue is caused when detach is called in the end instead of attach, which forces navController to be null on parent NavHostFragment.</p>
",0
IllegalArgumentException,Kotlin,concept,62318185,"<p>More idiomatic way to apply constrains in Kotlin is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/require.html"" rel=""noreferrer""><code>require</code></a> function:</p>

<pre><code>data class TotallyMadeUpClass(val username: String) {
    init {
        require(username.length &gt; 10) { ""Length must be greater than 10"" }
        // ...
    }
}
</code></pre>

<p>It throws an <strong>IllegalArgumentException</strong> if the value is <strong>false</strong>.</p>
",1
IllegalArgumentException,Kotlin,concept,69428954,"<blockquote>
<p><code>IllegalArgumentException required argument &quot;currentState&quot; is missing and does not have defaultValue</code></p>
</blockquote>
<p>This means that the argument named <code>currentState</code> misses a default value in the navGraph.</p>
<p>As your arg type is a data class that is definitely a parcelable or serializable, then <a href=""https://developer.android.com/guide/navigation/navigation-pass-data#supported_argument_types"" rel=""nofollow noreferrer"">as per documentation</a>, the default value can only be null:</p>
<blockquote>
<p>Supports a default value of &quot;@null&quot;. Does not support other default values.</p>
</blockquote>
<p>So, you can set its default value to <code>null</code>:</p>
<pre><code>&lt;argument
    android:name=&quot;currentState&quot;
    app:nullable=&quot;true&quot;
    android:defaultValue=&quot;@null&quot;        
    app:argType=&quot;...&quot; /&gt;
</code></pre>
",1
IllegalArgumentException,Kotlin,concept,60402858,"<p>You would want to throw a NullPointerException whenever a <code>null</code> value would indicate that the code itself is incorrect. Just as you might explicitly throw an IllegalArgumentException if an invalid argument indicates that the caller's code is incorrect.</p>

<p>So, the use-case for <code>!!</code> is quite similar to the use-case for <code>if(...) { throw ...; }</code>, but <code>!!</code> is shorter.</p>

<p>If the code is incorrect them you <em>want</em> to know about it, and stopping the program immediately with a stack-trace is a good way to (1) inform the programmer about the problem, and (2) provide as much useful information as possible for debugging purposes.</p>
",1
IllegalArgumentException,Kotlin,concept,68521571,"<p>It is a semantic difference and hence it throws different exceptions. RequireNotNull is used to check input values, typically at the beginning of a method, while checkNotNull is used anywhere to check the current state.</p>
",0
IllegalArgumentException,Kotlin,concept,68929477,"<p>This <code>IllegalStateException</code> is raised because you press the pause button (i.e. <code>mediaRecorder?.pause()</code>) before start recording with <code>mediaRecorder?.start()</code></p>
<p>The cause of that is in the <code>if(!recordingStopped)</code> conditional:</p>
<pre><code>if(!recordingStopped){
    Toast.makeText(this,&quot;Stopped!&quot;, Toast.LENGTH_SHORT).show()
    mediaRecorder?.pause()
    recordingStopped == true
</code></pre>
<p>The initial value of <code>recordingStopped</code> is <code>false</code>, so this condition is met even before start recording, and hence the exception will be raised.</p>
<p>So the initial value should be <code>true</code>:</p>
<pre><code>private var recordingStopped: Boolean = true
</code></pre>
<p>UPDATE:</p>
<p>You need to use a single <code>=</code> sign within the <code>resumeRecording()</code> &amp; <code>pauseRecording()</code> instead of <code>==</code>:</p>
<pre><code>@SuppressLint(&quot;RestrictedApi&quot;, &quot;SetTextI18n&quot;)
@TargetApi(Build.VERSION_CODES.N)
private fun resumeRecording() {
    Toast.makeText(this,&quot;Resume!&quot;, Toast.LENGTH_SHORT).show()
    mediaRecorder?.resume()
    button_pause_recording.text = &quot;Pause&quot;
    recordingStopped = false // &lt;&lt;&lt;&lt; FIX HERE
}


private fun pauseRecording() {

    if(state) {
        pauseTimer()
        Toast.makeText(this,&quot;This is working&quot;, Toast.LENGTH_SHORT).show()
        if(!recordingStopped){
            Toast.makeText(this,&quot;Stopped!&quot;, Toast.LENGTH_SHORT).show()
            mediaRecorder?.pause()
            recordingStopped = true // &lt;&lt;&lt;&lt; FIX HERE
            button_pause_recording.text = &quot;Resume&quot;
        }else{
            resumeRecording()
            resumeTimer()
        }
    }else{
        Toast.makeText(this,&quot;this is not working&quot;, Toast.LENGTH_SHORT).show()
    }
}
</code></pre>
<p>In <code>stopRecording()</code>, the <code>recordingStopped</code> value should be updated:</p>
<pre><code>private fun stopRecording(){

    stopTimer()
    if(state){
        mediaRecorder?.stop()
        mediaRecorder?.release()
        state = false
        simpleChronometer.stop()
        recordingStopped = true // &lt;&lt;&lt;&lt;&lt;&lt;&lt; UPDATE HERE
    }else{
        Toast.makeText(this, &quot;You are not recording right now!&quot;, Toast.LENGTH_SHORT).show()
    }
}
</code></pre>
",0
IllegalArgumentException,Kotlin,concept,68522300,"<p>The exception types are the only <em>practical</em> difference, as far as the compiler is concerned — but <strong>there's a big difference in <em>intent</em></strong>, for anyone reading the code:</p>
<p>• <strong><code>require…()</code> functions</strong> are for checking parameters, to <strong>confirm that a function's input fulfils its contract</strong>. So you'd normally call them first thing in a function. (Of course, Kotlin's non-nullable types mean that you wouldn't need to call <code>requireNotNull()</code> for a single parameter; but you might need to check a more complex condition on a combination of parameters or their sub-objects.) That's why they throw <code>IllegalArgumentException</code>: it's checking that the arguments are legal.</p>
<p>• <strong><code>check…()</code> functions</strong> are for checking the relevant properties, to <strong>confirm that the object or whatever is in a valid state for this function to be called now</strong>. (Again, any properties that were <em>never</em> null would be typed accordingly, so <code>checkNotNull()</code> is more appropriate for cases where a property, combination, and/or sub-property can be null, but this function mustn't be called when they are.) So they throw <code>IllegalStateException</code>: they're checking that the object's current state allows the function to be called.</p>
<p>In both cases, you could of course write a standard <code>if</code> check (as you would in Java). Or you could use the Elvis operator <code>?:</code> to do the check the first time the possibly-null value is used. But these functions give you an alternative that's in a more declarative form: you'd normally put them at the top of the function, where they spell out what the function's contract is, in a way that's obvious to anyone glancing at the code.</p>
<p>As a linked answer points out, there are also <strong><code>assert…()</code> functions</strong>, which again have more of a semantic difference than a practical one. Those <strong>are for detecting programming errors <em>away</em> from the boundary of a function call</strong>: for confirming invariants and other conditions, and for all the checks in unit tests and other automated tests.</p>
<p>(Assertions have another important difference: they can be enabled and disabled from the command-line. Though in my experience, that's  not a very good thing. If a check is important, it should <em>always</em> be run: be mandatory; if not, then it should be removed, or at least moved to automated tests, once the code is debugged.)</p>
",1
IllegalArgumentException,Kotlin,concept,60282683,"<p>This is used to convert an expression to non-null and throw a <code>KotlinNullPointerException</code> if the result is null. So in this usage, it will only save the response's body was not null, otherwise an exception will be thrown.</p>

<p>See <a href=""https://kotlinlang.org/docs/reference/null-safety.html#the--operator"" rel=""nofollow noreferrer"">here</a> for more information.</p>
",0
IllegalArgumentException,Kotlin,concept,58343222,"<p>Do <code>?: throw IllegalStateException(""Item not found"")</code> instead of doublebang. The type of <code>T? ?: throw ...</code> will be non-nullable <code>T</code>.</p>
",0
IllegalArgumentException,Kotlin,concept,67123085,"<p>Generally one can provide the <code>Intent</code> either with Espresso - or an <code>ActivityScenarioRule</code>:</p>
<blockquote>
<p><code>ActivityScenarioRule(Intent startActivityIntent)</code><br/>
Constructs ActivityScenarioRule with a given intent.</p>
</blockquote>
<p>In Kotlin:</p>
<pre><code>lateinit var scenario: ActivityScenario&lt;SomeActivity&gt;
val intent = Intent(ApplicationProvider.getApplicationContext(), SomeActivity::class.java)

@get:Rule
val activityRule = activityScenarioRule&lt;SomeActivity&gt;(intent)

@Test
fun someTest() {
    scenario = rule.scenario
    scenario.onActivity { activity -&gt;  
        ...
    }
}

@After
fun cleanup() {
    scenario.close()
}
</code></pre>
",0
IllegalArgumentException,Kotlin,concept,67493716,"<p>In Kotlin, throwing an Exception evaluates as an expression that returns <code>Nothing</code>. Nothing is treated like a sub-type of anything else, so that first line of code is basically an expression of type <code>Boolean || Nothing</code>, which can be simplified to just <code>Boolean</code>. Kotlin also allows a line of code to simply be an expression (many other languages like Java do not), so you can simply put this line of code to evaluate the two parts of the expression sequentially, and the throw will be skipped (short-circuited) if the first part of the expression is true.</p>
<p>While writing code like this in Kotlin is <em>possible</em>, it is certainly not idiomatic. In my opinion, it is unclear for readability. The equivalent behavior can be achieved with code that very clearly shows its intent:</p>
<pre><code>if (screens.containsKey(type)) {
    throw GdxRuntimeException(&quot;Screen already registered to type: $type.&quot;)
}
</code></pre>
",0
IllegalArgumentException,Kotlin,performance,60402858,"<p>You would want to throw a NullPointerException whenever a <code>null</code> value would indicate that the code itself is incorrect. Just as you might explicitly throw an IllegalArgumentException if an invalid argument indicates that the caller's code is incorrect.</p>

<p>So, the use-case for <code>!!</code> is quite similar to the use-case for <code>if(...) { throw ...; }</code>, but <code>!!</code> is shorter.</p>

<p>If the code is incorrect them you <em>want</em> to know about it, and stopping the program immediately with a stack-trace is a good way to (1) inform the programmer about the problem, and (2) provide as much useful information as possible for debugging purposes.</p>
",0
IllegalArgumentException,Kotlin,performance,68521571,"<p>It is a semantic difference and hence it throws different exceptions. RequireNotNull is used to check input values, typically at the beginning of a method, while checkNotNull is used anywhere to check the current state.</p>
",0
IllegalArgumentException,Kotlin,performance,60282683,"<p>This is used to convert an expression to non-null and throw a <code>KotlinNullPointerException</code> if the result is null. So in this usage, it will only save the response's body was not null, otherwise an exception will be thrown.</p>

<p>See <a href=""https://kotlinlang.org/docs/reference/null-safety.html#the--operator"" rel=""nofollow noreferrer"">here</a> for more information.</p>
",0
IllegalArgumentException,Kotlin,performance,68522300,"<p>The exception types are the only <em>practical</em> difference, as far as the compiler is concerned — but <strong>there's a big difference in <em>intent</em></strong>, for anyone reading the code:</p>
<p>• <strong><code>require…()</code> functions</strong> are for checking parameters, to <strong>confirm that a function's input fulfils its contract</strong>. So you'd normally call them first thing in a function. (Of course, Kotlin's non-nullable types mean that you wouldn't need to call <code>requireNotNull()</code> for a single parameter; but you might need to check a more complex condition on a combination of parameters or their sub-objects.) That's why they throw <code>IllegalArgumentException</code>: it's checking that the arguments are legal.</p>
<p>• <strong><code>check…()</code> functions</strong> are for checking the relevant properties, to <strong>confirm that the object or whatever is in a valid state for this function to be called now</strong>. (Again, any properties that were <em>never</em> null would be typed accordingly, so <code>checkNotNull()</code> is more appropriate for cases where a property, combination, and/or sub-property can be null, but this function mustn't be called when they are.) So they throw <code>IllegalStateException</code>: they're checking that the object's current state allows the function to be called.</p>
<p>In both cases, you could of course write a standard <code>if</code> check (as you would in Java). Or you could use the Elvis operator <code>?:</code> to do the check the first time the possibly-null value is used. But these functions give you an alternative that's in a more declarative form: you'd normally put them at the top of the function, where they spell out what the function's contract is, in a way that's obvious to anyone glancing at the code.</p>
<p>As a linked answer points out, there are also <strong><code>assert…()</code> functions</strong>, which again have more of a semantic difference than a practical one. Those <strong>are for detecting programming errors <em>away</em> from the boundary of a function call</strong>: for confirming invariants and other conditions, and for all the checks in unit tests and other automated tests.</p>
<p>(Assertions have another important difference: they can be enabled and disabled from the command-line. Though in my experience, that's  not a very good thing. If a check is important, it should <em>always</em> be run: be mandatory; if not, then it should be removed, or at least moved to automated tests, once the code is debugged.)</p>
",1
IllegalArgumentException,Kotlin,performance,58343222,"<p>Do <code>?: throw IllegalStateException(""Item not found"")</code> instead of doublebang. The type of <code>T? ?: throw ...</code> will be non-nullable <code>T</code>.</p>
",0
IllegalArgumentException,Kotlin,performance,69856343,"<p>You can replace <code> assert(password != null)</code> with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/check-not-null.html"" rel=""nofollow noreferrer""><code>checkNotNull(password)</code></a>. It's built-in inline function and compile will smart cast <code>password</code> as not null after that.</p>
<p>On the other hand, error will throw <code>IllegalStateException</code> and not <code>AssertionException</code> in case if <code>passord</code> if null.</p>
",0
IllegalArgumentException,Kotlin,performance,67123085,"<p>Generally one can provide the <code>Intent</code> either with Espresso - or an <code>ActivityScenarioRule</code>:</p>
<blockquote>
<p><code>ActivityScenarioRule(Intent startActivityIntent)</code><br/>
Constructs ActivityScenarioRule with a given intent.</p>
</blockquote>
<p>In Kotlin:</p>
<pre><code>lateinit var scenario: ActivityScenario&lt;SomeActivity&gt;
val intent = Intent(ApplicationProvider.getApplicationContext(), SomeActivity::class.java)

@get:Rule
val activityRule = activityScenarioRule&lt;SomeActivity&gt;(intent)

@Test
fun someTest() {
    scenario = rule.scenario
    scenario.onActivity { activity -&gt;  
        ...
    }
}

@After
fun cleanup() {
    scenario.close()
}
</code></pre>
",0
IllegalArgumentException,Kotlin,performance,60241099,"<p>To avoid ::class I prefer this.</p>

<p><code>assertThat(result is Result.Error).isTrue()</code></p>
",0
IllegalArgumentException,Kotlin,performance,59946593,"<p>Use invalidateOptionsMenu() to trigger onPrepareOptionMenu()</p>

<pre><code>var menu: Menu? = null

override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
...
viewModel.isGuest.observe(viewLifecycleOwner, Observer {
            activity?.invalidateOptionsMenu()//This will trigger onPrepareOptionsMenu
})
}

override fun onPrepareOptionsMenu(menu: Menu) {
this.menu = menu
menu.findItem(R.id.action_logout)?.isVisible = !isGuest
super.onPrepareOptionsMenu(menu)
}
</code></pre>
",0
IllegalArgumentException,Kotlin,performance,67493716,"<p>In Kotlin, throwing an Exception evaluates as an expression that returns <code>Nothing</code>. Nothing is treated like a sub-type of anything else, so that first line of code is basically an expression of type <code>Boolean || Nothing</code>, which can be simplified to just <code>Boolean</code>. Kotlin also allows a line of code to simply be an expression (many other languages like Java do not), so you can simply put this line of code to evaluate the two parts of the expression sequentially, and the throw will be skipped (short-circuited) if the first part of the expression is true.</p>
<p>While writing code like this in Kotlin is <em>possible</em>, it is certainly not idiomatic. In my opinion, it is unclear for readability. The equivalent behavior can be achieved with code that very clearly shows its intent:</p>
<pre><code>if (screens.containsKey(type)) {
    throw GdxRuntimeException(&quot;Screen already registered to type: $type.&quot;)
}
</code></pre>
",0
IllegalArgumentException,Kotlin,directive,69428954,"<blockquote>
<p><code>IllegalArgumentException required argument &quot;currentState&quot; is missing and does not have defaultValue</code></p>
</blockquote>
<p>This means that the argument named <code>currentState</code> misses a default value in the navGraph.</p>
<p>As your arg type is a data class that is definitely a parcelable or serializable, then <a href=""https://developer.android.com/guide/navigation/navigation-pass-data#supported_argument_types"" rel=""nofollow noreferrer"">as per documentation</a>, the default value can only be null:</p>
<blockquote>
<p>Supports a default value of &quot;@null&quot;. Does not support other default values.</p>
</blockquote>
<p>So, you can set its default value to <code>null</code>:</p>
<pre><code>&lt;argument
    android:name=&quot;currentState&quot;
    app:nullable=&quot;true&quot;
    android:defaultValue=&quot;@null&quot;        
    app:argType=&quot;...&quot; /&gt;
</code></pre>
",1
IllegalArgumentException,Kotlin,directive,68521571,"<p>It is a semantic difference and hence it throws different exceptions. RequireNotNull is used to check input values, typically at the beginning of a method, while checkNotNull is used anywhere to check the current state.</p>
",0
IllegalArgumentException,Kotlin,directive,68929477,"<p>This <code>IllegalStateException</code> is raised because you press the pause button (i.e. <code>mediaRecorder?.pause()</code>) before start recording with <code>mediaRecorder?.start()</code></p>
<p>The cause of that is in the <code>if(!recordingStopped)</code> conditional:</p>
<pre><code>if(!recordingStopped){
    Toast.makeText(this,&quot;Stopped!&quot;, Toast.LENGTH_SHORT).show()
    mediaRecorder?.pause()
    recordingStopped == true
</code></pre>
<p>The initial value of <code>recordingStopped</code> is <code>false</code>, so this condition is met even before start recording, and hence the exception will be raised.</p>
<p>So the initial value should be <code>true</code>:</p>
<pre><code>private var recordingStopped: Boolean = true
</code></pre>
<p>UPDATE:</p>
<p>You need to use a single <code>=</code> sign within the <code>resumeRecording()</code> &amp; <code>pauseRecording()</code> instead of <code>==</code>:</p>
<pre><code>@SuppressLint(&quot;RestrictedApi&quot;, &quot;SetTextI18n&quot;)
@TargetApi(Build.VERSION_CODES.N)
private fun resumeRecording() {
    Toast.makeText(this,&quot;Resume!&quot;, Toast.LENGTH_SHORT).show()
    mediaRecorder?.resume()
    button_pause_recording.text = &quot;Pause&quot;
    recordingStopped = false // &lt;&lt;&lt;&lt; FIX HERE
}


private fun pauseRecording() {

    if(state) {
        pauseTimer()
        Toast.makeText(this,&quot;This is working&quot;, Toast.LENGTH_SHORT).show()
        if(!recordingStopped){
            Toast.makeText(this,&quot;Stopped!&quot;, Toast.LENGTH_SHORT).show()
            mediaRecorder?.pause()
            recordingStopped = true // &lt;&lt;&lt;&lt; FIX HERE
            button_pause_recording.text = &quot;Resume&quot;
        }else{
            resumeRecording()
            resumeTimer()
        }
    }else{
        Toast.makeText(this,&quot;this is not working&quot;, Toast.LENGTH_SHORT).show()
    }
}
</code></pre>
<p>In <code>stopRecording()</code>, the <code>recordingStopped</code> value should be updated:</p>
<pre><code>private fun stopRecording(){

    stopTimer()
    if(state){
        mediaRecorder?.stop()
        mediaRecorder?.release()
        state = false
        simpleChronometer.stop()
        recordingStopped = true // &lt;&lt;&lt;&lt;&lt;&lt;&lt; UPDATE HERE
    }else{
        Toast.makeText(this, &quot;You are not recording right now!&quot;, Toast.LENGTH_SHORT).show()
    }
}
</code></pre>
",0
IllegalArgumentException,Kotlin,directive,60402858,"<p>You would want to throw a NullPointerException whenever a <code>null</code> value would indicate that the code itself is incorrect. Just as you might explicitly throw an IllegalArgumentException if an invalid argument indicates that the caller's code is incorrect.</p>

<p>So, the use-case for <code>!!</code> is quite similar to the use-case for <code>if(...) { throw ...; }</code>, but <code>!!</code> is shorter.</p>

<p>If the code is incorrect them you <em>want</em> to know about it, and stopping the program immediately with a stack-trace is a good way to (1) inform the programmer about the problem, and (2) provide as much useful information as possible for debugging purposes.</p>
",0
IllegalArgumentException,Kotlin,directive,68522300,"<p>The exception types are the only <em>practical</em> difference, as far as the compiler is concerned — but <strong>there's a big difference in <em>intent</em></strong>, for anyone reading the code:</p>
<p>• <strong><code>require…()</code> functions</strong> are for checking parameters, to <strong>confirm that a function's input fulfils its contract</strong>. So you'd normally call them first thing in a function. (Of course, Kotlin's non-nullable types mean that you wouldn't need to call <code>requireNotNull()</code> for a single parameter; but you might need to check a more complex condition on a combination of parameters or their sub-objects.) That's why they throw <code>IllegalArgumentException</code>: it's checking that the arguments are legal.</p>
<p>• <strong><code>check…()</code> functions</strong> are for checking the relevant properties, to <strong>confirm that the object or whatever is in a valid state for this function to be called now</strong>. (Again, any properties that were <em>never</em> null would be typed accordingly, so <code>checkNotNull()</code> is more appropriate for cases where a property, combination, and/or sub-property can be null, but this function mustn't be called when they are.) So they throw <code>IllegalStateException</code>: they're checking that the object's current state allows the function to be called.</p>
<p>In both cases, you could of course write a standard <code>if</code> check (as you would in Java). Or you could use the Elvis operator <code>?:</code> to do the check the first time the possibly-null value is used. But these functions give you an alternative that's in a more declarative form: you'd normally put them at the top of the function, where they spell out what the function's contract is, in a way that's obvious to anyone glancing at the code.</p>
<p>As a linked answer points out, there are also <strong><code>assert…()</code> functions</strong>, which again have more of a semantic difference than a practical one. Those <strong>are for detecting programming errors <em>away</em> from the boundary of a function call</strong>: for confirming invariants and other conditions, and for all the checks in unit tests and other automated tests.</p>
<p>(Assertions have another important difference: they can be enabled and disabled from the command-line. Though in my experience, that's  not a very good thing. If a check is important, it should <em>always</em> be run: be mandatory; if not, then it should be removed, or at least moved to automated tests, once the code is debugged.)</p>
",1
IllegalArgumentException,Kotlin,directive,67022128,"<p>In general, <code>Obj[XXX]++</code> idiom is not prohibited in Kotlin.
The problem here is that result of <code>sockets[socket]</code> call has nullable type (<code>Int?</code>) and postfix increment expression works only for non-nullable types (because under the hood it makes <code>.inc()</code> call).</p>
<p>Look at this hypothetical example:</p>
<pre class=""lang-kotlin prettyprint-override""><code>class HashMapWithNonNullableGet&lt;K, V&gt; : HashMap&lt;K, V&gt;() {
    override fun get(key: K) : V = super.get(key)!!
}

fun sockMerchant(n: Int, ar: Array&lt;Int&gt;) {
    val sockets = HashMapWithNonNullableGet&lt;Int, Int&gt;()
    for (socket in ar) {
        if (sockets.containsKey(socket)) {
            sockets[socket]++ // sockets[socket] returns Int, so no errors here
        }
    }
    println(sockets)
}
</code></pre>
<p>In your case, it's better to refactor loop body to:</p>
<pre><code>for (socket in ar) {
    sockets.computeIfPresent(socket) { _, v -&gt; v + 1 }
}
</code></pre>
",0
IllegalArgumentException,Kotlin,directive,60282683,"<p>This is used to convert an expression to non-null and throw a <code>KotlinNullPointerException</code> if the result is null. So in this usage, it will only save the response's body was not null, otherwise an exception will be thrown.</p>

<p>See <a href=""https://kotlinlang.org/docs/reference/null-safety.html#the--operator"" rel=""nofollow noreferrer"">here</a> for more information.</p>
",0
IllegalArgumentException,Kotlin,directive,69856343,"<p>You can replace <code> assert(password != null)</code> with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/check-not-null.html"" rel=""nofollow noreferrer""><code>checkNotNull(password)</code></a>. It's built-in inline function and compile will smart cast <code>password</code> as not null after that.</p>
<p>On the other hand, error will throw <code>IllegalStateException</code> and not <code>AssertionException</code> in case if <code>passord</code> if null.</p>
",0
IllegalArgumentException,Kotlin,directive,58343222,"<p>Do <code>?: throw IllegalStateException(""Item not found"")</code> instead of doublebang. The type of <code>T? ?: throw ...</code> will be non-nullable <code>T</code>.</p>
",0
IllegalArgumentException,Kotlin,directive,58983371,"<p>Generally you should not disable the deprecation sign of a method. In most cases the given method's KDoc/Javadoc explains what should you use instead of the deprecated method.</p>

<p><strong>What does the deprecation means? (Offical Java docs)</strong></p>

<blockquote>
  <p>A program element annotated @Deprecated is one that programmers are
  discouraged from using, typically because it is dangerous, or because
  a better alternative exists.</p>
</blockquote>

<p>Although you can disable the deprecation sign 
with an annotation at method signature level:</p>

<pre><code>@Suppress(""DEPRECATION"")
fun methodName() {
   ...
   deprecatedMethod()
   ...
}
</code></pre>
",0
IllegalArgumentException,Kotlin,pattern,68521571,"<p>It is a semantic difference and hence it throws different exceptions. RequireNotNull is used to check input values, typically at the beginning of a method, while checkNotNull is used anywhere to check the current state.</p>
",0
IllegalArgumentException,Kotlin,pattern,69902055,"<p>Use <code>contentAlignment</code>:</p>
<pre><code>@Composable
fun ImageWithCloseButton() {
    Box(
        modifier = Modifier
            .background(LightGray)
            .padding(16.dp)
            .size(88.dp),
        contentAlignment = Alignment.TopEnd
    ) {
        Image(
            painter = painterResource(
                id = R.drawable.ic_launcher_foreground,
            ),
            contentDescription = &quot;&quot;,
            modifier = Modifier
                .align(Alignment.Center)
                .clip(RoundedCornerShape(16.dp))
                .background(Black)
                .size(80.dp),
            contentScale = ContentScale.Crop,
        )
        IconButton(
            onClick = {},
            modifier = Modifier
                .clip(CircleShape)
                .background(White)
                .align(Alignment.TopEnd)
                .size(16.dp)
        ) {
            Icon(
                imageVector = Icons.Rounded.Close,
                contentDescription = &quot;&quot;,
            )
        }
    }
}
</code></pre>
",0
IllegalArgumentException,Kotlin,pattern,60402858,"<p>You would want to throw a NullPointerException whenever a <code>null</code> value would indicate that the code itself is incorrect. Just as you might explicitly throw an IllegalArgumentException if an invalid argument indicates that the caller's code is incorrect.</p>

<p>So, the use-case for <code>!!</code> is quite similar to the use-case for <code>if(...) { throw ...; }</code>, but <code>!!</code> is shorter.</p>

<p>If the code is incorrect them you <em>want</em> to know about it, and stopping the program immediately with a stack-trace is a good way to (1) inform the programmer about the problem, and (2) provide as much useful information as possible for debugging purposes.</p>
",1
IllegalArgumentException,Kotlin,pattern,68522300,"<p>The exception types are the only <em>practical</em> difference, as far as the compiler is concerned — but <strong>there's a big difference in <em>intent</em></strong>, for anyone reading the code:</p>
<p>• <strong><code>require…()</code> functions</strong> are for checking parameters, to <strong>confirm that a function's input fulfils its contract</strong>. So you'd normally call them first thing in a function. (Of course, Kotlin's non-nullable types mean that you wouldn't need to call <code>requireNotNull()</code> for a single parameter; but you might need to check a more complex condition on a combination of parameters or their sub-objects.) That's why they throw <code>IllegalArgumentException</code>: it's checking that the arguments are legal.</p>
<p>• <strong><code>check…()</code> functions</strong> are for checking the relevant properties, to <strong>confirm that the object or whatever is in a valid state for this function to be called now</strong>. (Again, any properties that were <em>never</em> null would be typed accordingly, so <code>checkNotNull()</code> is more appropriate for cases where a property, combination, and/or sub-property can be null, but this function mustn't be called when they are.) So they throw <code>IllegalStateException</code>: they're checking that the object's current state allows the function to be called.</p>
<p>In both cases, you could of course write a standard <code>if</code> check (as you would in Java). Or you could use the Elvis operator <code>?:</code> to do the check the first time the possibly-null value is used. But these functions give you an alternative that's in a more declarative form: you'd normally put them at the top of the function, where they spell out what the function's contract is, in a way that's obvious to anyone glancing at the code.</p>
<p>As a linked answer points out, there are also <strong><code>assert…()</code> functions</strong>, which again have more of a semantic difference than a practical one. Those <strong>are for detecting programming errors <em>away</em> from the boundary of a function call</strong>: for confirming invariants and other conditions, and for all the checks in unit tests and other automated tests.</p>
<p>(Assertions have another important difference: they can be enabled and disabled from the command-line. Though in my experience, that's  not a very good thing. If a check is important, it should <em>always</em> be run: be mandatory; if not, then it should be removed, or at least moved to automated tests, once the code is debugged.)</p>
",1
IllegalArgumentException,Kotlin,pattern,67123085,"<p>Generally one can provide the <code>Intent</code> either with Espresso - or an <code>ActivityScenarioRule</code>:</p>
<blockquote>
<p><code>ActivityScenarioRule(Intent startActivityIntent)</code><br/>
Constructs ActivityScenarioRule with a given intent.</p>
</blockquote>
<p>In Kotlin:</p>
<pre><code>lateinit var scenario: ActivityScenario&lt;SomeActivity&gt;
val intent = Intent(ApplicationProvider.getApplicationContext(), SomeActivity::class.java)

@get:Rule
val activityRule = activityScenarioRule&lt;SomeActivity&gt;(intent)

@Test
fun someTest() {
    scenario = rule.scenario
    scenario.onActivity { activity -&gt;  
        ...
    }
}

@After
fun cleanup() {
    scenario.close()
}
</code></pre>
",0
IllegalArgumentException,Kotlin,pattern,63872639,"<p>The issue is caused when detach is called in the end instead of attach, which forces navController to be null on parent NavHostFragment.</p>
",0
IllegalArgumentException,Kotlin,pattern,59946593,"<p>Use invalidateOptionsMenu() to trigger onPrepareOptionMenu()</p>

<pre><code>var menu: Menu? = null

override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
...
viewModel.isGuest.observe(viewLifecycleOwner, Observer {
            activity?.invalidateOptionsMenu()//This will trigger onPrepareOptionsMenu
})
}

override fun onPrepareOptionsMenu(menu: Menu) {
this.menu = menu
menu.findItem(R.id.action_logout)?.isVisible = !isGuest
super.onPrepareOptionsMenu(menu)
}
</code></pre>
",0
IllegalArgumentException,Kotlin,pattern,60282683,"<p>This is used to convert an expression to non-null and throw a <code>KotlinNullPointerException</code> if the result is null. So in this usage, it will only save the response's body was not null, otherwise an exception will be thrown.</p>

<p>See <a href=""https://kotlinlang.org/docs/reference/null-safety.html#the--operator"" rel=""nofollow noreferrer"">here</a> for more information.</p>
",0
IllegalArgumentException,Kotlin,pattern,58343222,"<p>Do <code>?: throw IllegalStateException(""Item not found"")</code> instead of doublebang. The type of <code>T? ?: throw ...</code> will be non-nullable <code>T</code>.</p>
",0
IllegalArgumentException,Kotlin,pattern,64865849,"<p>When using <strong>lateinit</strong>, you have a boundation of initializing the <strong>lateinit variable before using it else this exception</strong>.</p>
<p>The exception <strong>kotlin.UninitializedPropertyAccessException: lateinit property curTuning</strong> says you're trying to access the <strong>curTuning</strong> variable before initializing it hence the exception has been thrown.</p>
<p>If you're not sure what to initialize <strong>curTuning</strong> with, then make it a <strong>nullable</strong> variable, but make sure to <strong>update and set it with appropriate value and handle nullabillity</strong> else there will <strong>NullPointerException</strong></p>
",0
IllegalArgumentException,Kotlin,environment,69428954,"<blockquote>
<p><code>IllegalArgumentException required argument &quot;currentState&quot; is missing and does not have defaultValue</code></p>
</blockquote>
<p>This means that the argument named <code>currentState</code> misses a default value in the navGraph.</p>
<p>As your arg type is a data class that is definitely a parcelable or serializable, then <a href=""https://developer.android.com/guide/navigation/navigation-pass-data#supported_argument_types"" rel=""nofollow noreferrer"">as per documentation</a>, the default value can only be null:</p>
<blockquote>
<p>Supports a default value of &quot;@null&quot;. Does not support other default values.</p>
</blockquote>
<p>So, you can set its default value to <code>null</code>:</p>
<pre><code>&lt;argument
    android:name=&quot;currentState&quot;
    app:nullable=&quot;true&quot;
    android:defaultValue=&quot;@null&quot;        
    app:argType=&quot;...&quot; /&gt;
</code></pre>
",1
IllegalArgumentException,Kotlin,environment,68929477,"<p>This <code>IllegalStateException</code> is raised because you press the pause button (i.e. <code>mediaRecorder?.pause()</code>) before start recording with <code>mediaRecorder?.start()</code></p>
<p>The cause of that is in the <code>if(!recordingStopped)</code> conditional:</p>
<pre><code>if(!recordingStopped){
    Toast.makeText(this,&quot;Stopped!&quot;, Toast.LENGTH_SHORT).show()
    mediaRecorder?.pause()
    recordingStopped == true
</code></pre>
<p>The initial value of <code>recordingStopped</code> is <code>false</code>, so this condition is met even before start recording, and hence the exception will be raised.</p>
<p>So the initial value should be <code>true</code>:</p>
<pre><code>private var recordingStopped: Boolean = true
</code></pre>
<p>UPDATE:</p>
<p>You need to use a single <code>=</code> sign within the <code>resumeRecording()</code> &amp; <code>pauseRecording()</code> instead of <code>==</code>:</p>
<pre><code>@SuppressLint(&quot;RestrictedApi&quot;, &quot;SetTextI18n&quot;)
@TargetApi(Build.VERSION_CODES.N)
private fun resumeRecording() {
    Toast.makeText(this,&quot;Resume!&quot;, Toast.LENGTH_SHORT).show()
    mediaRecorder?.resume()
    button_pause_recording.text = &quot;Pause&quot;
    recordingStopped = false // &lt;&lt;&lt;&lt; FIX HERE
}


private fun pauseRecording() {

    if(state) {
        pauseTimer()
        Toast.makeText(this,&quot;This is working&quot;, Toast.LENGTH_SHORT).show()
        if(!recordingStopped){
            Toast.makeText(this,&quot;Stopped!&quot;, Toast.LENGTH_SHORT).show()
            mediaRecorder?.pause()
            recordingStopped = true // &lt;&lt;&lt;&lt; FIX HERE
            button_pause_recording.text = &quot;Resume&quot;
        }else{
            resumeRecording()
            resumeTimer()
        }
    }else{
        Toast.makeText(this,&quot;this is not working&quot;, Toast.LENGTH_SHORT).show()
    }
}
</code></pre>
<p>In <code>stopRecording()</code>, the <code>recordingStopped</code> value should be updated:</p>
<pre><code>private fun stopRecording(){

    stopTimer()
    if(state){
        mediaRecorder?.stop()
        mediaRecorder?.release()
        state = false
        simpleChronometer.stop()
        recordingStopped = true // &lt;&lt;&lt;&lt;&lt;&lt;&lt; UPDATE HERE
    }else{
        Toast.makeText(this, &quot;You are not recording right now!&quot;, Toast.LENGTH_SHORT).show()
    }
}
</code></pre>
",0
IllegalArgumentException,Kotlin,environment,60402858,"<p>You would want to throw a NullPointerException whenever a <code>null</code> value would indicate that the code itself is incorrect. Just as you might explicitly throw an IllegalArgumentException if an invalid argument indicates that the caller's code is incorrect.</p>

<p>So, the use-case for <code>!!</code> is quite similar to the use-case for <code>if(...) { throw ...; }</code>, but <code>!!</code> is shorter.</p>

<p>If the code is incorrect them you <em>want</em> to know about it, and stopping the program immediately with a stack-trace is a good way to (1) inform the programmer about the problem, and (2) provide as much useful information as possible for debugging purposes.</p>
",1
IllegalArgumentException,Kotlin,environment,68521571,"<p>It is a semantic difference and hence it throws different exceptions. RequireNotNull is used to check input values, typically at the beginning of a method, while checkNotNull is used anywhere to check the current state.</p>
",0
IllegalArgumentException,Kotlin,environment,68522300,"<p>The exception types are the only <em>practical</em> difference, as far as the compiler is concerned — but <strong>there's a big difference in <em>intent</em></strong>, for anyone reading the code:</p>
<p>• <strong><code>require…()</code> functions</strong> are for checking parameters, to <strong>confirm that a function's input fulfils its contract</strong>. So you'd normally call them first thing in a function. (Of course, Kotlin's non-nullable types mean that you wouldn't need to call <code>requireNotNull()</code> for a single parameter; but you might need to check a more complex condition on a combination of parameters or their sub-objects.) That's why they throw <code>IllegalArgumentException</code>: it's checking that the arguments are legal.</p>
<p>• <strong><code>check…()</code> functions</strong> are for checking the relevant properties, to <strong>confirm that the object or whatever is in a valid state for this function to be called now</strong>. (Again, any properties that were <em>never</em> null would be typed accordingly, so <code>checkNotNull()</code> is more appropriate for cases where a property, combination, and/or sub-property can be null, but this function mustn't be called when they are.) So they throw <code>IllegalStateException</code>: they're checking that the object's current state allows the function to be called.</p>
<p>In both cases, you could of course write a standard <code>if</code> check (as you would in Java). Or you could use the Elvis operator <code>?:</code> to do the check the first time the possibly-null value is used. But these functions give you an alternative that's in a more declarative form: you'd normally put them at the top of the function, where they spell out what the function's contract is, in a way that's obvious to anyone glancing at the code.</p>
<p>As a linked answer points out, there are also <strong><code>assert…()</code> functions</strong>, which again have more of a semantic difference than a practical one. Those <strong>are for detecting programming errors <em>away</em> from the boundary of a function call</strong>: for confirming invariants and other conditions, and for all the checks in unit tests and other automated tests.</p>
<p>(Assertions have another important difference: they can be enabled and disabled from the command-line. Though in my experience, that's  not a very good thing. If a check is important, it should <em>always</em> be run: be mandatory; if not, then it should be removed, or at least moved to automated tests, once the code is debugged.)</p>
",1
IllegalArgumentException,Kotlin,environment,67123085,"<p>Generally one can provide the <code>Intent</code> either with Espresso - or an <code>ActivityScenarioRule</code>:</p>
<blockquote>
<p><code>ActivityScenarioRule(Intent startActivityIntent)</code><br/>
Constructs ActivityScenarioRule with a given intent.</p>
</blockquote>
<p>In Kotlin:</p>
<pre><code>lateinit var scenario: ActivityScenario&lt;SomeActivity&gt;
val intent = Intent(ApplicationProvider.getApplicationContext(), SomeActivity::class.java)

@get:Rule
val activityRule = activityScenarioRule&lt;SomeActivity&gt;(intent)

@Test
fun someTest() {
    scenario = rule.scenario
    scenario.onActivity { activity -&gt;  
        ...
    }
}

@After
fun cleanup() {
    scenario.close()
}
</code></pre>
",0
IllegalArgumentException,Kotlin,environment,64346161,"<p>If you use the built-in <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/check.html"" rel=""noreferrer""><code>check()</code></a> function (which throws <code>IllegalStateException</code>), instead of your own custom one, it works fine.</p>
<p>If you want <code>IllegalArgumentException</code>, you can use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/require.html"" rel=""noreferrer""><code>require()</code></a>.</p>
<p>You can make the compiler smart-cast on custom functions if you use the <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.contracts/-experimental-contracts/"" rel=""noreferrer""><code>@ExperimentalContracts</code></a> attribute and add a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.contracts/contract.html"" rel=""noreferrer""><code>contract</code></a>:</p>
<pre><code>@ExperimentalContracts
fun test() {
    val s: String? = &quot;&quot;
    myCheck(s != null)

    s.subSequence(0, 1) // smart cast
}

@ExperimentalContracts
inline fun myCheck(expression: Boolean) {
    contract {
        returns() implies expression
    }
    if (!expression) {
        throw IllegalArgumentException()
    }
}
</code></pre>
",1
IllegalArgumentException,Kotlin,environment,56336368,"<p>You need ""OPPO_COMPONENT_SAFE"" permission into your manifest to start Intent.</p>

<pre><code>    &lt;!--for OPPO--&gt;
&lt;uses-permission android:name=""oppo.permission.OPPO_COMPONENT_SAFE"" /&gt;
</code></pre>

<p>Reference: <a href=""https://stackoverflow.com/questions/49814755/denial-permission-oppo-component-safe"">Denial permission OPPO_COMPONENT_SAFE</a></p>
",0
IllegalArgumentException,Kotlin,environment,60282683,"<p>This is used to convert an expression to non-null and throw a <code>KotlinNullPointerException</code> if the result is null. So in this usage, it will only save the response's body was not null, otherwise an exception will be thrown.</p>

<p>See <a href=""https://kotlinlang.org/docs/reference/null-safety.html#the--operator"" rel=""nofollow noreferrer"">here</a> for more information.</p>
",0
IllegalArgumentException,Kotlin,environment,58983371,"<p>Generally you should not disable the deprecation sign of a method. In most cases the given method's KDoc/Javadoc explains what should you use instead of the deprecated method.</p>

<p><strong>What does the deprecation means? (Offical Java docs)</strong></p>

<blockquote>
  <p>A program element annotated @Deprecated is one that programmers are
  discouraged from using, typically because it is dangerous, or because
  a better alternative exists.</p>
</blockquote>

<p>Although you can disable the deprecation sign 
with an annotation at method signature level:</p>

<pre><code>@Suppress(""DEPRECATION"")
fun methodName() {
   ...
   deprecatedMethod()
   ...
}
</code></pre>
",0
IllegalArgumentException,Kotlin,alternative,60402858,"<p>You would want to throw a NullPointerException whenever a <code>null</code> value would indicate that the code itself is incorrect. Just as you might explicitly throw an IllegalArgumentException if an invalid argument indicates that the caller's code is incorrect.</p>

<p>So, the use-case for <code>!!</code> is quite similar to the use-case for <code>if(...) { throw ...; }</code>, but <code>!!</code> is shorter.</p>

<p>If the code is incorrect them you <em>want</em> to know about it, and stopping the program immediately with a stack-trace is a good way to (1) inform the programmer about the problem, and (2) provide as much useful information as possible for debugging purposes.</p>
",0
IllegalArgumentException,Kotlin,alternative,68521571,"<p>It is a semantic difference and hence it throws different exceptions. RequireNotNull is used to check input values, typically at the beginning of a method, while checkNotNull is used anywhere to check the current state.</p>
",0
IllegalArgumentException,Kotlin,alternative,68522300,"<p>The exception types are the only <em>practical</em> difference, as far as the compiler is concerned — but <strong>there's a big difference in <em>intent</em></strong>, for anyone reading the code:</p>
<p>• <strong><code>require…()</code> functions</strong> are for checking parameters, to <strong>confirm that a function's input fulfils its contract</strong>. So you'd normally call them first thing in a function. (Of course, Kotlin's non-nullable types mean that you wouldn't need to call <code>requireNotNull()</code> for a single parameter; but you might need to check a more complex condition on a combination of parameters or their sub-objects.) That's why they throw <code>IllegalArgumentException</code>: it's checking that the arguments are legal.</p>
<p>• <strong><code>check…()</code> functions</strong> are for checking the relevant properties, to <strong>confirm that the object or whatever is in a valid state for this function to be called now</strong>. (Again, any properties that were <em>never</em> null would be typed accordingly, so <code>checkNotNull()</code> is more appropriate for cases where a property, combination, and/or sub-property can be null, but this function mustn't be called when they are.) So they throw <code>IllegalStateException</code>: they're checking that the object's current state allows the function to be called.</p>
<p>In both cases, you could of course write a standard <code>if</code> check (as you would in Java). Or you could use the Elvis operator <code>?:</code> to do the check the first time the possibly-null value is used. But these functions give you an alternative that's in a more declarative form: you'd normally put them at the top of the function, where they spell out what the function's contract is, in a way that's obvious to anyone glancing at the code.</p>
<p>As a linked answer points out, there are also <strong><code>assert…()</code> functions</strong>, which again have more of a semantic difference than a practical one. Those <strong>are for detecting programming errors <em>away</em> from the boundary of a function call</strong>: for confirming invariants and other conditions, and for all the checks in unit tests and other automated tests.</p>
<p>(Assertions have another important difference: they can be enabled and disabled from the command-line. Though in my experience, that's  not a very good thing. If a check is important, it should <em>always</em> be run: be mandatory; if not, then it should be removed, or at least moved to automated tests, once the code is debugged.)</p>
",1
IllegalArgumentException,Kotlin,alternative,60282683,"<p>This is used to convert an expression to non-null and throw a <code>KotlinNullPointerException</code> if the result is null. So in this usage, it will only save the response's body was not null, otherwise an exception will be thrown.</p>

<p>See <a href=""https://kotlinlang.org/docs/reference/null-safety.html#the--operator"" rel=""nofollow noreferrer"">here</a> for more information.</p>
",0
IllegalArgumentException,Kotlin,alternative,58343222,"<p>Do <code>?: throw IllegalStateException(""Item not found"")</code> instead of doublebang. The type of <code>T? ?: throw ...</code> will be non-nullable <code>T</code>.</p>
",0
IllegalArgumentException,Kotlin,alternative,67022128,"<p>In general, <code>Obj[XXX]++</code> idiom is not prohibited in Kotlin.
The problem here is that result of <code>sockets[socket]</code> call has nullable type (<code>Int?</code>) and postfix increment expression works only for non-nullable types (because under the hood it makes <code>.inc()</code> call).</p>
<p>Look at this hypothetical example:</p>
<pre class=""lang-kotlin prettyprint-override""><code>class HashMapWithNonNullableGet&lt;K, V&gt; : HashMap&lt;K, V&gt;() {
    override fun get(key: K) : V = super.get(key)!!
}

fun sockMerchant(n: Int, ar: Array&lt;Int&gt;) {
    val sockets = HashMapWithNonNullableGet&lt;Int, Int&gt;()
    for (socket in ar) {
        if (sockets.containsKey(socket)) {
            sockets[socket]++ // sockets[socket] returns Int, so no errors here
        }
    }
    println(sockets)
}
</code></pre>
<p>In your case, it's better to refactor loop body to:</p>
<pre><code>for (socket in ar) {
    sockets.computeIfPresent(socket) { _, v -&gt; v + 1 }
}
</code></pre>
",0
IllegalArgumentException,Kotlin,alternative,59946593,"<p>Use invalidateOptionsMenu() to trigger onPrepareOptionMenu()</p>

<pre><code>var menu: Menu? = null

override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
...
viewModel.isGuest.observe(viewLifecycleOwner, Observer {
            activity?.invalidateOptionsMenu()//This will trigger onPrepareOptionsMenu
})
}

override fun onPrepareOptionsMenu(menu: Menu) {
this.menu = menu
menu.findItem(R.id.action_logout)?.isVisible = !isGuest
super.onPrepareOptionsMenu(menu)
}
</code></pre>
",0
IllegalArgumentException,Kotlin,alternative,69856343,"<p>You can replace <code> assert(password != null)</code> with <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/check-not-null.html"" rel=""nofollow noreferrer""><code>checkNotNull(password)</code></a>. It's built-in inline function and compile will smart cast <code>password</code> as not null after that.</p>
<p>On the other hand, error will throw <code>IllegalStateException</code> and not <code>AssertionException</code> in case if <code>passord</code> if null.</p>
",0
IllegalArgumentException,Kotlin,alternative,67493716,"<p>In Kotlin, throwing an Exception evaluates as an expression that returns <code>Nothing</code>. Nothing is treated like a sub-type of anything else, so that first line of code is basically an expression of type <code>Boolean || Nothing</code>, which can be simplified to just <code>Boolean</code>. Kotlin also allows a line of code to simply be an expression (many other languages like Java do not), so you can simply put this line of code to evaluate the two parts of the expression sequentially, and the throw will be skipped (short-circuited) if the first part of the expression is true.</p>
<p>While writing code like this in Kotlin is <em>possible</em>, it is certainly not idiomatic. In my opinion, it is unclear for readability. The equivalent behavior can be achieved with code that very clearly shows its intent:</p>
<pre><code>if (screens.containsKey(type)) {
    throw GdxRuntimeException(&quot;Screen already registered to type: $type.&quot;)
}
</code></pre>
",0
IllegalArgumentException,Kotlin,alternative,58983371,"<p>Generally you should not disable the deprecation sign of a method. In most cases the given method's KDoc/Javadoc explains what should you use instead of the deprecated method.</p>

<p><strong>What does the deprecation means? (Offical Java docs)</strong></p>

<blockquote>
  <p>A program element annotated @Deprecated is one that programmers are
  discouraged from using, typically because it is dangerous, or because
  a better alternative exists.</p>
</blockquote>

<p>Although you can disable the deprecation sign 
with an annotation at method signature level:</p>

<pre><code>@Suppress(""DEPRECATION"")
fun methodName() {
   ...
   deprecatedMethod()
   ...
}
</code></pre>
",0
MBeanServer,Java,functionality,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",1
MBeanServer,Java,functionality,78705687,"<p>An object must be serializable in Spring Boot mainly when it must be persisted, cached, or transferred through distributed systems.</p>
<p>Example:</p>
<ul>
<li><em><strong>Session storage</strong></em>: If an object is to be stored in an HTTP session (for example, with @SessionAttributes or HttpSession), it must implement the Serializable interface. This allows the object to be serialized and deserialized when managing sessions by the servlet container, especially if the session is persisted or distributed between multiple instances of the server.</li>
<li><em><strong>Cached storage</strong></em>: If you are using a cache mechanism (such as Ehcache, Redis, etc.) and objects need to be cached, they often need to be serializable. This allows storing and retrieving objects from the cache.</li>
</ul>
",0
MBeanServer,Java,functionality,76205045,"<p>JCache (<a href=""https://www.jcp.org/en/jsr/detail?id=107"" rel=""nofollow noreferrer"">JSR-107</a>) is simply an <em>Service Provider Interface</em> (SPI) defining an <a href=""https://javadoc.io/doc/javax.cache/cache-api/latest/index.html"" rel=""nofollow noreferrer"">API</a> for caching providers (such as Ehcache or Hazelcaset, etc) that implement the SPI.</p>
<p>JCache by itself is not a caching provider and has no real caching functionality. You need to plugin an actual implementation, such as <a href=""https://github.com/ben-manes/caffeine/wiki/JCache"" rel=""nofollow noreferrer"">Caffeine</a>, <a href=""https://www.ehcache.org/documentation/3.7/107.html"" rel=""nofollow noreferrer"">Ehcache</a>, <a href=""https://docs.hazelcast.com/imdg/4.2/jcache/hazelcast-integration"" rel=""nofollow noreferrer"">Hazelcast</a>, etc.</p>
<p>AFAIK, the <code>hibernate-jCache</code> is simply and integration and adapter layer between Hibernate to use the JCache API an an implementing caching provider as a 2nd-level cache in Hibernate.</p>
<p>Using JCache simply enables you to plugin any compliant caching provider, of your choice, and mileage (aka capabilities) varies by caching provider. Some are simple in-memory stores while others are full-blown In-Memory Data Grids (IMDGs) complete with database-like functionality (e.g. persistence, transactions, functions, etc).</p>
<p>Hope this helps clarify the position if JCache here.</p>
",0
MBeanServer,Java,functionality,78210108,"<p>The session object won't be set in your UserResource, but with embedded KeyCloak, you can get it in EmbeddedKeycloakRequestFilter:</p>
<pre><code>public class EmbeddedKeycloakRequestFilter extends AbstractRequestFilter implements Filter {

    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws UnsupportedEncodingException {
        servletRequest.setCharacterEncoding(&quot;UTF-8&quot;);
        ClientConnection clientConnection = createConnection((HttpServletRequest) servletRequest);

        filter(clientConnection, (session) -&gt; {
            try {
                filterChain.doFilter(servletRequest, servletResponse);

                RealmModel realm = session.getContext().getRealm();

                System.out.println(realm.getName());
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        });
    }

    private ClientConnection createConnection(HttpServletRequest request) {
        return new ClientConnection() {
            @Override
            public String getRemoteAddr() {
                return request.getRemoteAddr();
            }

            @Override
            public String getRemoteHost() {
                return request.getRemoteHost();
            }

            @Override
            public int getRemotePort() {
                return request.getRemotePort();
            }

            @Override
            public String getLocalAddr() {
                return request.getLocalAddr();
            }

            @Override
            public int getLocalPort() {
                return request.getLocalPort();
            }
        };
    }
}
</code></pre>
",0
MBeanServer,Java,functionality,72321630,"<p>The HTTP Session is a temporary store in the backend, where you store something based on previous requests. As soon as you store something there, the backend will return a Set-Cookie header to the browser with a JSESSIONID that the browser stores for the user. For the next calls, the browser will send the same JSESSIONID cookie, and the backend will use it as a key to retrieve the previously saved data for that user's browser.</p>
<p>If you're migrating to a React JS application, I think there's no need to store tokens in the backend, and use cookies with only JSESSIONID in. Instead, the frontend can store all the necessary data client-side.</p>
<p>I think there's multiple options:</p>
<ol>
<li>Keep it in React state (in the browser's memory)</li>
<li>Keep it in a Cookie that you manage via the frontend</li>
<li>Keep it in the browser's localStorage (less secure, I think)</li>
</ol>
",0
MBeanServer,Java,functionality,72320344,"<p>Implement your own <code>HttpSessionListener</code> and annotate it with <code>@WebListener</code> The container should recognize this and will call the the <code>sessionDestroyed()</code> method in your implementation. Your class is eligible for CDI Injection so in <code>sessionDestroyed()</code>, you can fire an event and listen for it with a CDI Observer.</p>
<p>Ref: <a href=""https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html</a></p>
<h1>EDIT:</h1>
<p>Try this then: Scope your <code>HttpSessionListener</code> impl to <code>@ApplicationScoped</code>. Have a synchronized Map of sessionId/username. In <code>sessionCreated()</code> insert into the map,  and on <code>sessionDestroyed()</code> remove it in a <code>finally</code> block.</p>
<p>The container will also have several implicit <code>HttpSessionListener</code>s, so there's a chance yours is being called last long after the session is invalidated. If thats the case, there's another technique you can use to insert your <code>HttpSessionListener</code> impl first. Try the above technique first then we can dive into this.</p>
",0
MBeanServer,Java,functionality,74434060,"<p>Enable transactions in the listener so that any/all downstream <code>RabbitTemplate</code> operations participate in the same transaction.</p>
<p>If there is a failure, the container will rollback the transaction (removing the publishes), nack the message (or messages if batch size is greater than one) and then commit the nacks so the message(s) will be redelivered.</p>
<p>When using an external transaction manager (such as JDBC), the container will synchronize the AMQP transaction with the external transaction.</p>
<p>Downstream templates participate in the transaction regardless of whether it is local (AMQP only) or synchronized.</p>
",0
MBeanServer,Java,functionality,77067072,"<p>You can use a <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer""><code>QueueBrowser</code></a>. You can create the browser using <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/session#createBrowser-jakarta.jms.Queue-"" rel=""nofollow noreferrer""><code>Session.createBrowser(Queue)</code></a>. As the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer"">API doc</a> states:</p>
<blockquote>
<p>A client uses a <code>QueueBrowser</code> object to look at messages on a queue without removing them.</p>
<p>The <code>getEnumeration</code> method returns a <code>java.util.Enumeration</code> that is used to scan the queue's messages. It may be an enumeration of the entire content of a queue, or it may contain only the messages matching a message selector.</p>
</blockquote>
<p>The <code>Enumeration</code> contains instances of the <code>javax.jms.Message</code> objects from the queue. Therefore you can inspect all the message's headers, properties, and body.</p>
",0
MBeanServer,Java,functionality,76065417,"<p>The Files.write() takes an optional parameter, which specifies the mode for opening the file. The default is CREATE, TRUNCATE_EXISTING (Thanks @Slaw) so you are overwriting the file each time. In your case you need:</p>
<pre><code>List&lt;String&gt; lines=Files.readAllLines(oldFile1);
Files.write(newFile,lines, StandardOpenOption.CREATE);
          
List&lt;String&gt; lines1=Files.readAllLines(oldFile2);
Files.write(newFile,lines1,  StandardOpenOption.APPEND);
</code></pre>
",0
MBeanServer,Java,functionality,72996855,"<p>Your classpath contains incompatible dependencies. Specifically, the version of Spring Framework's <code>spring-context</code> jar that you are using is not compatible with the version of Spring Boot's <code>spring-boot</code> jar. Using Spring Boot's dependency management and allowing it to control the versions of your application's dependencies is the recommended way to avoid this problem.</p>
",0
MBeanServer,Java,concept,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",1
MBeanServer,Java,concept,78705687,"<p>An object must be serializable in Spring Boot mainly when it must be persisted, cached, or transferred through distributed systems.</p>
<p>Example:</p>
<ul>
<li><em><strong>Session storage</strong></em>: If an object is to be stored in an HTTP session (for example, with @SessionAttributes or HttpSession), it must implement the Serializable interface. This allows the object to be serialized and deserialized when managing sessions by the servlet container, especially if the session is persisted or distributed between multiple instances of the server.</li>
<li><em><strong>Cached storage</strong></em>: If you are using a cache mechanism (such as Ehcache, Redis, etc.) and objects need to be cached, they often need to be serializable. This allows storing and retrieving objects from the cache.</li>
</ul>
",0
MBeanServer,Java,concept,72321630,"<p>The HTTP Session is a temporary store in the backend, where you store something based on previous requests. As soon as you store something there, the backend will return a Set-Cookie header to the browser with a JSESSIONID that the browser stores for the user. For the next calls, the browser will send the same JSESSIONID cookie, and the backend will use it as a key to retrieve the previously saved data for that user's browser.</p>
<p>If you're migrating to a React JS application, I think there's no need to store tokens in the backend, and use cookies with only JSESSIONID in. Instead, the frontend can store all the necessary data client-side.</p>
<p>I think there's multiple options:</p>
<ol>
<li>Keep it in React state (in the browser's memory)</li>
<li>Keep it in a Cookie that you manage via the frontend</li>
<li>Keep it in the browser's localStorage (less secure, I think)</li>
</ol>
",0
MBeanServer,Java,concept,76205045,"<p>JCache (<a href=""https://www.jcp.org/en/jsr/detail?id=107"" rel=""nofollow noreferrer"">JSR-107</a>) is simply an <em>Service Provider Interface</em> (SPI) defining an <a href=""https://javadoc.io/doc/javax.cache/cache-api/latest/index.html"" rel=""nofollow noreferrer"">API</a> for caching providers (such as Ehcache or Hazelcaset, etc) that implement the SPI.</p>
<p>JCache by itself is not a caching provider and has no real caching functionality. You need to plugin an actual implementation, such as <a href=""https://github.com/ben-manes/caffeine/wiki/JCache"" rel=""nofollow noreferrer"">Caffeine</a>, <a href=""https://www.ehcache.org/documentation/3.7/107.html"" rel=""nofollow noreferrer"">Ehcache</a>, <a href=""https://docs.hazelcast.com/imdg/4.2/jcache/hazelcast-integration"" rel=""nofollow noreferrer"">Hazelcast</a>, etc.</p>
<p>AFAIK, the <code>hibernate-jCache</code> is simply and integration and adapter layer between Hibernate to use the JCache API an an implementing caching provider as a 2nd-level cache in Hibernate.</p>
<p>Using JCache simply enables you to plugin any compliant caching provider, of your choice, and mileage (aka capabilities) varies by caching provider. Some are simple in-memory stores while others are full-blown In-Memory Data Grids (IMDGs) complete with database-like functionality (e.g. persistence, transactions, functions, etc).</p>
<p>Hope this helps clarify the position if JCache here.</p>
",0
MBeanServer,Java,concept,77373518,"<p>Please refer <a href=""https://docs.oracle.com/javaee/7/api/javax/persistence/EntityManager.html"" rel=""nofollow noreferrer"">EntityManager link</a></p>
<blockquote>
<p>An EntityManager instance is associated with a persistence context. A persistence context is a set of entity instances in which for any persistent entity identity there is a unique entity instance. Within the persistence context, the entity instances and their lifecycle are managed. The EntityManager API is used to create and remove persistent entity instances, to find entities by their primary key, and to query over entities.</p>
</blockquote>
<p>Your configuration looks fine. refer this <a href=""https://github.com/eugenp/tutorials/tree/master/persistence-modules/spring-data-jdbc/src/main/java/com/baeldung/springmultipledatasources"" rel=""nofollow noreferrer"">github repository link</a></p>
<p>We can define entity, repository and invoke inthe service layer.</p>
<p>Entity:</p>
<pre><code>package eu.example.domain.entity.ds1.model;
@Entity
public class Customer implements Serializable {
// getter setters
}
</code></pre>
<p>Repository:</p>
<pre><code>package eu.example.domain.entity.ds1.repository;
@Repository
public interface CustomerRepository extends JpaRepository&lt;Customer, Integer&gt; {}
</code></pre>
<p>Service:</p>
<pre><code>package eu.example.domain.entity.ds1.service;
@Service
public class CustomerServiceImpl implements CustomerService {

    @Autowired
    CustomerRepository customerRepository;

    @Override
    public List&lt;ClientSetting&gt; findClientDataSourceSettings() {

        return customerRepository.findAll();
    }

}
</code></pre>
<p>Alternative</p>
<pre><code>@Repository
public class CustomerInfoRepository {

    @Autowired
    @Qualifier(&quot;ds1EntityManagerFactoryBean&quot;)
    private EntityManager entityManager;

    public List&lt;Customer&gt; getCustomerInfo() {

        Query query = entityManager.createNativeQuery(....);
        return  query.getResultList();

    }

    @Transactional(&quot;ds1TransactionManager&quot;)
    public void updateCustomerInfo(String name, Long id) {
        Query query = entityManager.createQuery(....);
         query.executeUpdate();
    }
}
</code></pre>
",0
MBeanServer,Java,concept,77067072,"<p>You can use a <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer""><code>QueueBrowser</code></a>. You can create the browser using <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/session#createBrowser-jakarta.jms.Queue-"" rel=""nofollow noreferrer""><code>Session.createBrowser(Queue)</code></a>. As the <a href=""https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/queuebrowser"" rel=""nofollow noreferrer"">API doc</a> states:</p>
<blockquote>
<p>A client uses a <code>QueueBrowser</code> object to look at messages on a queue without removing them.</p>
<p>The <code>getEnumeration</code> method returns a <code>java.util.Enumeration</code> that is used to scan the queue's messages. It may be an enumeration of the entire content of a queue, or it may contain only the messages matching a message selector.</p>
</blockquote>
<p>The <code>Enumeration</code> contains instances of the <code>javax.jms.Message</code> objects from the queue. Therefore you can inspect all the message's headers, properties, and body.</p>
",0
MBeanServer,Java,concept,78210108,"<p>The session object won't be set in your UserResource, but with embedded KeyCloak, you can get it in EmbeddedKeycloakRequestFilter:</p>
<pre><code>public class EmbeddedKeycloakRequestFilter extends AbstractRequestFilter implements Filter {

    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws UnsupportedEncodingException {
        servletRequest.setCharacterEncoding(&quot;UTF-8&quot;);
        ClientConnection clientConnection = createConnection((HttpServletRequest) servletRequest);

        filter(clientConnection, (session) -&gt; {
            try {
                filterChain.doFilter(servletRequest, servletResponse);

                RealmModel realm = session.getContext().getRealm();

                System.out.println(realm.getName());
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        });
    }

    private ClientConnection createConnection(HttpServletRequest request) {
        return new ClientConnection() {
            @Override
            public String getRemoteAddr() {
                return request.getRemoteAddr();
            }

            @Override
            public String getRemoteHost() {
                return request.getRemoteHost();
            }

            @Override
            public int getRemotePort() {
                return request.getRemotePort();
            }

            @Override
            public String getLocalAddr() {
                return request.getLocalAddr();
            }

            @Override
            public int getLocalPort() {
                return request.getLocalPort();
            }
        };
    }
}
</code></pre>
",0
MBeanServer,Java,concept,74434060,"<p>Enable transactions in the listener so that any/all downstream <code>RabbitTemplate</code> operations participate in the same transaction.</p>
<p>If there is a failure, the container will rollback the transaction (removing the publishes), nack the message (or messages if batch size is greater than one) and then commit the nacks so the message(s) will be redelivered.</p>
<p>When using an external transaction manager (such as JDBC), the container will synchronize the AMQP transaction with the external transaction.</p>
<p>Downstream templates participate in the transaction regardless of whether it is local (AMQP only) or synchronized.</p>
",0
MBeanServer,Java,concept,73418272,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",0
MBeanServer,Java,concept,77374349,"<p>The <code>AmazonEc2InstanceDataPropertySource</code> class fetches <a href=""https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html"" rel=""nofollow noreferrer"">EC2 instance metadata</a> properties via the IMDS (Instance Metadata Service), for the current EC2 instance.</p>
<p>It seems to have been replaced with <a href=""https://javadoc.io/static/org.springframework.cloud/spring-cloud-aws-context/2.2.6.RELEASE/org/springframework/cloud/aws/context/config/annotation/EnableContextInstanceData.html"" rel=""nofollow noreferrer""><code>@EnableContextInstanceData</code></a> (not needed in Spring Boot with the <a href=""https://docs.awspring.io/spring-cloud-aws/docs/2.3.2/reference/html/index.html#enabling-instance-metadata-support-in-spring-boot"" rel=""nofollow noreferrer"">right configuration</a>) &amp; field injection using <a href=""https://docs.awspring.io/spring-cloud-aws/docs/2.3.2/reference/html/index.html#retrieving-instance-metadata"" rel=""nofollow noreferrer""><code>Value</code></a> annotations.</p>
<p>In your case, as you're looking to get the AMI ID and other properties, inject these properties directly using the @Value annotation.</p>
<pre class=""lang-java prettyprint-override""><code>@Configuration
@EnableContextInstanceData
public static class MyConfig {}
</code></pre>
<pre class=""lang-java prettyprint-override""><code>@Value(&quot;${ami-id}&quot;)
private String amiId;

@Value(&quot;${hostname}&quot;)
private String hostname;

@Value(&quot;${instance-type}&quot;)
private String instanceType;

@Value(&quot;${services/domain}&quot;)
private String serviceDomain;
</code></pre>
",0
MBeanServer,Java,performance,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",0
MBeanServer,Java,performance,78705687,"<p>An object must be serializable in Spring Boot mainly when it must be persisted, cached, or transferred through distributed systems.</p>
<p>Example:</p>
<ul>
<li><em><strong>Session storage</strong></em>: If an object is to be stored in an HTTP session (for example, with @SessionAttributes or HttpSession), it must implement the Serializable interface. This allows the object to be serialized and deserialized when managing sessions by the servlet container, especially if the session is persisted or distributed between multiple instances of the server.</li>
<li><em><strong>Cached storage</strong></em>: If you are using a cache mechanism (such as Ehcache, Redis, etc.) and objects need to be cached, they often need to be serializable. This allows storing and retrieving objects from the cache.</li>
</ul>
",0
MBeanServer,Java,performance,72321630,"<p>The HTTP Session is a temporary store in the backend, where you store something based on previous requests. As soon as you store something there, the backend will return a Set-Cookie header to the browser with a JSESSIONID that the browser stores for the user. For the next calls, the browser will send the same JSESSIONID cookie, and the backend will use it as a key to retrieve the previously saved data for that user's browser.</p>
<p>If you're migrating to a React JS application, I think there's no need to store tokens in the backend, and use cookies with only JSESSIONID in. Instead, the frontend can store all the necessary data client-side.</p>
<p>I think there's multiple options:</p>
<ol>
<li>Keep it in React state (in the browser's memory)</li>
<li>Keep it in a Cookie that you manage via the frontend</li>
<li>Keep it in the browser's localStorage (less secure, I think)</li>
</ol>
",0
MBeanServer,Java,performance,76205045,"<p>JCache (<a href=""https://www.jcp.org/en/jsr/detail?id=107"" rel=""nofollow noreferrer"">JSR-107</a>) is simply an <em>Service Provider Interface</em> (SPI) defining an <a href=""https://javadoc.io/doc/javax.cache/cache-api/latest/index.html"" rel=""nofollow noreferrer"">API</a> for caching providers (such as Ehcache or Hazelcaset, etc) that implement the SPI.</p>
<p>JCache by itself is not a caching provider and has no real caching functionality. You need to plugin an actual implementation, such as <a href=""https://github.com/ben-manes/caffeine/wiki/JCache"" rel=""nofollow noreferrer"">Caffeine</a>, <a href=""https://www.ehcache.org/documentation/3.7/107.html"" rel=""nofollow noreferrer"">Ehcache</a>, <a href=""https://docs.hazelcast.com/imdg/4.2/jcache/hazelcast-integration"" rel=""nofollow noreferrer"">Hazelcast</a>, etc.</p>
<p>AFAIK, the <code>hibernate-jCache</code> is simply and integration and adapter layer between Hibernate to use the JCache API an an implementing caching provider as a 2nd-level cache in Hibernate.</p>
<p>Using JCache simply enables you to plugin any compliant caching provider, of your choice, and mileage (aka capabilities) varies by caching provider. Some are simple in-memory stores while others are full-blown In-Memory Data Grids (IMDGs) complete with database-like functionality (e.g. persistence, transactions, functions, etc).</p>
<p>Hope this helps clarify the position if JCache here.</p>
",0
MBeanServer,Java,performance,78210108,"<p>The session object won't be set in your UserResource, but with embedded KeyCloak, you can get it in EmbeddedKeycloakRequestFilter:</p>
<pre><code>public class EmbeddedKeycloakRequestFilter extends AbstractRequestFilter implements Filter {

    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws UnsupportedEncodingException {
        servletRequest.setCharacterEncoding(&quot;UTF-8&quot;);
        ClientConnection clientConnection = createConnection((HttpServletRequest) servletRequest);

        filter(clientConnection, (session) -&gt; {
            try {
                filterChain.doFilter(servletRequest, servletResponse);

                RealmModel realm = session.getContext().getRealm();

                System.out.println(realm.getName());
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        });
    }

    private ClientConnection createConnection(HttpServletRequest request) {
        return new ClientConnection() {
            @Override
            public String getRemoteAddr() {
                return request.getRemoteAddr();
            }

            @Override
            public String getRemoteHost() {
                return request.getRemoteHost();
            }

            @Override
            public int getRemotePort() {
                return request.getRemotePort();
            }

            @Override
            public String getLocalAddr() {
                return request.getLocalAddr();
            }

            @Override
            public int getLocalPort() {
                return request.getLocalPort();
            }
        };
    }
}
</code></pre>
",0
MBeanServer,Java,performance,72320344,"<p>Implement your own <code>HttpSessionListener</code> and annotate it with <code>@WebListener</code> The container should recognize this and will call the the <code>sessionDestroyed()</code> method in your implementation. Your class is eligible for CDI Injection so in <code>sessionDestroyed()</code>, you can fire an event and listen for it with a CDI Observer.</p>
<p>Ref: <a href=""https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html</a></p>
<h1>EDIT:</h1>
<p>Try this then: Scope your <code>HttpSessionListener</code> impl to <code>@ApplicationScoped</code>. Have a synchronized Map of sessionId/username. In <code>sessionCreated()</code> insert into the map,  and on <code>sessionDestroyed()</code> remove it in a <code>finally</code> block.</p>
<p>The container will also have several implicit <code>HttpSessionListener</code>s, so there's a chance yours is being called last long after the session is invalidated. If thats the case, there's another technique you can use to insert your <code>HttpSessionListener</code> impl first. Try the above technique first then we can dive into this.</p>
",0
MBeanServer,Java,performance,74434060,"<p>Enable transactions in the listener so that any/all downstream <code>RabbitTemplate</code> operations participate in the same transaction.</p>
<p>If there is a failure, the container will rollback the transaction (removing the publishes), nack the message (or messages if batch size is greater than one) and then commit the nacks so the message(s) will be redelivered.</p>
<p>When using an external transaction manager (such as JDBC), the container will synchronize the AMQP transaction with the external transaction.</p>
<p>Downstream templates participate in the transaction regardless of whether it is local (AMQP only) or synchronized.</p>
",0
MBeanServer,Java,performance,73418272,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",0
MBeanServer,Java,performance,72996855,"<p>Your classpath contains incompatible dependencies. Specifically, the version of Spring Framework's <code>spring-context</code> jar that you are using is not compatible with the version of Spring Boot's <code>spring-boot</code> jar. Using Spring Boot's dependency management and allowing it to control the versions of your application's dependencies is the recommended way to avoid this problem.</p>
",0
MBeanServer,Java,performance,77374349,"<p>The <code>AmazonEc2InstanceDataPropertySource</code> class fetches <a href=""https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html"" rel=""nofollow noreferrer"">EC2 instance metadata</a> properties via the IMDS (Instance Metadata Service), for the current EC2 instance.</p>
<p>It seems to have been replaced with <a href=""https://javadoc.io/static/org.springframework.cloud/spring-cloud-aws-context/2.2.6.RELEASE/org/springframework/cloud/aws/context/config/annotation/EnableContextInstanceData.html"" rel=""nofollow noreferrer""><code>@EnableContextInstanceData</code></a> (not needed in Spring Boot with the <a href=""https://docs.awspring.io/spring-cloud-aws/docs/2.3.2/reference/html/index.html#enabling-instance-metadata-support-in-spring-boot"" rel=""nofollow noreferrer"">right configuration</a>) &amp; field injection using <a href=""https://docs.awspring.io/spring-cloud-aws/docs/2.3.2/reference/html/index.html#retrieving-instance-metadata"" rel=""nofollow noreferrer""><code>Value</code></a> annotations.</p>
<p>In your case, as you're looking to get the AMI ID and other properties, inject these properties directly using the @Value annotation.</p>
<pre class=""lang-java prettyprint-override""><code>@Configuration
@EnableContextInstanceData
public static class MyConfig {}
</code></pre>
<pre class=""lang-java prettyprint-override""><code>@Value(&quot;${ami-id}&quot;)
private String amiId;

@Value(&quot;${hostname}&quot;)
private String hostname;

@Value(&quot;${instance-type}&quot;)
private String instanceType;

@Value(&quot;${services/domain}&quot;)
private String serviceDomain;
</code></pre>
",0
MBeanServer,Java,directive,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",1
MBeanServer,Java,directive,78705687,"<p>An object must be serializable in Spring Boot mainly when it must be persisted, cached, or transferred through distributed systems.</p>
<p>Example:</p>
<ul>
<li><em><strong>Session storage</strong></em>: If an object is to be stored in an HTTP session (for example, with @SessionAttributes or HttpSession), it must implement the Serializable interface. This allows the object to be serialized and deserialized when managing sessions by the servlet container, especially if the session is persisted or distributed between multiple instances of the server.</li>
<li><em><strong>Cached storage</strong></em>: If you are using a cache mechanism (such as Ehcache, Redis, etc.) and objects need to be cached, they often need to be serializable. This allows storing and retrieving objects from the cache.</li>
</ul>
",0
MBeanServer,Java,directive,72321630,"<p>The HTTP Session is a temporary store in the backend, where you store something based on previous requests. As soon as you store something there, the backend will return a Set-Cookie header to the browser with a JSESSIONID that the browser stores for the user. For the next calls, the browser will send the same JSESSIONID cookie, and the backend will use it as a key to retrieve the previously saved data for that user's browser.</p>
<p>If you're migrating to a React JS application, I think there's no need to store tokens in the backend, and use cookies with only JSESSIONID in. Instead, the frontend can store all the necessary data client-side.</p>
<p>I think there's multiple options:</p>
<ol>
<li>Keep it in React state (in the browser's memory)</li>
<li>Keep it in a Cookie that you manage via the frontend</li>
<li>Keep it in the browser's localStorage (less secure, I think)</li>
</ol>
",0
MBeanServer,Java,directive,72320344,"<p>Implement your own <code>HttpSessionListener</code> and annotate it with <code>@WebListener</code> The container should recognize this and will call the the <code>sessionDestroyed()</code> method in your implementation. Your class is eligible for CDI Injection so in <code>sessionDestroyed()</code>, you can fire an event and listen for it with a CDI Observer.</p>
<p>Ref: <a href=""https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html</a></p>
<h1>EDIT:</h1>
<p>Try this then: Scope your <code>HttpSessionListener</code> impl to <code>@ApplicationScoped</code>. Have a synchronized Map of sessionId/username. In <code>sessionCreated()</code> insert into the map,  and on <code>sessionDestroyed()</code> remove it in a <code>finally</code> block.</p>
<p>The container will also have several implicit <code>HttpSessionListener</code>s, so there's a chance yours is being called last long after the session is invalidated. If thats the case, there's another technique you can use to insert your <code>HttpSessionListener</code> impl first. Try the above technique first then we can dive into this.</p>
",0
MBeanServer,Java,directive,77025140,"<p>You need to <code>takePersistableUriPermission()</code> to keep access across runs without re-asking the user to choose the directory.</p>
<p>See <a href=""https://developer.android.com/training/data-storage/shared/documents-files#persist-permissions"" rel=""nofollow noreferrer"">Persist permissions</a> for details on how to do this.</p>
",0
MBeanServer,Java,directive,76205045,"<p>JCache (<a href=""https://www.jcp.org/en/jsr/detail?id=107"" rel=""nofollow noreferrer"">JSR-107</a>) is simply an <em>Service Provider Interface</em> (SPI) defining an <a href=""https://javadoc.io/doc/javax.cache/cache-api/latest/index.html"" rel=""nofollow noreferrer"">API</a> for caching providers (such as Ehcache or Hazelcaset, etc) that implement the SPI.</p>
<p>JCache by itself is not a caching provider and has no real caching functionality. You need to plugin an actual implementation, such as <a href=""https://github.com/ben-manes/caffeine/wiki/JCache"" rel=""nofollow noreferrer"">Caffeine</a>, <a href=""https://www.ehcache.org/documentation/3.7/107.html"" rel=""nofollow noreferrer"">Ehcache</a>, <a href=""https://docs.hazelcast.com/imdg/4.2/jcache/hazelcast-integration"" rel=""nofollow noreferrer"">Hazelcast</a>, etc.</p>
<p>AFAIK, the <code>hibernate-jCache</code> is simply and integration and adapter layer between Hibernate to use the JCache API an an implementing caching provider as a 2nd-level cache in Hibernate.</p>
<p>Using JCache simply enables you to plugin any compliant caching provider, of your choice, and mileage (aka capabilities) varies by caching provider. Some are simple in-memory stores while others are full-blown In-Memory Data Grids (IMDGs) complete with database-like functionality (e.g. persistence, transactions, functions, etc).</p>
<p>Hope this helps clarify the position if JCache here.</p>
",0
MBeanServer,Java,directive,72996855,"<p>Your classpath contains incompatible dependencies. Specifically, the version of Spring Framework's <code>spring-context</code> jar that you are using is not compatible with the version of Spring Boot's <code>spring-boot</code> jar. Using Spring Boot's dependency management and allowing it to control the versions of your application's dependencies is the recommended way to avoid this problem.</p>
",0
MBeanServer,Java,directive,74434060,"<p>Enable transactions in the listener so that any/all downstream <code>RabbitTemplate</code> operations participate in the same transaction.</p>
<p>If there is a failure, the container will rollback the transaction (removing the publishes), nack the message (or messages if batch size is greater than one) and then commit the nacks so the message(s) will be redelivered.</p>
<p>When using an external transaction manager (such as JDBC), the container will synchronize the AMQP transaction with the external transaction.</p>
<p>Downstream templates participate in the transaction regardless of whether it is local (AMQP only) or synchronized.</p>
",0
MBeanServer,Java,directive,77031748,"<p>This behavior is due to how sessions are managed in web browsers and Spring Security.</p>
<p><strong>Browser Session Behavior:</strong>
When you log in to your application in one tab, Spring Security creates a session and stores it as a cookie in your browser. Opening a new tab in the same browser shares cookies, which means the new tab is also aware of the session you've established. Thus, you're already authenticated in the new tab.</p>
<p><strong>Spring Security Default Session Management:</strong>
By default, Spring Security uses a session management strategy that doesn't restrict sessions to a single browser tab. Therefore, when you open a new tab, you remain authenticated until the session expires or you log out.</p>
<p>If you want to force a new log in every time a new tab is opened (which might not be a great user experience), you'd need a custom session management strategy. To do so you can set the session to be stateless</p>
",0
MBeanServer,Java,directive,76065417,"<p>The Files.write() takes an optional parameter, which specifies the mode for opening the file. The default is CREATE, TRUNCATE_EXISTING (Thanks @Slaw) so you are overwriting the file each time. In your case you need:</p>
<pre><code>List&lt;String&gt; lines=Files.readAllLines(oldFile1);
Files.write(newFile,lines, StandardOpenOption.CREATE);
          
List&lt;String&gt; lines1=Files.readAllLines(oldFile2);
Files.write(newFile,lines1,  StandardOpenOption.APPEND);
</code></pre>
",0
MBeanServer,Java,pattern,78705687,"<p>An object must be serializable in Spring Boot mainly when it must be persisted, cached, or transferred through distributed systems.</p>
<p>Example:</p>
<ul>
<li><em><strong>Session storage</strong></em>: If an object is to be stored in an HTTP session (for example, with @SessionAttributes or HttpSession), it must implement the Serializable interface. This allows the object to be serialized and deserialized when managing sessions by the servlet container, especially if the session is persisted or distributed between multiple instances of the server.</li>
<li><em><strong>Cached storage</strong></em>: If you are using a cache mechanism (such as Ehcache, Redis, etc.) and objects need to be cached, they often need to be serializable. This allows storing and retrieving objects from the cache.</li>
</ul>
",0
MBeanServer,Java,pattern,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",1
MBeanServer,Java,pattern,76065417,"<p>The Files.write() takes an optional parameter, which specifies the mode for opening the file. The default is CREATE, TRUNCATE_EXISTING (Thanks @Slaw) so you are overwriting the file each time. In your case you need:</p>
<pre><code>List&lt;String&gt; lines=Files.readAllLines(oldFile1);
Files.write(newFile,lines, StandardOpenOption.CREATE);
          
List&lt;String&gt; lines1=Files.readAllLines(oldFile2);
Files.write(newFile,lines1,  StandardOpenOption.APPEND);
</code></pre>
",0
MBeanServer,Java,pattern,72321630,"<p>The HTTP Session is a temporary store in the backend, where you store something based on previous requests. As soon as you store something there, the backend will return a Set-Cookie header to the browser with a JSESSIONID that the browser stores for the user. For the next calls, the browser will send the same JSESSIONID cookie, and the backend will use it as a key to retrieve the previously saved data for that user's browser.</p>
<p>If you're migrating to a React JS application, I think there's no need to store tokens in the backend, and use cookies with only JSESSIONID in. Instead, the frontend can store all the necessary data client-side.</p>
<p>I think there's multiple options:</p>
<ol>
<li>Keep it in React state (in the browser's memory)</li>
<li>Keep it in a Cookie that you manage via the frontend</li>
<li>Keep it in the browser's localStorage (less secure, I think)</li>
</ol>
",0
MBeanServer,Java,pattern,78210108,"<p>The session object won't be set in your UserResource, but with embedded KeyCloak, you can get it in EmbeddedKeycloakRequestFilter:</p>
<pre><code>public class EmbeddedKeycloakRequestFilter extends AbstractRequestFilter implements Filter {

    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws UnsupportedEncodingException {
        servletRequest.setCharacterEncoding(&quot;UTF-8&quot;);
        ClientConnection clientConnection = createConnection((HttpServletRequest) servletRequest);

        filter(clientConnection, (session) -&gt; {
            try {
                filterChain.doFilter(servletRequest, servletResponse);

                RealmModel realm = session.getContext().getRealm();

                System.out.println(realm.getName());
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        });
    }

    private ClientConnection createConnection(HttpServletRequest request) {
        return new ClientConnection() {
            @Override
            public String getRemoteAddr() {
                return request.getRemoteAddr();
            }

            @Override
            public String getRemoteHost() {
                return request.getRemoteHost();
            }

            @Override
            public int getRemotePort() {
                return request.getRemotePort();
            }

            @Override
            public String getLocalAddr() {
                return request.getLocalAddr();
            }

            @Override
            public int getLocalPort() {
                return request.getLocalPort();
            }
        };
    }
}
</code></pre>
",0
MBeanServer,Java,pattern,72320344,"<p>Implement your own <code>HttpSessionListener</code> and annotate it with <code>@WebListener</code> The container should recognize this and will call the the <code>sessionDestroyed()</code> method in your implementation. Your class is eligible for CDI Injection so in <code>sessionDestroyed()</code>, you can fire an event and listen for it with a CDI Observer.</p>
<p>Ref: <a href=""https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html</a></p>
<h1>EDIT:</h1>
<p>Try this then: Scope your <code>HttpSessionListener</code> impl to <code>@ApplicationScoped</code>. Have a synchronized Map of sessionId/username. In <code>sessionCreated()</code> insert into the map,  and on <code>sessionDestroyed()</code> remove it in a <code>finally</code> block.</p>
<p>The container will also have several implicit <code>HttpSessionListener</code>s, so there's a chance yours is being called last long after the session is invalidated. If thats the case, there's another technique you can use to insert your <code>HttpSessionListener</code> impl first. Try the above technique first then we can dive into this.</p>
",0
MBeanServer,Java,pattern,76205045,"<p>JCache (<a href=""https://www.jcp.org/en/jsr/detail?id=107"" rel=""nofollow noreferrer"">JSR-107</a>) is simply an <em>Service Provider Interface</em> (SPI) defining an <a href=""https://javadoc.io/doc/javax.cache/cache-api/latest/index.html"" rel=""nofollow noreferrer"">API</a> for caching providers (such as Ehcache or Hazelcaset, etc) that implement the SPI.</p>
<p>JCache by itself is not a caching provider and has no real caching functionality. You need to plugin an actual implementation, such as <a href=""https://github.com/ben-manes/caffeine/wiki/JCache"" rel=""nofollow noreferrer"">Caffeine</a>, <a href=""https://www.ehcache.org/documentation/3.7/107.html"" rel=""nofollow noreferrer"">Ehcache</a>, <a href=""https://docs.hazelcast.com/imdg/4.2/jcache/hazelcast-integration"" rel=""nofollow noreferrer"">Hazelcast</a>, etc.</p>
<p>AFAIK, the <code>hibernate-jCache</code> is simply and integration and adapter layer between Hibernate to use the JCache API an an implementing caching provider as a 2nd-level cache in Hibernate.</p>
<p>Using JCache simply enables you to plugin any compliant caching provider, of your choice, and mileage (aka capabilities) varies by caching provider. Some are simple in-memory stores while others are full-blown In-Memory Data Grids (IMDGs) complete with database-like functionality (e.g. persistence, transactions, functions, etc).</p>
<p>Hope this helps clarify the position if JCache here.</p>
",0
MBeanServer,Java,pattern,73418272,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",0
MBeanServer,Java,pattern,74434060,"<p>Enable transactions in the listener so that any/all downstream <code>RabbitTemplate</code> operations participate in the same transaction.</p>
<p>If there is a failure, the container will rollback the transaction (removing the publishes), nack the message (or messages if batch size is greater than one) and then commit the nacks so the message(s) will be redelivered.</p>
<p>When using an external transaction manager (such as JDBC), the container will synchronize the AMQP transaction with the external transaction.</p>
<p>Downstream templates participate in the transaction regardless of whether it is local (AMQP only) or synchronized.</p>
",0
MBeanServer,Java,pattern,72477030,"<blockquote>
<p>session.attributes.get(&quot;user_id&quot;).toString</p>
</blockquote>
<p>You should be using the Session API correctly, please check the <a href=""https://gatling.io/docs/gatling/reference/current/core/session/session_api/#getting-attributes"" rel=""nofollow noreferrer"">documentation</a>.</p>
",0
MBeanServer,Java,environment,78705687,"<p>An object must be serializable in Spring Boot mainly when it must be persisted, cached, or transferred through distributed systems.</p>
<p>Example:</p>
<ul>
<li><em><strong>Session storage</strong></em>: If an object is to be stored in an HTTP session (for example, with @SessionAttributes or HttpSession), it must implement the Serializable interface. This allows the object to be serialized and deserialized when managing sessions by the servlet container, especially if the session is persisted or distributed between multiple instances of the server.</li>
<li><em><strong>Cached storage</strong></em>: If you are using a cache mechanism (such as Ehcache, Redis, etc.) and objects need to be cached, they often need to be serializable. This allows storing and retrieving objects from the cache.</li>
</ul>
",0
MBeanServer,Java,environment,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",1
MBeanServer,Java,environment,72321630,"<p>The HTTP Session is a temporary store in the backend, where you store something based on previous requests. As soon as you store something there, the backend will return a Set-Cookie header to the browser with a JSESSIONID that the browser stores for the user. For the next calls, the browser will send the same JSESSIONID cookie, and the backend will use it as a key to retrieve the previously saved data for that user's browser.</p>
<p>If you're migrating to a React JS application, I think there's no need to store tokens in the backend, and use cookies with only JSESSIONID in. Instead, the frontend can store all the necessary data client-side.</p>
<p>I think there's multiple options:</p>
<ol>
<li>Keep it in React state (in the browser's memory)</li>
<li>Keep it in a Cookie that you manage via the frontend</li>
<li>Keep it in the browser's localStorage (less secure, I think)</li>
</ol>
",0
MBeanServer,Java,environment,72996855,"<p>Your classpath contains incompatible dependencies. Specifically, the version of Spring Framework's <code>spring-context</code> jar that you are using is not compatible with the version of Spring Boot's <code>spring-boot</code> jar. Using Spring Boot's dependency management and allowing it to control the versions of your application's dependencies is the recommended way to avoid this problem.</p>
",0
MBeanServer,Java,environment,72320344,"<p>Implement your own <code>HttpSessionListener</code> and annotate it with <code>@WebListener</code> The container should recognize this and will call the the <code>sessionDestroyed()</code> method in your implementation. Your class is eligible for CDI Injection so in <code>sessionDestroyed()</code>, you can fire an event and listen for it with a CDI Observer.</p>
<p>Ref: <a href=""https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html</a></p>
<h1>EDIT:</h1>
<p>Try this then: Scope your <code>HttpSessionListener</code> impl to <code>@ApplicationScoped</code>. Have a synchronized Map of sessionId/username. In <code>sessionCreated()</code> insert into the map,  and on <code>sessionDestroyed()</code> remove it in a <code>finally</code> block.</p>
<p>The container will also have several implicit <code>HttpSessionListener</code>s, so there's a chance yours is being called last long after the session is invalidated. If thats the case, there's another technique you can use to insert your <code>HttpSessionListener</code> impl first. Try the above technique first then we can dive into this.</p>
",0
MBeanServer,Java,environment,74706744,"<p><a href=""https://docs.oracle.com/javase/7/docs/technotes/tools/windows/classpath.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/7/docs/technotes/tools/windows/classpath.html</a>
specifies:</p>
<blockquote>
<p>The default class path is the current directory. Setting the CLASSPATH variable or using the -classpath command-line option overrides that default, so if you want to include the current directory in the search path, you must include &quot;.&quot; in the new settings.</p>
</blockquote>
<p>So, to add to that default, include the CLASSPATH environment variable in your invocation:</p>
<pre><code>java -cp &quot;.;C:\Path\to\my\magical\jarfile.jar;.\some\other\directory;%CLASSPATH%&quot;
</code></pre>
",0
MBeanServer,Java,environment,78210108,"<p>The session object won't be set in your UserResource, but with embedded KeyCloak, you can get it in EmbeddedKeycloakRequestFilter:</p>
<pre><code>public class EmbeddedKeycloakRequestFilter extends AbstractRequestFilter implements Filter {

    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws UnsupportedEncodingException {
        servletRequest.setCharacterEncoding(&quot;UTF-8&quot;);
        ClientConnection clientConnection = createConnection((HttpServletRequest) servletRequest);

        filter(clientConnection, (session) -&gt; {
            try {
                filterChain.doFilter(servletRequest, servletResponse);

                RealmModel realm = session.getContext().getRealm();

                System.out.println(realm.getName());
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        });
    }

    private ClientConnection createConnection(HttpServletRequest request) {
        return new ClientConnection() {
            @Override
            public String getRemoteAddr() {
                return request.getRemoteAddr();
            }

            @Override
            public String getRemoteHost() {
                return request.getRemoteHost();
            }

            @Override
            public int getRemotePort() {
                return request.getRemotePort();
            }

            @Override
            public String getLocalAddr() {
                return request.getLocalAddr();
            }

            @Override
            public int getLocalPort() {
                return request.getLocalPort();
            }
        };
    }
}
</code></pre>
",0
MBeanServer,Java,environment,76205045,"<p>JCache (<a href=""https://www.jcp.org/en/jsr/detail?id=107"" rel=""nofollow noreferrer"">JSR-107</a>) is simply an <em>Service Provider Interface</em> (SPI) defining an <a href=""https://javadoc.io/doc/javax.cache/cache-api/latest/index.html"" rel=""nofollow noreferrer"">API</a> for caching providers (such as Ehcache or Hazelcaset, etc) that implement the SPI.</p>
<p>JCache by itself is not a caching provider and has no real caching functionality. You need to plugin an actual implementation, such as <a href=""https://github.com/ben-manes/caffeine/wiki/JCache"" rel=""nofollow noreferrer"">Caffeine</a>, <a href=""https://www.ehcache.org/documentation/3.7/107.html"" rel=""nofollow noreferrer"">Ehcache</a>, <a href=""https://docs.hazelcast.com/imdg/4.2/jcache/hazelcast-integration"" rel=""nofollow noreferrer"">Hazelcast</a>, etc.</p>
<p>AFAIK, the <code>hibernate-jCache</code> is simply and integration and adapter layer between Hibernate to use the JCache API an an implementing caching provider as a 2nd-level cache in Hibernate.</p>
<p>Using JCache simply enables you to plugin any compliant caching provider, of your choice, and mileage (aka capabilities) varies by caching provider. Some are simple in-memory stores while others are full-blown In-Memory Data Grids (IMDGs) complete with database-like functionality (e.g. persistence, transactions, functions, etc).</p>
<p>Hope this helps clarify the position if JCache here.</p>
",0
MBeanServer,Java,environment,74434060,"<p>Enable transactions in the listener so that any/all downstream <code>RabbitTemplate</code> operations participate in the same transaction.</p>
<p>If there is a failure, the container will rollback the transaction (removing the publishes), nack the message (or messages if batch size is greater than one) and then commit the nacks so the message(s) will be redelivered.</p>
<p>When using an external transaction manager (such as JDBC), the container will synchronize the AMQP transaction with the external transaction.</p>
<p>Downstream templates participate in the transaction regardless of whether it is local (AMQP only) or synchronized.</p>
",0
MBeanServer,Java,environment,76065417,"<p>The Files.write() takes an optional parameter, which specifies the mode for opening the file. The default is CREATE, TRUNCATE_EXISTING (Thanks @Slaw) so you are overwriting the file each time. In your case you need:</p>
<pre><code>List&lt;String&gt; lines=Files.readAllLines(oldFile1);
Files.write(newFile,lines, StandardOpenOption.CREATE);
          
List&lt;String&gt; lines1=Files.readAllLines(oldFile2);
Files.write(newFile,lines1,  StandardOpenOption.APPEND);
</code></pre>
",0
MBeanServer,Java,alternative,78705687,"<p>An object must be serializable in Spring Boot mainly when it must be persisted, cached, or transferred through distributed systems.</p>
<p>Example:</p>
<ul>
<li><em><strong>Session storage</strong></em>: If an object is to be stored in an HTTP session (for example, with @SessionAttributes or HttpSession), it must implement the Serializable interface. This allows the object to be serialized and deserialized when managing sessions by the servlet container, especially if the session is persisted or distributed between multiple instances of the server.</li>
<li><em><strong>Cached storage</strong></em>: If you are using a cache mechanism (such as Ehcache, Redis, etc.) and objects need to be cached, they often need to be serializable. This allows storing and retrieving objects from the cache.</li>
</ul>
",0
MBeanServer,Java,alternative,74228844,"<p>Get a reference to the MBeanServer then you can run a query with the ObjectName.</p>
",0
MBeanServer,Java,alternative,76065417,"<p>The Files.write() takes an optional parameter, which specifies the mode for opening the file. The default is CREATE, TRUNCATE_EXISTING (Thanks @Slaw) so you are overwriting the file each time. In your case you need:</p>
<pre><code>List&lt;String&gt; lines=Files.readAllLines(oldFile1);
Files.write(newFile,lines, StandardOpenOption.CREATE);
          
List&lt;String&gt; lines1=Files.readAllLines(oldFile2);
Files.write(newFile,lines1,  StandardOpenOption.APPEND);
</code></pre>
",0
MBeanServer,Java,alternative,76205045,"<p>JCache (<a href=""https://www.jcp.org/en/jsr/detail?id=107"" rel=""nofollow noreferrer"">JSR-107</a>) is simply an <em>Service Provider Interface</em> (SPI) defining an <a href=""https://javadoc.io/doc/javax.cache/cache-api/latest/index.html"" rel=""nofollow noreferrer"">API</a> for caching providers (such as Ehcache or Hazelcaset, etc) that implement the SPI.</p>
<p>JCache by itself is not a caching provider and has no real caching functionality. You need to plugin an actual implementation, such as <a href=""https://github.com/ben-manes/caffeine/wiki/JCache"" rel=""nofollow noreferrer"">Caffeine</a>, <a href=""https://www.ehcache.org/documentation/3.7/107.html"" rel=""nofollow noreferrer"">Ehcache</a>, <a href=""https://docs.hazelcast.com/imdg/4.2/jcache/hazelcast-integration"" rel=""nofollow noreferrer"">Hazelcast</a>, etc.</p>
<p>AFAIK, the <code>hibernate-jCache</code> is simply and integration and adapter layer between Hibernate to use the JCache API an an implementing caching provider as a 2nd-level cache in Hibernate.</p>
<p>Using JCache simply enables you to plugin any compliant caching provider, of your choice, and mileage (aka capabilities) varies by caching provider. Some are simple in-memory stores while others are full-blown In-Memory Data Grids (IMDGs) complete with database-like functionality (e.g. persistence, transactions, functions, etc).</p>
<p>Hope this helps clarify the position if JCache here.</p>
",0
MBeanServer,Java,alternative,72996855,"<p>Your classpath contains incompatible dependencies. Specifically, the version of Spring Framework's <code>spring-context</code> jar that you are using is not compatible with the version of Spring Boot's <code>spring-boot</code> jar. Using Spring Boot's dependency management and allowing it to control the versions of your application's dependencies is the recommended way to avoid this problem.</p>
",0
MBeanServer,Java,alternative,72320344,"<p>Implement your own <code>HttpSessionListener</code> and annotate it with <code>@WebListener</code> The container should recognize this and will call the the <code>sessionDestroyed()</code> method in your implementation. Your class is eligible for CDI Injection so in <code>sessionDestroyed()</code>, you can fire an event and listen for it with a CDI Observer.</p>
<p>Ref: <a href=""https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionListener.html</a></p>
<h1>EDIT:</h1>
<p>Try this then: Scope your <code>HttpSessionListener</code> impl to <code>@ApplicationScoped</code>. Have a synchronized Map of sessionId/username. In <code>sessionCreated()</code> insert into the map,  and on <code>sessionDestroyed()</code> remove it in a <code>finally</code> block.</p>
<p>The container will also have several implicit <code>HttpSessionListener</code>s, so there's a chance yours is being called last long after the session is invalidated. If thats the case, there's another technique you can use to insert your <code>HttpSessionListener</code> impl first. Try the above technique first then we can dive into this.</p>
",0
MBeanServer,Java,alternative,77025140,"<p>You need to <code>takePersistableUriPermission()</code> to keep access across runs without re-asking the user to choose the directory.</p>
<p>See <a href=""https://developer.android.com/training/data-storage/shared/documents-files#persist-permissions"" rel=""nofollow noreferrer"">Persist permissions</a> for details on how to do this.</p>
",0
MBeanServer,Java,alternative,73418272,"<p>Mule 4 implements streaming in most components, unlike Mule 3 which implemented it only for some. The payload returned by the HTTP Listener is a stream implemented by the ManagedCursorStreamProvider. It was not added by the VM connector, it was the original payload. Most components in Mule 4 now how to use the stream implementation transparently, so usually a user doesn't need to care if their JSON payload is in a stream or in a Java string. The exception is when you do actual Java code you need to know the actual classes.</p>
<p>It is not a good practice and discouraged to add Mule specific APIs and classes to your custom Java code to make them 'stream aware'. Instead an easier solution is to let DataWeave do its transformation magic and convert to a Java object  automatically, in this case a String.</p>
<p>Example:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;sockets:listener doc:name=&quot;Listener&quot; config-ref=&quot;UDP_Config&quot; outputMimeType=&quot;text/json&quot;/&gt; 
&lt;ee:transform doc:name=&quot;Transform Message&quot;&gt;
   &lt;ee:message &gt;
      &lt;ee:set-payload &gt;&lt;![CDATA[%dw 2.0
output application/java
---
write(payload,&quot;application/java&quot;)
]]&gt;
      &lt;/ee:set-payload&gt;
   &lt;/ee:message&gt;
&lt;/ee:transform&gt;
&lt;java:invoke-static doc:name=&quot;Data Wrapper&quot; class=&quot;com.test.DataWrapper&quot; method=&quot;wrapData(java.lang.Object)&quot; outputMimeType=&quot;application/java&quot;&gt;
        &lt;java:args &gt;&lt;![CDATA[#[{payload : payload}]]]&gt;&lt;/java:args&gt;
&lt;/java:invoke-static&gt;
</code></pre>
<p>The write() function writes a string from the payload that you can use in your wrapper class. This works for this particular scenario. You will need to change classes if you do some other permutations of inputs and Java code.</p>
",0
MBeanServer,Java,alternative,72321630,"<p>The HTTP Session is a temporary store in the backend, where you store something based on previous requests. As soon as you store something there, the backend will return a Set-Cookie header to the browser with a JSESSIONID that the browser stores for the user. For the next calls, the browser will send the same JSESSIONID cookie, and the backend will use it as a key to retrieve the previously saved data for that user's browser.</p>
<p>If you're migrating to a React JS application, I think there's no need to store tokens in the backend, and use cookies with only JSESSIONID in. Instead, the frontend can store all the necessary data client-side.</p>
<p>I think there's multiple options:</p>
<ol>
<li>Keep it in React state (in the browser's memory)</li>
<li>Keep it in a Cookie that you manage via the frontend</li>
<li>Keep it in the browser's localStorage (less secure, I think)</li>
</ol>
",0
MBeanServer,Java,alternative,78210108,"<p>The session object won't be set in your UserResource, but with embedded KeyCloak, you can get it in EmbeddedKeycloakRequestFilter:</p>
<pre><code>public class EmbeddedKeycloakRequestFilter extends AbstractRequestFilter implements Filter {

    @Override
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws UnsupportedEncodingException {
        servletRequest.setCharacterEncoding(&quot;UTF-8&quot;);
        ClientConnection clientConnection = createConnection((HttpServletRequest) servletRequest);

        filter(clientConnection, (session) -&gt; {
            try {
                filterChain.doFilter(servletRequest, servletResponse);

                RealmModel realm = session.getContext().getRealm();

                System.out.println(realm.getName());
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
        });
    }

    private ClientConnection createConnection(HttpServletRequest request) {
        return new ClientConnection() {
            @Override
            public String getRemoteAddr() {
                return request.getRemoteAddr();
            }

            @Override
            public String getRemoteHost() {
                return request.getRemoteHost();
            }

            @Override
            public int getRemotePort() {
                return request.getRemotePort();
            }

            @Override
            public String getLocalAddr() {
                return request.getLocalAddr();
            }

            @Override
            public int getLocalPort() {
                return request.getLocalPort();
            }
        };
    }
}
</code></pre>
",0
Model,TensorFlow,functionality,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",1
Model,TensorFlow,functionality,57871249,"<p>Keras/Tensorflow (except when in eager mode, but I don't think Keras supports eager mode) is a ""symbolic graph"" language. </p>

<p>When you create a model and its operations, you are just creating a ""graph"", not the operations themselves. Then you only have the tensors.</p>

<p>The Keras models have ""input tensors"", which in Tensorflow are ""placeholders"". They are special tensors that ""will"" receive values when training or predicting. (In Keras: <code>model.fit</code>, <code>model.predict</code>, <code>model.evaluate</code>, etc. In Tensorflow, <code>session.run</code>)     </p>

<p>Here an example of how to feed the inputs with data and get the actual values of the gradients: <a href=""https://stackoverflow.com/questions/39561560/getting-gradient-of-model-output-w-r-t-weights-using-keras"">Getting gradient of model output w.r.t weights using Keras</a> </p>
",1
Model,TensorFlow,functionality,57987810,"<p>With TensorFlow in non-eager execution mode, first you create a graph with operations as the nodes. 
Then, within a session, you run the operations. Certain operations, like the initialisation of variables, don't return anything. They just assign values to the variables in the graph.</p>

<p>Here, <code>self.set_params_op</code> sounds like it could be an operation of this type. It may be setting values for some parameters. If you comment it out, my guess is that these parameters are not being set to the 'post training' values. So when you evaluate the model, you get different results.</p>
",0
Model,TensorFlow,functionality,61978942,"<p>Since Tensorflow works best in an asynchronous way, you should use an async function with await when loading the model:</p>

<pre><code>async function predict(){
  const model = await tf.loadLayersModel('js/model.json');
  // do prediction
}
</code></pre>
",1
Model,TensorFlow,functionality,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
Model,TensorFlow,functionality,73222727,"<p>The model.fit() is given a list of arrays as input. A list of arrays is generally passed to fit() when a model has multiple inputs. In this case, the fit() method is treating each array as an input, resulting in the error.</p>
<p>Please convert the data to a tensor as follows and try again.</p>
<pre><code>x_train=tf.convert_to_tensor(x_train) 
</code></pre>
<p>Kindly refer to the <a href=""https://colab.sandbox.google.com/gist/synandi/4a10843644e10af034694f03816788d9/untitled139.ipynb#scrollTo=LWK0vgGHyhKW"" rel=""nofollow noreferrer"">gist</a> for complete code. Thank you!</p>
",1
Model,TensorFlow,functionality,68893043,"<p>Your model takes an input tensor of shape &lt;unk, 5&gt;, with the first dimension being unknown (usually for dynamic batch size), so it is expected to see -1 at the first dimension when you call <code>session.GetInputTypeInfo(0).GetTensorTypeAndShapeInfo().GetShape()</code>.</p>
<p><a href=""https://i.sstatic.net/1YWTe.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/1YWTe.png"" alt=""enter image description here"" /></a></p>
<p>Before feeding actual data to your model, you need to set a concrete shape for your tensor, in your case, you should perhaps set the first dimension to 1 manually.</p>
",0
Model,TensorFlow,functionality,55383460,"<p>In TensorFlow 1.x, you need to define a Session and both training and prediction happens inside it. But if you look carefully you will find inputs to <code>sess.run()</code> are different, when training the <code>feed_dict</code> contains both x and corresponding y's. Like:</p>

<pre><code>loss, _ = sess.run([loss_op, any_other_parameter_you_want], feed_dict={X: batch_x,Y: batch_y})
</code></pre>

<p>And for prediction the <code>feed_dict</code> will contain only <code>x</code> values, also you will specify the parameter <code>y_out</code> (the output of your model):</p>

<pre><code>out = sess.run(y_out, feed_dict={X: batch_x})
</code></pre>
",0
Model,TensorFlow,functionality,64851842,"<p><a href=""https://github.com/tensorflow/models/tree/master/research/object_detection"" rel=""nofollow noreferrer"">Tensorflow Model</a> is provided with a practiced solution, defined in <a href=""https://github.com/tensorflow/models/blob/master/research/object_detection/model_lib_v2.py"" rel=""nofollow noreferrer"">model_lib_v2.py</a>.</p>
<p>See the function <code>train_loop</code>, the custom training loop is constructed makes use of</p>
<pre><code>strategy = tf.compat.v2.distribute.get_strategy() #L501
with strategy.scope():
    training step ...
</code></pre>
<p>And custom loss in function <code>eager_train_step</code>.</p>
",1
Model,TensorFlow,functionality,56714987,"<p>A tensorflow variable cannot have a dynamic shape but if you know the shape out of the session you could use:</p>

<pre class=""lang-py prettyprint-override""><code>foo_variable = tf.get_variable(""foo"", shape=[], validate_shape=False)

with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())
    print(sess.run(foo_variable, feed_dict={foo_variable: ones((2,2))}))
</code></pre>
",0
Model,TensorFlow,concept,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",1
Model,TensorFlow,concept,73222727,"<p>The model.fit() is given a list of arrays as input. A list of arrays is generally passed to fit() when a model has multiple inputs. In this case, the fit() method is treating each array as an input, resulting in the error.</p>
<p>Please convert the data to a tensor as follows and try again.</p>
<pre><code>x_train=tf.convert_to_tensor(x_train) 
</code></pre>
<p>Kindly refer to the <a href=""https://colab.sandbox.google.com/gist/synandi/4a10843644e10af034694f03816788d9/untitled139.ipynb#scrollTo=LWK0vgGHyhKW"" rel=""nofollow noreferrer"">gist</a> for complete code. Thank you!</p>
",1
Model,TensorFlow,concept,57871249,"<p>Keras/Tensorflow (except when in eager mode, but I don't think Keras supports eager mode) is a ""symbolic graph"" language. </p>

<p>When you create a model and its operations, you are just creating a ""graph"", not the operations themselves. Then you only have the tensors.</p>

<p>The Keras models have ""input tensors"", which in Tensorflow are ""placeholders"". They are special tensors that ""will"" receive values when training or predicting. (In Keras: <code>model.fit</code>, <code>model.predict</code>, <code>model.evaluate</code>, etc. In Tensorflow, <code>session.run</code>)     </p>

<p>Here an example of how to feed the inputs with data and get the actual values of the gradients: <a href=""https://stackoverflow.com/questions/39561560/getting-gradient-of-model-output-w-r-t-weights-using-keras"">Getting gradient of model output w.r.t weights using Keras</a> </p>
",1
Model,TensorFlow,concept,61978942,"<p>Since Tensorflow works best in an asynchronous way, you should use an async function with await when loading the model:</p>

<pre><code>async function predict(){
  const model = await tf.loadLayersModel('js/model.json');
  // do prediction
}
</code></pre>
",1
Model,TensorFlow,concept,68893043,"<p>Your model takes an input tensor of shape &lt;unk, 5&gt;, with the first dimension being unknown (usually for dynamic batch size), so it is expected to see -1 at the first dimension when you call <code>session.GetInputTypeInfo(0).GetTensorTypeAndShapeInfo().GetShape()</code>.</p>
<p><a href=""https://i.sstatic.net/1YWTe.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/1YWTe.png"" alt=""enter image description here"" /></a></p>
<p>Before feeding actual data to your model, you need to set a concrete shape for your tensor, in your case, you should perhaps set the first dimension to 1 manually.</p>
",0
Model,TensorFlow,concept,57987810,"<p>With TensorFlow in non-eager execution mode, first you create a graph with operations as the nodes. 
Then, within a session, you run the operations. Certain operations, like the initialisation of variables, don't return anything. They just assign values to the variables in the graph.</p>

<p>Here, <code>self.set_params_op</code> sounds like it could be an operation of this type. It may be setting values for some parameters. If you comment it out, my guess is that these parameters are not being set to the 'post training' values. So when you evaluate the model, you get different results.</p>
",0
Model,TensorFlow,concept,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
Model,TensorFlow,concept,71311033,"<p>In tensorflow, the first dimension of a data tensor (for example <code>x_train</code>, <code>y_target</code>) shoud be the number of samples, because the data is passed to the model as batches.
In your case, if you are only using one sample, you need to reshape x:</p>
<pre><code>x_train = tf.reshape(x_train, [1,8,10])
</code></pre>
",0
Model,TensorFlow,concept,56714987,"<p>A tensorflow variable cannot have a dynamic shape but if you know the shape out of the session you could use:</p>

<pre class=""lang-py prettyprint-override""><code>foo_variable = tf.get_variable(""foo"", shape=[], validate_shape=False)

with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())
    print(sess.run(foo_variable, feed_dict={foo_variable: ones((2,2))}))
</code></pre>
",0
Model,TensorFlow,concept,64851842,"<p><a href=""https://github.com/tensorflow/models/tree/master/research/object_detection"" rel=""nofollow noreferrer"">Tensorflow Model</a> is provided with a practiced solution, defined in <a href=""https://github.com/tensorflow/models/blob/master/research/object_detection/model_lib_v2.py"" rel=""nofollow noreferrer"">model_lib_v2.py</a>.</p>
<p>See the function <code>train_loop</code>, the custom training loop is constructed makes use of</p>
<pre><code>strategy = tf.compat.v2.distribute.get_strategy() #L501
with strategy.scope():
    training step ...
</code></pre>
<p>And custom loss in function <code>eager_train_step</code>.</p>
",0
Model,TensorFlow,performance,57871249,"<p>Keras/Tensorflow (except when in eager mode, but I don't think Keras supports eager mode) is a ""symbolic graph"" language. </p>

<p>When you create a model and its operations, you are just creating a ""graph"", not the operations themselves. Then you only have the tensors.</p>

<p>The Keras models have ""input tensors"", which in Tensorflow are ""placeholders"". They are special tensors that ""will"" receive values when training or predicting. (In Keras: <code>model.fit</code>, <code>model.predict</code>, <code>model.evaluate</code>, etc. In Tensorflow, <code>session.run</code>)     </p>

<p>Here an example of how to feed the inputs with data and get the actual values of the gradients: <a href=""https://stackoverflow.com/questions/39561560/getting-gradient-of-model-output-w-r-t-weights-using-keras"">Getting gradient of model output w.r.t weights using Keras</a> </p>
",0
Model,TensorFlow,performance,73222727,"<p>The model.fit() is given a list of arrays as input. A list of arrays is generally passed to fit() when a model has multiple inputs. In this case, the fit() method is treating each array as an input, resulting in the error.</p>
<p>Please convert the data to a tensor as follows and try again.</p>
<pre><code>x_train=tf.convert_to_tensor(x_train) 
</code></pre>
<p>Kindly refer to the <a href=""https://colab.sandbox.google.com/gist/synandi/4a10843644e10af034694f03816788d9/untitled139.ipynb#scrollTo=LWK0vgGHyhKW"" rel=""nofollow noreferrer"">gist</a> for complete code. Thank you!</p>
",0
Model,TensorFlow,performance,57987810,"<p>With TensorFlow in non-eager execution mode, first you create a graph with operations as the nodes. 
Then, within a session, you run the operations. Certain operations, like the initialisation of variables, don't return anything. They just assign values to the variables in the graph.</p>

<p>Here, <code>self.set_params_op</code> sounds like it could be an operation of this type. It may be setting values for some parameters. If you comment it out, my guess is that these parameters are not being set to the 'post training' values. So when you evaluate the model, you get different results.</p>
",0
Model,TensorFlow,performance,61978942,"<p>Since Tensorflow works best in an asynchronous way, you should use an async function with await when loading the model:</p>

<pre><code>async function predict(){
  const model = await tf.loadLayersModel('js/model.json');
  // do prediction
}
</code></pre>
",0
Model,TensorFlow,performance,68893043,"<p>Your model takes an input tensor of shape &lt;unk, 5&gt;, with the first dimension being unknown (usually for dynamic batch size), so it is expected to see -1 at the first dimension when you call <code>session.GetInputTypeInfo(0).GetTensorTypeAndShapeInfo().GetShape()</code>.</p>
<p><a href=""https://i.sstatic.net/1YWTe.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/1YWTe.png"" alt=""enter image description here"" /></a></p>
<p>Before feeding actual data to your model, you need to set a concrete shape for your tensor, in your case, you should perhaps set the first dimension to 1 manually.</p>
",0
Model,TensorFlow,performance,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",1
Model,TensorFlow,performance,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",0
Model,TensorFlow,performance,55383460,"<p>In TensorFlow 1.x, you need to define a Session and both training and prediction happens inside it. But if you look carefully you will find inputs to <code>sess.run()</code> are different, when training the <code>feed_dict</code> contains both x and corresponding y's. Like:</p>

<pre><code>loss, _ = sess.run([loss_op, any_other_parameter_you_want], feed_dict={X: batch_x,Y: batch_y})
</code></pre>

<p>And for prediction the <code>feed_dict</code> will contain only <code>x</code> values, also you will specify the parameter <code>y_out</code> (the output of your model):</p>

<pre><code>out = sess.run(y_out, feed_dict={X: batch_x})
</code></pre>
",0
Model,TensorFlow,performance,64851842,"<p><a href=""https://github.com/tensorflow/models/tree/master/research/object_detection"" rel=""nofollow noreferrer"">Tensorflow Model</a> is provided with a practiced solution, defined in <a href=""https://github.com/tensorflow/models/blob/master/research/object_detection/model_lib_v2.py"" rel=""nofollow noreferrer"">model_lib_v2.py</a>.</p>
<p>See the function <code>train_loop</code>, the custom training loop is constructed makes use of</p>
<pre><code>strategy = tf.compat.v2.distribute.get_strategy() #L501
with strategy.scope():
    training step ...
</code></pre>
<p>And custom loss in function <code>eager_train_step</code>.</p>
",0
Model,TensorFlow,performance,61506375,"<p>It seems this is a <a href=""https://github.com/tensorflow/tensorflow/issues/35100"" rel=""nofollow noreferrer"">known issue</a> with ongoing reports of occurrence, even in the most recent versions of TensorFlow. Apparently, it's related to parallelism and/or distribution strategy used for the data generator. One simple workaround is to use only one workers, i.e. <code>workers=1</code> (which is the default value if not set), when calling the <code>model.fit</code>.</p>
",1
Model,TensorFlow,directive,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",1
Model,TensorFlow,directive,68893043,"<p>Your model takes an input tensor of shape &lt;unk, 5&gt;, with the first dimension being unknown (usually for dynamic batch size), so it is expected to see -1 at the first dimension when you call <code>session.GetInputTypeInfo(0).GetTensorTypeAndShapeInfo().GetShape()</code>.</p>
<p><a href=""https://i.sstatic.net/1YWTe.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/1YWTe.png"" alt=""enter image description here"" /></a></p>
<p>Before feeding actual data to your model, you need to set a concrete shape for your tensor, in your case, you should perhaps set the first dimension to 1 manually.</p>
",0
Model,TensorFlow,directive,73222727,"<p>The model.fit() is given a list of arrays as input. A list of arrays is generally passed to fit() when a model has multiple inputs. In this case, the fit() method is treating each array as an input, resulting in the error.</p>
<p>Please convert the data to a tensor as follows and try again.</p>
<pre><code>x_train=tf.convert_to_tensor(x_train) 
</code></pre>
<p>Kindly refer to the <a href=""https://colab.sandbox.google.com/gist/synandi/4a10843644e10af034694f03816788d9/untitled139.ipynb#scrollTo=LWK0vgGHyhKW"" rel=""nofollow noreferrer"">gist</a> for complete code. Thank you!</p>
",1
Model,TensorFlow,directive,61978942,"<p>Since Tensorflow works best in an asynchronous way, you should use an async function with await when loading the model:</p>

<pre><code>async function predict(){
  const model = await tf.loadLayersModel('js/model.json');
  // do prediction
}
</code></pre>
",0
Model,TensorFlow,directive,65117074,"<p>The model needs to infer a single input shape. But <code>preprocess</code> parses serialised image tensors of any shape, and this is done on the fly as records are streamed, so it is not possible to infer an input shape for all of the data.</p>
<p>This is easily fixed by adding a TF function which asserts the tensor shape, <code>tf.ensure_shape</code>:</p>
<pre><code>def preprocess(example):
    example = tf.io.parse_single_example(example, feature_description)
    image, label = example[&quot;image&quot;], example[&quot;label&quot;]
    image = tf.io.parse_tensor(image, out_type=tf.float64)
    image = tf.ensure_shape(image, image_shape)    # THE FIX
    return image, label
</code></pre>
",0
Model,TensorFlow,directive,57871249,"<p>Keras/Tensorflow (except when in eager mode, but I don't think Keras supports eager mode) is a ""symbolic graph"" language. </p>

<p>When you create a model and its operations, you are just creating a ""graph"", not the operations themselves. Then you only have the tensors.</p>

<p>The Keras models have ""input tensors"", which in Tensorflow are ""placeholders"". They are special tensors that ""will"" receive values when training or predicting. (In Keras: <code>model.fit</code>, <code>model.predict</code>, <code>model.evaluate</code>, etc. In Tensorflow, <code>session.run</code>)     </p>

<p>Here an example of how to feed the inputs with data and get the actual values of the gradients: <a href=""https://stackoverflow.com/questions/39561560/getting-gradient-of-model-output-w-r-t-weights-using-keras"">Getting gradient of model output w.r.t weights using Keras</a> </p>
",0
Model,TensorFlow,directive,61310421,"<p>In tensorflow2.x, <code>model.fit()</code> runs in graph mode by default, you can control this behavior by using the <code>run_eagerly</code> argument in the <code>model.compile(...)</code> method, which defaults to <code>False</code>.</p>
",1
Model,TensorFlow,directive,70965912,"<p>Use model.save() to save the model in .pb format. For more information read <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load#savedmodel_format"" rel=""nofollow noreferrer"">Tensorflow SavedModel format</a>.</p>
<pre><code>import tensorflow as tf
#Load .h5 saved model
pre_model = tf.keras.models.load_model(&quot;final_model.h5&quot;)
#Converts .pb format
pre_model.save(&quot;saved_model/my_model&quot;)
</code></pre>
",1
Model,TensorFlow,directive,59247946,"<p><code>__call__</code> is called when an instance of the class is called.<code>y_true</code> and <code>y_pred</code> contains the true labels and labels predicted by the model respectively. Tensorflow(tf.keras) internally converts the labels you give to <code>y_true</code> as seen <a href=""https://github.com/tensorflow/tensorflow/blob/1cf0898dd4331baf93fe77205550f2c2e6c90ee5/tensorflow/python/keras/engine/training.py#L1692"" rel=""nofollow noreferrer"">here</a> and trains on the data using <code>model.fit()</code>.<br/> All <code>tf.keras</code> losses are implemented in this form, i.e a function with two arguments <code>y_true</code> and <code>y_pred</code> as seen <a href=""https://github.com/tensorflow/tensorflow/blob/1cf0898dd4331baf93fe77205550f2c2e6c90ee5/tensorflow/python/keras/losses.py#L780"" rel=""nofollow noreferrer"">here</a>.</p>
",0
Model,TensorFlow,directive,55135137,"<p>When invoking the Model API, the value for outputs argument should be tensor(or list of tensors), in this case it is a list of list of tensors, hence there is a problem. Just unpack the unpooling_masks list(*unpooling_masks) when calling Model.</p>

<pre><code>model = Model(inputs, [layer, *unpooling_masks], name='vgg19')
</code></pre>
",1
Model,TensorFlow,pattern,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",1
Model,TensorFlow,pattern,61978942,"<p>Since Tensorflow works best in an asynchronous way, you should use an async function with await when loading the model:</p>

<pre><code>async function predict(){
  const model = await tf.loadLayersModel('js/model.json');
  // do prediction
}
</code></pre>
",1
Model,TensorFlow,pattern,57871249,"<p>Keras/Tensorflow (except when in eager mode, but I don't think Keras supports eager mode) is a ""symbolic graph"" language. </p>

<p>When you create a model and its operations, you are just creating a ""graph"", not the operations themselves. Then you only have the tensors.</p>

<p>The Keras models have ""input tensors"", which in Tensorflow are ""placeholders"". They are special tensors that ""will"" receive values when training or predicting. (In Keras: <code>model.fit</code>, <code>model.predict</code>, <code>model.evaluate</code>, etc. In Tensorflow, <code>session.run</code>)     </p>

<p>Here an example of how to feed the inputs with data and get the actual values of the gradients: <a href=""https://stackoverflow.com/questions/39561560/getting-gradient-of-model-output-w-r-t-weights-using-keras"">Getting gradient of model output w.r.t weights using Keras</a> </p>
",0
Model,TensorFlow,pattern,73222727,"<p>The model.fit() is given a list of arrays as input. A list of arrays is generally passed to fit() when a model has multiple inputs. In this case, the fit() method is treating each array as an input, resulting in the error.</p>
<p>Please convert the data to a tensor as follows and try again.</p>
<pre><code>x_train=tf.convert_to_tensor(x_train) 
</code></pre>
<p>Kindly refer to the <a href=""https://colab.sandbox.google.com/gist/synandi/4a10843644e10af034694f03816788d9/untitled139.ipynb#scrollTo=LWK0vgGHyhKW"" rel=""nofollow noreferrer"">gist</a> for complete code. Thank you!</p>
",1
Model,TensorFlow,pattern,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
Model,TensorFlow,pattern,56714987,"<p>A tensorflow variable cannot have a dynamic shape but if you know the shape out of the session you could use:</p>

<pre class=""lang-py prettyprint-override""><code>foo_variable = tf.get_variable(""foo"", shape=[], validate_shape=False)

with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())
    print(sess.run(foo_variable, feed_dict={foo_variable: ones((2,2))}))
</code></pre>
",0
Model,TensorFlow,pattern,68893043,"<p>Your model takes an input tensor of shape &lt;unk, 5&gt;, with the first dimension being unknown (usually for dynamic batch size), so it is expected to see -1 at the first dimension when you call <code>session.GetInputTypeInfo(0).GetTensorTypeAndShapeInfo().GetShape()</code>.</p>
<p><a href=""https://i.sstatic.net/1YWTe.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/1YWTe.png"" alt=""enter image description here"" /></a></p>
<p>Before feeding actual data to your model, you need to set a concrete shape for your tensor, in your case, you should perhaps set the first dimension to 1 manually.</p>
",0
Model,TensorFlow,pattern,57987810,"<p>With TensorFlow in non-eager execution mode, first you create a graph with operations as the nodes. 
Then, within a session, you run the operations. Certain operations, like the initialisation of variables, don't return anything. They just assign values to the variables in the graph.</p>

<p>Here, <code>self.set_params_op</code> sounds like it could be an operation of this type. It may be setting values for some parameters. If you comment it out, my guess is that these parameters are not being set to the 'post training' values. So when you evaluate the model, you get different results.</p>
",0
Model,TensorFlow,pattern,70965912,"<p>Use model.save() to save the model in .pb format. For more information read <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load#savedmodel_format"" rel=""nofollow noreferrer"">Tensorflow SavedModel format</a>.</p>
<pre><code>import tensorflow as tf
#Load .h5 saved model
pre_model = tf.keras.models.load_model(&quot;final_model.h5&quot;)
#Converts .pb format
pre_model.save(&quot;saved_model/my_model&quot;)
</code></pre>
",1
Model,TensorFlow,pattern,61310421,"<p>In tensorflow2.x, <code>model.fit()</code> runs in graph mode by default, you can control this behavior by using the <code>run_eagerly</code> argument in the <code>model.compile(...)</code> method, which defaults to <code>False</code>.</p>
",1
Model,TensorFlow,environment,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",1
Model,TensorFlow,environment,61978942,"<p>Since Tensorflow works best in an asynchronous way, you should use an async function with await when loading the model:</p>

<pre><code>async function predict(){
  const model = await tf.loadLayersModel('js/model.json');
  // do prediction
}
</code></pre>
",0
Model,TensorFlow,environment,57987810,"<p>With TensorFlow in non-eager execution mode, first you create a graph with operations as the nodes. 
Then, within a session, you run the operations. Certain operations, like the initialisation of variables, don't return anything. They just assign values to the variables in the graph.</p>

<p>Here, <code>self.set_params_op</code> sounds like it could be an operation of this type. It may be setting values for some parameters. If you comment it out, my guess is that these parameters are not being set to the 'post training' values. So when you evaluate the model, you get different results.</p>
",0
Model,TensorFlow,environment,68893043,"<p>Your model takes an input tensor of shape &lt;unk, 5&gt;, with the first dimension being unknown (usually for dynamic batch size), so it is expected to see -1 at the first dimension when you call <code>session.GetInputTypeInfo(0).GetTensorTypeAndShapeInfo().GetShape()</code>.</p>
<p><a href=""https://i.sstatic.net/1YWTe.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/1YWTe.png"" alt=""enter image description here"" /></a></p>
<p>Before feeding actual data to your model, you need to set a concrete shape for your tensor, in your case, you should perhaps set the first dimension to 1 manually.</p>
",0
Model,TensorFlow,environment,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
Model,TensorFlow,environment,57871249,"<p>Keras/Tensorflow (except when in eager mode, but I don't think Keras supports eager mode) is a ""symbolic graph"" language. </p>

<p>When you create a model and its operations, you are just creating a ""graph"", not the operations themselves. Then you only have the tensors.</p>

<p>The Keras models have ""input tensors"", which in Tensorflow are ""placeholders"". They are special tensors that ""will"" receive values when training or predicting. (In Keras: <code>model.fit</code>, <code>model.predict</code>, <code>model.evaluate</code>, etc. In Tensorflow, <code>session.run</code>)     </p>

<p>Here an example of how to feed the inputs with data and get the actual values of the gradients: <a href=""https://stackoverflow.com/questions/39561560/getting-gradient-of-model-output-w-r-t-weights-using-keras"">Getting gradient of model output w.r.t weights using Keras</a> </p>
",1
Model,TensorFlow,environment,73222727,"<p>The model.fit() is given a list of arrays as input. A list of arrays is generally passed to fit() when a model has multiple inputs. In this case, the fit() method is treating each array as an input, resulting in the error.</p>
<p>Please convert the data to a tensor as follows and try again.</p>
<pre><code>x_train=tf.convert_to_tensor(x_train) 
</code></pre>
<p>Kindly refer to the <a href=""https://colab.sandbox.google.com/gist/synandi/4a10843644e10af034694f03816788d9/untitled139.ipynb#scrollTo=LWK0vgGHyhKW"" rel=""nofollow noreferrer"">gist</a> for complete code. Thank you!</p>
",1
Model,TensorFlow,environment,70965912,"<p>Use model.save() to save the model in .pb format. For more information read <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load#savedmodel_format"" rel=""nofollow noreferrer"">Tensorflow SavedModel format</a>.</p>
<pre><code>import tensorflow as tf
#Load .h5 saved model
pre_model = tf.keras.models.load_model(&quot;final_model.h5&quot;)
#Converts .pb format
pre_model.save(&quot;saved_model/my_model&quot;)
</code></pre>
",1
Model,TensorFlow,environment,61310421,"<p>In tensorflow2.x, <code>model.fit()</code> runs in graph mode by default, you can control this behavior by using the <code>run_eagerly</code> argument in the <code>model.compile(...)</code> method, which defaults to <code>False</code>.</p>
",1
Model,TensorFlow,environment,56427351,"<p>Any tensorflow declaration is a declaration of an execution graph, what must be realy run extra via <code>sess = tf.Session() , sess.run(object) , sess.run(dataset1</code> ) in your case </p>
",1
Model,TensorFlow,alternative,76039840,"<p>In TensorFlow, the <strong>call()</strong> method of a custom model is automatically called when you invoke the model instance as a function with input data. This is typically done using the <strong>parentheses () operator</strong>, which is a shorthand for calling the call() method.</p>
<p>For example, in the code provided in the question:</p>
<pre><code>basicblock = BasicBlock(filter_num)
basicblock(input_data) # this will invoke the call method 
</code></pre>
<p>It looks like this:</p>
<pre><code>BasicBlock(filter_num)(input_data)
</code></pre>
",1
Model,TensorFlow,alternative,61978942,"<p>Since Tensorflow works best in an asynchronous way, you should use an async function with await when loading the model:</p>

<pre><code>async function predict(){
  const model = await tf.loadLayersModel('js/model.json');
  // do prediction
}
</code></pre>
",0
Model,TensorFlow,alternative,73222727,"<p>The model.fit() is given a list of arrays as input. A list of arrays is generally passed to fit() when a model has multiple inputs. In this case, the fit() method is treating each array as an input, resulting in the error.</p>
<p>Please convert the data to a tensor as follows and try again.</p>
<pre><code>x_train=tf.convert_to_tensor(x_train) 
</code></pre>
<p>Kindly refer to the <a href=""https://colab.sandbox.google.com/gist/synandi/4a10843644e10af034694f03816788d9/untitled139.ipynb#scrollTo=LWK0vgGHyhKW"" rel=""nofollow noreferrer"">gist</a> for complete code. Thank you!</p>
",0
Model,TensorFlow,alternative,57871249,"<p>Keras/Tensorflow (except when in eager mode, but I don't think Keras supports eager mode) is a ""symbolic graph"" language. </p>

<p>When you create a model and its operations, you are just creating a ""graph"", not the operations themselves. Then you only have the tensors.</p>

<p>The Keras models have ""input tensors"", which in Tensorflow are ""placeholders"". They are special tensors that ""will"" receive values when training or predicting. (In Keras: <code>model.fit</code>, <code>model.predict</code>, <code>model.evaluate</code>, etc. In Tensorflow, <code>session.run</code>)     </p>

<p>Here an example of how to feed the inputs with data and get the actual values of the gradients: <a href=""https://stackoverflow.com/questions/39561560/getting-gradient-of-model-output-w-r-t-weights-using-keras"">Getting gradient of model output w.r.t weights using Keras</a> </p>
",1
Model,TensorFlow,alternative,68893043,"<p>Your model takes an input tensor of shape &lt;unk, 5&gt;, with the first dimension being unknown (usually for dynamic batch size), so it is expected to see -1 at the first dimension when you call <code>session.GetInputTypeInfo(0).GetTensorTypeAndShapeInfo().GetShape()</code>.</p>
<p><a href=""https://i.sstatic.net/1YWTe.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/1YWTe.png"" alt=""enter image description here"" /></a></p>
<p>Before feeding actual data to your model, you need to set a concrete shape for your tensor, in your case, you should perhaps set the first dimension to 1 manually.</p>
",0
Model,TensorFlow,alternative,61867905,"<p>TensorFlow 1.15</p>

<p>For multi-GPU-multi-machine, use <code>tf.estimator.train_and_evaluate</code> instead of <code>estimator.train</code> and remove <code>tf.contrib.distribute.MirroredStrategy</code>.</p>

<p>For multi-GPU-1-machine, use <code>estimator.train</code>.</p>
",0
Model,TensorFlow,alternative,70965912,"<p>Use model.save() to save the model in .pb format. For more information read <a href=""https://www.tensorflow.org/tutorials/keras/save_and_load#savedmodel_format"" rel=""nofollow noreferrer"">Tensorflow SavedModel format</a>.</p>
<pre><code>import tensorflow as tf
#Load .h5 saved model
pre_model = tf.keras.models.load_model(&quot;final_model.h5&quot;)
#Converts .pb format
pre_model.save(&quot;saved_model/my_model&quot;)
</code></pre>
",1
Model,TensorFlow,alternative,56714987,"<p>A tensorflow variable cannot have a dynamic shape but if you know the shape out of the session you could use:</p>

<pre class=""lang-py prettyprint-override""><code>foo_variable = tf.get_variable(""foo"", shape=[], validate_shape=False)

with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())
    print(sess.run(foo_variable, feed_dict={foo_variable: ones((2,2))}))
</code></pre>
",0
Model,TensorFlow,alternative,57987810,"<p>With TensorFlow in non-eager execution mode, first you create a graph with operations as the nodes. 
Then, within a session, you run the operations. Certain operations, like the initialisation of variables, don't return anything. They just assign values to the variables in the graph.</p>

<p>Here, <code>self.set_params_op</code> sounds like it could be an operation of this type. It may be setting values for some parameters. If you comment it out, my guess is that these parameters are not being set to the 'post training' values. So when you evaluate the model, you get different results.</p>
",0
Model,TensorFlow,alternative,61310421,"<p>In tensorflow2.x, <code>model.fit()</code> runs in graph mode by default, you can control this behavior by using the <code>run_eagerly</code> argument in the <code>model.compile(...)</code> method, which defaults to <code>False</code>.</p>
",1
MediaPlayer,Android,functionality,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",1
MediaPlayer,Android,functionality,77047752,"<p>If you go to the <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">documentation</a>, you will see that:</p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your
app accesses other apps' media files, request one or more of these
permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO,
READ_MEDIA_AUDIO. Learn more about the storage permissions that are
associated with media files.</p>
</blockquote>
<p>Therefore, if you require to access specific media files, you need to ask for a different permission.</p>
<ul>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_IMAGES"" rel=""nofollow noreferrer"">READ_MEDIA_IMAGES</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_VIDEO"" rel=""nofollow noreferrer"">READ_MEDIA_VIDEO</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_AUDIO"" rel=""nofollow noreferrer"">READ_MEDIA_AUDIO</a></li>
</ul>
",0
MediaPlayer,Android,functionality,71230700,"<p>You would have to implement <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html"" rel=""nofollow noreferrer""><code>MediaSession.Delegate</code></a> and then set it on your session using <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/GeckoSession.html#setMediaSessionDelegate(org.mozilla.geckoview.MediaSession.Delegate)"" rel=""nofollow noreferrer""><code>GeckoSession.setMediaSessionDelegate</code></a>.</p>
<p>The <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html#onMetadata(org.mozilla.geckoview.GeckoSession,org.mozilla.geckoview.MediaSession,org.mozilla.geckoview.MediaSession.Metadata)"" rel=""nofollow noreferrer""><code>onMetadata</code></a> method inside <code>Delegate</code> gives you an instance of <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html"" rel=""nofollow noreferrer""><code>MediaSession</code></a> that you can use to respond to Android's media notification controls, e.g. to play the current media element you would just have to call <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html#play()"" rel=""nofollow noreferrer""><code>mediaSession.play()</code></a>.</p>
",0
MediaPlayer,Android,functionality,67241731,"<p>The <a href=""https://developer.android.com/reference/android/media/MediaPlayer"" rel=""nofollow noreferrer""><strong>MediaPlayer</strong></a> decodes and plays the media at the earliest possible. MediaPlayer is better used when we have to use streaming of media from local sources. <a href=""https://exoplayer.dev/"" rel=""nofollow noreferrer"">ExoPlayer</a> on the other hand can be implmented for the streaming sources, say from a website or storage bucket.</p>
<p>In both the cases the respective players need a chuck of decoded frame data that has to be played. If the format which you are using is complex, there might be long time in decoding it.</p>
<p>As far as the whatsapp is concerned, it takes the orignal file and compresses it specifically to be used in its media manager.</p>
<p>I would recommend using exoplayer as it has much more easier handling and lower prepaaration time. Also the streaming is supported.</p>
",1
MediaPlayer,Android,functionality,65476295,"<p>Normally MediaPlayer does not run in the background.
Please note that Service itself runs in the main thread.
The Service can be used in tasks with no UI, but shouldn't be too long. If you need to perform long tasks, you must use threads within Service or use IntentService.</p>
",0
MediaPlayer,Android,functionality,67696158,"<p>If you need to change speed while not restarting, you could check playing status before then use this info to stop playing just after changing speed:
mediaPlayer is your Mediaplayer instance, speed is your value for speed</p>
<pre><code>var isCurrentlyPlaying:Boolean=mediaPlayer!!.isPlaying
mediaPlayer!!.setPlaybackParams(mediaPlayer!!.getPlaybackParams().setSpeed(speed))
if (!isCurrentlyPlaying) {
    mediaPlayer!!.pause()
}
</code></pre>
",1
MediaPlayer,Android,functionality,66936029,"<p>Not sure why you concluded that focus has anything to do with your problem.</p>
<p>If the default beginning state of the icon is <code>android:src=&quot;@drawable/play_icon&quot;</code> and the default beginning state of the mediaPlayer is &quot;not playing&quot;, wouldn't the first click result in <code>button.setImageResource(R.drawable.play_icon);</code> which just...sets the play icon again? So the first click changes the icon from play to play, and the second sets it from play to pause.</p>
<p>Have you tried debugging your code with a <a href=""https://developer.android.com/studio/debug#breakPoints"" rel=""nofollow noreferrer"">breakpoint</a>? Set one in your click listener and see what happens.</p>
",0
MediaPlayer,Android,functionality,76260390,"<p>From <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your app accesses other apps' media files, request one or more of these permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO, READ_MEDIA_AUDIO. Learn more about the <a href=""https://developer.android.com/training/data-storage/shared/media#storage-permission"" rel=""nofollow noreferrer"">storage permissions</a> that are associated with media files.</p>
</blockquote>
<pre class=""lang-xml prettyprint-override""><code>&lt;!-- Required only if your app needs to access images or photos
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_IMAGES&quot; /&gt;

&lt;!-- Required only if your app needs to access videos
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_VIDEO&quot; /&gt;

&lt;!-- Required only if your app needs to access audio files
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_AUDIO&quot; /&gt;

&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot;/&gt;

&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;
                 android:maxSdkVersion=&quot;29&quot; /&gt;
</code></pre>
",0
MediaPlayer,Android,functionality,64404293,"<p>Yes, it is definitely possible.</p>
<p><code>MediaPlayer</code> is, as you've probably discovered, suited towards playing media. Prerecorded, streamed, whatever, but always some media from an outside source.</p>
<p>What you are looking for however, is a way to <strong>synthesize</strong> raw PCM sound and stream it in memory to a speaker. For that, have a look at the <a href=""https://developer.android.com/reference/android/media/AudioTrack"" rel=""nofollow noreferrer"">AudioTrack</a> class.</p>
<p>Just do your math, write the audio samples data to a buffer (e.g. a <code>short[]</code> array), then write the data to the <code>AudioTrack</code>. Finally, <code>AudioTrack#play</code>.</p>
",1
MediaPlayer,Android,functionality,67888058,"<blockquote>
<p>MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception</p>
</blockquote>
<p>This is where the problem lies. You are trying to create a MediaPlayer Instance before actually assigning value to SongUri.</p>
<p>Create MediaPlayer instance in setData() fuction after assigning value to SongUri. Please make below changes in your code and it should work fine.</p>
<pre><code>    public void setData(String ringtonename, Uri songuri) {
        Ringtone_name.setText(ringtonename);
        this.SongUri = songuri;

        MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception
        RingLength.setText(mediaPlayer.getDuration());

        play_pause_icon.setOnClickListener(v -&gt;{
            if (!mediaPlayer.isPlaying()){
                play_pause_icon.setImageResource(R.drawable.ic_baseline_pause_circle_filled_24);
                Volume_icon.setVisibility(View.INVISIBLE);
                mediaPlayer.start();
            }else {
                play_pause_icon.setImageResource(R.drawable.ic_baseline_play_circle_filled_24);
                Volume_icon.setVisibility(View.VISIBLE);
                mediaPlayer.pause();
            }
        });
        Set_btn.setOnClickListener(v -&gt;{
            Uriforalarm = SongUri;
            new External_Stotrage().SavePrivatly(context,Uriforalarm,&quot;Ring For Ringing&quot;);
        });
    }

    public ViewHolder(@NonNull View itemView) {
        super(itemView);
        play_pause_icon = itemView.findViewById(R.id.play_pause_icon);
        Volume_icon = itemView.findViewById(R.id.Volume_icon);
        Ringtone_name = itemView.findViewById(R.id.Ringtone_name);
        Set_btn = itemView.findViewById(R.id.Set_btn);
        RingLength = itemView.findViewById(R.id.RingLength);
        seekBar = itemView.findViewById(R.id.seekBar);

        // TODO: Actual code
    }
</code></pre>
",1
MediaPlayer,Android,concept,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",1
MediaPlayer,Android,concept,67241731,"<p>The <a href=""https://developer.android.com/reference/android/media/MediaPlayer"" rel=""nofollow noreferrer""><strong>MediaPlayer</strong></a> decodes and plays the media at the earliest possible. MediaPlayer is better used when we have to use streaming of media from local sources. <a href=""https://exoplayer.dev/"" rel=""nofollow noreferrer"">ExoPlayer</a> on the other hand can be implmented for the streaming sources, say from a website or storage bucket.</p>
<p>In both the cases the respective players need a chuck of decoded frame data that has to be played. If the format which you are using is complex, there might be long time in decoding it.</p>
<p>As far as the whatsapp is concerned, it takes the orignal file and compresses it specifically to be used in its media manager.</p>
<p>I would recommend using exoplayer as it has much more easier handling and lower prepaaration time. Also the streaming is supported.</p>
",1
MediaPlayer,Android,concept,65476295,"<p>Normally MediaPlayer does not run in the background.
Please note that Service itself runs in the main thread.
The Service can be used in tasks with no UI, but shouldn't be too long. If you need to perform long tasks, you must use threads within Service or use IntentService.</p>
",0
MediaPlayer,Android,concept,77047752,"<p>If you go to the <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">documentation</a>, you will see that:</p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your
app accesses other apps' media files, request one or more of these
permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO,
READ_MEDIA_AUDIO. Learn more about the storage permissions that are
associated with media files.</p>
</blockquote>
<p>Therefore, if you require to access specific media files, you need to ask for a different permission.</p>
<ul>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_IMAGES"" rel=""nofollow noreferrer"">READ_MEDIA_IMAGES</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_VIDEO"" rel=""nofollow noreferrer"">READ_MEDIA_VIDEO</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_AUDIO"" rel=""nofollow noreferrer"">READ_MEDIA_AUDIO</a></li>
</ul>
",0
MediaPlayer,Android,concept,67696158,"<p>If you need to change speed while not restarting, you could check playing status before then use this info to stop playing just after changing speed:
mediaPlayer is your Mediaplayer instance, speed is your value for speed</p>
<pre><code>var isCurrentlyPlaying:Boolean=mediaPlayer!!.isPlaying
mediaPlayer!!.setPlaybackParams(mediaPlayer!!.getPlaybackParams().setSpeed(speed))
if (!isCurrentlyPlaying) {
    mediaPlayer!!.pause()
}
</code></pre>
",1
MediaPlayer,Android,concept,64404293,"<p>Yes, it is definitely possible.</p>
<p><code>MediaPlayer</code> is, as you've probably discovered, suited towards playing media. Prerecorded, streamed, whatever, but always some media from an outside source.</p>
<p>What you are looking for however, is a way to <strong>synthesize</strong> raw PCM sound and stream it in memory to a speaker. For that, have a look at the <a href=""https://developer.android.com/reference/android/media/AudioTrack"" rel=""nofollow noreferrer"">AudioTrack</a> class.</p>
<p>Just do your math, write the audio samples data to a buffer (e.g. a <code>short[]</code> array), then write the data to the <code>AudioTrack</code>. Finally, <code>AudioTrack#play</code>.</p>
",1
MediaPlayer,Android,concept,66936029,"<p>Not sure why you concluded that focus has anything to do with your problem.</p>
<p>If the default beginning state of the icon is <code>android:src=&quot;@drawable/play_icon&quot;</code> and the default beginning state of the mediaPlayer is &quot;not playing&quot;, wouldn't the first click result in <code>button.setImageResource(R.drawable.play_icon);</code> which just...sets the play icon again? So the first click changes the icon from play to play, and the second sets it from play to pause.</p>
<p>Have you tried debugging your code with a <a href=""https://developer.android.com/studio/debug#breakPoints"" rel=""nofollow noreferrer"">breakpoint</a>? Set one in your click listener and see what happens.</p>
",1
MediaPlayer,Android,concept,67888058,"<blockquote>
<p>MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception</p>
</blockquote>
<p>This is where the problem lies. You are trying to create a MediaPlayer Instance before actually assigning value to SongUri.</p>
<p>Create MediaPlayer instance in setData() fuction after assigning value to SongUri. Please make below changes in your code and it should work fine.</p>
<pre><code>    public void setData(String ringtonename, Uri songuri) {
        Ringtone_name.setText(ringtonename);
        this.SongUri = songuri;

        MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception
        RingLength.setText(mediaPlayer.getDuration());

        play_pause_icon.setOnClickListener(v -&gt;{
            if (!mediaPlayer.isPlaying()){
                play_pause_icon.setImageResource(R.drawable.ic_baseline_pause_circle_filled_24);
                Volume_icon.setVisibility(View.INVISIBLE);
                mediaPlayer.start();
            }else {
                play_pause_icon.setImageResource(R.drawable.ic_baseline_play_circle_filled_24);
                Volume_icon.setVisibility(View.VISIBLE);
                mediaPlayer.pause();
            }
        });
        Set_btn.setOnClickListener(v -&gt;{
            Uriforalarm = SongUri;
            new External_Stotrage().SavePrivatly(context,Uriforalarm,&quot;Ring For Ringing&quot;);
        });
    }

    public ViewHolder(@NonNull View itemView) {
        super(itemView);
        play_pause_icon = itemView.findViewById(R.id.play_pause_icon);
        Volume_icon = itemView.findViewById(R.id.Volume_icon);
        Ringtone_name = itemView.findViewById(R.id.Ringtone_name);
        Set_btn = itemView.findViewById(R.id.Set_btn);
        RingLength = itemView.findViewById(R.id.RingLength);
        seekBar = itemView.findViewById(R.id.seekBar);

        // TODO: Actual code
    }
</code></pre>
",1
MediaPlayer,Android,concept,73304527,"<p>only one song at a time in Android Studio
use this
<strong>static MediaPlayer mediaPlayer;</strong>
<em>dont use Privet MediaPlayer mediaPlayer</em></p>
<p>public class PlayerActivity&lt;mgr, result, audioSession, getApplicationContext, phoneStateListener&gt; extends AppCompatActivity implements MediaPlayer.OnCompletionListener, AudioManager.OnAudioFocusChangeListener {</p>
<pre><code>TextView songname, artistname, playduration, totalduration;
SeekBar seekBar;
ImageView backbutton, menu, playprevious, playnext, shufful;
ImageView play, repeat;
ImageView playalbum;
private Thread playThreads, previousThread, nextThread;
static ArrayList&lt;Song&gt; songlists = new ArrayList&lt;&gt;();
static MediaPlayer mediaPlayer;
</code></pre>
",1
MediaPlayer,Android,concept,68978465,"<p>M3U files are just text files with a list of URLs pointing to media files.</p>
<ul>
<li>Create a Media with the M3U URL,</li>
<li>Parse it,</li>
<li>Once parsed, access the sub items (those are the actual media URLs you want to play), like this <code>media.subItems();</code></li>
<li>Play any of the sub items by giving them to the mediaplayer.</li>
</ul>
",0
MediaPlayer,Android,performance,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",0
MediaPlayer,Android,performance,67241731,"<p>The <a href=""https://developer.android.com/reference/android/media/MediaPlayer"" rel=""nofollow noreferrer""><strong>MediaPlayer</strong></a> decodes and plays the media at the earliest possible. MediaPlayer is better used when we have to use streaming of media from local sources. <a href=""https://exoplayer.dev/"" rel=""nofollow noreferrer"">ExoPlayer</a> on the other hand can be implmented for the streaming sources, say from a website or storage bucket.</p>
<p>In both the cases the respective players need a chuck of decoded frame data that has to be played. If the format which you are using is complex, there might be long time in decoding it.</p>
<p>As far as the whatsapp is concerned, it takes the orignal file and compresses it specifically to be used in its media manager.</p>
<p>I would recommend using exoplayer as it has much more easier handling and lower prepaaration time. Also the streaming is supported.</p>
",1
MediaPlayer,Android,performance,71230700,"<p>You would have to implement <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html"" rel=""nofollow noreferrer""><code>MediaSession.Delegate</code></a> and then set it on your session using <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/GeckoSession.html#setMediaSessionDelegate(org.mozilla.geckoview.MediaSession.Delegate)"" rel=""nofollow noreferrer""><code>GeckoSession.setMediaSessionDelegate</code></a>.</p>
<p>The <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html#onMetadata(org.mozilla.geckoview.GeckoSession,org.mozilla.geckoview.MediaSession,org.mozilla.geckoview.MediaSession.Metadata)"" rel=""nofollow noreferrer""><code>onMetadata</code></a> method inside <code>Delegate</code> gives you an instance of <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html"" rel=""nofollow noreferrer""><code>MediaSession</code></a> that you can use to respond to Android's media notification controls, e.g. to play the current media element you would just have to call <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html#play()"" rel=""nofollow noreferrer""><code>mediaSession.play()</code></a>.</p>
",0
MediaPlayer,Android,performance,77047752,"<p>If you go to the <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">documentation</a>, you will see that:</p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your
app accesses other apps' media files, request one or more of these
permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO,
READ_MEDIA_AUDIO. Learn more about the storage permissions that are
associated with media files.</p>
</blockquote>
<p>Therefore, if you require to access specific media files, you need to ask for a different permission.</p>
<ul>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_IMAGES"" rel=""nofollow noreferrer"">READ_MEDIA_IMAGES</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_VIDEO"" rel=""nofollow noreferrer"">READ_MEDIA_VIDEO</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_AUDIO"" rel=""nofollow noreferrer"">READ_MEDIA_AUDIO</a></li>
</ul>
",0
MediaPlayer,Android,performance,73304527,"<p>only one song at a time in Android Studio
use this
<strong>static MediaPlayer mediaPlayer;</strong>
<em>dont use Privet MediaPlayer mediaPlayer</em></p>
<p>public class PlayerActivity&lt;mgr, result, audioSession, getApplicationContext, phoneStateListener&gt; extends AppCompatActivity implements MediaPlayer.OnCompletionListener, AudioManager.OnAudioFocusChangeListener {</p>
<pre><code>TextView songname, artistname, playduration, totalduration;
SeekBar seekBar;
ImageView backbutton, menu, playprevious, playnext, shufful;
ImageView play, repeat;
ImageView playalbum;
private Thread playThreads, previousThread, nextThread;
static ArrayList&lt;Song&gt; songlists = new ArrayList&lt;&gt;();
static MediaPlayer mediaPlayer;
</code></pre>
",0
MediaPlayer,Android,performance,66936029,"<p>Not sure why you concluded that focus has anything to do with your problem.</p>
<p>If the default beginning state of the icon is <code>android:src=&quot;@drawable/play_icon&quot;</code> and the default beginning state of the mediaPlayer is &quot;not playing&quot;, wouldn't the first click result in <code>button.setImageResource(R.drawable.play_icon);</code> which just...sets the play icon again? So the first click changes the icon from play to play, and the second sets it from play to pause.</p>
<p>Have you tried debugging your code with a <a href=""https://developer.android.com/studio/debug#breakPoints"" rel=""nofollow noreferrer"">breakpoint</a>? Set one in your click listener and see what happens.</p>
",0
MediaPlayer,Android,performance,64404293,"<p>Yes, it is definitely possible.</p>
<p><code>MediaPlayer</code> is, as you've probably discovered, suited towards playing media. Prerecorded, streamed, whatever, but always some media from an outside source.</p>
<p>What you are looking for however, is a way to <strong>synthesize</strong> raw PCM sound and stream it in memory to a speaker. For that, have a look at the <a href=""https://developer.android.com/reference/android/media/AudioTrack"" rel=""nofollow noreferrer"">AudioTrack</a> class.</p>
<p>Just do your math, write the audio samples data to a buffer (e.g. a <code>short[]</code> array), then write the data to the <code>AudioTrack</code>. Finally, <code>AudioTrack#play</code>.</p>
",0
MediaPlayer,Android,performance,67888058,"<blockquote>
<p>MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception</p>
</blockquote>
<p>This is where the problem lies. You are trying to create a MediaPlayer Instance before actually assigning value to SongUri.</p>
<p>Create MediaPlayer instance in setData() fuction after assigning value to SongUri. Please make below changes in your code and it should work fine.</p>
<pre><code>    public void setData(String ringtonename, Uri songuri) {
        Ringtone_name.setText(ringtonename);
        this.SongUri = songuri;

        MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception
        RingLength.setText(mediaPlayer.getDuration());

        play_pause_icon.setOnClickListener(v -&gt;{
            if (!mediaPlayer.isPlaying()){
                play_pause_icon.setImageResource(R.drawable.ic_baseline_pause_circle_filled_24);
                Volume_icon.setVisibility(View.INVISIBLE);
                mediaPlayer.start();
            }else {
                play_pause_icon.setImageResource(R.drawable.ic_baseline_play_circle_filled_24);
                Volume_icon.setVisibility(View.VISIBLE);
                mediaPlayer.pause();
            }
        });
        Set_btn.setOnClickListener(v -&gt;{
            Uriforalarm = SongUri;
            new External_Stotrage().SavePrivatly(context,Uriforalarm,&quot;Ring For Ringing&quot;);
        });
    }

    public ViewHolder(@NonNull View itemView) {
        super(itemView);
        play_pause_icon = itemView.findViewById(R.id.play_pause_icon);
        Volume_icon = itemView.findViewById(R.id.Volume_icon);
        Ringtone_name = itemView.findViewById(R.id.Ringtone_name);
        Set_btn = itemView.findViewById(R.id.Set_btn);
        RingLength = itemView.findViewById(R.id.RingLength);
        seekBar = itemView.findViewById(R.id.seekBar);

        // TODO: Actual code
    }
</code></pre>
",0
MediaPlayer,Android,performance,75930166,"<p>To determine which MediaController is currently playing when there are multiple active sessions, you can use the MediaController.getPlaybackState() method to get the current playback state of each MediaController. Here's an example code snippet that demonstrates how to do this:</p>
<pre><code>private val mSessionsChangedListener =
    MediaSessionManager.OnActiveSessionsChangedListener { list: List&lt;MediaController&gt;? -&gt;
        list?.forEach { mediaController -&gt;
            val playbackState = mediaController.playbackState
            if (playbackState?.state == PlaybackState.STATE_PLAYING || 
                playbackState?.state == PlaybackState.STATE_BUFFERING) {
                val mediaMetadata = mediaController.metadata
                // Use the metadata to get information about the currently playing song
                //
            }
        }
    }
</code></pre>
",0
MediaPlayer,Android,performance,74636325,"<p>I managed to inject the MediaPlayer into my viewmodel.</p>
<p>First put it into a wrapper class:</p>
<pre><code>import android.content.Context
import android.media.MediaPlayer
import androidx.annotation.RawRes

class SoundPlayer(
    private val context: Context,
) {
    private var mediaPlayer = MediaPlayer().apply {
        setOnPreparedListener { start() }
        setOnCompletionListener { reset() }
    }

    fun reset() = mediaPlayer.reset()

    fun playSound(@RawRes rawResId: Int) {
        val assetFileDescriptor = context.resources.openRawResourceFd(rawResId) ?: return
        mediaPlayer.run {
            reset()
            setDataSource(
                assetFileDescriptor.fileDescriptor,
                assetFileDescriptor.startOffset,
                assetFileDescriptor.declaredLength
            )
            prepareAsync()
        }
    }
}
</code></pre>
<p>Then inject it using this Module:</p>
<pre><code>@Module
@InstallIn(SingletonComponent::class)
class SoundPlayerModule {

    @Provides
    @Singleton
    fun provideSoundPlayer(@ApplicationContext context: Context) =
        SoundPlayer(context = context)
}
</code></pre>
<p>then use it in the ViewModel like this, where R.raw.start refers to an MP3 file located at res/raw/start.mp3</p>
<pre><code>@HiltViewModel
class ExerciseViewModel @Inject constructor(
    private var soundPlayer: SoundPlayer,
) : ViewModel() {
    ...
    soundPlayer.playSound(R.raw.start)
    ... 
}
</code></pre>
",0
MediaPlayer,Android,directive,77047752,"<p>If you go to the <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">documentation</a>, you will see that:</p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your
app accesses other apps' media files, request one or more of these
permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO,
READ_MEDIA_AUDIO. Learn more about the storage permissions that are
associated with media files.</p>
</blockquote>
<p>Therefore, if you require to access specific media files, you need to ask for a different permission.</p>
<ul>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_IMAGES"" rel=""nofollow noreferrer"">READ_MEDIA_IMAGES</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_VIDEO"" rel=""nofollow noreferrer"">READ_MEDIA_VIDEO</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_AUDIO"" rel=""nofollow noreferrer"">READ_MEDIA_AUDIO</a></li>
</ul>
",0
MediaPlayer,Android,directive,67696158,"<p>If you need to change speed while not restarting, you could check playing status before then use this info to stop playing just after changing speed:
mediaPlayer is your Mediaplayer instance, speed is your value for speed</p>
<pre><code>var isCurrentlyPlaying:Boolean=mediaPlayer!!.isPlaying
mediaPlayer!!.setPlaybackParams(mediaPlayer!!.getPlaybackParams().setSpeed(speed))
if (!isCurrentlyPlaying) {
    mediaPlayer!!.pause()
}
</code></pre>
",1
MediaPlayer,Android,directive,67241731,"<p>The <a href=""https://developer.android.com/reference/android/media/MediaPlayer"" rel=""nofollow noreferrer""><strong>MediaPlayer</strong></a> decodes and plays the media at the earliest possible. MediaPlayer is better used when we have to use streaming of media from local sources. <a href=""https://exoplayer.dev/"" rel=""nofollow noreferrer"">ExoPlayer</a> on the other hand can be implmented for the streaming sources, say from a website or storage bucket.</p>
<p>In both the cases the respective players need a chuck of decoded frame data that has to be played. If the format which you are using is complex, there might be long time in decoding it.</p>
<p>As far as the whatsapp is concerned, it takes the orignal file and compresses it specifically to be used in its media manager.</p>
<p>I would recommend using exoplayer as it has much more easier handling and lower prepaaration time. Also the streaming is supported.</p>
",0
MediaPlayer,Android,directive,71230700,"<p>You would have to implement <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html"" rel=""nofollow noreferrer""><code>MediaSession.Delegate</code></a> and then set it on your session using <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/GeckoSession.html#setMediaSessionDelegate(org.mozilla.geckoview.MediaSession.Delegate)"" rel=""nofollow noreferrer""><code>GeckoSession.setMediaSessionDelegate</code></a>.</p>
<p>The <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html#onMetadata(org.mozilla.geckoview.GeckoSession,org.mozilla.geckoview.MediaSession,org.mozilla.geckoview.MediaSession.Metadata)"" rel=""nofollow noreferrer""><code>onMetadata</code></a> method inside <code>Delegate</code> gives you an instance of <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html"" rel=""nofollow noreferrer""><code>MediaSession</code></a> that you can use to respond to Android's media notification controls, e.g. to play the current media element you would just have to call <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html#play()"" rel=""nofollow noreferrer""><code>mediaSession.play()</code></a>.</p>
",0
MediaPlayer,Android,directive,76260390,"<p>From <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your app accesses other apps' media files, request one or more of these permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO, READ_MEDIA_AUDIO. Learn more about the <a href=""https://developer.android.com/training/data-storage/shared/media#storage-permission"" rel=""nofollow noreferrer"">storage permissions</a> that are associated with media files.</p>
</blockquote>
<pre class=""lang-xml prettyprint-override""><code>&lt;!-- Required only if your app needs to access images or photos
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_IMAGES&quot; /&gt;

&lt;!-- Required only if your app needs to access videos
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_VIDEO&quot; /&gt;

&lt;!-- Required only if your app needs to access audio files
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_AUDIO&quot; /&gt;

&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot;/&gt;

&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;
                 android:maxSdkVersion=&quot;29&quot; /&gt;
</code></pre>
",0
MediaPlayer,Android,directive,66936029,"<p>Not sure why you concluded that focus has anything to do with your problem.</p>
<p>If the default beginning state of the icon is <code>android:src=&quot;@drawable/play_icon&quot;</code> and the default beginning state of the mediaPlayer is &quot;not playing&quot;, wouldn't the first click result in <code>button.setImageResource(R.drawable.play_icon);</code> which just...sets the play icon again? So the first click changes the icon from play to play, and the second sets it from play to pause.</p>
<p>Have you tried debugging your code with a <a href=""https://developer.android.com/studio/debug#breakPoints"" rel=""nofollow noreferrer"">breakpoint</a>? Set one in your click listener and see what happens.</p>
",0
MediaPlayer,Android,directive,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",0
MediaPlayer,Android,directive,73136554,"<p>PlayReady isn't supported on Fire TV <code>WebView</code>s. Only Widevine is supported.</p>
",0
MediaPlayer,Android,directive,67888058,"<blockquote>
<p>MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception</p>
</blockquote>
<p>This is where the problem lies. You are trying to create a MediaPlayer Instance before actually assigning value to SongUri.</p>
<p>Create MediaPlayer instance in setData() fuction after assigning value to SongUri. Please make below changes in your code and it should work fine.</p>
<pre><code>    public void setData(String ringtonename, Uri songuri) {
        Ringtone_name.setText(ringtonename);
        this.SongUri = songuri;

        MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception
        RingLength.setText(mediaPlayer.getDuration());

        play_pause_icon.setOnClickListener(v -&gt;{
            if (!mediaPlayer.isPlaying()){
                play_pause_icon.setImageResource(R.drawable.ic_baseline_pause_circle_filled_24);
                Volume_icon.setVisibility(View.INVISIBLE);
                mediaPlayer.start();
            }else {
                play_pause_icon.setImageResource(R.drawable.ic_baseline_play_circle_filled_24);
                Volume_icon.setVisibility(View.VISIBLE);
                mediaPlayer.pause();
            }
        });
        Set_btn.setOnClickListener(v -&gt;{
            Uriforalarm = SongUri;
            new External_Stotrage().SavePrivatly(context,Uriforalarm,&quot;Ring For Ringing&quot;);
        });
    }

    public ViewHolder(@NonNull View itemView) {
        super(itemView);
        play_pause_icon = itemView.findViewById(R.id.play_pause_icon);
        Volume_icon = itemView.findViewById(R.id.Volume_icon);
        Ringtone_name = itemView.findViewById(R.id.Ringtone_name);
        Set_btn = itemView.findViewById(R.id.Set_btn);
        RingLength = itemView.findViewById(R.id.RingLength);
        seekBar = itemView.findViewById(R.id.seekBar);

        // TODO: Actual code
    }
</code></pre>
",1
MediaPlayer,Android,directive,62016012,"<p>In order to auto play Youtube video, use </p>

<pre><code>player.loadVideo(value, 0) //replace 0 with milliseconds for delay in autoplay
</code></pre>

<p>instead of </p>

<pre><code>player.cueVideo(value)
</code></pre>

<p>please refer the below link for more information</p>

<p><a href=""https://developers.google.com/youtube/android/player/reference/com/google/android/youtube/player/YouTubePlayer#loadVideo(java.lang.String,%20int)"" rel=""nofollow noreferrer"">https://developers.google.com/youtube/android/player/reference/com/google/android/youtube/player/YouTubePlayer#loadVideo(java.lang.String,%20int)</a></p>
",0
MediaPlayer,Android,pattern,77047752,"<p>If you go to the <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">documentation</a>, you will see that:</p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your
app accesses other apps' media files, request one or more of these
permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO,
READ_MEDIA_AUDIO. Learn more about the storage permissions that are
associated with media files.</p>
</blockquote>
<p>Therefore, if you require to access specific media files, you need to ask for a different permission.</p>
<ul>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_IMAGES"" rel=""nofollow noreferrer"">READ_MEDIA_IMAGES</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_VIDEO"" rel=""nofollow noreferrer"">READ_MEDIA_VIDEO</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_AUDIO"" rel=""nofollow noreferrer"">READ_MEDIA_AUDIO</a></li>
</ul>
",0
MediaPlayer,Android,pattern,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",1
MediaPlayer,Android,pattern,71230700,"<p>You would have to implement <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html"" rel=""nofollow noreferrer""><code>MediaSession.Delegate</code></a> and then set it on your session using <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/GeckoSession.html#setMediaSessionDelegate(org.mozilla.geckoview.MediaSession.Delegate)"" rel=""nofollow noreferrer""><code>GeckoSession.setMediaSessionDelegate</code></a>.</p>
<p>The <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html#onMetadata(org.mozilla.geckoview.GeckoSession,org.mozilla.geckoview.MediaSession,org.mozilla.geckoview.MediaSession.Metadata)"" rel=""nofollow noreferrer""><code>onMetadata</code></a> method inside <code>Delegate</code> gives you an instance of <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html"" rel=""nofollow noreferrer""><code>MediaSession</code></a> that you can use to respond to Android's media notification controls, e.g. to play the current media element you would just have to call <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html#play()"" rel=""nofollow noreferrer""><code>mediaSession.play()</code></a>.</p>
",0
MediaPlayer,Android,pattern,76260390,"<p>From <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your app accesses other apps' media files, request one or more of these permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO, READ_MEDIA_AUDIO. Learn more about the <a href=""https://developer.android.com/training/data-storage/shared/media#storage-permission"" rel=""nofollow noreferrer"">storage permissions</a> that are associated with media files.</p>
</blockquote>
<pre class=""lang-xml prettyprint-override""><code>&lt;!-- Required only if your app needs to access images or photos
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_IMAGES&quot; /&gt;

&lt;!-- Required only if your app needs to access videos
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_VIDEO&quot; /&gt;

&lt;!-- Required only if your app needs to access audio files
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_AUDIO&quot; /&gt;

&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot;/&gt;

&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;
                 android:maxSdkVersion=&quot;29&quot; /&gt;
</code></pre>
",0
MediaPlayer,Android,pattern,66936029,"<p>Not sure why you concluded that focus has anything to do with your problem.</p>
<p>If the default beginning state of the icon is <code>android:src=&quot;@drawable/play_icon&quot;</code> and the default beginning state of the mediaPlayer is &quot;not playing&quot;, wouldn't the first click result in <code>button.setImageResource(R.drawable.play_icon);</code> which just...sets the play icon again? So the first click changes the icon from play to play, and the second sets it from play to pause.</p>
<p>Have you tried debugging your code with a <a href=""https://developer.android.com/studio/debug#breakPoints"" rel=""nofollow noreferrer"">breakpoint</a>? Set one in your click listener and see what happens.</p>
",0
MediaPlayer,Android,pattern,67241731,"<p>The <a href=""https://developer.android.com/reference/android/media/MediaPlayer"" rel=""nofollow noreferrer""><strong>MediaPlayer</strong></a> decodes and plays the media at the earliest possible. MediaPlayer is better used when we have to use streaming of media from local sources. <a href=""https://exoplayer.dev/"" rel=""nofollow noreferrer"">ExoPlayer</a> on the other hand can be implmented for the streaming sources, say from a website or storage bucket.</p>
<p>In both the cases the respective players need a chuck of decoded frame data that has to be played. If the format which you are using is complex, there might be long time in decoding it.</p>
<p>As far as the whatsapp is concerned, it takes the orignal file and compresses it specifically to be used in its media manager.</p>
<p>I would recommend using exoplayer as it has much more easier handling and lower prepaaration time. Also the streaming is supported.</p>
",1
MediaPlayer,Android,pattern,64404293,"<p>Yes, it is definitely possible.</p>
<p><code>MediaPlayer</code> is, as you've probably discovered, suited towards playing media. Prerecorded, streamed, whatever, but always some media from an outside source.</p>
<p>What you are looking for however, is a way to <strong>synthesize</strong> raw PCM sound and stream it in memory to a speaker. For that, have a look at the <a href=""https://developer.android.com/reference/android/media/AudioTrack"" rel=""nofollow noreferrer"">AudioTrack</a> class.</p>
<p>Just do your math, write the audio samples data to a buffer (e.g. a <code>short[]</code> array), then write the data to the <code>AudioTrack</code>. Finally, <code>AudioTrack#play</code>.</p>
",1
MediaPlayer,Android,pattern,68978465,"<p>M3U files are just text files with a list of URLs pointing to media files.</p>
<ul>
<li>Create a Media with the M3U URL,</li>
<li>Parse it,</li>
<li>Once parsed, access the sub items (those are the actual media URLs you want to play), like this <code>media.subItems();</code></li>
<li>Play any of the sub items by giving them to the mediaplayer.</li>
</ul>
",0
MediaPlayer,Android,pattern,73304527,"<p>only one song at a time in Android Studio
use this
<strong>static MediaPlayer mediaPlayer;</strong>
<em>dont use Privet MediaPlayer mediaPlayer</em></p>
<p>public class PlayerActivity&lt;mgr, result, audioSession, getApplicationContext, phoneStateListener&gt; extends AppCompatActivity implements MediaPlayer.OnCompletionListener, AudioManager.OnAudioFocusChangeListener {</p>
<pre><code>TextView songname, artistname, playduration, totalduration;
SeekBar seekBar;
ImageView backbutton, menu, playprevious, playnext, shufful;
ImageView play, repeat;
ImageView playalbum;
private Thread playThreads, previousThread, nextThread;
static ArrayList&lt;Song&gt; songlists = new ArrayList&lt;&gt;();
static MediaPlayer mediaPlayer;
</code></pre>
",1
MediaPlayer,Android,pattern,67888058,"<blockquote>
<p>MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception</p>
</blockquote>
<p>This is where the problem lies. You are trying to create a MediaPlayer Instance before actually assigning value to SongUri.</p>
<p>Create MediaPlayer instance in setData() fuction after assigning value to SongUri. Please make below changes in your code and it should work fine.</p>
<pre><code>    public void setData(String ringtonename, Uri songuri) {
        Ringtone_name.setText(ringtonename);
        this.SongUri = songuri;

        MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception
        RingLength.setText(mediaPlayer.getDuration());

        play_pause_icon.setOnClickListener(v -&gt;{
            if (!mediaPlayer.isPlaying()){
                play_pause_icon.setImageResource(R.drawable.ic_baseline_pause_circle_filled_24);
                Volume_icon.setVisibility(View.INVISIBLE);
                mediaPlayer.start();
            }else {
                play_pause_icon.setImageResource(R.drawable.ic_baseline_play_circle_filled_24);
                Volume_icon.setVisibility(View.VISIBLE);
                mediaPlayer.pause();
            }
        });
        Set_btn.setOnClickListener(v -&gt;{
            Uriforalarm = SongUri;
            new External_Stotrage().SavePrivatly(context,Uriforalarm,&quot;Ring For Ringing&quot;);
        });
    }

    public ViewHolder(@NonNull View itemView) {
        super(itemView);
        play_pause_icon = itemView.findViewById(R.id.play_pause_icon);
        Volume_icon = itemView.findViewById(R.id.Volume_icon);
        Ringtone_name = itemView.findViewById(R.id.Ringtone_name);
        Set_btn = itemView.findViewById(R.id.Set_btn);
        RingLength = itemView.findViewById(R.id.RingLength);
        seekBar = itemView.findViewById(R.id.seekBar);

        // TODO: Actual code
    }
</code></pre>
",1
MediaPlayer,Android,environment,77047752,"<p>If you go to the <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">documentation</a>, you will see that:</p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your
app accesses other apps' media files, request one or more of these
permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO,
READ_MEDIA_AUDIO. Learn more about the storage permissions that are
associated with media files.</p>
</blockquote>
<p>Therefore, if you require to access specific media files, you need to ask for a different permission.</p>
<ul>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_IMAGES"" rel=""nofollow noreferrer"">READ_MEDIA_IMAGES</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_VIDEO"" rel=""nofollow noreferrer"">READ_MEDIA_VIDEO</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_AUDIO"" rel=""nofollow noreferrer"">READ_MEDIA_AUDIO</a></li>
</ul>
",0
MediaPlayer,Android,environment,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",1
MediaPlayer,Android,environment,67241731,"<p>The <a href=""https://developer.android.com/reference/android/media/MediaPlayer"" rel=""nofollow noreferrer""><strong>MediaPlayer</strong></a> decodes and plays the media at the earliest possible. MediaPlayer is better used when we have to use streaming of media from local sources. <a href=""https://exoplayer.dev/"" rel=""nofollow noreferrer"">ExoPlayer</a> on the other hand can be implmented for the streaming sources, say from a website or storage bucket.</p>
<p>In both the cases the respective players need a chuck of decoded frame data that has to be played. If the format which you are using is complex, there might be long time in decoding it.</p>
<p>As far as the whatsapp is concerned, it takes the orignal file and compresses it specifically to be used in its media manager.</p>
<p>I would recommend using exoplayer as it has much more easier handling and lower prepaaration time. Also the streaming is supported.</p>
",1
MediaPlayer,Android,environment,67696158,"<p>If you need to change speed while not restarting, you could check playing status before then use this info to stop playing just after changing speed:
mediaPlayer is your Mediaplayer instance, speed is your value for speed</p>
<pre><code>var isCurrentlyPlaying:Boolean=mediaPlayer!!.isPlaying
mediaPlayer!!.setPlaybackParams(mediaPlayer!!.getPlaybackParams().setSpeed(speed))
if (!isCurrentlyPlaying) {
    mediaPlayer!!.pause()
}
</code></pre>
",1
MediaPlayer,Android,environment,76260390,"<p>From <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your app accesses other apps' media files, request one or more of these permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO, READ_MEDIA_AUDIO. Learn more about the <a href=""https://developer.android.com/training/data-storage/shared/media#storage-permission"" rel=""nofollow noreferrer"">storage permissions</a> that are associated with media files.</p>
</blockquote>
<pre class=""lang-xml prettyprint-override""><code>&lt;!-- Required only if your app needs to access images or photos
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_IMAGES&quot; /&gt;

&lt;!-- Required only if your app needs to access videos
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_VIDEO&quot; /&gt;

&lt;!-- Required only if your app needs to access audio files
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_AUDIO&quot; /&gt;

&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot;/&gt;

&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;
                 android:maxSdkVersion=&quot;29&quot; /&gt;
</code></pre>
",0
MediaPlayer,Android,environment,71230700,"<p>You would have to implement <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html"" rel=""nofollow noreferrer""><code>MediaSession.Delegate</code></a> and then set it on your session using <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/GeckoSession.html#setMediaSessionDelegate(org.mozilla.geckoview.MediaSession.Delegate)"" rel=""nofollow noreferrer""><code>GeckoSession.setMediaSessionDelegate</code></a>.</p>
<p>The <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html#onMetadata(org.mozilla.geckoview.GeckoSession,org.mozilla.geckoview.MediaSession,org.mozilla.geckoview.MediaSession.Metadata)"" rel=""nofollow noreferrer""><code>onMetadata</code></a> method inside <code>Delegate</code> gives you an instance of <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html"" rel=""nofollow noreferrer""><code>MediaSession</code></a> that you can use to respond to Android's media notification controls, e.g. to play the current media element you would just have to call <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html#play()"" rel=""nofollow noreferrer""><code>mediaSession.play()</code></a>.</p>
",0
MediaPlayer,Android,environment,73304527,"<p>only one song at a time in Android Studio
use this
<strong>static MediaPlayer mediaPlayer;</strong>
<em>dont use Privet MediaPlayer mediaPlayer</em></p>
<p>public class PlayerActivity&lt;mgr, result, audioSession, getApplicationContext, phoneStateListener&gt; extends AppCompatActivity implements MediaPlayer.OnCompletionListener, AudioManager.OnAudioFocusChangeListener {</p>
<pre><code>TextView songname, artistname, playduration, totalduration;
SeekBar seekBar;
ImageView backbutton, menu, playprevious, playnext, shufful;
ImageView play, repeat;
ImageView playalbum;
private Thread playThreads, previousThread, nextThread;
static ArrayList&lt;Song&gt; songlists = new ArrayList&lt;&gt;();
static MediaPlayer mediaPlayer;
</code></pre>
",1
MediaPlayer,Android,environment,66936029,"<p>Not sure why you concluded that focus has anything to do with your problem.</p>
<p>If the default beginning state of the icon is <code>android:src=&quot;@drawable/play_icon&quot;</code> and the default beginning state of the mediaPlayer is &quot;not playing&quot;, wouldn't the first click result in <code>button.setImageResource(R.drawable.play_icon);</code> which just...sets the play icon again? So the first click changes the icon from play to play, and the second sets it from play to pause.</p>
<p>Have you tried debugging your code with a <a href=""https://developer.android.com/studio/debug#breakPoints"" rel=""nofollow noreferrer"">breakpoint</a>? Set one in your click listener and see what happens.</p>
",1
MediaPlayer,Android,environment,66549499,"<p>MediaStore APIs are just for media files - images, videos, and audio. <br />
You can store all files in the app's private folder and add an export option to your app (maybe compress the whole structure to an archive). So a user will be able to store or send it wherever they want. <br />
In this case, you need to use <code>FileProvider</code> to expose the file from the private directory.</p>
",0
MediaPlayer,Android,environment,74636325,"<p>I managed to inject the MediaPlayer into my viewmodel.</p>
<p>First put it into a wrapper class:</p>
<pre><code>import android.content.Context
import android.media.MediaPlayer
import androidx.annotation.RawRes

class SoundPlayer(
    private val context: Context,
) {
    private var mediaPlayer = MediaPlayer().apply {
        setOnPreparedListener { start() }
        setOnCompletionListener { reset() }
    }

    fun reset() = mediaPlayer.reset()

    fun playSound(@RawRes rawResId: Int) {
        val assetFileDescriptor = context.resources.openRawResourceFd(rawResId) ?: return
        mediaPlayer.run {
            reset()
            setDataSource(
                assetFileDescriptor.fileDescriptor,
                assetFileDescriptor.startOffset,
                assetFileDescriptor.declaredLength
            )
            prepareAsync()
        }
    }
}
</code></pre>
<p>Then inject it using this Module:</p>
<pre><code>@Module
@InstallIn(SingletonComponent::class)
class SoundPlayerModule {

    @Provides
    @Singleton
    fun provideSoundPlayer(@ApplicationContext context: Context) =
        SoundPlayer(context = context)
}
</code></pre>
<p>then use it in the ViewModel like this, where R.raw.start refers to an MP3 file located at res/raw/start.mp3</p>
<pre><code>@HiltViewModel
class ExerciseViewModel @Inject constructor(
    private var soundPlayer: SoundPlayer,
) : ViewModel() {
    ...
    soundPlayer.playSound(R.raw.start)
    ... 
}
</code></pre>
",1
MediaPlayer,Android,alternative,67241731,"<p>The <a href=""https://developer.android.com/reference/android/media/MediaPlayer"" rel=""nofollow noreferrer""><strong>MediaPlayer</strong></a> decodes and plays the media at the earliest possible. MediaPlayer is better used when we have to use streaming of media from local sources. <a href=""https://exoplayer.dev/"" rel=""nofollow noreferrer"">ExoPlayer</a> on the other hand can be implmented for the streaming sources, say from a website or storage bucket.</p>
<p>In both the cases the respective players need a chuck of decoded frame data that has to be played. If the format which you are using is complex, there might be long time in decoding it.</p>
<p>As far as the whatsapp is concerned, it takes the orignal file and compresses it specifically to be used in its media manager.</p>
<p>I would recommend using exoplayer as it has much more easier handling and lower prepaaration time. Also the streaming is supported.</p>
",1
MediaPlayer,Android,alternative,70556830,"<p>Well, Android has this library/class called <code>MediaPlayer</code>:</p>
<p><a href=""https://developer.android.com/guide/topics/media/mediaplayer"" rel=""nofollow noreferrer"">https://developer.android.com/guide/topics/media/mediaplayer</a></p>
<p>The <code>MediaPlayer</code> is what you use when you play audio,</p>
<p>the <code>MediaPlayer</code> takes the input(the file) as long as it is still encoded as an audio file.</p>
<p>No matter what you do with the file extension, as long as it is still encoded as audio,</p>
<p>it will stay as an audio file.</p>
<p>That's why~</p>
",0
MediaPlayer,Android,alternative,77047752,"<p>If you go to the <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">documentation</a>, you will see that:</p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your
app accesses other apps' media files, request one or more of these
permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO,
READ_MEDIA_AUDIO. Learn more about the storage permissions that are
associated with media files.</p>
</blockquote>
<p>Therefore, if you require to access specific media files, you need to ask for a different permission.</p>
<ul>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_IMAGES"" rel=""nofollow noreferrer"">READ_MEDIA_IMAGES</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_VIDEO"" rel=""nofollow noreferrer"">READ_MEDIA_VIDEO</a></li>
<li><a href=""https://developer.android.com/reference/android/Manifest.permission#READ_MEDIA_AUDIO"" rel=""nofollow noreferrer"">READ_MEDIA_AUDIO</a></li>
</ul>
",0
MediaPlayer,Android,alternative,67696158,"<p>If you need to change speed while not restarting, you could check playing status before then use this info to stop playing just after changing speed:
mediaPlayer is your Mediaplayer instance, speed is your value for speed</p>
<pre><code>var isCurrentlyPlaying:Boolean=mediaPlayer!!.isPlaying
mediaPlayer!!.setPlaybackParams(mediaPlayer!!.getPlaybackParams().setSpeed(speed))
if (!isCurrentlyPlaying) {
    mediaPlayer!!.pause()
}
</code></pre>
",1
MediaPlayer,Android,alternative,71230700,"<p>You would have to implement <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html"" rel=""nofollow noreferrer""><code>MediaSession.Delegate</code></a> and then set it on your session using <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/GeckoSession.html#setMediaSessionDelegate(org.mozilla.geckoview.MediaSession.Delegate)"" rel=""nofollow noreferrer""><code>GeckoSession.setMediaSessionDelegate</code></a>.</p>
<p>The <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.Delegate.html#onMetadata(org.mozilla.geckoview.GeckoSession,org.mozilla.geckoview.MediaSession,org.mozilla.geckoview.MediaSession.Metadata)"" rel=""nofollow noreferrer""><code>onMetadata</code></a> method inside <code>Delegate</code> gives you an instance of <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html"" rel=""nofollow noreferrer""><code>MediaSession</code></a> that you can use to respond to Android's media notification controls, e.g. to play the current media element you would just have to call <a href=""https://mozilla.github.io/geckoview/javadoc/mozilla-central/org/mozilla/geckoview/MediaSession.html#play()"" rel=""nofollow noreferrer""><code>mediaSession.play()</code></a>.</p>
",0
MediaPlayer,Android,alternative,66936029,"<p>Not sure why you concluded that focus has anything to do with your problem.</p>
<p>If the default beginning state of the icon is <code>android:src=&quot;@drawable/play_icon&quot;</code> and the default beginning state of the mediaPlayer is &quot;not playing&quot;, wouldn't the first click result in <code>button.setImageResource(R.drawable.play_icon);</code> which just...sets the play icon again? So the first click changes the icon from play to play, and the second sets it from play to pause.</p>
<p>Have you tried debugging your code with a <a href=""https://developer.android.com/studio/debug#breakPoints"" rel=""nofollow noreferrer"">breakpoint</a>? Set one in your click listener and see what happens.</p>
",0
MediaPlayer,Android,alternative,67888058,"<blockquote>
<p>MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception</p>
</blockquote>
<p>This is where the problem lies. You are trying to create a MediaPlayer Instance before actually assigning value to SongUri.</p>
<p>Create MediaPlayer instance in setData() fuction after assigning value to SongUri. Please make below changes in your code and it should work fine.</p>
<pre><code>    public void setData(String ringtonename, Uri songuri) {
        Ringtone_name.setText(ringtonename);
        this.SongUri = songuri;

        MediaPlayer mediaPlayer = MediaPlayer.create(context,SongUri);//83  3rd NullPointer exception
        RingLength.setText(mediaPlayer.getDuration());

        play_pause_icon.setOnClickListener(v -&gt;{
            if (!mediaPlayer.isPlaying()){
                play_pause_icon.setImageResource(R.drawable.ic_baseline_pause_circle_filled_24);
                Volume_icon.setVisibility(View.INVISIBLE);
                mediaPlayer.start();
            }else {
                play_pause_icon.setImageResource(R.drawable.ic_baseline_play_circle_filled_24);
                Volume_icon.setVisibility(View.VISIBLE);
                mediaPlayer.pause();
            }
        });
        Set_btn.setOnClickListener(v -&gt;{
            Uriforalarm = SongUri;
            new External_Stotrage().SavePrivatly(context,Uriforalarm,&quot;Ring For Ringing&quot;);
        });
    }

    public ViewHolder(@NonNull View itemView) {
        super(itemView);
        play_pause_icon = itemView.findViewById(R.id.play_pause_icon);
        Volume_icon = itemView.findViewById(R.id.Volume_icon);
        Ringtone_name = itemView.findViewById(R.id.Ringtone_name);
        Set_btn = itemView.findViewById(R.id.Set_btn);
        RingLength = itemView.findViewById(R.id.RingLength);
        seekBar = itemView.findViewById(R.id.seekBar);

        // TODO: Actual code
    }
</code></pre>
",1
MediaPlayer,Android,alternative,73304527,"<p>only one song at a time in Android Studio
use this
<strong>static MediaPlayer mediaPlayer;</strong>
<em>dont use Privet MediaPlayer mediaPlayer</em></p>
<p>public class PlayerActivity&lt;mgr, result, audioSession, getApplicationContext, phoneStateListener&gt; extends AppCompatActivity implements MediaPlayer.OnCompletionListener, AudioManager.OnAudioFocusChangeListener {</p>
<pre><code>TextView songname, artistname, playduration, totalduration;
SeekBar seekBar;
ImageView backbutton, menu, playprevious, playnext, shufful;
ImageView play, repeat;
ImageView playalbum;
private Thread playThreads, previousThread, nextThread;
static ArrayList&lt;Song&gt; songlists = new ArrayList&lt;&gt;();
static MediaPlayer mediaPlayer;
</code></pre>
",1
MediaPlayer,Android,alternative,73136554,"<p>PlayReady isn't supported on Fire TV <code>WebView</code>s. Only Widevine is supported.</p>
",0
MediaPlayer,Android,alternative,76260390,"<p>From <a href=""https://developer.android.com/reference/android/Manifest.permission#READ_EXTERNAL_STORAGE"" rel=""nofollow noreferrer"">here</a></p>
<blockquote>
<p>Note: Starting in API level 33, this permission has no effect. If your app accesses other apps' media files, request one or more of these permissions instead: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO, READ_MEDIA_AUDIO. Learn more about the <a href=""https://developer.android.com/training/data-storage/shared/media#storage-permission"" rel=""nofollow noreferrer"">storage permissions</a> that are associated with media files.</p>
</blockquote>
<pre class=""lang-xml prettyprint-override""><code>&lt;!-- Required only if your app needs to access images or photos
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_IMAGES&quot; /&gt;

&lt;!-- Required only if your app needs to access videos
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_VIDEO&quot; /&gt;

&lt;!-- Required only if your app needs to access audio files
     that other apps created. --&gt;
&lt;uses-permission android:name=&quot;android.permission.READ_MEDIA_AUDIO&quot; /&gt;

&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot;/&gt;

&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;
                 android:maxSdkVersion=&quot;29&quot; /&gt;
</code></pre>
",0
BigDecimal,Kotlin,functionality,65122369,"<p>In Kotlin, <code>in</code> is a <a href=""https://kotlinlang.org/docs/reference/keyword-reference.html#hard-keywords"" rel=""nofollow noreferrer"">hard keyword</a>, which cannot be used as an identifier. To access or declare members named <code>in</code>, you have to <a href=""https://kotlinlang.org/docs/reference/java-interop.html#escaping-for-java-identifiers-that-are-keywords-in-kotlin"" rel=""nofollow noreferrer"">surround it with backticks</a> (<code>`</code>):</p>
<pre class=""lang-kotlin prettyprint-override""><code>standardInput = System.`in`
</code></pre>
",0
BigDecimal,Kotlin,functionality,61133468,"<p>Use BigDecimal or BigInteger for numbers as large as this. For example:</p>

<pre><code>decimalFormatter.format(new BigDecimal(""9999999999999999""))
</code></pre>

<p>A <code>double</code> precision floating point number has only around 15-16 decimal digits of precision. Your number has 16 nines. There is no double precision floating point number exactly equal to 9999999999999999, so it is rounded to the closest one - which happens to be 10<sup>16</sup>.</p>
",1
BigDecimal,Kotlin,functionality,68215527,"<blockquote>
<p>In Kotlin, the code snippet <code>val f = println()</code> binds the function <code>println</code> (which is a first class object) to the name <code>f</code>.</p>
</blockquote>
<p>Not true. This assigns the return value result of calling <code>println()</code>, which is <code>Unit</code>, to the variable <code>f</code>. To get a function reference, use <code>::</code>. But you must also specify the variable type, because it cannot be inferred when the function has overloads:</p>
<pre><code>val f: (Any)-&gt;Unit = ::println
</code></pre>
<p>A function with a receiver should be specified using the receiving type, like</p>
<pre><code>val f = Any::toString

// or, to bind a specific instance's toString:
val myList = listOf(&quot;Hello&quot;, &quot;World&quot;)
val myListToString = myList::toString
</code></pre>
<p>Since <code>map</code> is a higher-order function, it has a long and complicated signature:</p>
<pre><code>val f: Array&lt;Int&gt;.((Int)-&gt;String)-&gt;List&lt;String&gt; = Array&lt;Int&gt;::map
</code></pre>
",0
BigDecimal,Kotlin,functionality,76254128,"<p>Kotlin has two different operators for adding to a list:</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/plus.html"" rel=""nofollow noreferrer"">plus</a> (+), which returns a <em>new</em> list containing the original list and the added element or list, and<br />
<a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/plus-assign.html"" rel=""nofollow noreferrer"">plusAssign</a> (+=), which <em>adds</em> the given element or list to the original list.</p>
<p>So, the correct way to do this would be:</p>
<pre><code>var arr = mutableListOf&lt;Int&gt;(4,5)
var arr2 = mutableListOf&lt;Int&gt;(1,3)
arr += 8 // or arr.plusAssign(8)
arr2 += arr2 // or arr.plusAssign(arr2)
 
println(arr)
</code></pre>
",0
BigDecimal,Kotlin,functionality,55792729,"<p>Kotlin has <a href=""https://kotlinlang.org/docs/reference/classes.html#constructors"" rel=""nofollow noreferrer"">two types of constructors</a>. First one is that goes after class name and second is that contains body of class and is declared as 'constructor'</p>

<p>In your case I'd make something like</p>

<pre><code>class PostLocationTask(
    var latitude: Double? = null, 
    var longitude: Double? = null
) : AsyncTask&lt;String, Void, String&gt;() {
    var responseServer: String? = null
    override fun doInBackground(vararg params: String?): String = getLocationFromServer()
}
</code></pre>
",0
BigDecimal,Kotlin,functionality,63267572,"<p>In kotlin, you won't usually see the <code>getX</code> kind of functions as you usually write in Java. Instead, properties can have custom getters directly attached to them. For example, you could change your <code>price</code> property declaration to:</p>
<pre><code>val price: Int get() {
    println(&quot;Got price!&quot;)
    return 1000000
}
</code></pre>
<p>So, by calling <code>w.price</code>, you are calling the Kotlin equivalent of <code>getPrice()</code> which is, by itself, a Java method in the background; as such, it may be indeed computing something (in this case, it prints &quot;Got price!&quot;), so it is a valid expression all by itself.</p>
",0
BigDecimal,Kotlin,functionality,66174107,"<p>In kotlin the &quot;?&quot; keyword indicates that a data type can take a null value. Variable &quot;a&quot; can take a null value, but variable &quot;b&quot; can not take a null value. You would need to make sure that &quot;a&quot; is not null before you could assign that value to &quot;b&quot;.</p>
",0
BigDecimal,Kotlin,functionality,58455637,"<p>In Kotlin, when you see a getter method from a Java class, you can omit the <code>get</code>, change the first letter to lower-case, and use it like a Kotlin property:</p>

<pre><code>val path = context.filesDir.absolutePath
val file = File(""$path/filename"")
</code></pre>
",0
BigDecimal,Kotlin,functionality,56134099,"<blockquote>
  <p>In Kotlin 123.456 is a valid Double value</p>
</blockquote>

<p>Actually, that's not quite true.  There's a Double value very <em>close</em> to 123.456, but it's not <em>exactly</em> 123.456.  What you're seeing is the consequences of that.</p>

<p>So you can't maintain precision, because you don't have that precision to start with!</p>

<p>Short answer:</p>

<p><strong>If you need exact values, don't use floating-point!</strong></p>

<p>(In particular: <strong>Never store money values in floating-point!</strong>  See for example <a href=""https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency?rq=1"">this</a> question.)</p>

<p>The best alternative is usually <code>BigDecimal</code> which can store and calculate decimal fractions to an arbitrary precision.  They're less efficient, but Kotlin's operator overloading makes them painless to use (unlike Java!).</p>

<p>Or if you're not going to be doing any calculations, you could store them as <code>String</code>s.</p>

<p>Or if you'll only need a certain number of decimal places, you could scale them all up to <code>Int</code>s (or <code>Long</code>s).</p>

<p>Technical explanation:</p>

<p>Floats and Doubles use binary floating-point; they store an integer, and an integer power of 2 to multiple or divide it by.  (For example, 3/4 would be stored as 3*2⁻².)  This means they can store a wide range of binary fractions exactly.</p>

<p>However, just as you can't store 1/3 as a decimal fraction (it's 0.3333333333…, but any finite number of digits will only be an approximation), so you can't store 1/10 as a binary fraction (it's 0.000110011001100…).  This means that <strong>a binary floating-point number can't store most decimal numbers exactly</strong>.</p>

<p>Instead, they store the nearest possible value to the number you want.  And the routines which convert them to a String will try to undo that difference, by rounding appropriately.  But that doesn't always give the result you expect.</p>

<p>Floating-point numbers are great when you need a huge range of values (e.g. in scientific and technical use), but don't care about storing them exactly.</p>
",1
BigDecimal,Kotlin,functionality,68574595,"<p>You may use the following regex pattern:</p>
<pre class=""lang-regex prettyprint-override""><code>\d{15}(?: \n \d{15})*
</code></pre>
<p>This assumes that you want only numbers of length 15.  If you want any character, then use <code>.{15}</code> in place of <code>\d{15}</code>.</p>
<p>Kotlin code:</p>
<pre class=""lang-kotlin prettyprint-override""><code>val input = &quot;123456789101236 \n 123456789101237 \n 123456789101238&quot;;
val regex = &quot;\\d{15}(?: \n \\d{15})*&quot;.toRegex()
if (regex.matches(input)) {
    println(&quot;MATCH&quot;)  // prints MATCH
}
</code></pre>
",0
BigDecimal,Kotlin,concept,61133468,"<p>Use BigDecimal or BigInteger for numbers as large as this. For example:</p>

<pre><code>decimalFormatter.format(new BigDecimal(""9999999999999999""))
</code></pre>

<p>A <code>double</code> precision floating point number has only around 15-16 decimal digits of precision. Your number has 16 nines. There is no double precision floating point number exactly equal to 9999999999999999, so it is rounded to the closest one - which happens to be 10<sup>16</sup>.</p>
",1
BigDecimal,Kotlin,concept,55792729,"<p>Kotlin has <a href=""https://kotlinlang.org/docs/reference/classes.html#constructors"" rel=""nofollow noreferrer"">two types of constructors</a>. First one is that goes after class name and second is that contains body of class and is declared as 'constructor'</p>

<p>In your case I'd make something like</p>

<pre><code>class PostLocationTask(
    var latitude: Double? = null, 
    var longitude: Double? = null
) : AsyncTask&lt;String, Void, String&gt;() {
    var responseServer: String? = null
    override fun doInBackground(vararg params: String?): String = getLocationFromServer()
}
</code></pre>
",0
BigDecimal,Kotlin,concept,65122369,"<p>In Kotlin, <code>in</code> is a <a href=""https://kotlinlang.org/docs/reference/keyword-reference.html#hard-keywords"" rel=""nofollow noreferrer"">hard keyword</a>, which cannot be used as an identifier. To access or declare members named <code>in</code>, you have to <a href=""https://kotlinlang.org/docs/reference/java-interop.html#escaping-for-java-identifiers-that-are-keywords-in-kotlin"" rel=""nofollow noreferrer"">surround it with backticks</a> (<code>`</code>):</p>
<pre class=""lang-kotlin prettyprint-override""><code>standardInput = System.`in`
</code></pre>
",0
BigDecimal,Kotlin,concept,63267572,"<p>In kotlin, you won't usually see the <code>getX</code> kind of functions as you usually write in Java. Instead, properties can have custom getters directly attached to them. For example, you could change your <code>price</code> property declaration to:</p>
<pre><code>val price: Int get() {
    println(&quot;Got price!&quot;)
    return 1000000
}
</code></pre>
<p>So, by calling <code>w.price</code>, you are calling the Kotlin equivalent of <code>getPrice()</code> which is, by itself, a Java method in the background; as such, it may be indeed computing something (in this case, it prints &quot;Got price!&quot;), so it is a valid expression all by itself.</p>
",0
BigDecimal,Kotlin,concept,58455637,"<p>In Kotlin, when you see a getter method from a Java class, you can omit the <code>get</code>, change the first letter to lower-case, and use it like a Kotlin property:</p>

<pre><code>val path = context.filesDir.absolutePath
val file = File(""$path/filename"")
</code></pre>
",0
BigDecimal,Kotlin,concept,60081802,"<p>You can't. A <code>double</code> can represent only a sparse subset of the real numbers. You might get away with using a <code>double</code> if you can format the output appropriately (which is essentially what Microsoft Excel does, along with some very clever tricks for expressions like 1/3 + 1/3 + 1/3).</p>

<p>If you need perfect precision then use a type capable of doing that. The decimal type <code>BigDecimal</code> is probably what you want.</p>

<p>If you're working with money, and don't need to worry about currencies that have 1000s (e.g. Tunisian Dinar) or bitcoin (8 decimal places), then working in cents and using integers is one approach.</p>
",1
BigDecimal,Kotlin,concept,68215527,"<blockquote>
<p>In Kotlin, the code snippet <code>val f = println()</code> binds the function <code>println</code> (which is a first class object) to the name <code>f</code>.</p>
</blockquote>
<p>Not true. This assigns the return value result of calling <code>println()</code>, which is <code>Unit</code>, to the variable <code>f</code>. To get a function reference, use <code>::</code>. But you must also specify the variable type, because it cannot be inferred when the function has overloads:</p>
<pre><code>val f: (Any)-&gt;Unit = ::println
</code></pre>
<p>A function with a receiver should be specified using the receiving type, like</p>
<pre><code>val f = Any::toString

// or, to bind a specific instance's toString:
val myList = listOf(&quot;Hello&quot;, &quot;World&quot;)
val myListToString = myList::toString
</code></pre>
<p>Since <code>map</code> is a higher-order function, it has a long and complicated signature:</p>
<pre><code>val f: Array&lt;Int&gt;.((Int)-&gt;String)-&gt;List&lt;String&gt; = Array&lt;Int&gt;::map
</code></pre>
",0
BigDecimal,Kotlin,concept,64872324,"<p><code>data</code> is a keyword in Kotlin (like <code>class</code>, <code>fun</code>,…) so you can't use it as an identifier.</p>
<p>(The StackOverflow code highlighter makes that clear: in the question, you can see that <code>data</code> is in blue, like <code>val</code>.)</p>
<p>If you really need to call your property ‘data’, you can surround it in backticks everywhere you use it.  But it's almost always better to pick another name.</p>
<p>Also, as Animesh pointed out in a comment, you don't need to define a getter method; Kotlin generates one automatically for every (non-private) property.  You can override it if you need to, but the syntax for that is different.</p>
",0
BigDecimal,Kotlin,concept,68574595,"<p>You may use the following regex pattern:</p>
<pre class=""lang-regex prettyprint-override""><code>\d{15}(?: \n \d{15})*
</code></pre>
<p>This assumes that you want only numbers of length 15.  If you want any character, then use <code>.{15}</code> in place of <code>\d{15}</code>.</p>
<p>Kotlin code:</p>
<pre class=""lang-kotlin prettyprint-override""><code>val input = &quot;123456789101236 \n 123456789101237 \n 123456789101238&quot;;
val regex = &quot;\\d{15}(?: \n \\d{15})*&quot;.toRegex()
if (regex.matches(input)) {
    println(&quot;MATCH&quot;)  // prints MATCH
}
</code></pre>
",0
BigDecimal,Kotlin,concept,66174107,"<p>In kotlin the &quot;?&quot; keyword indicates that a data type can take a null value. Variable &quot;a&quot; can take a null value, but variable &quot;b&quot; can not take a null value. You would need to make sure that &quot;a&quot; is not null before you could assign that value to &quot;b&quot;.</p>
",0
BigDecimal,Kotlin,performance,61133468,"<p>Use BigDecimal or BigInteger for numbers as large as this. For example:</p>

<pre><code>decimalFormatter.format(new BigDecimal(""9999999999999999""))
</code></pre>

<p>A <code>double</code> precision floating point number has only around 15-16 decimal digits of precision. Your number has 16 nines. There is no double precision floating point number exactly equal to 9999999999999999, so it is rounded to the closest one - which happens to be 10<sup>16</sup>.</p>
",0
BigDecimal,Kotlin,performance,60081802,"<p>You can't. A <code>double</code> can represent only a sparse subset of the real numbers. You might get away with using a <code>double</code> if you can format the output appropriately (which is essentially what Microsoft Excel does, along with some very clever tricks for expressions like 1/3 + 1/3 + 1/3).</p>

<p>If you need perfect precision then use a type capable of doing that. The decimal type <code>BigDecimal</code> is probably what you want.</p>

<p>If you're working with money, and don't need to worry about currencies that have 1000s (e.g. Tunisian Dinar) or bitcoin (8 decimal places), then working in cents and using integers is one approach.</p>
",0
BigDecimal,Kotlin,performance,68215527,"<blockquote>
<p>In Kotlin, the code snippet <code>val f = println()</code> binds the function <code>println</code> (which is a first class object) to the name <code>f</code>.</p>
</blockquote>
<p>Not true. This assigns the return value result of calling <code>println()</code>, which is <code>Unit</code>, to the variable <code>f</code>. To get a function reference, use <code>::</code>. But you must also specify the variable type, because it cannot be inferred when the function has overloads:</p>
<pre><code>val f: (Any)-&gt;Unit = ::println
</code></pre>
<p>A function with a receiver should be specified using the receiving type, like</p>
<pre><code>val f = Any::toString

// or, to bind a specific instance's toString:
val myList = listOf(&quot;Hello&quot;, &quot;World&quot;)
val myListToString = myList::toString
</code></pre>
<p>Since <code>map</code> is a higher-order function, it has a long and complicated signature:</p>
<pre><code>val f: Array&lt;Int&gt;.((Int)-&gt;String)-&gt;List&lt;String&gt; = Array&lt;Int&gt;::map
</code></pre>
",0
BigDecimal,Kotlin,performance,63267572,"<p>In kotlin, you won't usually see the <code>getX</code> kind of functions as you usually write in Java. Instead, properties can have custom getters directly attached to them. For example, you could change your <code>price</code> property declaration to:</p>
<pre><code>val price: Int get() {
    println(&quot;Got price!&quot;)
    return 1000000
}
</code></pre>
<p>So, by calling <code>w.price</code>, you are calling the Kotlin equivalent of <code>getPrice()</code> which is, by itself, a Java method in the background; as such, it may be indeed computing something (in this case, it prints &quot;Got price!&quot;), so it is a valid expression all by itself.</p>
",0
BigDecimal,Kotlin,performance,76254128,"<p>Kotlin has two different operators for adding to a list:</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/plus.html"" rel=""nofollow noreferrer"">plus</a> (+), which returns a <em>new</em> list containing the original list and the added element or list, and<br />
<a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/plus-assign.html"" rel=""nofollow noreferrer"">plusAssign</a> (+=), which <em>adds</em> the given element or list to the original list.</p>
<p>So, the correct way to do this would be:</p>
<pre><code>var arr = mutableListOf&lt;Int&gt;(4,5)
var arr2 = mutableListOf&lt;Int&gt;(1,3)
arr += 8 // or arr.plusAssign(8)
arr2 += arr2 // or arr.plusAssign(arr2)
 
println(arr)
</code></pre>
",0
BigDecimal,Kotlin,performance,58455637,"<p>In Kotlin, when you see a getter method from a Java class, you can omit the <code>get</code>, change the first letter to lower-case, and use it like a Kotlin property:</p>

<pre><code>val path = context.filesDir.absolutePath
val file = File(""$path/filename"")
</code></pre>
",0
BigDecimal,Kotlin,performance,68574595,"<p>You may use the following regex pattern:</p>
<pre class=""lang-regex prettyprint-override""><code>\d{15}(?: \n \d{15})*
</code></pre>
<p>This assumes that you want only numbers of length 15.  If you want any character, then use <code>.{15}</code> in place of <code>\d{15}</code>.</p>
<p>Kotlin code:</p>
<pre class=""lang-kotlin prettyprint-override""><code>val input = &quot;123456789101236 \n 123456789101237 \n 123456789101238&quot;;
val regex = &quot;\\d{15}(?: \n \\d{15})*&quot;.toRegex()
if (regex.matches(input)) {
    println(&quot;MATCH&quot;)  // prints MATCH
}
</code></pre>
",0
BigDecimal,Kotlin,performance,67740141,"<p>Use <a href=""https://github.com/Kotlin/kotlinx.serialization#introduction-and-references"" rel=""noreferrer"">kotlinx.serialization</a>:</p>
<pre><code>import kotlinx.serialization.*
import kotlinx.serialization.json.*

fun main() {
   var store = HashMap&lt;String, String&gt;()
   var jsonString= Json.encodeToString(store)
   var anotherStore = Json.decodeFromString(jsonString)
}

</code></pre>
",0
BigDecimal,Kotlin,performance,76418019,"<p>You can’t be imprecise and use an Int (where the literal is specified as <code>42</code> with no decimal) as a Double. Kotlin strictly enforces the type of numbers you’re using to prevent possible bugs from accidentally using the wrong type of number. Integers and decimal numbers are represented differently in binary in memory, and math is calculated differently for them on the CPU, so it is important to be precise about which type of number you’re using.</p>
<p>Java doesn’t have this restriction, but this is considered to be a common source of bugs and therefore the Kotlin designers decided to be more strict about it.</p>
",0
BigDecimal,Kotlin,performance,77132446,"<p>Popular Kotlin Multiplattform alternatives are:</p>
<ul>
<li><a href=""https://cashapp.github.io/sqldelight/"" rel=""nofollow noreferrer"">SQLDelight</a> instead of Room for database</li>
<li><a href=""https://ktor.io/"" rel=""nofollow noreferrer"">Ktor</a> instead of Retrofit</li>
</ul>
",0
BigDecimal,Kotlin,directive,65122369,"<p>In Kotlin, <code>in</code> is a <a href=""https://kotlinlang.org/docs/reference/keyword-reference.html#hard-keywords"" rel=""nofollow noreferrer"">hard keyword</a>, which cannot be used as an identifier. To access or declare members named <code>in</code>, you have to <a href=""https://kotlinlang.org/docs/reference/java-interop.html#escaping-for-java-identifiers-that-are-keywords-in-kotlin"" rel=""nofollow noreferrer"">surround it with backticks</a> (<code>`</code>):</p>
<pre class=""lang-kotlin prettyprint-override""><code>standardInput = System.`in`
</code></pre>
",0
BigDecimal,Kotlin,directive,61133468,"<p>Use BigDecimal or BigInteger for numbers as large as this. For example:</p>

<pre><code>decimalFormatter.format(new BigDecimal(""9999999999999999""))
</code></pre>

<p>A <code>double</code> precision floating point number has only around 15-16 decimal digits of precision. Your number has 16 nines. There is no double precision floating point number exactly equal to 9999999999999999, so it is rounded to the closest one - which happens to be 10<sup>16</sup>.</p>
",0
BigDecimal,Kotlin,directive,68215527,"<blockquote>
<p>In Kotlin, the code snippet <code>val f = println()</code> binds the function <code>println</code> (which is a first class object) to the name <code>f</code>.</p>
</blockquote>
<p>Not true. This assigns the return value result of calling <code>println()</code>, which is <code>Unit</code>, to the variable <code>f</code>. To get a function reference, use <code>::</code>. But you must also specify the variable type, because it cannot be inferred when the function has overloads:</p>
<pre><code>val f: (Any)-&gt;Unit = ::println
</code></pre>
<p>A function with a receiver should be specified using the receiving type, like</p>
<pre><code>val f = Any::toString

// or, to bind a specific instance's toString:
val myList = listOf(&quot;Hello&quot;, &quot;World&quot;)
val myListToString = myList::toString
</code></pre>
<p>Since <code>map</code> is a higher-order function, it has a long and complicated signature:</p>
<pre><code>val f: Array&lt;Int&gt;.((Int)-&gt;String)-&gt;List&lt;String&gt; = Array&lt;Int&gt;::map
</code></pre>
",0
BigDecimal,Kotlin,directive,76254128,"<p>Kotlin has two different operators for adding to a list:</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/plus.html"" rel=""nofollow noreferrer"">plus</a> (+), which returns a <em>new</em> list containing the original list and the added element or list, and<br />
<a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/plus-assign.html"" rel=""nofollow noreferrer"">plusAssign</a> (+=), which <em>adds</em> the given element or list to the original list.</p>
<p>So, the correct way to do this would be:</p>
<pre><code>var arr = mutableListOf&lt;Int&gt;(4,5)
var arr2 = mutableListOf&lt;Int&gt;(1,3)
arr += 8 // or arr.plusAssign(8)
arr2 += arr2 // or arr.plusAssign(arr2)
 
println(arr)
</code></pre>
",0
BigDecimal,Kotlin,directive,56134099,"<blockquote>
  <p>In Kotlin 123.456 is a valid Double value</p>
</blockquote>

<p>Actually, that's not quite true.  There's a Double value very <em>close</em> to 123.456, but it's not <em>exactly</em> 123.456.  What you're seeing is the consequences of that.</p>

<p>So you can't maintain precision, because you don't have that precision to start with!</p>

<p>Short answer:</p>

<p><strong>If you need exact values, don't use floating-point!</strong></p>

<p>(In particular: <strong>Never store money values in floating-point!</strong>  See for example <a href=""https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency?rq=1"">this</a> question.)</p>

<p>The best alternative is usually <code>BigDecimal</code> which can store and calculate decimal fractions to an arbitrary precision.  They're less efficient, but Kotlin's operator overloading makes them painless to use (unlike Java!).</p>

<p>Or if you're not going to be doing any calculations, you could store them as <code>String</code>s.</p>

<p>Or if you'll only need a certain number of decimal places, you could scale them all up to <code>Int</code>s (or <code>Long</code>s).</p>

<p>Technical explanation:</p>

<p>Floats and Doubles use binary floating-point; they store an integer, and an integer power of 2 to multiple or divide it by.  (For example, 3/4 would be stored as 3*2⁻².)  This means they can store a wide range of binary fractions exactly.</p>

<p>However, just as you can't store 1/3 as a decimal fraction (it's 0.3333333333…, but any finite number of digits will only be an approximation), so you can't store 1/10 as a binary fraction (it's 0.000110011001100…).  This means that <strong>a binary floating-point number can't store most decimal numbers exactly</strong>.</p>

<p>Instead, they store the nearest possible value to the number you want.  And the routines which convert them to a String will try to undo that difference, by rounding appropriately.  But that doesn't always give the result you expect.</p>

<p>Floating-point numbers are great when you need a huge range of values (e.g. in scientific and technical use), but don't care about storing them exactly.</p>
",1
BigDecimal,Kotlin,directive,69141252,"<p>This happens because you are declaring a double, <code>8875.87</code>, and <em>then</em> turning it into a BigDecimal. There is no exact double-precision floating point representation for <code>8875.87</code> so the rounding has already occurred before you call <code>toBigDecimal</code>.</p>
<p>To keep the precision, you need to pass the values to the <code>BigDecimal</code> constructor as a string:</p>
<pre><code>val a = BigDecimal(&quot;8875.87&quot;)
val b = BigDecimal(&quot;778.55&quot;)
println(&quot;${a*b}&quot;)
</code></pre>
",1
BigDecimal,Kotlin,directive,58455637,"<p>In Kotlin, when you see a getter method from a Java class, you can omit the <code>get</code>, change the first letter to lower-case, and use it like a Kotlin property:</p>

<pre><code>val path = context.filesDir.absolutePath
val file = File(""$path/filename"")
</code></pre>
",0
BigDecimal,Kotlin,directive,76418019,"<p>You can’t be imprecise and use an Int (where the literal is specified as <code>42</code> with no decimal) as a Double. Kotlin strictly enforces the type of numbers you’re using to prevent possible bugs from accidentally using the wrong type of number. Integers and decimal numbers are represented differently in binary in memory, and math is calculated differently for them on the CPU, so it is important to be precise about which type of number you’re using.</p>
<p>Java doesn’t have this restriction, but this is considered to be a common source of bugs and therefore the Kotlin designers decided to be more strict about it.</p>
",0
BigDecimal,Kotlin,directive,66174107,"<p>In kotlin the &quot;?&quot; keyword indicates that a data type can take a null value. Variable &quot;a&quot; can take a null value, but variable &quot;b&quot; can not take a null value. You would need to make sure that &quot;a&quot; is not null before you could assign that value to &quot;b&quot;.</p>
",0
BigDecimal,Kotlin,directive,69080938,"<p>I'm afraid you <em>can't</em> convert a BigDecimal into a Double without losing precision, for several reasons:</p>
<ul>
<li>There are many more possible values for BigDecimal than for Double, so the conversion is necessarily lossy.</li>
</ul>
<p>Doubles are 64-bit, so can't have more than 2⁶⁴ distinct values, while BigDecimals are effectively unlimited.</p>
<ul>
<li>BigDecimals store decimal fractions, while Doubles store binary fractions.  There's very little overlap between the two, so in most cases the conversion will need to round the value.</li>
</ul>
<p>Both can store integers exactly (up to a certain value), and both can store fractions such as 0.5 exactly.  But nearly all decimal fractions can't be represented exactly as a binary fraction, and so for example there's no Double holding exactly 0.1.  (1/10 is an infinite recurring fraction in binary — 0.0001100110011… — and so no finite binary fraction can represent it exactly.)</p>
<p>This means that in Kotlin (and most other programming languages), a numeric literal such as 0.1 gets converted to the nearest double-precision number, which is around 0.100000000000000005551115….  In practice, this is usually hidden from you, because when you print out a Double, the formatting routine will round it off, and in many cases that gives back the original number.  But not always, e.g.:</p>
<pre><code>&gt;&gt;&gt; println(0.1 + 0.1 + 0.1)
0.30000000000000004
</code></pre>
<p>(All of this is discussed in other questions, most notably <a href=""/questions/588004/is-floating-point-math-broken"">here</a>.)</p>
<ul>
<li>Unlike BigDecimals, Doubles have no precision, so they can't make the distinction you want anyway.</li>
</ul>
<p>For example, both 1.0 and 1.000000 are represented by exactly the same Double value:</p>
<pre><code>&gt;&gt;&gt; println(1.000000)
1.0
</code></pre>
<hr />
<p>I don't know Vert.x, but I'd be surprised if you really needed a Double here.  Have you tried using a BigDecimal directly?</p>
<p>Or if that doesn't work, have you tried converting it to a String, which will preserve whatever formatting you want?</p>
",0
BigDecimal,Kotlin,pattern,65122369,"<p>In Kotlin, <code>in</code> is a <a href=""https://kotlinlang.org/docs/reference/keyword-reference.html#hard-keywords"" rel=""nofollow noreferrer"">hard keyword</a>, which cannot be used as an identifier. To access or declare members named <code>in</code>, you have to <a href=""https://kotlinlang.org/docs/reference/java-interop.html#escaping-for-java-identifiers-that-are-keywords-in-kotlin"" rel=""nofollow noreferrer"">surround it with backticks</a> (<code>`</code>):</p>
<pre class=""lang-kotlin prettyprint-override""><code>standardInput = System.`in`
</code></pre>
",0
BigDecimal,Kotlin,pattern,61133468,"<p>Use BigDecimal or BigInteger for numbers as large as this. For example:</p>

<pre><code>decimalFormatter.format(new BigDecimal(""9999999999999999""))
</code></pre>

<p>A <code>double</code> precision floating point number has only around 15-16 decimal digits of precision. Your number has 16 nines. There is no double precision floating point number exactly equal to 9999999999999999, so it is rounded to the closest one - which happens to be 10<sup>16</sup>.</p>
",0
BigDecimal,Kotlin,pattern,66174107,"<p>In kotlin the &quot;?&quot; keyword indicates that a data type can take a null value. Variable &quot;a&quot; can take a null value, but variable &quot;b&quot; can not take a null value. You would need to make sure that &quot;a&quot; is not null before you could assign that value to &quot;b&quot;.</p>
",0
BigDecimal,Kotlin,pattern,68574595,"<p>You may use the following regex pattern:</p>
<pre class=""lang-regex prettyprint-override""><code>\d{15}(?: \n \d{15})*
</code></pre>
<p>This assumes that you want only numbers of length 15.  If you want any character, then use <code>.{15}</code> in place of <code>\d{15}</code>.</p>
<p>Kotlin code:</p>
<pre class=""lang-kotlin prettyprint-override""><code>val input = &quot;123456789101236 \n 123456789101237 \n 123456789101238&quot;;
val regex = &quot;\\d{15}(?: \n \\d{15})*&quot;.toRegex()
if (regex.matches(input)) {
    println(&quot;MATCH&quot;)  // prints MATCH
}
</code></pre>
",0
BigDecimal,Kotlin,pattern,58455637,"<p>In Kotlin, when you see a getter method from a Java class, you can omit the <code>get</code>, change the first letter to lower-case, and use it like a Kotlin property:</p>

<pre><code>val path = context.filesDir.absolutePath
val file = File(""$path/filename"")
</code></pre>
",0
BigDecimal,Kotlin,pattern,68215527,"<blockquote>
<p>In Kotlin, the code snippet <code>val f = println()</code> binds the function <code>println</code> (which is a first class object) to the name <code>f</code>.</p>
</blockquote>
<p>Not true. This assigns the return value result of calling <code>println()</code>, which is <code>Unit</code>, to the variable <code>f</code>. To get a function reference, use <code>::</code>. But you must also specify the variable type, because it cannot be inferred when the function has overloads:</p>
<pre><code>val f: (Any)-&gt;Unit = ::println
</code></pre>
<p>A function with a receiver should be specified using the receiving type, like</p>
<pre><code>val f = Any::toString

// or, to bind a specific instance's toString:
val myList = listOf(&quot;Hello&quot;, &quot;World&quot;)
val myListToString = myList::toString
</code></pre>
<p>Since <code>map</code> is a higher-order function, it has a long and complicated signature:</p>
<pre><code>val f: Array&lt;Int&gt;.((Int)-&gt;String)-&gt;List&lt;String&gt; = Array&lt;Int&gt;::map
</code></pre>
",0
BigDecimal,Kotlin,pattern,67740141,"<p>Use <a href=""https://github.com/Kotlin/kotlinx.serialization#introduction-and-references"" rel=""noreferrer"">kotlinx.serialization</a>:</p>
<pre><code>import kotlinx.serialization.*
import kotlinx.serialization.json.*

fun main() {
   var store = HashMap&lt;String, String&gt;()
   var jsonString= Json.encodeToString(store)
   var anotherStore = Json.decodeFromString(jsonString)
}

</code></pre>
",0
BigDecimal,Kotlin,pattern,76254128,"<p>Kotlin has two different operators for adding to a list:</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/plus.html"" rel=""nofollow noreferrer"">plus</a> (+), which returns a <em>new</em> list containing the original list and the added element or list, and<br />
<a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/plus-assign.html"" rel=""nofollow noreferrer"">plusAssign</a> (+=), which <em>adds</em> the given element or list to the original list.</p>
<p>So, the correct way to do this would be:</p>
<pre><code>var arr = mutableListOf&lt;Int&gt;(4,5)
var arr2 = mutableListOf&lt;Int&gt;(1,3)
arr += 8 // or arr.plusAssign(8)
arr2 += arr2 // or arr.plusAssign(arr2)
 
println(arr)
</code></pre>
",0
BigDecimal,Kotlin,pattern,55792729,"<p>Kotlin has <a href=""https://kotlinlang.org/docs/reference/classes.html#constructors"" rel=""nofollow noreferrer"">two types of constructors</a>. First one is that goes after class name and second is that contains body of class and is declared as 'constructor'</p>

<p>In your case I'd make something like</p>

<pre><code>class PostLocationTask(
    var latitude: Double? = null, 
    var longitude: Double? = null
) : AsyncTask&lt;String, Void, String&gt;() {
    var responseServer: String? = null
    override fun doInBackground(vararg params: String?): String = getLocationFromServer()
}
</code></pre>
",0
BigDecimal,Kotlin,pattern,65687542,"<p>In Kotlin, all the classes are implicitly marked <code>final</code> by default. If you want to inherit from a class, you have to explicitly add <code>open</code> keyword before the class declaration.</p>
<pre><code>@Configuration
open class RouterConfiguration(
    private val handler: RequestHandler,
) {
    fun router() = coRouter {
        &quot;/api/v1&quot;.nest {
            ...
        }
    }
}
</code></pre>
",0
BigDecimal,Kotlin,environment,65122369,"<p>In Kotlin, <code>in</code> is a <a href=""https://kotlinlang.org/docs/reference/keyword-reference.html#hard-keywords"" rel=""nofollow noreferrer"">hard keyword</a>, which cannot be used as an identifier. To access or declare members named <code>in</code>, you have to <a href=""https://kotlinlang.org/docs/reference/java-interop.html#escaping-for-java-identifiers-that-are-keywords-in-kotlin"" rel=""nofollow noreferrer"">surround it with backticks</a> (<code>`</code>):</p>
<pre class=""lang-kotlin prettyprint-override""><code>standardInput = System.`in`
</code></pre>
",0
BigDecimal,Kotlin,environment,54854295,"<p>Kotlin has two sets of collection interfaces, the regular <code>List</code>, <code>Set</code>, etc. which are read-only, and the same ones with the <code>Mutable</code> prefix, which can be modified.</p>

<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/list-of.html"" rel=""nofollow noreferrer""><code>listOf</code></a> will give you a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-list/index.html"" rel=""nofollow noreferrer""><code>List</code></a> instance, while <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/mutable-list-of.html"" rel=""nofollow noreferrer""><code>mutableListOf</code></a> gives you a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/index.html"" rel=""nofollow noreferrer""><code>MutableList</code></a> instance. If you use the latter for creating your nested lists, you can use the exact syntax you've asked about:</p>

<pre><code>val mylist: MutableList&lt;MutableList&lt;Int&gt;&gt; = mutableListOf(mutableListOf(2,3,5), mutableListOf(2,5,6))

mylist[1][1] = 100

println(mylist) // [[2, 3, 5], [2, 100, 6]]
</code></pre>

<p>(I've added the explicit type for <code>myList</code> for clarity's sake, it can be omitted from the left side of the assignment.)</p>
",0
BigDecimal,Kotlin,environment,68215527,"<blockquote>
<p>In Kotlin, the code snippet <code>val f = println()</code> binds the function <code>println</code> (which is a first class object) to the name <code>f</code>.</p>
</blockquote>
<p>Not true. This assigns the return value result of calling <code>println()</code>, which is <code>Unit</code>, to the variable <code>f</code>. To get a function reference, use <code>::</code>. But you must also specify the variable type, because it cannot be inferred when the function has overloads:</p>
<pre><code>val f: (Any)-&gt;Unit = ::println
</code></pre>
<p>A function with a receiver should be specified using the receiving type, like</p>
<pre><code>val f = Any::toString

// or, to bind a specific instance's toString:
val myList = listOf(&quot;Hello&quot;, &quot;World&quot;)
val myListToString = myList::toString
</code></pre>
<p>Since <code>map</code> is a higher-order function, it has a long and complicated signature:</p>
<pre><code>val f: Array&lt;Int&gt;.((Int)-&gt;String)-&gt;List&lt;String&gt; = Array&lt;Int&gt;::map
</code></pre>
",0
BigDecimal,Kotlin,environment,63267572,"<p>In kotlin, you won't usually see the <code>getX</code> kind of functions as you usually write in Java. Instead, properties can have custom getters directly attached to them. For example, you could change your <code>price</code> property declaration to:</p>
<pre><code>val price: Int get() {
    println(&quot;Got price!&quot;)
    return 1000000
}
</code></pre>
<p>So, by calling <code>w.price</code>, you are calling the Kotlin equivalent of <code>getPrice()</code> which is, by itself, a Java method in the background; as such, it may be indeed computing something (in this case, it prints &quot;Got price!&quot;), so it is a valid expression all by itself.</p>
",0
BigDecimal,Kotlin,environment,63978240,"<p>Properties in Kotlin classes can be declared either as mutable using the <em>var</em> keyword, or as read-only using the <em>val</em> keyword.</p>
<pre><code>public class Triple&lt; A&gt;(
    public var first: A
)  

fun main() {
    var mSituation=Triple&lt;Boolean&gt;(first = false)

    mSituation.first=true 
    println(&quot;Hello, world!!!&quot;)
}
</code></pre>
<p><a href=""https://kotlinlang.org/docs/reference/properties.html"" rel=""nofollow noreferrer"">https://kotlinlang.org/docs/reference/properties.html</a></p>
",0
BigDecimal,Kotlin,environment,65687542,"<p>In Kotlin, all the classes are implicitly marked <code>final</code> by default. If you want to inherit from a class, you have to explicitly add <code>open</code> keyword before the class declaration.</p>
<pre><code>@Configuration
open class RouterConfiguration(
    private val handler: RequestHandler,
) {
    fun router() = coRouter {
        &quot;/api/v1&quot;.nest {
            ...
        }
    }
}
</code></pre>
",0
BigDecimal,Kotlin,environment,58455637,"<p>In Kotlin, when you see a getter method from a Java class, you can omit the <code>get</code>, change the first letter to lower-case, and use it like a Kotlin property:</p>

<pre><code>val path = context.filesDir.absolutePath
val file = File(""$path/filename"")
</code></pre>
",0
BigDecimal,Kotlin,environment,76418019,"<p>You can’t be imprecise and use an Int (where the literal is specified as <code>42</code> with no decimal) as a Double. Kotlin strictly enforces the type of numbers you’re using to prevent possible bugs from accidentally using the wrong type of number. Integers and decimal numbers are represented differently in binary in memory, and math is calculated differently for them on the CPU, so it is important to be precise about which type of number you’re using.</p>
<p>Java doesn’t have this restriction, but this is considered to be a common source of bugs and therefore the Kotlin designers decided to be more strict about it.</p>
",0
BigDecimal,Kotlin,environment,54494061,"<h2><code>object</code></h2>
<p><code>object</code> is Kotlin's way to create a singleton (one instance class) which is instantiated by the compiler.</p>
<hr />
<h2><code>data class</code></h2>
<p>A data class is like a usual class but with a few advantages/resctrictions (<a href=""https://kotlinlang.org/docs/reference/data-classes.html"" rel=""noreferrer"">Source</a>).</p>
<p><strong>Advantages</strong></p>
<ul>
<li><code>equals()</code>/<code>hashCode()</code></li>
<li><code>toString()</code></li>
<li><code>componentN()</code></li>
<li><code>copy()</code></li>
</ul>
<p>Those are created from the properties specified in the primary constructor.</p>
<p><strong>Restrictions</strong></p>
<ul>
<li>The primary constructor needs to have at least one parameter;</li>
<li>All primary constructor parameters need to be marked as val or var;</li>
<li>cannot be abstract, open, sealed or inner;</li>
<li>(before 1.1) may only implement interfaces.</li>
</ul>
",0
BigDecimal,Kotlin,environment,55792729,"<p>Kotlin has <a href=""https://kotlinlang.org/docs/reference/classes.html#constructors"" rel=""nofollow noreferrer"">two types of constructors</a>. First one is that goes after class name and second is that contains body of class and is declared as 'constructor'</p>

<p>In your case I'd make something like</p>

<pre><code>class PostLocationTask(
    var latitude: Double? = null, 
    var longitude: Double? = null
) : AsyncTask&lt;String, Void, String&gt;() {
    var responseServer: String? = null
    override fun doInBackground(vararg params: String?): String = getLocationFromServer()
}
</code></pre>
",0
BigDecimal,Kotlin,alternative,61133468,"<p>Use BigDecimal or BigInteger for numbers as large as this. For example:</p>

<pre><code>decimalFormatter.format(new BigDecimal(""9999999999999999""))
</code></pre>

<p>A <code>double</code> precision floating point number has only around 15-16 decimal digits of precision. Your number has 16 nines. There is no double precision floating point number exactly equal to 9999999999999999, so it is rounded to the closest one - which happens to be 10<sup>16</sup>.</p>
",0
BigDecimal,Kotlin,alternative,56134099,"<blockquote>
  <p>In Kotlin 123.456 is a valid Double value</p>
</blockquote>

<p>Actually, that's not quite true.  There's a Double value very <em>close</em> to 123.456, but it's not <em>exactly</em> 123.456.  What you're seeing is the consequences of that.</p>

<p>So you can't maintain precision, because you don't have that precision to start with!</p>

<p>Short answer:</p>

<p><strong>If you need exact values, don't use floating-point!</strong></p>

<p>(In particular: <strong>Never store money values in floating-point!</strong>  See for example <a href=""https://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency?rq=1"">this</a> question.)</p>

<p>The best alternative is usually <code>BigDecimal</code> which can store and calculate decimal fractions to an arbitrary precision.  They're less efficient, but Kotlin's operator overloading makes them painless to use (unlike Java!).</p>

<p>Or if you're not going to be doing any calculations, you could store them as <code>String</code>s.</p>

<p>Or if you'll only need a certain number of decimal places, you could scale them all up to <code>Int</code>s (or <code>Long</code>s).</p>

<p>Technical explanation:</p>

<p>Floats and Doubles use binary floating-point; they store an integer, and an integer power of 2 to multiple or divide it by.  (For example, 3/4 would be stored as 3*2⁻².)  This means they can store a wide range of binary fractions exactly.</p>

<p>However, just as you can't store 1/3 as a decimal fraction (it's 0.3333333333…, but any finite number of digits will only be an approximation), so you can't store 1/10 as a binary fraction (it's 0.000110011001100…).  This means that <strong>a binary floating-point number can't store most decimal numbers exactly</strong>.</p>

<p>Instead, they store the nearest possible value to the number you want.  And the routines which convert them to a String will try to undo that difference, by rounding appropriately.  But that doesn't always give the result you expect.</p>

<p>Floating-point numbers are great when you need a huge range of values (e.g. in scientific and technical use), but don't care about storing them exactly.</p>
",1
BigDecimal,Kotlin,alternative,60081802,"<p>You can't. A <code>double</code> can represent only a sparse subset of the real numbers. You might get away with using a <code>double</code> if you can format the output appropriately (which is essentially what Microsoft Excel does, along with some very clever tricks for expressions like 1/3 + 1/3 + 1/3).</p>

<p>If you need perfect precision then use a type capable of doing that. The decimal type <code>BigDecimal</code> is probably what you want.</p>

<p>If you're working with money, and don't need to worry about currencies that have 1000s (e.g. Tunisian Dinar) or bitcoin (8 decimal places), then working in cents and using integers is one approach.</p>
",1
BigDecimal,Kotlin,alternative,65122369,"<p>In Kotlin, <code>in</code> is a <a href=""https://kotlinlang.org/docs/reference/keyword-reference.html#hard-keywords"" rel=""nofollow noreferrer"">hard keyword</a>, which cannot be used as an identifier. To access or declare members named <code>in</code>, you have to <a href=""https://kotlinlang.org/docs/reference/java-interop.html#escaping-for-java-identifiers-that-are-keywords-in-kotlin"" rel=""nofollow noreferrer"">surround it with backticks</a> (<code>`</code>):</p>
<pre class=""lang-kotlin prettyprint-override""><code>standardInput = System.`in`
</code></pre>
",0
BigDecimal,Kotlin,alternative,69141252,"<p>This happens because you are declaring a double, <code>8875.87</code>, and <em>then</em> turning it into a BigDecimal. There is no exact double-precision floating point representation for <code>8875.87</code> so the rounding has already occurred before you call <code>toBigDecimal</code>.</p>
<p>To keep the precision, you need to pass the values to the <code>BigDecimal</code> constructor as a string:</p>
<pre><code>val a = BigDecimal(&quot;8875.87&quot;)
val b = BigDecimal(&quot;778.55&quot;)
println(&quot;${a*b}&quot;)
</code></pre>
",1
BigDecimal,Kotlin,alternative,58455637,"<p>In Kotlin, when you see a getter method from a Java class, you can omit the <code>get</code>, change the first letter to lower-case, and use it like a Kotlin property:</p>

<pre><code>val path = context.filesDir.absolutePath
val file = File(""$path/filename"")
</code></pre>
",0
BigDecimal,Kotlin,alternative,66174107,"<p>In kotlin the &quot;?&quot; keyword indicates that a data type can take a null value. Variable &quot;a&quot; can take a null value, but variable &quot;b&quot; can not take a null value. You would need to make sure that &quot;a&quot; is not null before you could assign that value to &quot;b&quot;.</p>
",0
BigDecimal,Kotlin,alternative,68574595,"<p>You may use the following regex pattern:</p>
<pre class=""lang-regex prettyprint-override""><code>\d{15}(?: \n \d{15})*
</code></pre>
<p>This assumes that you want only numbers of length 15.  If you want any character, then use <code>.{15}</code> in place of <code>\d{15}</code>.</p>
<p>Kotlin code:</p>
<pre class=""lang-kotlin prettyprint-override""><code>val input = &quot;123456789101236 \n 123456789101237 \n 123456789101238&quot;;
val regex = &quot;\\d{15}(?: \n \\d{15})*&quot;.toRegex()
if (regex.matches(input)) {
    println(&quot;MATCH&quot;)  // prints MATCH
}
</code></pre>
",0
BigDecimal,Kotlin,alternative,55501175,"<p>A more idiomatic approach would be to use <code>MutableList</code> instead of specifically <code>ArrayList</code>. You can declare:</p>

<pre><code>val listOfVehicleNames: MutableList&lt;String&gt; = mutableListOf()
</code></pre>

<p>And add to it that way. Alternatively, you may wish to prefer immutability, and declare it as:</p>

<pre><code>var listOfVehicleNames: List&lt;String&gt; = emptyList()
</code></pre>

<p>And in your completion block, simply reassign it:</p>

<pre><code>listOfVehicleNames = response.body()?.message()?.orEmpty()
    .map { it.name() /* assumes name() function exists */ }
</code></pre>
",0
BigDecimal,Kotlin,alternative,62318185,"<p>More idiomatic way to apply constrains in Kotlin is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/require.html"" rel=""noreferrer""><code>require</code></a> function:</p>

<pre><code>data class TotallyMadeUpClass(val username: String) {
    init {
        require(username.length &gt; 10) { ""Length must be greater than 10"" }
        // ...
    }
}
</code></pre>

<p>It throws an <strong>IllegalArgumentException</strong> if the value is <strong>false</strong>.</p>
",0
ByteArray,Kotlin,functionality,56185257,"<p><code>ByteArray</code> is an object (reference type), so you can create an array of it: <code>Array&lt;ByteArray&gt;</code>.</p>
",1
ByteArray,Kotlin,functionality,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",1
ByteArray,Kotlin,functionality,60844731,"<p>You can use <code>String(byteArray)</code> to convert <code>ByteArray</code> to 'String' in kotlin</p>

<pre><code>    val str = ""hello world.""
    val byte = str.toByteArray(Charsets.UTF_8)
    val newStr = String(byte)
    assert(str == newStr)
</code></pre>
",1
ByteArray,Kotlin,functionality,67229929,"<p>Here is the solution.</p>
<p><strong>Int -&gt; ByteArray</strong></p>
<pre><code>private fun write4BytesToBuffer(buffer: ByteArray, offset: Int, data: Int) {
    buffer[offset + 0] = (data shr 0).toByte()
    buffer[offset + 1] = (data shr 8).toByte()
    buffer[offset + 2] = (data shr 16).toByte()
    buffer[offset + 3] = (data shr 24).toByte()
}
</code></pre>
<p>Or in a shorter way</p>
<pre><code>for (i in 0..3) buffer[offset + i] = (data shr (i*8)).toByte()
</code></pre>
<p><strong>ByteArray -&gt; Int</strong></p>
<pre><code>private fun read4BytesFromBuffer(buffer: ByteArray, offset: Int): Int {
    return (buffer[offset + 3].toInt() shl 24) or
           (buffer[offset + 2].toInt() and 0xff shl 16) or
           (buffer[offset + 1].toInt() and 0xff shl 8) or
           (buffer[offset + 0].toInt() and 0xff)
}
</code></pre>
",1
ByteArray,Kotlin,functionality,76792619,"<p>Kotlin does not have an array syntax (varray = {1,2,3,4,5}). To create an array in Kotlin, you must use a function such as arrayOf or intArrayOf.</p>
<pre><code>val array = intArrayOf(1, 2, 3, 4, 5)
</code></pre>
",0
ByteArray,Kotlin,functionality,65427627,"<p><code>byteArray.toString()</code> is used to convert <code>ByteArray</code> to <code>String</code>. On the other hand, <code>contentToString()</code> will result elements in the array.</p>
<pre><code>val byteArray = &quot;Hello&quot;.toByteArray(Charsets.UTF_8)
println(byteArray.contentToString()) // this will print numbers 
println(byteArray.toString(Charsets.UTF_8))
</code></pre>
",1
ByteArray,Kotlin,functionality,55570269,"<p>Kotlin (since 1.3) provides the extension method <code>InputStream.readBytes()</code> for reading all bytes of an <code>InputStream</code> into a <code>ByteArray</code>.</p>
<p>In your case use:</p>
<pre><code>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
     if(requestCode == RC_SELECT_PDF &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp;
            data != null &amp;&amp; data.data != null){
            val hereUrl:Uri = data.data
            var os = ByteArrayOutputStream()
            var inputStream = this@RegistrasiPengajarActivity?.contentResolver.openInputStream(hereUrl)
            var byteArray = inputStream.readBytes()
        }
    }
</code></pre>
",0
ByteArray,Kotlin,functionality,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",1
ByteArray,Kotlin,functionality,62057298,"<p>//optional code </p>

<pre><code>  val bmp = BitmapFactory.decodeResource(resources, R.drawable.person)
val stream = ByteArrayOutputStream()
bmp.compress(Bitmap.CompressFormat.PNG, 100, stream)
</code></pre>

<p>// assign bytes getting from seerver to byteArray </p>

<pre><code>val byteArray: ByteArray = stream.toByteArray()
val bitmap = BitmapFactory.decodeByteArray(byteArray, 0, byteArray.size)
imageView.setImageBitmap(bitmap)
</code></pre>
",1
ByteArray,Kotlin,functionality,55455712,"<p>The 'ByteArray"" representation of an <code>IntArray</code> can be calculated like this:</p>

<pre><code> fun IntArray.toByteArray(): ByteArray {

    val result = ByteArray(this.size * 4)

        for ((idx, value) in this.withIndex()) {
            result[idx + 3] = (value and 0xFF).toByte()
            result[idx + 2] = ((value ushr 8) and 0xFF).toByte()
            result[idx + 1] = ((value ushr 16) and 0xFF).toByte()
            result[idx] = ((value ushr 24) and 0xFF).toByte()
        }

        return result
    }
</code></pre>

<p>This result can then be Base64 encoded like mentioned in the question:</p>

<pre><code>val vec = intArrayOf(1,2,3,4,5)
val data = vec.toByteArray()
val base64Encoded = Base64.encodeToString(data, Base64.DEFAULT);
</code></pre>
",1
ByteArray,Kotlin,concept,56185257,"<p><code>ByteArray</code> is an object (reference type), so you can create an array of it: <code>Array&lt;ByteArray&gt;</code>.</p>
",1
ByteArray,Kotlin,concept,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",1
ByteArray,Kotlin,concept,67229929,"<p>Here is the solution.</p>
<p><strong>Int -&gt; ByteArray</strong></p>
<pre><code>private fun write4BytesToBuffer(buffer: ByteArray, offset: Int, data: Int) {
    buffer[offset + 0] = (data shr 0).toByte()
    buffer[offset + 1] = (data shr 8).toByte()
    buffer[offset + 2] = (data shr 16).toByte()
    buffer[offset + 3] = (data shr 24).toByte()
}
</code></pre>
<p>Or in a shorter way</p>
<pre><code>for (i in 0..3) buffer[offset + i] = (data shr (i*8)).toByte()
</code></pre>
<p><strong>ByteArray -&gt; Int</strong></p>
<pre><code>private fun read4BytesFromBuffer(buffer: ByteArray, offset: Int): Int {
    return (buffer[offset + 3].toInt() shl 24) or
           (buffer[offset + 2].toInt() and 0xff shl 16) or
           (buffer[offset + 1].toInt() and 0xff shl 8) or
           (buffer[offset + 0].toInt() and 0xff)
}
</code></pre>
",1
ByteArray,Kotlin,concept,60844731,"<p>You can use <code>String(byteArray)</code> to convert <code>ByteArray</code> to 'String' in kotlin</p>

<pre><code>    val str = ""hello world.""
    val byte = str.toByteArray(Charsets.UTF_8)
    val newStr = String(byte)
    assert(str == newStr)
</code></pre>
",1
ByteArray,Kotlin,concept,65427627,"<p><code>byteArray.toString()</code> is used to convert <code>ByteArray</code> to <code>String</code>. On the other hand, <code>contentToString()</code> will result elements in the array.</p>
<pre><code>val byteArray = &quot;Hello&quot;.toByteArray(Charsets.UTF_8)
println(byteArray.contentToString()) // this will print numbers 
println(byteArray.toString(Charsets.UTF_8))
</code></pre>
",1
ByteArray,Kotlin,concept,62057298,"<p>//optional code </p>

<pre><code>  val bmp = BitmapFactory.decodeResource(resources, R.drawable.person)
val stream = ByteArrayOutputStream()
bmp.compress(Bitmap.CompressFormat.PNG, 100, stream)
</code></pre>

<p>// assign bytes getting from seerver to byteArray </p>

<pre><code>val byteArray: ByteArray = stream.toByteArray()
val bitmap = BitmapFactory.decodeByteArray(byteArray, 0, byteArray.size)
imageView.setImageBitmap(bitmap)
</code></pre>
",1
ByteArray,Kotlin,concept,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",1
ByteArray,Kotlin,concept,55455712,"<p>The 'ByteArray"" representation of an <code>IntArray</code> can be calculated like this:</p>

<pre><code> fun IntArray.toByteArray(): ByteArray {

    val result = ByteArray(this.size * 4)

        for ((idx, value) in this.withIndex()) {
            result[idx + 3] = (value and 0xFF).toByte()
            result[idx + 2] = ((value ushr 8) and 0xFF).toByte()
            result[idx + 1] = ((value ushr 16) and 0xFF).toByte()
            result[idx] = ((value ushr 24) and 0xFF).toByte()
        }

        return result
    }
</code></pre>

<p>This result can then be Base64 encoded like mentioned in the question:</p>

<pre><code>val vec = intArrayOf(1,2,3,4,5)
val data = vec.toByteArray()
val base64Encoded = Base64.encodeToString(data, Base64.DEFAULT);
</code></pre>
",1
ByteArray,Kotlin,concept,55570269,"<p>Kotlin (since 1.3) provides the extension method <code>InputStream.readBytes()</code> for reading all bytes of an <code>InputStream</code> into a <code>ByteArray</code>.</p>
<p>In your case use:</p>
<pre><code>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
     if(requestCode == RC_SELECT_PDF &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp;
            data != null &amp;&amp; data.data != null){
            val hereUrl:Uri = data.data
            var os = ByteArrayOutputStream()
            var inputStream = this@RegistrasiPengajarActivity?.contentResolver.openInputStream(hereUrl)
            var byteArray = inputStream.readBytes()
        }
    }
</code></pre>
",1
ByteArray,Kotlin,concept,67374985,"<p>The <code>ByteArray</code> declaration you are looking at is not real, it’s a  so called built-in type. This declaration exists for convenience, but is never truly compiled to a binary. (Indeed, on the JVM, arrays are special and don’t have corresponding class files anywhere.)</p>
<p>This constructor is marked inline because in practice the compiler emits the code corresponding to what would be its body at every call site. All the call-site checking is done accordingly (the lambda argument is treated in such a way that the compiler knows it’s going to be inclined).</p>
<p>Constructor inlining is not possible for user classes, so the <code>inline</code> modifier is prohibited in user code.</p>
",0
ByteArray,Kotlin,performance,56185257,"<p><code>ByteArray</code> is an object (reference type), so you can create an array of it: <code>Array&lt;ByteArray&gt;</code>.</p>
",0
ByteArray,Kotlin,performance,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",0
ByteArray,Kotlin,performance,67229929,"<p>Here is the solution.</p>
<p><strong>Int -&gt; ByteArray</strong></p>
<pre><code>private fun write4BytesToBuffer(buffer: ByteArray, offset: Int, data: Int) {
    buffer[offset + 0] = (data shr 0).toByte()
    buffer[offset + 1] = (data shr 8).toByte()
    buffer[offset + 2] = (data shr 16).toByte()
    buffer[offset + 3] = (data shr 24).toByte()
}
</code></pre>
<p>Or in a shorter way</p>
<pre><code>for (i in 0..3) buffer[offset + i] = (data shr (i*8)).toByte()
</code></pre>
<p><strong>ByteArray -&gt; Int</strong></p>
<pre><code>private fun read4BytesFromBuffer(buffer: ByteArray, offset: Int): Int {
    return (buffer[offset + 3].toInt() shl 24) or
           (buffer[offset + 2].toInt() and 0xff shl 16) or
           (buffer[offset + 1].toInt() and 0xff shl 8) or
           (buffer[offset + 0].toInt() and 0xff)
}
</code></pre>
",0
ByteArray,Kotlin,performance,60844731,"<p>You can use <code>String(byteArray)</code> to convert <code>ByteArray</code> to 'String' in kotlin</p>

<pre><code>    val str = ""hello world.""
    val byte = str.toByteArray(Charsets.UTF_8)
    val newStr = String(byte)
    assert(str == newStr)
</code></pre>
",0
ByteArray,Kotlin,performance,65427627,"<p><code>byteArray.toString()</code> is used to convert <code>ByteArray</code> to <code>String</code>. On the other hand, <code>contentToString()</code> will result elements in the array.</p>
<pre><code>val byteArray = &quot;Hello&quot;.toByteArray(Charsets.UTF_8)
println(byteArray.contentToString()) // this will print numbers 
println(byteArray.toString(Charsets.UTF_8))
</code></pre>
",0
ByteArray,Kotlin,performance,62057298,"<p>//optional code </p>

<pre><code>  val bmp = BitmapFactory.decodeResource(resources, R.drawable.person)
val stream = ByteArrayOutputStream()
bmp.compress(Bitmap.CompressFormat.PNG, 100, stream)
</code></pre>

<p>// assign bytes getting from seerver to byteArray </p>

<pre><code>val byteArray: ByteArray = stream.toByteArray()
val bitmap = BitmapFactory.decodeByteArray(byteArray, 0, byteArray.size)
imageView.setImageBitmap(bitmap)
</code></pre>
",0
ByteArray,Kotlin,performance,55455712,"<p>The 'ByteArray"" representation of an <code>IntArray</code> can be calculated like this:</p>

<pre><code> fun IntArray.toByteArray(): ByteArray {

    val result = ByteArray(this.size * 4)

        for ((idx, value) in this.withIndex()) {
            result[idx + 3] = (value and 0xFF).toByte()
            result[idx + 2] = ((value ushr 8) and 0xFF).toByte()
            result[idx + 1] = ((value ushr 16) and 0xFF).toByte()
            result[idx] = ((value ushr 24) and 0xFF).toByte()
        }

        return result
    }
</code></pre>

<p>This result can then be Base64 encoded like mentioned in the question:</p>

<pre><code>val vec = intArrayOf(1,2,3,4,5)
val data = vec.toByteArray()
val base64Encoded = Base64.encodeToString(data, Base64.DEFAULT);
</code></pre>
",0
ByteArray,Kotlin,performance,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",0
ByteArray,Kotlin,performance,55570269,"<p>Kotlin (since 1.3) provides the extension method <code>InputStream.readBytes()</code> for reading all bytes of an <code>InputStream</code> into a <code>ByteArray</code>.</p>
<p>In your case use:</p>
<pre><code>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
     if(requestCode == RC_SELECT_PDF &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp;
            data != null &amp;&amp; data.data != null){
            val hereUrl:Uri = data.data
            var os = ByteArrayOutputStream()
            var inputStream = this@RegistrasiPengajarActivity?.contentResolver.openInputStream(hereUrl)
            var byteArray = inputStream.readBytes()
        }
    }
</code></pre>
",0
ByteArray,Kotlin,performance,77679161,"<p><code>ArrayList&lt;Integer&gt;</code> takes somewhere on the order of 64+64+64 bits of memory per integer:</p>
<ul>
<li>Per value in the list, an <code>Integer</code> instance is created. This instance is ~128 bits large: 64 bits are occupied by the object header (which, amongst other things, identifies this object as being of the <code>Integer</code> type - objects know what they are, this takes some memory).</li>
<li>... and that instance has a field containing the value. You'd think this is only 32 bits. It's not: On 64-bit processors, doing things to memory that isn't nicely located exactly on a spot that is evenly divisible by 64 bit, is very annoying. Hence, effectively, 64 bits of memory are 'occupied' (in the sense of 'no longer available for other stuff') by that 32 bit variable.</li>
<li>the list itself is a sequence of pointers, pointing at those integer objects (in java parlance, 'reference'. They are pointers). Depending on various aspects of the JVM, each pointer is either 64 bit or 32 bit (compressed OOPS and other tricks the JVM does to compress pointers may apply here).</li>
</ul>
<p>In contrast, an <code>int[]</code> is simple: Each value takes up 32 bits. No more and no less.</p>
<p>That's <strong>a factor 6</strong> - <code>List&lt;Integer&gt;</code> takes ~6x more memory to store Y integers than <code>int[]</code> does. (in kotlin, <code>List&lt;Int&gt;</code> is, as far as I know, an alias for <code>List&lt;Integer&gt;</code>.</p>
<p>Thus, likely, the reason performance falls off a cliff at that point is that your main memory is full and swapping is going on. Swapping is already expensive; it tends to get <em>more</em> expensive when parallelism is introduced.</p>
",0
ByteArray,Kotlin,directive,56185257,"<p><code>ByteArray</code> is an object (reference type), so you can create an array of it: <code>Array&lt;ByteArray&gt;</code>.</p>
",1
ByteArray,Kotlin,directive,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",0
ByteArray,Kotlin,directive,67229929,"<p>Here is the solution.</p>
<p><strong>Int -&gt; ByteArray</strong></p>
<pre><code>private fun write4BytesToBuffer(buffer: ByteArray, offset: Int, data: Int) {
    buffer[offset + 0] = (data shr 0).toByte()
    buffer[offset + 1] = (data shr 8).toByte()
    buffer[offset + 2] = (data shr 16).toByte()
    buffer[offset + 3] = (data shr 24).toByte()
}
</code></pre>
<p>Or in a shorter way</p>
<pre><code>for (i in 0..3) buffer[offset + i] = (data shr (i*8)).toByte()
</code></pre>
<p><strong>ByteArray -&gt; Int</strong></p>
<pre><code>private fun read4BytesFromBuffer(buffer: ByteArray, offset: Int): Int {
    return (buffer[offset + 3].toInt() shl 24) or
           (buffer[offset + 2].toInt() and 0xff shl 16) or
           (buffer[offset + 1].toInt() and 0xff shl 8) or
           (buffer[offset + 0].toInt() and 0xff)
}
</code></pre>
",1
ByteArray,Kotlin,directive,60844731,"<p>You can use <code>String(byteArray)</code> to convert <code>ByteArray</code> to 'String' in kotlin</p>

<pre><code>    val str = ""hello world.""
    val byte = str.toByteArray(Charsets.UTF_8)
    val newStr = String(byte)
    assert(str == newStr)
</code></pre>
",1
ByteArray,Kotlin,directive,65427627,"<p><code>byteArray.toString()</code> is used to convert <code>ByteArray</code> to <code>String</code>. On the other hand, <code>contentToString()</code> will result elements in the array.</p>
<pre><code>val byteArray = &quot;Hello&quot;.toByteArray(Charsets.UTF_8)
println(byteArray.contentToString()) // this will print numbers 
println(byteArray.toString(Charsets.UTF_8))
</code></pre>
",1
ByteArray,Kotlin,directive,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",1
ByteArray,Kotlin,directive,62057298,"<p>//optional code </p>

<pre><code>  val bmp = BitmapFactory.decodeResource(resources, R.drawable.person)
val stream = ByteArrayOutputStream()
bmp.compress(Bitmap.CompressFormat.PNG, 100, stream)
</code></pre>

<p>// assign bytes getting from seerver to byteArray </p>

<pre><code>val byteArray: ByteArray = stream.toByteArray()
val bitmap = BitmapFactory.decodeByteArray(byteArray, 0, byteArray.size)
imageView.setImageBitmap(bitmap)
</code></pre>
",0
ByteArray,Kotlin,directive,55455712,"<p>The 'ByteArray"" representation of an <code>IntArray</code> can be calculated like this:</p>

<pre><code> fun IntArray.toByteArray(): ByteArray {

    val result = ByteArray(this.size * 4)

        for ((idx, value) in this.withIndex()) {
            result[idx + 3] = (value and 0xFF).toByte()
            result[idx + 2] = ((value ushr 8) and 0xFF).toByte()
            result[idx + 1] = ((value ushr 16) and 0xFF).toByte()
            result[idx] = ((value ushr 24) and 0xFF).toByte()
        }

        return result
    }
</code></pre>

<p>This result can then be Base64 encoded like mentioned in the question:</p>

<pre><code>val vec = intArrayOf(1,2,3,4,5)
val data = vec.toByteArray()
val base64Encoded = Base64.encodeToString(data, Base64.DEFAULT);
</code></pre>
",1
ByteArray,Kotlin,directive,55570269,"<p>Kotlin (since 1.3) provides the extension method <code>InputStream.readBytes()</code> for reading all bytes of an <code>InputStream</code> into a <code>ByteArray</code>.</p>
<p>In your case use:</p>
<pre><code>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
     if(requestCode == RC_SELECT_PDF &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp;
            data != null &amp;&amp; data.data != null){
            val hereUrl:Uri = data.data
            var os = ByteArrayOutputStream()
            var inputStream = this@RegistrasiPengajarActivity?.contentResolver.openInputStream(hereUrl)
            var byteArray = inputStream.readBytes()
        }
    }
</code></pre>
",0
ByteArray,Kotlin,directive,76792619,"<p>Kotlin does not have an array syntax (varray = {1,2,3,4,5}). To create an array in Kotlin, you must use a function such as arrayOf or intArrayOf.</p>
<pre><code>val array = intArrayOf(1, 2, 3, 4, 5)
</code></pre>
",0
ByteArray,Kotlin,pattern,56185257,"<p><code>ByteArray</code> is an object (reference type), so you can create an array of it: <code>Array&lt;ByteArray&gt;</code>.</p>
",1
ByteArray,Kotlin,pattern,67229929,"<p>Here is the solution.</p>
<p><strong>Int -&gt; ByteArray</strong></p>
<pre><code>private fun write4BytesToBuffer(buffer: ByteArray, offset: Int, data: Int) {
    buffer[offset + 0] = (data shr 0).toByte()
    buffer[offset + 1] = (data shr 8).toByte()
    buffer[offset + 2] = (data shr 16).toByte()
    buffer[offset + 3] = (data shr 24).toByte()
}
</code></pre>
<p>Or in a shorter way</p>
<pre><code>for (i in 0..3) buffer[offset + i] = (data shr (i*8)).toByte()
</code></pre>
<p><strong>ByteArray -&gt; Int</strong></p>
<pre><code>private fun read4BytesFromBuffer(buffer: ByteArray, offset: Int): Int {
    return (buffer[offset + 3].toInt() shl 24) or
           (buffer[offset + 2].toInt() and 0xff shl 16) or
           (buffer[offset + 1].toInt() and 0xff shl 8) or
           (buffer[offset + 0].toInt() and 0xff)
}
</code></pre>
",1
ByteArray,Kotlin,pattern,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",1
ByteArray,Kotlin,pattern,65427627,"<p><code>byteArray.toString()</code> is used to convert <code>ByteArray</code> to <code>String</code>. On the other hand, <code>contentToString()</code> will result elements in the array.</p>
<pre><code>val byteArray = &quot;Hello&quot;.toByteArray(Charsets.UTF_8)
println(byteArray.contentToString()) // this will print numbers 
println(byteArray.toString(Charsets.UTF_8))
</code></pre>
",1
ByteArray,Kotlin,pattern,60844731,"<p>You can use <code>String(byteArray)</code> to convert <code>ByteArray</code> to 'String' in kotlin</p>

<pre><code>    val str = ""hello world.""
    val byte = str.toByteArray(Charsets.UTF_8)
    val newStr = String(byte)
    assert(str == newStr)
</code></pre>
",1
ByteArray,Kotlin,pattern,62057298,"<p>//optional code </p>

<pre><code>  val bmp = BitmapFactory.decodeResource(resources, R.drawable.person)
val stream = ByteArrayOutputStream()
bmp.compress(Bitmap.CompressFormat.PNG, 100, stream)
</code></pre>

<p>// assign bytes getting from seerver to byteArray </p>

<pre><code>val byteArray: ByteArray = stream.toByteArray()
val bitmap = BitmapFactory.decodeByteArray(byteArray, 0, byteArray.size)
imageView.setImageBitmap(bitmap)
</code></pre>
",1
ByteArray,Kotlin,pattern,55570269,"<p>Kotlin (since 1.3) provides the extension method <code>InputStream.readBytes()</code> for reading all bytes of an <code>InputStream</code> into a <code>ByteArray</code>.</p>
<p>In your case use:</p>
<pre><code>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
     if(requestCode == RC_SELECT_PDF &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp;
            data != null &amp;&amp; data.data != null){
            val hereUrl:Uri = data.data
            var os = ByteArrayOutputStream()
            var inputStream = this@RegistrasiPengajarActivity?.contentResolver.openInputStream(hereUrl)
            var byteArray = inputStream.readBytes()
        }
    }
</code></pre>
",0
ByteArray,Kotlin,pattern,58521109,"<p><strong>NsData to ByteArray</strong></p>

<pre><code>actual typealias ImageBytes = NSData
actual fun ImageBytes.toByteArray(): ByteArray = ByteArray(this@toByteArray.length.toInt()).apply {
    usePinned {
        memcpy(it.addressOf(0), this@toByteArray.bytes, this@toByteArray.length)
    }
}
</code></pre>

<p><strong>ByteArray to NsData</strong></p>

<pre><code>actual fun ByteArray.toImageBytes(): ImageBytes? = memScoped {
    val string = NSString.create(string = this@toImageBytes.decodeToString())
    return string.dataUsingEncoding(NSUTF8StringEncoding)
}
</code></pre>

<p><strong>ByteArray to NsData different way</strong></p>

<pre><code>actual fun ByteArray.toImageBytes() : ImageBytes = memScoped { 
    NSData.create(bytes = allocArrayOf(this@toImageBytes), 
        length = this@toImageBytes.size.toULong()) 
}
</code></pre>
",1
ByteArray,Kotlin,pattern,76792619,"<p>Kotlin does not have an array syntax (varray = {1,2,3,4,5}). To create an array in Kotlin, you must use a function such as arrayOf or intArrayOf.</p>
<pre><code>val array = intArrayOf(1, 2, 3, 4, 5)
</code></pre>
",0
ByteArray,Kotlin,pattern,55455712,"<p>The 'ByteArray"" representation of an <code>IntArray</code> can be calculated like this:</p>

<pre><code> fun IntArray.toByteArray(): ByteArray {

    val result = ByteArray(this.size * 4)

        for ((idx, value) in this.withIndex()) {
            result[idx + 3] = (value and 0xFF).toByte()
            result[idx + 2] = ((value ushr 8) and 0xFF).toByte()
            result[idx + 1] = ((value ushr 16) and 0xFF).toByte()
            result[idx] = ((value ushr 24) and 0xFF).toByte()
        }

        return result
    }
</code></pre>

<p>This result can then be Base64 encoded like mentioned in the question:</p>

<pre><code>val vec = intArrayOf(1,2,3,4,5)
val data = vec.toByteArray()
val base64Encoded = Base64.encodeToString(data, Base64.DEFAULT);
</code></pre>
",1
ByteArray,Kotlin,environment,56185257,"<p><code>ByteArray</code> is an object (reference type), so you can create an array of it: <code>Array&lt;ByteArray&gt;</code>.</p>
",1
ByteArray,Kotlin,environment,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",1
ByteArray,Kotlin,environment,60844731,"<p>You can use <code>String(byteArray)</code> to convert <code>ByteArray</code> to 'String' in kotlin</p>

<pre><code>    val str = ""hello world.""
    val byte = str.toByteArray(Charsets.UTF_8)
    val newStr = String(byte)
    assert(str == newStr)
</code></pre>
",1
ByteArray,Kotlin,environment,55570269,"<p>Kotlin (since 1.3) provides the extension method <code>InputStream.readBytes()</code> for reading all bytes of an <code>InputStream</code> into a <code>ByteArray</code>.</p>
<p>In your case use:</p>
<pre><code>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
     if(requestCode == RC_SELECT_PDF &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp;
            data != null &amp;&amp; data.data != null){
            val hereUrl:Uri = data.data
            var os = ByteArrayOutputStream()
            var inputStream = this@RegistrasiPengajarActivity?.contentResolver.openInputStream(hereUrl)
            var byteArray = inputStream.readBytes()
        }
    }
</code></pre>
",1
ByteArray,Kotlin,environment,76792619,"<p>Kotlin does not have an array syntax (varray = {1,2,3,4,5}). To create an array in Kotlin, you must use a function such as arrayOf or intArrayOf.</p>
<pre><code>val array = intArrayOf(1, 2, 3, 4, 5)
</code></pre>
",0
ByteArray,Kotlin,environment,62057298,"<p>//optional code </p>

<pre><code>  val bmp = BitmapFactory.decodeResource(resources, R.drawable.person)
val stream = ByteArrayOutputStream()
bmp.compress(Bitmap.CompressFormat.PNG, 100, stream)
</code></pre>

<p>// assign bytes getting from seerver to byteArray </p>

<pre><code>val byteArray: ByteArray = stream.toByteArray()
val bitmap = BitmapFactory.decodeByteArray(byteArray, 0, byteArray.size)
imageView.setImageBitmap(bitmap)
</code></pre>
",1
ByteArray,Kotlin,environment,67229929,"<p>Here is the solution.</p>
<p><strong>Int -&gt; ByteArray</strong></p>
<pre><code>private fun write4BytesToBuffer(buffer: ByteArray, offset: Int, data: Int) {
    buffer[offset + 0] = (data shr 0).toByte()
    buffer[offset + 1] = (data shr 8).toByte()
    buffer[offset + 2] = (data shr 16).toByte()
    buffer[offset + 3] = (data shr 24).toByte()
}
</code></pre>
<p>Or in a shorter way</p>
<pre><code>for (i in 0..3) buffer[offset + i] = (data shr (i*8)).toByte()
</code></pre>
<p><strong>ByteArray -&gt; Int</strong></p>
<pre><code>private fun read4BytesFromBuffer(buffer: ByteArray, offset: Int): Int {
    return (buffer[offset + 3].toInt() shl 24) or
           (buffer[offset + 2].toInt() and 0xff shl 16) or
           (buffer[offset + 1].toInt() and 0xff shl 8) or
           (buffer[offset + 0].toInt() and 0xff)
}
</code></pre>
",1
ByteArray,Kotlin,environment,65199270,"<p>The easiest way to make a <code>ByteArray</code> in Kotlin in my opinion is to use <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/byte-array-of.html"" rel=""noreferrer""><code>byteArrayOf()</code></a>. It works for an empty <code>ByteArray</code>, as well as one which you already know the contents of.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val nonEmpty = byteArrayOf(0x01, 0x02, 0x03)
var empty = byteArrayOf()
empty += nonEmpty
</code></pre>
",1
ByteArray,Kotlin,environment,65427627,"<p><code>byteArray.toString()</code> is used to convert <code>ByteArray</code> to <code>String</code>. On the other hand, <code>contentToString()</code> will result elements in the array.</p>
<pre><code>val byteArray = &quot;Hello&quot;.toByteArray(Charsets.UTF_8)
println(byteArray.contentToString()) // this will print numbers 
println(byteArray.toString(Charsets.UTF_8))
</code></pre>
",1
ByteArray,Kotlin,environment,67374985,"<p>The <code>ByteArray</code> declaration you are looking at is not real, it’s a  so called built-in type. This declaration exists for convenience, but is never truly compiled to a binary. (Indeed, on the JVM, arrays are special and don’t have corresponding class files anywhere.)</p>
<p>This constructor is marked inline because in practice the compiler emits the code corresponding to what would be its body at every call site. All the call-site checking is done accordingly (the lambda argument is treated in such a way that the compiler knows it’s going to be inclined).</p>
<p>Constructor inlining is not possible for user classes, so the <code>inline</code> modifier is prohibited in user code.</p>
",1
ByteArray,Kotlin,alternative,56185257,"<p><code>ByteArray</code> is an object (reference type), so you can create an array of it: <code>Array&lt;ByteArray&gt;</code>.</p>
",0
ByteArray,Kotlin,alternative,76830156,"<p>Kotlin 1.9 introduced experimental <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/hex-to-byte-array.html"" rel=""noreferrer""><code>fun String.hexToByteArray(): ByteArray</code></a>.</p>
<p>It can be used as follows:</p>
<pre class=""lang-kotlin prettyprint-override""><code>@OptIn(ExperimentalStdlibApi::class)
val byteArray = &quot;16665373b6bf396f75914a0bed297d44&quot;.hexToByteArray()
</code></pre>
",0
ByteArray,Kotlin,alternative,60844731,"<p>You can use <code>String(byteArray)</code> to convert <code>ByteArray</code> to 'String' in kotlin</p>

<pre><code>    val str = ""hello world.""
    val byte = str.toByteArray(Charsets.UTF_8)
    val newStr = String(byte)
    assert(str == newStr)
</code></pre>
",1
ByteArray,Kotlin,alternative,67229929,"<p>Here is the solution.</p>
<p><strong>Int -&gt; ByteArray</strong></p>
<pre><code>private fun write4BytesToBuffer(buffer: ByteArray, offset: Int, data: Int) {
    buffer[offset + 0] = (data shr 0).toByte()
    buffer[offset + 1] = (data shr 8).toByte()
    buffer[offset + 2] = (data shr 16).toByte()
    buffer[offset + 3] = (data shr 24).toByte()
}
</code></pre>
<p>Or in a shorter way</p>
<pre><code>for (i in 0..3) buffer[offset + i] = (data shr (i*8)).toByte()
</code></pre>
<p><strong>ByteArray -&gt; Int</strong></p>
<pre><code>private fun read4BytesFromBuffer(buffer: ByteArray, offset: Int): Int {
    return (buffer[offset + 3].toInt() shl 24) or
           (buffer[offset + 2].toInt() and 0xff shl 16) or
           (buffer[offset + 1].toInt() and 0xff shl 8) or
           (buffer[offset + 0].toInt() and 0xff)
}
</code></pre>
",1
ByteArray,Kotlin,alternative,65427627,"<p><code>byteArray.toString()</code> is used to convert <code>ByteArray</code> to <code>String</code>. On the other hand, <code>contentToString()</code> will result elements in the array.</p>
<pre><code>val byteArray = &quot;Hello&quot;.toByteArray(Charsets.UTF_8)
println(byteArray.contentToString()) // this will print numbers 
println(byteArray.toString(Charsets.UTF_8))
</code></pre>
",1
ByteArray,Kotlin,alternative,62057298,"<p>//optional code </p>

<pre><code>  val bmp = BitmapFactory.decodeResource(resources, R.drawable.person)
val stream = ByteArrayOutputStream()
bmp.compress(Bitmap.CompressFormat.PNG, 100, stream)
</code></pre>

<p>// assign bytes getting from seerver to byteArray </p>

<pre><code>val byteArray: ByteArray = stream.toByteArray()
val bitmap = BitmapFactory.decodeByteArray(byteArray, 0, byteArray.size)
imageView.setImageBitmap(bitmap)
</code></pre>
",0
ByteArray,Kotlin,alternative,65669006,"<p>The equivalent is <code>toByteArray()</code> which does essentially the same thing.</p>
<p>I'm a bit confused by your question, to clarify, there's no <code>asBytes()</code> on a Kotlin <code>String</code>.</p>
<p><a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.text/to-byte-array.html"" rel=""noreferrer""><code>toByteArray</code></a> returns a <a href=""https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-byte-array/"" rel=""noreferrer""><code>ByteArray</code></a> which (for Kotlin/JVM) is actually the same type as <code>byte[]</code>.</p>
<p>The naming difference just stems from what the Kotlin designers chose to be more idiomatic for Kotlin itself.</p>
<hr />
<p>Related documentation:</p>
<ul>
<li><a href=""https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays"" rel=""noreferrer"">https://kotlinlang.org/docs/reference/basic-types.html#primitive-type-arrays</a></li>
</ul>
",1
ByteArray,Kotlin,alternative,55570269,"<p>Kotlin (since 1.3) provides the extension method <code>InputStream.readBytes()</code> for reading all bytes of an <code>InputStream</code> into a <code>ByteArray</code>.</p>
<p>In your case use:</p>
<pre><code>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
     if(requestCode == RC_SELECT_PDF &amp;&amp; resultCode == Activity.RESULT_OK &amp;&amp;
            data != null &amp;&amp; data.data != null){
            val hereUrl:Uri = data.data
            var os = ByteArrayOutputStream()
            var inputStream = this@RegistrasiPengajarActivity?.contentResolver.openInputStream(hereUrl)
            var byteArray = inputStream.readBytes()
        }
    }
</code></pre>
",0
ByteArray,Kotlin,alternative,76013423,"<p>ByteBuffer supports putInt(), putLong() etc, so you can call <code>buf.putInt(unsignedInt.toInt())</code>. Alternatively use <a href=""https://github.com/mvysny/kotlin-unsigned-jvm"" rel=""nofollow noreferrer"">https://github.com/mvysny/kotlin-unsigned-jvm</a></p>
",0
ByteArray,Kotlin,alternative,58521109,"<p><strong>NsData to ByteArray</strong></p>

<pre><code>actual typealias ImageBytes = NSData
actual fun ImageBytes.toByteArray(): ByteArray = ByteArray(this@toByteArray.length.toInt()).apply {
    usePinned {
        memcpy(it.addressOf(0), this@toByteArray.bytes, this@toByteArray.length)
    }
}
</code></pre>

<p><strong>ByteArray to NsData</strong></p>

<pre><code>actual fun ByteArray.toImageBytes(): ImageBytes? = memScoped {
    val string = NSString.create(string = this@toImageBytes.decodeToString())
    return string.dataUsingEncoding(NSUTF8StringEncoding)
}
</code></pre>

<p><strong>ByteArray to NsData different way</strong></p>

<pre><code>actual fun ByteArray.toImageBytes() : ImageBytes = memScoped { 
    NSData.create(bytes = allocArrayOf(this@toImageBytes), 
        length = this@toImageBytes.size.toULong()) 
}
</code></pre>
",1
